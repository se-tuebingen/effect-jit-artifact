module examples/pos/effect_not_part

effect Exception(msg: String): Nothing

// TODO If we move `State` below `state` then it is not resolved
interface State {
    def get(): Int
    def set(n: Int): Unit
}

def state[R](init: Int) { f: => R / { State, Exception } }: Unit = {
    var s = init;
    try { f(); () } with State {
        def get() = resume(s)
        def set(n) = { s = n; resume(()) }
        // TODO add error here -- perform "type" directed name resolution
        def raise() = ()
    } with Exception { msg => println(msg) }
}

def main() = {
    with state(4);
    println(do get())
}