module bug1

// should succeed, but raises "n should be a value"
effect Flip(): Bool
effect MyPrint(n: Int): Unit

def flipTrue { prog: => Unit / Flip }: Unit =
  try { prog() } with Flip { () =>
    resume(true); resume(false)
  }

def main(): Unit = {

  try {

    flipTrue {
      if (do Flip()) {
        do MyPrint(0)
      } else {
        println(1)
      }
    }

  } with MyPrint { (n: Int) => println(n)
  }
}
