#!/bin/bash

# Config
SCRIPT_DIR=$(dirname $(realpath $0))
HELIUM_DIR=$SCRIPT_DIR/../../../helium
HELIUM=bin/helium

# Find helium files (*.he) in this directory (as absolute paths)
HE_FILES=$(find . -name "*.he" -type f | xargs realpath)

# Flag for exit code
EXIT_CODE=0

# Also output some compiler metadata
cd $HELIUM_DIR
mkdir -p $SCRIPT_DIR/.metadata
date -u -Iseconds > $SCRIPT_DIR/.metadata/date
echo "HELIUM_DIR=$HELIUM_DIR" > $SCRIPT_DIR/.metadata/env
echo "HELIUM=$HELIUM" >> $SCRIPT_DIR/.metadata/env
echo "$HE_FILES" > $SCRIPT_DIR/.metadata/compiled-files
git rev-parse HEAD > $SCRIPT_DIR/.metadata/helium-commit
git diff --patch > $SCRIPT_DIR/.metadata/helium-diff.patch
cd $SCRIPT_DIR
git rev-parse HEAD > $SCRIPT_DIR/.metadata/src-commit
git diff --patch --binary --no-ext-diff -- $SCRIPT_DIR > $SCRIPT_DIR/.metadata/src-diff.patch

# For each, run the compiler and copy the a.out file here with name *.mcore.json
cd $HELIUM_DIR
for HE_FILE in $HE_FILES
do
    echo "Compiling $(basename $HE_FILE)"
    OUT_FILE=$(echo $HE_FILE | sed 's/\.he$/\.mcore\.json/g')
    if [ -f a.out ]; then rm a.out; fi
    $HELIUM -rpycompile $HE_FILE
    if [ ! -f a.out ]; then
        >&2 echo "Compilation of $HE_FILE failed"
        EXIT_CODE=1
    else
        cp a.out $OUT_FILE
    fi
done

# Output output SHAs
sha256sum $HE_FILES > $SCRIPT_DIR/.metadata/result.sha256sum

exit $EXIT_CODE