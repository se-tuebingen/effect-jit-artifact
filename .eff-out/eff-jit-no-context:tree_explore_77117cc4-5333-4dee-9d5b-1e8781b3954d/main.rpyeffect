{"blocks":[{"label":"0([mcore:[#23]#3])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PrimOp","name":"equals(Any, Any): Bool","out":{"any":[0]},"in":{"any":[1,0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1([method_apply@Name(=_0)#6])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Jump","target":0}]},
{"label":"2(Name(=_0))",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"New","out":0,"targets":[1],"args":{"any":[0]},"tags":["apply"]},
{"op":"Return","args":{"any":[0]}}]},
{"label":"3([mcore:[#24]#8])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PrimOp","name":"infixGte(Any, Any): Bool","out":{"any":[0]},"in":{"any":[1,0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"4([method_apply@Name(>=_1)#11])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Jump","target":3}]},
{"label":"5(Name(>=_1))",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"New","out":0,"targets":[4],"args":{"any":[0]},"tags":["apply"]},
{"op":"Return","args":{"any":[0]}}]},
{"label":"6([mcore:[#25]#13])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PrimOp","name":"infixGt(Any, Any): Bool","out":{"any":[0]},"in":{"any":[1,0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"7([method_apply@Name(>_2)#16])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Jump","target":6}]},
{"label":"8(Name(>_2))",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"New","out":0,"targets":[7],"args":{"any":[0]},"tags":["apply"]},
{"op":"Return","args":{"any":[0]}}]},
{"label":"9([mcore:[#26]#18])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PrimOp","name":"infixLte(Any, Any): Bool","out":{"any":[0]},"in":{"any":[1,0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"10([method_apply@Name(<=_3)#21])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Jump","target":9}]},
{"label":"11(Name(<=_3))",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"New","out":0,"targets":[10],"args":{"any":[0]},"tags":["apply"]},
{"op":"Return","args":{"any":[0]}}]},
{"label":"12([mcore:[#27]#23])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PrimOp","name":"infixLt(Any, Any): Bool","out":{"any":[0]},"in":{"any":[1,0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"13([method_apply@Name(<_4)#26])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Jump","target":12}]},
{"label":"14(Name(<_4))",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"New","out":0,"targets":[13],"args":{"any":[0]},"tags":["apply"]},
{"op":"Return","args":{"any":[0]}}]},
{"label":"15([mcore:[#28]#28])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PrimOp","name":"infixLt(Any, Any): Bool","out":{"any":[0]},"in":{"any":[1,0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"16([method_apply@Name(<_5)#31])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Jump","target":15}]},
{"label":"17(Name(<_5))",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"New","out":0,"targets":[16],"args":{"any":[0]},"tags":["apply"]},
{"op":"Return","args":{"any":[0]}}]},
{"label":"18([mcore:[#30]#33])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PrimOp","name":"equals(Any, Any): Bool","out":{"any":[0]},"in":{"any":[1,0]}},
{"op":"PrimOp","name":"not(Boolean): Boolean","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"19([method_apply@Name(<>_6)#39])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Jump","target":18}]},
{"label":"20(Name(<>_6))",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"New","out":0,"targets":[19],"args":{"any":[0]},"tags":["apply"]},
{"op":"Return","args":{"any":[0]}}]},
{"label":"21(Name(acos_7))",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"acos(Double): Double","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"22([mcore:[#31]#41])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PrimOp","name":"infixAdd(Double, Double): Double","out":{"any":[0]},"in":{"any":[1,0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"23([method_apply@Name(+._8)#44])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Jump","target":22}]},
{"label":"24(Name(+._8))",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"New","out":0,"targets":[23],"args":{"any":[0]},"tags":["apply"]},
{"op":"Return","args":{"any":[0]}}]},
{"label":"25(Name(asin_9))",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"asin(Double): Double","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"26(Name(atan_10))",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"atan(Double): Double","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"27(Name(cos_11))",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"cos(Double): Double","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"28([mcore:[#32]#46])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PrimOp","name":"infixDiv(Double, Double): Double","out":{"any":[0]},"in":{"any":[1,0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"29([method_apply@Name(/._12)#49])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Jump","target":28}]},
{"label":"30(Name(/._12))",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"New","out":0,"targets":[29],"args":{"any":[0]},"tags":["apply"]},
{"op":"Return","args":{"any":[0]}}]},
{"label":"31(Name(exp_13))",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"exp(Double): Double","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"32(Name(expm1_14))",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Undefined: primitive expm1"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"33(Name(infinity_15))",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Undefined: primitive infinity"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"34(Name(log_16))",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"log(Double): Double","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"35(Name(log1p_17))",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"log1p(Double): Double","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"36([mcore:[#33]#55])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PrimOp","name":"infixMul(Double, Double): Double","out":{"any":[0]},"in":{"any":[1,0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"37([method_apply@Name(*._18)#58])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Jump","target":36}]},
{"label":"38(Name(*._18))",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"New","out":0,"targets":[37],"args":{"any":[0]},"tags":["apply"]},
{"op":"Return","args":{"any":[0]}}]},
{"label":"39(Name(nan_19))",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Undefined: primitive nan"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"40(Name(~-._20))",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Undefined: primitive ~-."},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"41(Name(neg_infinity_21))",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Undefined: primitive neg_infinity"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"42(Name(float_of_int_22))",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"toDouble(Int): Double","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"43(Name(sin_23))",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"sin(Double): Double","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"44(Name(sqrt_24))",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"sqrt(Double): Double","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"45([mcore:[#34]#66])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PrimOp","name":"infixSub(Double, Double): Double","out":{"any":[0]},"in":{"any":[1,0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"46([method_apply@Name(-._25)#69])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Jump","target":45}]},
{"label":"47(Name(-._25))",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"New","out":0,"targets":[46],"args":{"any":[0]},"tags":["apply"]},
{"op":"Return","args":{"any":[0]}}]},
{"label":"48(Name(tan_26))",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"tan(Double): Double","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"49([mcore:[#35]#71])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PrimOp","name":"infixAdd(Int, Int): Int","out":{"any":[0]},"in":{"any":[1,0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"50([method_apply@Name(+_27)#74])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Jump","target":49}]},
{"label":"51(Name(+_27))",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"New","out":0,"targets":[50],"args":{"any":[0]},"tags":["apply"]},
{"op":"Return","args":{"any":[0]}}]},
{"label":"52([mcore:[#36]#76])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PrimOp","name":"infixDiv(Int, Int): Int","out":{"any":[0]},"in":{"any":[1,0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"53([method_apply@Name(/_28)#79])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Jump","target":52}]},
{"label":"54(Name(/_28))",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"New","out":0,"targets":[53],"args":{"any":[0]},"tags":["apply"]},
{"op":"Return","args":{"any":[0]}}]},
{"label":"55([mcore:[#37]#81])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PrimOp","name":"mod(Int, Int): Int","out":{"any":[0]},"in":{"any":[1,0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"56([method_apply@Name(mod_29)#84])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Jump","target":55}]},
{"label":"57(Name(mod_29))",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"New","out":0,"targets":[56],"args":{"any":[0]},"tags":["apply"]},
{"op":"Return","args":{"any":[0]}}]},
{"label":"58([mcore:[#38]#86])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PrimOp","name":"infixMul(Int, Int): Int","out":{"any":[0]},"in":{"any":[1,0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"59([method_apply@Name(*_30)#89])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Jump","target":58}]},
{"label":"60(Name(*_30))",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"New","out":0,"targets":[59],"args":{"any":[0]},"tags":["apply"]},
{"op":"Return","args":{"any":[0]}}]},
{"label":"61(Name(~-_31))",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"neg(Int): Int","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"62(Name(abs_32))",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"abs(Int): Int","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"63(Name(**_33))",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Undefined: primitive **"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"64([mcore:[#39]#93])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PrimOp","name":"infixSub(Int, Int): Int","out":{"any":[0]},"in":{"any":[1,0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"65([method_apply@Name(-_34)#96])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Jump","target":64}]},
{"label":"66(Name(-_34))",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"New","out":0,"targets":[65],"args":{"any":[0]},"tags":["apply"]},
{"op":"Return","args":{"any":[0]}}]},
{"label":"67(Name(int_of_float_35))",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"toInt(Double): Int","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"68([mcore:[#40]#98])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PrimOp","name":"infixConcat(String, String): String","out":{"any":[0]},"in":{"any":[1,0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"69([method_apply@Name(^_36)#101])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Jump","target":68}]},
{"label":"70(Name(^_36))",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"New","out":0,"targets":[69],"args":{"any":[0]},"tags":["apply"]},
{"op":"Return","args":{"any":[0]}}]},
{"label":"71(Name(string_length_37))",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"length(String): Int","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"72(Name(string_of_float_38))",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"show(Double): String","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"73(Name(string_of_int_39))",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"show(Int): String","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"74([mcore:[#41]#103])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"PrimOp","name":"substring(String, Int, Int): String","out":{"any":[0]},"in":{"any":[1,2,0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"75([method_apply@[mcore:[#42]#104]#107])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Jump","target":74}]},
{"label":"76([mcore:[#42]#104])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"New","out":0,"targets":[75],"args":{"any":[1,0]},"tags":["apply"]},
{"op":"Return","args":{"any":[0]}}]},
{"label":"77([method_apply@Name(sub_40)#111])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Jump","target":76}]},
{"label":"78(Name(sub_40))",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"New","out":0,"targets":[77],"args":{"any":[0]},"tags":["apply"]},
{"op":"Return","args":{"any":[0]}}]},
{"label":"79(Name(to_string_41))",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"show(Int): String","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"80([k@[k@[k@[k@[#123]#125]#129]#131]#133])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2081\u2086","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2082\u2089","traced":{"any":[]}},
{"op":"Const","format":"int","out":1,"value":1009},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2082\u2089","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2081\u2086","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"81([k@[k@[k@[#123]#125]#129]#131])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: coerce to (\u27e8int\u27e9 -{\u03d6\u2082\u2087}\u2192 \u27e8int\u27e9)!\u03d6\u2081\u2085","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int -\u03b4\u2082\u2084\u2192 int\u27e9!\u03d6\u2081\u2084","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to (\u27e8int\u27e9 -{\u2205\u21aa\ufe0e\u03b4\u2082\u2084}\u2192 \u27e8int\u27e9)!(\u2205\u21aa\ufe0e\u03b4\u2081\u2084)","traced":{"any":[]}},
{"op":"Push","target":80,"args":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8int\u27e9 -{\u2205\u21aa\ufe0e\u03b4\u2082\u2084}\u2192 \u27e8int\u27e9)!(\u2205\u21aa\ufe0e\u03b4\u2081\u2084)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int -\u03b4\u2082\u2084\u2192 int\u27e9!\u03d6\u2081\u2084","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8int\u27e9 -{\u03d6\u2082\u2087}\u2192 \u27e8int\u27e9)!\u03d6\u2081\u2085","traced":{"any":[]}},
{"op":"Jump","target":57}]},
{"label":"82([k@[k@[#123]#125]#129])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2081\u2085","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2081\u2083","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2081\u2082","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!(\u2205\u21aa\ufe0e\u03b4\u2081\u2082)","traced":{"any":[]}},
{"op":"Push","target":81,"args":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!(\u2205\u21aa\ufe0e\u03b4\u2081\u2082)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2081\u2082","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2081\u2083","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2081\u2085","traced":{"any":[]}},
{"op":"Jump","target":62}]},
{"label":"83([k@[#123]#125])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2081\u2085","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2081\u2083","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2081\u2081","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2081\u2080","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2082\u2085","traced":{"any":[]}},
{"op":"Const","format":"int","out":1,"value":37},
{"op":"Push","target":82,"args":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2082\u2085","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2081\u2080","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2081\u2081","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2081\u2083","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2081\u2085","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"84([#123])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int -\u03b4\u2082\u2083\u2192 int\u27e9!\u03d6\u2081\u2085","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int -\u03b4\u2082\u2083\u2192 int\u27e9!\u03d6\u2081\u2083","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int -\u03b4\u2082\u2083\u2192 int\u27e9!\u03d6\u2081\u2081","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to (\u27e8int\u27e9 -{\u03d6\u2082\u2083}\u2192 \u27e8int\u27e9)!\u03d6\u2089","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int -\u03b4\u2082\u2082\u2192 int\u27e9!\u03d6\u2088","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to (\u27e8int\u27e9 -{\u2205\u21aa\ufe0e\u03b4\u2082\u2082}\u2192 \u27e8int\u27e9)!(\u2205\u21aa\ufe0e\u03b4\u2088)","traced":{"any":[]}},
{"op":"Push","target":83,"args":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8int\u27e9 -{\u2205\u21aa\ufe0e\u03b4\u2082\u2082}\u2192 \u27e8int\u27e9)!(\u2205\u21aa\ufe0e\u03b4\u2088)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int -\u03b4\u2082\u2082\u2192 int\u27e9!\u03d6\u2088","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8int\u27e9 -{\u03d6\u2082\u2083}\u2192 \u27e8int\u27e9)!\u03d6\u2089","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int -\u03b4\u2082\u2083\u2192 int\u27e9!\u03d6\u2081\u2081","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int -\u03b4\u2082\u2083\u2192 int\u27e9!\u03d6\u2081\u2083","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int -\u03b4\u2082\u2083\u2192 int\u27e9!\u03d6\u2081\u2085","traced":{"any":[]}},
{"op":"Jump","target":51}]},
{"label":"85([k@[k@[k@[mcore:[#46]#113]#115]#119]#121])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2081\u2085","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2081\u2083","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2081\u2081","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2089","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2087","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2086","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2084","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2082\u2082","traced":{"any":[]}},
{"op":"Push","target":84,"args":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2082\u2082","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2084","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2086","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2087","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2089","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2081\u2081","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2081\u2083","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2081\u2085","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"86([k@[k@[mcore:[#46]#113]#115]#119])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2081\u2085","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2081\u2083","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2081\u2081","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2089","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2087","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2086","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2083","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2082","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2082\u2081","traced":{"any":[]}},
{"op":"Push","target":85,"args":{"any":[1]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2082\u2081","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2082","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2083","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2086","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2087","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2089","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2081\u2081","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2081\u2083","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2081\u2085","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"87([k@[mcore:[#46]#113]#115])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int -\u03b4\u2082\u2081\u2192 int\u27e9!\u03d6\u2081\u2085","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int -\u03b4\u2082\u2081\u2192 int\u27e9!\u03d6\u2081\u2083","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int -\u03b4\u2082\u2081\u2192 int\u27e9!\u03d6\u2081\u2081","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int -\u03b4\u2082\u2081\u2192 int\u27e9!\u03d6\u2089","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int -\u03b4\u2082\u2081\u2192 int\u27e9!\u03d6\u2087","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int -\u03b4\u2082\u2081\u2192 int\u27e9!\u03d6\u2086","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int -\u03b4\u2082\u2081\u2192 int\u27e9!\u03d6\u2083","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to (\u27e8int\u27e9 -{\u03d6\u2081\u2089}\u2192 \u27e8int\u27e9)!\u03d6\u2081","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to (\u27e8int\u27e9 -{\u2205\u21aa\ufe0e\u03b4\u2082\u2080}\u2192 \u27e8int\u27e9)!(\u2205\u21aa\ufe0e\u03b4\u2082)","traced":{"any":[]}},
{"op":"Const","format":"int","out":2,"value":503},
{"op":"Push","target":86,"args":{"any":[0,1]}},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8int\u27e9 -{\u2205\u21aa\ufe0e\u03b4\u2082\u2080}\u2192 \u27e8int\u27e9)!(\u2205\u21aa\ufe0e\u03b4\u2082)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8int\u27e9 -{\u03d6\u2081\u2089}\u2192 \u27e8int\u27e9)!\u03d6\u2081","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int -\u03b4\u2082\u2081\u2192 int\u27e9!\u03d6\u2083","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int -\u03b4\u2082\u2081\u2192 int\u27e9!\u03d6\u2086","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int -\u03b4\u2082\u2081\u2192 int\u27e9!\u03d6\u2087","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int -\u03b4\u2082\u2081\u2192 int\u27e9!\u03d6\u2089","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int -\u03b4\u2082\u2081\u2192 int\u27e9!\u03d6\u2081\u2081","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int -\u03b4\u2082\u2081\u2192 int\u27e9!\u03d6\u2081\u2083","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int -\u03b4\u2082\u2081\u2192 int\u27e9!\u03d6\u2081\u2085","traced":{"any":[]}},
{"op":"Jump","target":60}]},
{"label":"88([mcore:[#46]#113])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int -\u03b4\u2081\u2089\u2192 int\u27e9!\u03d6\u2081\u2085","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int -\u03b4\u2081\u2089\u2192 int\u27e9!\u03d6\u2081\u2083","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int -\u03b4\u2081\u2089\u2192 int\u27e9!\u03d6\u2081\u2081","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int -\u03b4\u2081\u2089\u2192 int\u27e9!\u03d6\u2089","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int -\u03b4\u2081\u2089\u2192 int\u27e9!\u03d6\u2087","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to (\u27e8int\u27e9 -{\u03d6\u2081\u2087}\u2192 \u27e8int\u27e9)!\u03d6\u2085","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to (\u27e8int\u27e9 -{\u2205\u21aa\ufe0e\u03b4\u2081\u2088}\u2192 \u27e8int\u27e9)!(\u2205\u21aa\ufe0e\u03b4\u2081)","traced":{"any":[]}},
{"op":"Push","target":87,"args":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8int\u27e9 -{\u2205\u21aa\ufe0e\u03b4\u2081\u2088}\u2192 \u27e8int\u27e9)!(\u2205\u21aa\ufe0e\u03b4\u2081)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8int\u27e9 -{\u03d6\u2081\u2087}\u2192 \u27e8int\u27e9)!\u03d6\u2085","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int -\u03b4\u2081\u2089\u2192 int\u27e9!\u03d6\u2087","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int -\u03b4\u2081\u2089\u2192 int\u27e9!\u03d6\u2089","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int -\u03b4\u2081\u2089\u2192 int\u27e9!\u03d6\u2081\u2081","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int -\u03b4\u2081\u2089\u2192 int\u27e9!\u03d6\u2081\u2083","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int -\u03b4\u2081\u2089\u2192 int\u27e9!\u03d6\u2081\u2085","traced":{"any":[]}},
{"op":"Jump","target":66}]},
{"label":"89([method_apply@Name(operator_48)#138])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Jump","target":88}]},
{"label":"90(Name(operator_48))",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"New","out":0,"targets":[89],"args":{"any":[0]},"tags":["apply"]},
{"op":"Return","args":{"any":[0]}}]},
{"label":"91([#142])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Const","format":"string","out":0,"value":"Undefined: non-exhaustive match"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"92([match_def@[#145]#146])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Const","format":"string","out":0,"value":"Undefined: non-exhaustive match"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"93([k@[k@[#149]#151]#153])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8intlist\u27e9!\u03d6\u2083\u2088","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8intlist\u27e9!(\u2205\u21aa\ufe0e\u03b4\u2083\u2081)","traced":{"any":[]}},
{"op":"Construct","out":0,"type":"{\"op\": \"eff$Tuple\", \"elements\": [{\"op\": \"Int\"}, {\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Sum\\\", \\\"constructors\\\": [{\\\"name\\\": Nil_4, \\\"arg\\\": {\\\"op\\\": \\\"Unit\\\"}}, {\\\"name\\\": Cons_5, \\\"arg\\\": {\\\"op\\\": \\\"Data\\\", \\\"type_tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"constructors\\\": [{\\\"tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"fields\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}]}}]}\", \"constructors\": [{\"tag\": \"Nil_4\", \"fields\": []}, {\"tag\": \"Cons_5\", \"fields\": [{\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"constructors\": [{\"tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"fields\": [{\"op\": \"Int\"}, {\"op\": \"Top\"}]}]}]}]}]}","tag":"{\"op\": \"eff$Tuple\", \"elements\": [{\"op\": \"Int\"}, {\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Sum\\\", \\\"constructors\\\": [{\\\"name\\\": Nil_4, \\\"arg\\\": {\\\"op\\\": \\\"Unit\\\"}}, {\\\"name\\\": Cons_5, \\\"arg\\\": {\\\"op\\\": \\\"Data\\\", \\\"type_tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"constructors\\\": [{\\\"tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"fields\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}]}}]}\", \"constructors\": [{\"tag\": \"Nil_4\", \"fields\": []}, {\"tag\": \"Cons_5\", \"fields\": [{\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"constructors\": [{\"tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"fields\": [{\"op\": \"Int\"}, {\"op\": \"Top\"}]}]}]}]}]}","args":{"any":[1,0]}},
{"op":"Construct","out":0,"type":"{\"op\": \"eff$Sum\", \"constructors\": [{\"name\": Cons_5, \"arg\": {\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Data\\\", \\\"type_tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Sum\\\\\\\", \\\\\\\"constructors\\\\\\\": [{\\\\\\\"name\\\\\\\": Nil_4, \\\\\\\"arg\\\\\\\": {\\\\\\\"op\\\\\\\": \\\\\\\"Unit\\\\\\\"}}, {\\\\\\\"name\\\\\\\": Cons_5, \\\\\\\"arg\\\\\\\": {\\\\\\\"op\\\\\\\": \\\\\\\"Data\\\\\\\", \\\\\\\"type_tag\\\\\\\": \\\\\\\"{\\\\\\\\\\\\\\\"op\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"eff$Tuple\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"elements\\\\\\\\\\\\\\\": [{\\\\\\\\\\\\\\\"op\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Int\\\\\\\\\\\\\\\"}, {\\\\\\\\\\\\\\\"op\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Top\\\\\\\\\\\\\\\"}]}\\\\\\\", \\\\\\\"constructors\\\\\\\": [{\\\\\\\"tag\\\\\\\": \\\\\\\"{\\\\\\\\\\\\\\\"op\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"eff$Tuple\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"elements\\\\\\\\\\\\\\\": [{\\\\\\\\\\\\\\\"op\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Int\\\\\\\\\\\\\\\"}, {\\\\\\\\\\\\\\\"op\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Top\\\\\\\\\\\\\\\"}]}\\\\\\\", \\\\\\\"fields\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}]}}]}\\\", \\\"constructors\\\": [{\\\"tag\\\": \\\"Nil_4\\\", \\\"fields\\\": []}, {\\\"tag\\\": \\\"Cons_5\\\", \\\"fields\\\": [{\\\"op\\\": \\\"Data\\\", \\\"type_tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"constructors\\\": [{\\\"tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"fields\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}]}]}]}]}\", \"constructors\": [{\"tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Data\\\", \\\"type_tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Sum\\\\\\\", \\\\\\\"constructors\\\\\\\": [{\\\\\\\"name\\\\\\\": Nil_4, \\\\\\\"arg\\\\\\\": {\\\\\\\"op\\\\\\\": \\\\\\\"Unit\\\\\\\"}}, {\\\\\\\"name\\\\\\\": Cons_5, \\\\\\\"arg\\\\\\\": {\\\\\\\"op\\\\\\\": \\\\\\\"Data\\\\\\\", \\\\\\\"type_tag\\\\\\\": \\\\\\\"{\\\\\\\\\\\\\\\"op\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"eff$Tuple\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"elements\\\\\\\\\\\\\\\": [{\\\\\\\\\\\\\\\"op\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Int\\\\\\\\\\\\\\\"}, {\\\\\\\\\\\\\\\"op\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Top\\\\\\\\\\\\\\\"}]}\\\\\\\", \\\\\\\"constructors\\\\\\\": [{\\\\\\\"tag\\\\\\\": \\\\\\\"{\\\\\\\\\\\\\\\"op\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"eff$Tuple\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"elements\\\\\\\\\\\\\\\": [{\\\\\\\\\\\\\\\"op\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Int\\\\\\\\\\\\\\\"}, {\\\\\\\\\\\\\\\"op\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Top\\\\\\\\\\\\\\\"}]}\\\\\\\", \\\\\\\"fields\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}]}}]}\\\", \\\"constructors\\\": [{\\\"tag\\\": \\\"Nil_4\\\", \\\"fields\\\": []}, {\\\"tag\\\": \\\"Cons_5\\\", \\\"fields\\\": [{\\\"op\\\": \\\"Data\\\", \\\"type_tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"constructors\\\": [{\\\"tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"fields\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}]}]}]}]}\", \"fields\": [{\"op\": \"Int\"}, {\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Sum\\\", \\\"constructors\\\": [{\\\"name\\\": Nil_4, \\\"arg\\\": {\\\"op\\\": \\\"Unit\\\"}}, {\\\"name\\\": Cons_5, \\\"arg\\\": {\\\"op\\\": \\\"Data\\\", \\\"type_tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"constructors\\\": [{\\\"tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"fields\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}]}}]}\", \"constructors\": [{\"tag\": \"Nil_4\", \"fields\": []}, {\"tag\": \"Cons_5\", \"fields\": [{\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"constructors\": [{\"tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"fields\": [{\"op\": \"Int\"}, {\"op\": \"Top\"}]}]}]}]}]}]}}]}","tag":"Cons_5","args":{"any":[0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8intlist\u27e9!(\u2205\u21aa\ufe0e\u03b4\u2083\u2081)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8intlist\u27e9!\u03d6\u2083\u2088","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"94([k@[#149]#151])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8intlist\u27e9!\u03d6\u2083\u2088","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8intlist\u27e9!\u03d6\u2083\u2086","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8intlist\u27e9!\u03d6\u2083\u2085","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8intlist\u27e9!\u03d6\u2084\u2083","traced":{"any":[]}},
{"op":"Push","target":93,"args":{"any":[1]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8intlist\u27e9!\u03d6\u2084\u2083","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8intlist\u27e9!\u03d6\u2083\u2085","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8intlist\u27e9!\u03d6\u2083\u2086","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8intlist\u27e9!\u03d6\u2083\u2088","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"95([#149])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"BGN: coerce to \u27e8intlist -\u03b4\u2083\u2083\u2192 intlist\u27e9!\u03d6\u2083\u2088","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8intlist -\u03b4\u2083\u2083\u2192 intlist\u27e9!\u03d6\u2083\u2086","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to (\u27e8intlist\u27e9 -{\u03d6\u2084\u2082}\u2192 \u27e8intlist\u27e9)!\u03d6\u2083\u2084","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to (\u27e8intlist\u27e9 -{\u03d6\u2084\u2085}\u2192 \u27e8intlist\u27e9)!\u03d6\u2084\u2081","traced":{"any":[]}},
{"op":"Push","target":94,"args":{"any":[1,0]}},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8intlist\u27e9 -{\u03d6\u2084\u2085}\u2192 \u27e8intlist\u27e9)!\u03d6\u2084\u2081","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8intlist\u27e9 -{\u03d6\u2084\u2082}\u2192 \u27e8intlist\u27e9)!\u03d6\u2083\u2084","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8intlist -\u03b4\u2083\u2083\u2192 intlist\u27e9!\u03d6\u2083\u2086","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8intlist -\u03b4\u2083\u2083\u2192 intlist\u27e9!\u03d6\u2083\u2088","traced":{"any":[]}},
{"op":"Jump","target":101}]},
{"label":"96([#145])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Match","type":"{\"op\": \"eff$Tuple\", \"elements\": [{\"op\": \"Int\"}, {\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Sum\\\", \\\"constructors\\\": [{\\\"name\\\": Nil_4, \\\"arg\\\": {\\\"op\\\": \\\"Unit\\\"}}, {\\\"name\\\": Cons_5, \\\"arg\\\": {\\\"op\\\": \\\"Data\\\", \\\"type_tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"constructors\\\": [{\\\"tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"fields\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}]}}]}\", \"constructors\": [{\"tag\": \"Nil_4\", \"fields\": []}, {\"tag\": \"Cons_5\", \"fields\": [{\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"constructors\": [{\"tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"fields\": [{\"op\": \"Int\"}, {\"op\": \"Top\"}]}]}]}]}]}","scrutinee":1,"clauses":[{"tag":"{\"op\": \"eff$Tuple\", \"elements\": [{\"op\": \"Int\"}, {\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Sum\\\", \\\"constructors\\\": [{\\\"name\\\": Nil_4, \\\"arg\\\": {\\\"op\\\": \\\"Unit\\\"}}, {\\\"name\\\": Cons_5, \\\"arg\\\": {\\\"op\\\": \\\"Data\\\", \\\"type_tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"constructors\\\": [{\\\"tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"fields\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}]}}]}\", \"constructors\": [{\"tag\": \"Nil_4\", \"fields\": []}, {\"tag\": \"Cons_5\", \"fields\": [{\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"constructors\": [{\"tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"fields\": [{\"op\": \"Int\"}, {\"op\": \"Top\"}]}]}]}]}]}","target":95,"args":{"any":[1,2]}}],"default":{"tag":"352d8e24-d9f1-4c07-bd8b-b80f2ab44273#[Missing Tag#604]","target":92,"args":{"any":[]}}}]},
{"label":"97([match_def@[mcore:[#48]#140]#141])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Swap","a":0,"b":1},
{"op":"Match","type":"{\"op\": \"eff$Sum\", \"constructors\": [{\"name\": Cons_5, \"arg\": {\"op\": \"Unit\"}}]}","scrutinee":1,"clauses":[{"tag":"Cons_5","target":96,"args":{"any":[1]}}],"default":{"tag":"352d8e24-d9f1-4c07-bd8b-b80f2ab44273#[Missing Tag#605]","target":91,"args":{"any":[]}}}]},
{"label":"98([match_Nil_4@[mcore:[#48]#140]#157])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"BGN: coerce to \u27e8intlist\u27e9!(\u2205\u21aa\ufe0e\u03b4\u2082\u2087)","traced":{"any":[]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8intlist\u27e9!(\u2205\u21aa\ufe0e\u03b4\u2082\u2087)","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"99([mcore:[#48]#140])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Swap","a":0,"b":1},
{"op":"Match","type":"{\"op\": \"eff$Sum\", \"constructors\": [{\"name\": Nil_4, \"arg\": {\"op\": \"Unit\"}}]}","scrutinee":0,"clauses":[{"tag":"Nil_4","target":98,"args":{"any":[]}}],"default":{"tag":"352d8e24-d9f1-4c07-bd8b-b80f2ab44273#[Missing Tag#606]","target":97,"args":{"any":[]}}}]},
{"label":"100([method_apply@Name(@_59)#160])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Jump","target":99}]},
{"label":"101(Name(@_59))",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: coerce to (\u27e8intlist\u27e9 -{\u03d6\u2084\u2084}\u2192 \u27e8intlist\u27e9)!(\u2205\u21aa\ufe0e\u03b4\u2082\u2086)","traced":{"any":[]}},
{"op":"New","out":0,"targets":[100],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8intlist\u27e9 -{\u03d6\u2084\u2084}\u2192 \u27e8intlist\u27e9)!(\u2205\u21aa\ufe0e\u03b4\u2082\u2086)","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"102([switch case for Int(0)#162])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8tree\u27e9!(\u2205\u21aa\ufe0e\u03b4\u2083\u2086)","traced":{"any":[]}},
{"op":"Construct","out":0,"type":"{\"op\": \"eff$Sum\", \"constructors\": [{\"name\": Leaf_2, \"arg\": {\"op\": \"Unit\"}}]}","tag":"Leaf_2","args":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8tree\u27e9!(\u2205\u21aa\ufe0e\u03b4\u2083\u2086)","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"103([#172])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8tree\u27e9!\u03d6\u2085\u2082","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8tree\u27e9!(\u2205\u21aa\ufe0e\u03b4\u2084\u2082)","traced":{"any":[]}},
{"op":"Construct","out":0,"type":"{\"op\": \"eff$Tuple\", \"elements\": [{\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Sum\\\", \\\"constructors\\\": [{\\\"name\\\": Leaf_2, \\\"arg\\\": {\\\"op\\\": \\\"Unit\\\"}}, {\\\"name\\\": Node_3, \\\"arg\\\": {\\\"op\\\": \\\"Data\\\", \\\"type_tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"constructors\\\": [{\\\"tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"fields\\\": [{\\\"op\\\": \\\"Top\\\"}, {\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}]}}]}\", \"constructors\": [{\"tag\": \"Leaf_2\", \"fields\": []}, {\"tag\": \"Node_3\", \"fields\": [{\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Top\\\"}, {\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"constructors\": [{\"tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Top\\\"}, {\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"fields\": [{\"op\": \"Top\"}, {\"op\": \"Int\"}, {\"op\": \"Top\"}]}]}]}]}, {\"op\": \"Int\"}, {\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Sum\\\", \\\"constructors\\\": [{\\\"name\\\": Leaf_2, \\\"arg\\\": {\\\"op\\\": \\\"Unit\\\"}}, {\\\"name\\\": Node_3, \\\"arg\\\": {\\\"op\\\": \\\"Data\\\", \\\"type_tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"constructors\\\": [{\\\"tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"fields\\\": [{\\\"op\\\": \\\"Top\\\"}, {\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}]}}]}\", \"constructors\": [{\"tag\": \"Leaf_2\", \"fields\": []}, {\"tag\": \"Node_3\", \"fields\": [{\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Top\\\"}, {\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"constructors\": [{\"tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Top\\\"}, {\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"fields\": [{\"op\": \"Top\"}, {\"op\": \"Int\"}, {\"op\": \"Top\"}]}]}]}]}]}","tag":"{\"op\": \"eff$Tuple\", \"elements\": [{\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Sum\\\", \\\"constructors\\\": [{\\\"name\\\": Leaf_2, \\\"arg\\\": {\\\"op\\\": \\\"Unit\\\"}}, {\\\"name\\\": Node_3, \\\"arg\\\": {\\\"op\\\": \\\"Data\\\", \\\"type_tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"constructors\\\": [{\\\"tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"fields\\\": [{\\\"op\\\": \\\"Top\\\"}, {\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}]}}]}\", \"constructors\": [{\"tag\": \"Leaf_2\", \"fields\": []}, {\"tag\": \"Node_3\", \"fields\": [{\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Top\\\"}, {\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"constructors\": [{\"tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Top\\\"}, {\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"fields\": [{\"op\": \"Top\"}, {\"op\": \"Int\"}, {\"op\": \"Top\"}]}]}]}]}, {\"op\": \"Int\"}, {\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Sum\\\", \\\"constructors\\\": [{\\\"name\\\": Leaf_2, \\\"arg\\\": {\\\"op\\\": \\\"Unit\\\"}}, {\\\"name\\\": Node_3, \\\"arg\\\": {\\\"op\\\": \\\"Data\\\", \\\"type_tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"constructors\\\": [{\\\"tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"fields\\\": [{\\\"op\\\": \\\"Top\\\"}, {\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}]}}]}\", \"constructors\": [{\"tag\": \"Leaf_2\", \"fields\": []}, {\"tag\": \"Node_3\", \"fields\": [{\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Top\\\"}, {\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"constructors\": [{\"tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Top\\\"}, {\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"fields\": [{\"op\": \"Top\"}, {\"op\": \"Int\"}, {\"op\": \"Top\"}]}]}]}]}]}","args":{"any":[0,1,0]}},
{"op":"Construct","out":0,"type":"{\"op\": \"eff$Sum\", \"constructors\": [{\"name\": Node_3, \"arg\": {\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Data\\\", \\\"type_tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Sum\\\\\\\", \\\\\\\"constructors\\\\\\\": [{\\\\\\\"name\\\\\\\": Leaf_2, \\\\\\\"arg\\\\\\\": {\\\\\\\"op\\\\\\\": \\\\\\\"Unit\\\\\\\"}}, {\\\\\\\"name\\\\\\\": Node_3, \\\\\\\"arg\\\\\\\": {\\\\\\\"op\\\\\\\": \\\\\\\"Data\\\\\\\", \\\\\\\"type_tag\\\\\\\": \\\\\\\"{\\\\\\\\\\\\\\\"op\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"eff$Tuple\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"elements\\\\\\\\\\\\\\\": [{\\\\\\\\\\\\\\\"op\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Top\\\\\\\\\\\\\\\"}, {\\\\\\\\\\\\\\\"op\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Int\\\\\\\\\\\\\\\"}, {\\\\\\\\\\\\\\\"op\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Top\\\\\\\\\\\\\\\"}]}\\\\\\\", \\\\\\\"constructors\\\\\\\": [{\\\\\\\"tag\\\\\\\": \\\\\\\"{\\\\\\\\\\\\\\\"op\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"eff$Tuple\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"elements\\\\\\\\\\\\\\\": [{\\\\\\\\\\\\\\\"op\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Top\\\\\\\\\\\\\\\"}, {\\\\\\\\\\\\\\\"op\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Int\\\\\\\\\\\\\\\"}, {\\\\\\\\\\\\\\\"op\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Top\\\\\\\\\\\\\\\"}]}\\\\\\\", \\\\\\\"fields\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}]}}]}\\\", \\\"constructors\\\": [{\\\"tag\\\": \\\"Leaf_2\\\", \\\"fields\\\": []}, {\\\"tag\\\": \\\"Node_3\\\", \\\"fields\\\": [{\\\"op\\\": \\\"Data\\\", \\\"type_tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"constructors\\\": [{\\\"tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"fields\\\": [{\\\"op\\\": \\\"Top\\\"}, {\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}]}]}]}, {\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Data\\\", \\\"type_tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Sum\\\\\\\", \\\\\\\"constructors\\\\\\\": [{\\\\\\\"name\\\\\\\": Leaf_2, \\\\\\\"arg\\\\\\\": {\\\\\\\"op\\\\\\\": \\\\\\\"Unit\\\\\\\"}}, {\\\\\\\"name\\\\\\\": Node_3, \\\\\\\"arg\\\\\\\": {\\\\\\\"op\\\\\\\": \\\\\\\"Data\\\\\\\", \\\\\\\"type_tag\\\\\\\": \\\\\\\"{\\\\\\\\\\\\\\\"op\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"eff$Tuple\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"elements\\\\\\\\\\\\\\\": [{\\\\\\\\\\\\\\\"op\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Top\\\\\\\\\\\\\\\"}, {\\\\\\\\\\\\\\\"op\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Int\\\\\\\\\\\\\\\"}, {\\\\\\\\\\\\\\\"op\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Top\\\\\\\\\\\\\\\"}]}\\\\\\\", \\\\\\\"constructors\\\\\\\": [{\\\\\\\"tag\\\\\\\": \\\\\\\"{\\\\\\\\\\\\\\\"op\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"eff$Tuple\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"elements\\\\\\\\\\\\\\\": [{\\\\\\\\\\\\\\\"op\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Top\\\\\\\\\\\\\\\"}, {\\\\\\\\\\\\\\\"op\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Int\\\\\\\\\\\\\\\"}, {\\\\\\\\\\\\\\\"op\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Top\\\\\\\\\\\\\\\"}]}\\\\\\\", \\\\\\\"fields\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}]}}]}\\\", \\\"constructors\\\": [{\\\"tag\\\": \\\"Leaf_2\\\", \\\"fields\\\": []}, {\\\"tag\\\": \\\"Node_3\\\", \\\"fields\\\": [{\\\"op\\\": \\\"Data\\\", \\\"type_tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"constructors\\\": [{\\\"tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"fields\\\": [{\\\"op\\\": \\\"Top\\\"}, {\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}]}]}]}]}\", \"constructors\": [{\"tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Data\\\", \\\"type_tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Sum\\\\\\\", \\\\\\\"constructors\\\\\\\": [{\\\\\\\"name\\\\\\\": Leaf_2, \\\\\\\"arg\\\\\\\": {\\\\\\\"op\\\\\\\": \\\\\\\"Unit\\\\\\\"}}, {\\\\\\\"name\\\\\\\": Node_3, \\\\\\\"arg\\\\\\\": {\\\\\\\"op\\\\\\\": \\\\\\\"Data\\\\\\\", \\\\\\\"type_tag\\\\\\\": \\\\\\\"{\\\\\\\\\\\\\\\"op\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"eff$Tuple\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"elements\\\\\\\\\\\\\\\": [{\\\\\\\\\\\\\\\"op\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Top\\\\\\\\\\\\\\\"}, {\\\\\\\\\\\\\\\"op\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Int\\\\\\\\\\\\\\\"}, {\\\\\\\\\\\\\\\"op\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Top\\\\\\\\\\\\\\\"}]}\\\\\\\", \\\\\\\"constructors\\\\\\\": [{\\\\\\\"tag\\\\\\\": \\\\\\\"{\\\\\\\\\\\\\\\"op\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"eff$Tuple\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"elements\\\\\\\\\\\\\\\": [{\\\\\\\\\\\\\\\"op\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Top\\\\\\\\\\\\\\\"}, {\\\\\\\\\\\\\\\"op\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Int\\\\\\\\\\\\\\\"}, {\\\\\\\\\\\\\\\"op\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Top\\\\\\\\\\\\\\\"}]}\\\\\\\", \\\\\\\"fields\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}]}}]}\\\", \\\"constructors\\\": [{\\\"tag\\\": \\\"Leaf_2\\\", \\\"fields\\\": []}, {\\\"tag\\\": \\\"Node_3\\\", \\\"fields\\\": [{\\\"op\\\": \\\"Data\\\", \\\"type_tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"constructors\\\": [{\\\"tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"fields\\\": [{\\\"op\\\": \\\"Top\\\"}, {\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}]}]}]}, {\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Data\\\", \\\"type_tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Sum\\\\\\\", \\\\\\\"constructors\\\\\\\": [{\\\\\\\"name\\\\\\\": Leaf_2, \\\\\\\"arg\\\\\\\": {\\\\\\\"op\\\\\\\": \\\\\\\"Unit\\\\\\\"}}, {\\\\\\\"name\\\\\\\": Node_3, \\\\\\\"arg\\\\\\\": {\\\\\\\"op\\\\\\\": \\\\\\\"Data\\\\\\\", \\\\\\\"type_tag\\\\\\\": \\\\\\\"{\\\\\\\\\\\\\\\"op\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"eff$Tuple\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"elements\\\\\\\\\\\\\\\": [{\\\\\\\\\\\\\\\"op\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Top\\\\\\\\\\\\\\\"}, {\\\\\\\\\\\\\\\"op\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Int\\\\\\\\\\\\\\\"}, {\\\\\\\\\\\\\\\"op\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Top\\\\\\\\\\\\\\\"}]}\\\\\\\", \\\\\\\"constructors\\\\\\\": [{\\\\\\\"tag\\\\\\\": \\\\\\\"{\\\\\\\\\\\\\\\"op\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"eff$Tuple\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"elements\\\\\\\\\\\\\\\": [{\\\\\\\\\\\\\\\"op\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Top\\\\\\\\\\\\\\\"}, {\\\\\\\\\\\\\\\"op\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Int\\\\\\\\\\\\\\\"}, {\\\\\\\\\\\\\\\"op\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Top\\\\\\\\\\\\\\\"}]}\\\\\\\", \\\\\\\"fields\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}]}}]}\\\", \\\"constructors\\\": [{\\\"tag\\\": \\\"Leaf_2\\\", \\\"fields\\\": []}, {\\\"tag\\\": \\\"Node_3\\\", \\\"fields\\\": [{\\\"op\\\": \\\"Data\\\", \\\"type_tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"constructors\\\": [{\\\"tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"fields\\\": [{\\\"op\\\": \\\"Top\\\"}, {\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}]}]}]}]}\", \"fields\": [{\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Sum\\\", \\\"constructors\\\": [{\\\"name\\\": Leaf_2, \\\"arg\\\": {\\\"op\\\": \\\"Unit\\\"}}, {\\\"name\\\": Node_3, \\\"arg\\\": {\\\"op\\\": \\\"Data\\\", \\\"type_tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"constructors\\\": [{\\\"tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"fields\\\": [{\\\"op\\\": \\\"Top\\\"}, {\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}]}}]}\", \"constructors\": [{\"tag\": \"Leaf_2\", \"fields\": []}, {\"tag\": \"Node_3\", \"fields\": [{\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Top\\\"}, {\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"constructors\": [{\"tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Top\\\"}, {\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"fields\": [{\"op\": \"Top\"}, {\"op\": \"Int\"}, {\"op\": \"Top\"}]}]}]}]}, {\"op\": \"Int\"}, {\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Sum\\\", \\\"constructors\\\": [{\\\"name\\\": Leaf_2, \\\"arg\\\": {\\\"op\\\": \\\"Unit\\\"}}, {\\\"name\\\": Node_3, \\\"arg\\\": {\\\"op\\\": \\\"Data\\\", \\\"type_tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"constructors\\\": [{\\\"tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"fields\\\": [{\\\"op\\\": \\\"Top\\\"}, {\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}]}}]}\", \"constructors\": [{\"tag\": \"Leaf_2\", \"fields\": []}, {\"tag\": \"Node_3\", \"fields\": [{\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Top\\\"}, {\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"constructors\": [{\"tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Top\\\"}, {\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"fields\": [{\"op\": \"Top\"}, {\"op\": \"Int\"}, {\"op\": \"Top\"}]}]}]}]}]}]}}]}","tag":"Node_3","args":{"any":[0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8tree\u27e9!(\u2205\u21aa\ufe0e\u03b4\u2084\u2082)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8tree\u27e9!\u03d6\u2085\u2082","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"104([k@[k@[switch default case#164]#166]#170])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8tree\u27e9!\u03d6\u2085\u2082","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8tree\u27e9!\u03d6\u2085\u2080","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8tree\u27e9!\u03d6\u2084\u2089","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8tree\u27e9!\u03d6\u2085\u2088","traced":{"any":[]}},
{"op":"Push","target":103,"args":{"any":[1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8tree\u27e9!\u03d6\u2085\u2088","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8tree\u27e9!\u03d6\u2084\u2089","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8tree\u27e9!\u03d6\u2085\u2080","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8tree\u27e9!\u03d6\u2085\u2082","traced":{"any":[]}},
{"op":"Jump","target":107}]},
{"label":"105([k@[switch default case#164]#166])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2085\u2082","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2085\u2080","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2084\u2088","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2084\u2087","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2085\u2087","traced":{"any":[]}},
{"op":"Const","format":"int","out":2,"value":1},
{"op":"Push","target":104,"args":{"any":[1]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2085\u2087","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2084\u2087","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2084\u2088","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2085\u2080","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2085\u2082","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"106([switch default case#164])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int -\u03b4\u2084\u2084\u2192 int\u27e9!\u03d6\u2085\u2082","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int -\u03b4\u2084\u2084\u2192 int\u27e9!\u03d6\u2085\u2080","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int -\u03b4\u2084\u2084\u2192 int\u27e9!\u03d6\u2084\u2088","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to (\u27e8int\u27e9 -{\u03d6\u2085\u2085}\u2192 \u27e8int\u27e9)!\u03d6\u2084\u2086","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to (\u27e8int\u27e9 -{\u2205\u21aa\ufe0e\u03b4\u2084\u2083}\u2192 \u27e8int\u27e9)!(\u2205\u21aa\ufe0e\u03b4\u2083\u2087)","traced":{"any":[]}},
{"op":"Push","target":105,"args":{"any":[0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8int\u27e9 -{\u2205\u21aa\ufe0e\u03b4\u2084\u2083}\u2192 \u27e8int\u27e9)!(\u2205\u21aa\ufe0e\u03b4\u2083\u2087)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8int\u27e9 -{\u03d6\u2085\u2085}\u2192 \u27e8int\u27e9)!\u03d6\u2084\u2086","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int -\u03b4\u2084\u2084\u2192 int\u27e9!\u03d6\u2084\u2088","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int -\u03b4\u2084\u2084\u2192 int\u27e9!\u03d6\u2085\u2080","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int -\u03b4\u2084\u2084\u2192 int\u27e9!\u03d6\u2085\u2082","traced":{"any":[]}},
{"op":"Jump","target":66}]},
{"label":"107(Name(make_73))",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8tree\u27e9!\u03d6\u2085\u2084","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8tree\u27e9!\u03d6\u2085\u2084","traced":{"any":[]}},
{"op":"Switch","arg":0,"values":[0],"targets":[102],"default":106}]},
{"label":"108([switch case for Bool(true)#181])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: coerce to \u03c9\u2081\u2081\u2082!(\u2205\u21aa\ufe0e\u03b4\u2084\u2088)","traced":{"any":[]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u03c9\u2081\u2081\u2082!(\u2205\u21aa\ufe0e\u03b4\u2084\u2088)","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"109([switch case for Bool(false)#183])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: coerce to \u03c9\u2081\u2081\u2081!(\u2205\u21aa\ufe0e\u03b4\u2084\u2088)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u03c9\u2081\u2081\u2081!(\u2205\u21aa\ufe0e\u03b4\u2084\u2088)","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"110([switch default case#184])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Const","format":"string","out":0,"value":"Undefined: non-exhaustive match"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"111([switch default case#182])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Switch","arg":1,"values":[false],"targets":[109],"default":110}]},
{"label":"112([k@[k@[mcore:[#53]#176]#178]#180])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8\u03c4\u2088\u2083:\u03c2\u2085\u2087\u27e9!\u03d6\u2086\u2085","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8\u03c4\u2088\u2083:\u03c2\u2085\u2087\u27e9!\u03d6\u2086\u2085","traced":{"any":[]}},
{"op":"Switch","arg":0,"values":[true],"targets":[108],"default":111}]},
{"label":"113([k@[mcore:[#53]#176]#178])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8bool\u27e9!\u03d6\u2086\u2084","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8bool\u27e9!\u03d6\u2086\u2081","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8bool\u27e9!\u03d6\u2086\u2088","traced":{"any":[]}},
{"op":"Push","target":112,"args":{"any":[1,2]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8bool\u27e9!\u03d6\u2086\u2088","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8bool\u27e9!\u03d6\u2086\u2081","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8bool\u27e9!\u03d6\u2086\u2084","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"114([mcore:[#53]#176])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8(\u03c4\u2088\u2086:\u03c2\u2085\u2087) -\u03b4\u2085\u2081\u2192 bool\u27e9!\u03d6\u2086\u2084","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to (\u03c9\u2081\u2081\u2086 -{\u03d6\u2086\u2086}\u2192 \u27e8bool\u27e9)!\u03d6\u2086\u2080","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to (\u03c9\u2081\u2082\u2082 -{\u2205\u21aa\ufe0e\u03b4\u2085\u2080}\u2192 \u27e8bool\u27e9)!(\u2205\u21aa\ufe0e\u03b4\u2084\u2085)","traced":{"any":[]}},
{"op":"Push","target":113,"args":{"any":[1,0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u03c9\u2081\u2082\u2082 -{\u2205\u21aa\ufe0e\u03b4\u2085\u2080}\u2192 \u27e8bool\u27e9)!(\u2205\u21aa\ufe0e\u03b4\u2084\u2085)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u03c9\u2081\u2081\u2086 -{\u03d6\u2086\u2086}\u2192 \u27e8bool\u27e9)!\u03d6\u2086\u2080","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8(\u03c4\u2088\u2086:\u03c2\u2085\u2087) -\u03b4\u2085\u2081\u2192 bool\u27e9!\u03d6\u2086\u2084","traced":{"any":[]}},
{"op":"Jump","target":8}]},
{"label":"115([method_apply@Name(max_85)#189])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Jump","target":114}]},
{"label":"116(Name(max_85))",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"New","out":0,"targets":[115],"args":{"any":[0]},"tags":["apply"]},
{"op":"Return","args":{"any":[0]}}]},
{"label":"117([#193])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Const","format":"string","out":0,"value":"Undefined: non-exhaustive match"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"118([match_def@[#196]#197])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Const","format":"string","out":0,"value":"Undefined: non-exhaustive match"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"119([k@[k@[k@[#200]#202]#204]#206])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2088\u2082","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2088\u2081","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2089\u2080","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2089\u2080","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2088\u2081","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2088\u2082","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"120([k@[k@[#200]#202]#204])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8intlist -\u03b4\u2087\u2081\u2192 int\u27e9!\u03d6\u2088\u2082","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to (\u27e8intlist\u27e9 -{\u03d6\u2088\u2089}\u2192 \u27e8int\u27e9)!\u03d6\u2088\u2080","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8intlist -\u03b4\u2087\u2080\u2192 int\u27e9!\u03d6\u2087\u2089","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to (\u27e8intlist\u27e9 -{\u03d6\u2089\u2083}\u2192 \u27e8int\u27e9)!\u03d6\u2088\u2088","traced":{"any":[]}},
{"op":"Push","target":119,"args":{"any":[1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8intlist\u27e9 -{\u03d6\u2089\u2083}\u2192 \u27e8int\u27e9)!\u03d6\u2088\u2088","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8intlist -\u03b4\u2087\u2080\u2192 int\u27e9!\u03d6\u2087\u2089","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8intlist\u27e9 -{\u03d6\u2088\u2089}\u2192 \u27e8int\u27e9)!\u03d6\u2088\u2080","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8intlist -\u03b4\u2087\u2081\u2192 int\u27e9!\u03d6\u2088\u2082","traced":{"any":[]}},
{"op":"Jump","target":128}]},
{"label":"121([k@[#200]#202])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2088\u2082","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2088\u2080","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2087\u2088","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2087\u2087","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2088\u2087","traced":{"any":[]}},
{"op":"Push","target":120,"args":{"any":[2]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2088\u2087","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2087\u2087","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2087\u2088","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2088\u2080","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2088\u2082","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"122([#200])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"BGN: coerce to \u27e8int -\u03b4\u2086\u2089\u2192 int\u27e9!\u03d6\u2088\u2082","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int -\u03b4\u2086\u2089\u2192 int\u27e9!\u03d6\u2088\u2080","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int -\u03b4\u2086\u2089\u2192 int\u27e9!\u03d6\u2087\u2088","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to (\u27e8int\u27e9 -{\u03d6\u2088\u2085}\u2192 \u27e8int\u27e9)!\u03d6\u2087\u2086","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to (\u27e8int\u27e9 -{\u03d6\u2089\u2082}\u2192 \u27e8int\u27e9)!(\u2205\u21aa\ufe0e\u03b4\u2086\u2081)","traced":{"any":[]}},
{"op":"Push","target":121,"args":{"any":[0,2]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8int\u27e9 -{\u03d6\u2089\u2082}\u2192 \u27e8int\u27e9)!(\u2205\u21aa\ufe0e\u03b4\u2086\u2081)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8int\u27e9 -{\u03d6\u2088\u2085}\u2192 \u27e8int\u27e9)!\u03d6\u2087\u2086","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int -\u03b4\u2086\u2089\u2192 int\u27e9!\u03d6\u2087\u2088","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int -\u03b4\u2086\u2089\u2192 int\u27e9!\u03d6\u2088\u2080","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int -\u03b4\u2086\u2089\u2192 int\u27e9!\u03d6\u2088\u2082","traced":{"any":[]}},
{"op":"Jump","target":116}]},
{"label":"123([#196])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Match","type":"{\"op\": \"eff$Tuple\", \"elements\": [{\"op\": \"Int\"}, {\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Sum\\\", \\\"constructors\\\": [{\\\"name\\\": Nil_4, \\\"arg\\\": {\\\"op\\\": \\\"Unit\\\"}}, {\\\"name\\\": Cons_5, \\\"arg\\\": {\\\"op\\\": \\\"Data\\\", \\\"type_tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"constructors\\\": [{\\\"tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"fields\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}]}}]}\", \"constructors\": [{\"tag\": \"Nil_4\", \"fields\": []}, {\"tag\": \"Cons_5\", \"fields\": [{\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"constructors\": [{\"tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"fields\": [{\"op\": \"Int\"}, {\"op\": \"Top\"}]}]}]}]}]}","scrutinee":1,"clauses":[{"tag":"{\"op\": \"eff$Tuple\", \"elements\": [{\"op\": \"Int\"}, {\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Sum\\\", \\\"constructors\\\": [{\\\"name\\\": Nil_4, \\\"arg\\\": {\\\"op\\\": \\\"Unit\\\"}}, {\\\"name\\\": Cons_5, \\\"arg\\\": {\\\"op\\\": \\\"Data\\\", \\\"type_tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"constructors\\\": [{\\\"tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"fields\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}]}}]}\", \"constructors\": [{\"tag\": \"Nil_4\", \"fields\": []}, {\"tag\": \"Cons_5\", \"fields\": [{\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"constructors\": [{\"tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"fields\": [{\"op\": \"Int\"}, {\"op\": \"Top\"}]}]}]}]}]}","target":122,"args":{"any":[1,2]}}],"default":{"tag":"352d8e24-d9f1-4c07-bd8b-b80f2ab44273#[Missing Tag#607]","target":118,"args":{"any":[]}}}]},
{"label":"124([match_def@[mcore:[#54]#191]#192])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Swap","a":0,"b":1},
{"op":"Match","type":"{\"op\": \"eff$Sum\", \"constructors\": [{\"name\": Cons_5, \"arg\": {\"op\": \"Unit\"}}]}","scrutinee":1,"clauses":[{"tag":"Cons_5","target":123,"args":{"any":[1]}}],"default":{"tag":"352d8e24-d9f1-4c07-bd8b-b80f2ab44273#[Missing Tag#608]","target":117,"args":{"any":[]}}}]},
{"label":"125([match_Nil_4@[mcore:[#54]#191]#207])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!(\u2205\u21aa\ufe0e\u03b4\u2085\u2083)","traced":{"any":[]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!(\u2205\u21aa\ufe0e\u03b4\u2085\u2083)","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"126([mcore:[#54]#191])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Match","type":"{\"op\": \"eff$Sum\", \"constructors\": [{\"name\": Nil_4, \"arg\": {\"op\": \"Unit\"}}]}","scrutinee":0,"clauses":[{"tag":"Nil_4","target":125,"args":{"any":[]}}],"default":{"tag":"352d8e24-d9f1-4c07-bd8b-b80f2ab44273#[Missing Tag#609]","target":124,"args":{"any":[]}}}]},
{"label":"127([method_apply@Name(maxl_90)#210])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Jump","target":126}]},
{"label":"128(Name(maxl_90))",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: coerce to (\u27e8intlist\u27e9 -{\u03d6\u2089\u2081}\u2192 \u27e8int\u27e9)!(\u2205\u21aa\ufe0e\u03b4\u2085\u2082)","traced":{"any":[]}},
{"op":"New","out":0,"targets":[127],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8intlist\u27e9 -{\u03d6\u2089\u2081}\u2192 \u27e8int\u27e9)!(\u2205\u21aa\ufe0e\u03b4\u2085\u2082)","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"129([#213])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Const","format":"string","out":0,"value":"Undefined: non-exhaustive match"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"130([match_def@[#216]#217])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Const","format":"string","out":0,"value":"Undefined: non-exhaustive match"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"131([k@[k@[k@[#246]#254]#256]#267])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!({Choose}\u222a{Get}\u222a{Set}\u222a\u03d6\u2082\u2088\u2082)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!({Get}\u222a{Set}\u222a{Choose}\u222a\u03d6\u2082\u2089\u2083)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!({Set}\u222a{Choose,\nGet}\u222a\u03d6\u2082\u2089\u2082)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!({Set}\u222a{Choose,\nGet}\u222a\u03d6\u2082\u2089\u2081)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!({Choose, Get,\nSet}\u222a\u03d6\u2082\u2089\u2080)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!({Choose, Get,\nSet}\u222a\u03d6\u2082\u2088\u2089)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2081\u2086\u2082","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2082\u2089\u2084","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2082\u2089\u2084","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2081\u2086\u2082","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!({Choose, Get,\nSet}\u222a\u03d6\u2082\u2088\u2089)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!({Choose, Get,\nSet}\u222a\u03d6\u2082\u2089\u2080)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!({Set}\u222a{Choose,\nGet}\u222a\u03d6\u2082\u2089\u2081)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!({Set}\u222a{Choose,\nGet}\u222a\u03d6\u2082\u2089\u2082)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!({Get}\u222a{Set}\u222a{Choose}\u222a\u03d6\u2082\u2089\u2083)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!({Choose}\u222a{Get}\u222a{Set}\u222a\u03d6\u2082\u2088\u2082)","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"132([k@[k@[#246]#254]#256])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!({Choose}\u222a{Get}\u222a{Set}\u222a\u03d6\u2082\u2088\u2082)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!({Get}\u222a{Set}\u222a{Choose}\u222a\u03d6\u2082\u2089\u2083)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!({Set}\u222a{Choose,\nGet}\u222a\u03d6\u2082\u2089\u2082)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!({Set}\u222a{Choose,\nGet}\u222a\u03d6\u2082\u2089\u2081)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!({Choose, Get,\nSet}\u222a\u03d6\u2082\u2089\u2080)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!({Choose, Get,\nSet}\u222a\u03d6\u2082\u2088\u2089)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!({Choose, Get,\nSet}\u222a\u03d6\u2082\u2088\u2088)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!({Choose, Get,\nSet}\u222a\u03d6\u2082\u2088\u2087)","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"Name(Choose_0)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Const","format":"string","out":3,"value":"Name(Get_1)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Const","format":"string","out":4,"value":"Name(Set_2)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"Push","target":131,"args":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Copy","from":2,"to":1},
{"op":"Copy","from":3,"to":2},
{"op":"Copy","from":4,"to":3},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!({Choose, Get,\nSet}\u222a\u03d6\u2082\u2088\u2087)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!({Choose, Get,\nSet}\u222a\u03d6\u2082\u2088\u2088)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!({Choose, Get,\nSet}\u222a\u03d6\u2082\u2088\u2089)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!({Choose, Get,\nSet}\u222a\u03d6\u2082\u2089\u2080)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!({Set}\u222a{Choose,\nGet}\u222a\u03d6\u2082\u2089\u2081)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!({Set}\u222a{Choose,\nGet}\u222a\u03d6\u2082\u2089\u2082)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!({Get}\u222a{Set}\u222a{Choose}\u222a\u03d6\u2082\u2089\u2083)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!({Choose}\u222a{Get}\u222a{Set}\u222a\u03d6\u2082\u2088\u2082)","traced":{"any":[]}},
{"op":"Jump","target":148}]},
{"label":"133([k@[#246]#254])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int -\u03b4\u2082\u2085\u2088\u2192 int\u27e9!({Choose}\u222a{Get}\u222a{Set}\u222a\u03d6\u2082\u2088\u2082)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int -\u03b4\u2082\u2085\u2088\u2192 int\u27e9!({Get}\u222a{Set}\u222a{Choose}\u222a\u03d6\u2082\u2089\u2083)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int -\u03b4\u2082\u2085\u2088\u2192 int\u27e9!({Set}\u222a{Choose,\nGet}\u222a\u03d6\u2082\u2089\u2082)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int -\u03b4\u2082\u2085\u2088\u2192 int\u27e9!({Set}\u222a{Choose,\nGet}\u222a\u03d6\u2082\u2089\u2081)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int -\u03b4\u2082\u2085\u2088\u2192 int\u27e9!({Choose, Get,\nSet}\u222a\u03d6\u2082\u2089\u2080)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to (\u27e8int\u27e9 -{\u03d6\u2082\u2088\u2084}\u2192 \u27e8int\u27e9)!\u03d6\u2081\u2086\u2083","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to (\u27e8int\u27e9 -{\u03d6\u2083\u2084\u2088}\u2192 \u27e8int\u27e9)!(\u2205\u21aa\ufe0e\u03b4\u2081\u2084\u2084)","traced":{"any":[]}},
{"op":"Push","target":132,"args":{"any":[1]}},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8int\u27e9 -{\u03d6\u2083\u2084\u2088}\u2192 \u27e8int\u27e9)!(\u2205\u21aa\ufe0e\u03b4\u2081\u2084\u2084)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8int\u27e9 -{\u03d6\u2082\u2088\u2084}\u2192 \u27e8int\u27e9)!\u03d6\u2081\u2086\u2083","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int -\u03b4\u2082\u2085\u2088\u2192 int\u27e9!({Choose, Get,\nSet}\u222a\u03d6\u2082\u2089\u2080)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int -\u03b4\u2082\u2085\u2088\u2192 int\u27e9!({Set}\u222a{Choose,\nGet}\u222a\u03d6\u2082\u2089\u2081)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int -\u03b4\u2082\u2085\u2088\u2192 int\u27e9!({Set}\u222a{Choose,\nGet}\u222a\u03d6\u2082\u2089\u2082)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int -\u03b4\u2082\u2085\u2088\u2192 int\u27e9!({Get}\u222a{Set}\u222a{Choose}\u222a\u03d6\u2082\u2089\u2083)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int -\u03b4\u2082\u2085\u2088\u2192 int\u27e9!({Choose}\u222a{Get}\u222a{Set}\u222a\u03d6\u2082\u2088\u2082)","traced":{"any":[]}},
{"op":"Jump","target":90}]},
{"label":"134([#246])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Const","format":"int","out":3,"value":0},
{"op":"Const","format":"string","out":4,"value":"Name(Set_2)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"GetDynamic","out":3,"n":3,"label":4},
{"op":"Push","target":133,"args":{"any":[1,2]}},
{"op":"Invoke","receiver":3,"tag":"Set_2","args":{"any":[0]}}]},
{"label":"135([k@[k@[k@[k@[#220]#230]#232]#242]#244])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!({Choose}\u222a{Get}\u222a{Set}\u222a\u03d6\u2082\u2088\u2082)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!({Get}\u222a{Set}\u222a{Choose}\u222a\u03d6\u2082\u2089\u2083)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!({Set}\u222a{Choose,\nGet}\u222a\u03d6\u2082\u2089\u2082)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2081\u2086\u2087","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2081\u2083\u2085","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2082\u2087\u2086","traced":{"any":[]}},
{"op":"Push","target":134,"args":{"any":[1,2]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2082\u2087\u2086","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2081\u2083\u2085","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2081\u2086\u2087","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!({Set}\u222a{Choose,\nGet}\u222a\u03d6\u2082\u2089\u2082)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!({Get}\u222a{Set}\u222a{Choose}\u222a\u03d6\u2082\u2089\u2083)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!({Choose}\u222a{Get}\u222a{Set}\u222a\u03d6\u2082\u2088\u2082)","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"136([k@[k@[k@[#220]#230]#232]#242])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int -\u03b4\u2082\u2084\u2089\u2192 int\u27e9!({Choose}\u222a{Get}\u222a{Set}\u222a\u03d6\u2082\u2088\u2082)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int -\u03b4\u2082\u2084\u2089\u2192 int\u27e9!({Get}\u222a{Set}\u222a{Choose}\u222a\u03d6\u2082\u2089\u2083)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int -\u03b4\u2082\u2084\u2089\u2192 int\u27e9!({Set}\u222a{Choose,\nGet}\u222a\u03d6\u2082\u2089\u2082)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int -\u03b4\u2082\u2084\u2089\u2192 int\u27e9!\u03d6\u2081\u2086\u2087","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to (\u27e8int\u27e9 -{\u03d6\u2082\u2087\u2084}\u2192 \u27e8int\u27e9)!\u03d6\u2081\u2083\u2084","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to (\u27e8int\u27e9 -{\u03d6\u2083\u2084\u2087}\u2192 \u27e8int\u27e9)!(\u2205\u21aa\ufe0e\u03b4\u2081\u2081\u2085)","traced":{"any":[]}},
{"op":"Push","target":135,"args":{"any":[1,2]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8int\u27e9 -{\u03d6\u2083\u2084\u2087}\u2192 \u27e8int\u27e9)!(\u2205\u21aa\ufe0e\u03b4\u2081\u2081\u2085)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8int\u27e9 -{\u03d6\u2082\u2087\u2084}\u2192 \u27e8int\u27e9)!\u03d6\u2081\u2083\u2084","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int -\u03b4\u2082\u2084\u2089\u2192 int\u27e9!\u03d6\u2081\u2086\u2087","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int -\u03b4\u2082\u2084\u2089\u2192 int\u27e9!({Set}\u222a{Choose,\nGet}\u222a\u03d6\u2082\u2089\u2082)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int -\u03b4\u2082\u2084\u2089\u2192 int\u27e9!({Get}\u222a{Set}\u222a{Choose}\u222a\u03d6\u2082\u2089\u2083)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int -\u03b4\u2082\u2084\u2089\u2192 int\u27e9!({Choose}\u222a{Get}\u222a{Set}\u222a\u03d6\u2082\u2088\u2082)","traced":{"any":[]}},
{"op":"Jump","target":90}]},
{"label":"137([k@[k@[#220]#230]#232])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Const","format":"int","out":2,"value":0},
{"op":"Const","format":"string","out":3,"value":"Name(Get_1)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"GetDynamic","out":2,"n":2,"label":3},
{"op":"Construct","out":3,"type":"{\"op\": \"eff$Tuple\", \"elements\": []}","tag":"{\"op\": \"eff$Tuple\", \"elements\": []}","args":{"any":[]}},
{"op":"Push","target":136,"args":{"any":[0,1]}},
{"op":"Copy","from":3,"to":0},
{"op":"Invoke","receiver":2,"tag":"Get_1","args":{"any":[0]}}]},
{"label":"138([switch case for Bool(true)#268])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8tree\u27e9!(\u2205\u21aa\ufe0e\u03b4\u2088\u2087)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8tree\u27e9!(\u2205\u21aa\ufe0e\u03b4\u2088\u2087)","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"139([switch case for Bool(false)#270])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8tree\u27e9!(\u2205\u21aa\ufe0e\u03b4\u2088\u2087)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8tree\u27e9!(\u2205\u21aa\ufe0e\u03b4\u2088\u2087)","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"140([switch default case#271])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Const","format":"string","out":0,"value":"Undefined: non-exhaustive match"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"141([switch default case#269])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Copy","from":1,"to":0},
{"op":"Switch","arg":2,"values":[false],"targets":[139],"default":140}]},
{"label":"142([k@[#220]#230])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8tree\u27e9!({Choose}\u222a{Get}\u222a{Set}\u222a\u03d6\u2082\u2088\u2082)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8tree\u27e9!({Choose}\u222a\u03d6\u2082\u2086\u2087)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8tree\u27e9!\u03d6\u2081\u2080\u2088","traced":{"any":[]}},
{"op":"Push","target":137,"args":{"any":[3]}},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8tree\u27e9!\u03d6\u2081\u2080\u2088","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8tree\u27e9!({Choose}\u222a\u03d6\u2082\u2086\u2087)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8tree\u27e9!({Choose}\u222a{Get}\u222a{Set}\u222a\u03d6\u2082\u2088\u2082)","traced":{"any":[]}},
{"op":"Switch","arg":2,"values":[true],"targets":[138],"default":141}]},
{"label":"143([#220])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Const","format":"int","out":3,"value":0},
{"op":"Const","format":"string","out":4,"value":"Name(Choose_0)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"GetDynamic","out":3,"n":3,"label":4},
{"op":"Construct","out":4,"type":"{\"op\": \"eff$Tuple\", \"elements\": []}","tag":"{\"op\": \"eff$Tuple\", \"elements\": []}","args":{"any":[]}},
{"op":"Push","target":142,"args":{"any":[0,2,1]}},
{"op":"Copy","from":4,"to":0},
{"op":"Invoke","receiver":3,"tag":"Choose_0","args":{"any":[0]}}]},
{"label":"144([#216])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Match","type":"{\"op\": \"eff$Tuple\", \"elements\": [{\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Sum\\\", \\\"constructors\\\": [{\\\"name\\\": Leaf_2, \\\"arg\\\": {\\\"op\\\": \\\"Unit\\\"}}, {\\\"name\\\": Node_3, \\\"arg\\\": {\\\"op\\\": \\\"Data\\\", \\\"type_tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"constructors\\\": [{\\\"tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"fields\\\": [{\\\"op\\\": \\\"Top\\\"}, {\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}]}}]}\", \"constructors\": [{\"tag\": \"Leaf_2\", \"fields\": []}, {\"tag\": \"Node_3\", \"fields\": [{\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Top\\\"}, {\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"constructors\": [{\"tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Top\\\"}, {\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"fields\": [{\"op\": \"Top\"}, {\"op\": \"Int\"}, {\"op\": \"Top\"}]}]}]}]}, {\"op\": \"Int\"}, {\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Sum\\\", \\\"constructors\\\": [{\\\"name\\\": Leaf_2, \\\"arg\\\": {\\\"op\\\": \\\"Unit\\\"}}, {\\\"name\\\": Node_3, \\\"arg\\\": {\\\"op\\\": \\\"Data\\\", \\\"type_tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"constructors\\\": [{\\\"tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"fields\\\": [{\\\"op\\\": \\\"Top\\\"}, {\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}]}}]}\", \"constructors\": [{\"tag\": \"Leaf_2\", \"fields\": []}, {\"tag\": \"Node_3\", \"fields\": [{\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Top\\\"}, {\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"constructors\": [{\"tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Top\\\"}, {\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"fields\": [{\"op\": \"Top\"}, {\"op\": \"Int\"}, {\"op\": \"Top\"}]}]}]}]}]}","scrutinee":0,"clauses":[{"tag":"{\"op\": \"eff$Tuple\", \"elements\": [{\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Sum\\\", \\\"constructors\\\": [{\\\"name\\\": Leaf_2, \\\"arg\\\": {\\\"op\\\": \\\"Unit\\\"}}, {\\\"name\\\": Node_3, \\\"arg\\\": {\\\"op\\\": \\\"Data\\\", \\\"type_tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"constructors\\\": [{\\\"tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"fields\\\": [{\\\"op\\\": \\\"Top\\\"}, {\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}]}}]}\", \"constructors\": [{\"tag\": \"Leaf_2\", \"fields\": []}, {\"tag\": \"Node_3\", \"fields\": [{\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Top\\\"}, {\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"constructors\": [{\"tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Top\\\"}, {\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"fields\": [{\"op\": \"Top\"}, {\"op\": \"Int\"}, {\"op\": \"Top\"}]}]}]}]}, {\"op\": \"Int\"}, {\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Sum\\\", \\\"constructors\\\": [{\\\"name\\\": Leaf_2, \\\"arg\\\": {\\\"op\\\": \\\"Unit\\\"}}, {\\\"name\\\": Node_3, \\\"arg\\\": {\\\"op\\\": \\\"Data\\\", \\\"type_tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"constructors\\\": [{\\\"tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"fields\\\": [{\\\"op\\\": \\\"Top\\\"}, {\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}]}}]}\", \"constructors\": [{\"tag\": \"Leaf_2\", \"fields\": []}, {\"tag\": \"Node_3\", \"fields\": [{\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Top\\\"}, {\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"constructors\": [{\"tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Top\\\"}, {\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"fields\": [{\"op\": \"Top\"}, {\"op\": \"Int\"}, {\"op\": \"Top\"}]}]}]}]}]}","target":143,"args":{"any":[0,1,2]}}],"default":{"tag":"352d8e24-d9f1-4c07-bd8b-b80f2ab44273#[Missing Tag#610]","target":130,"args":{"any":[]}}}]},
{"label":"145([match_def@Name(explore_109)#212])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Match","type":"{\"op\": \"eff$Sum\", \"constructors\": [{\"name\": Node_3, \"arg\": {\"op\": \"Unit\"}}]}","scrutinee":0,"clauses":[{"tag":"Node_3","target":144,"args":{"any":[0]}}],"default":{"tag":"352d8e24-d9f1-4c07-bd8b-b80f2ab44273#[Missing Tag#611]","target":129,"args":{"any":[]}}}]},
{"label":"146([k@[match_Leaf_2@Name(explore_109)#274]#284])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!({Get}\u222a\u03d6\u2082\u2086\u2083)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!({Get}\u222a\u2205\u21aa\ufe0e\u03b4\u2082\u2083\u2086)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!(\u2205\u21aa\ufe0e{Get})","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!(\u2205\u21aa\ufe0e{Get})","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!({Get}\u222a\u2205\u21aa\ufe0e\u03b4\u2082\u2083\u2086)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!({Get}\u222a\u03d6\u2082\u2086\u2083)","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"147([match_Leaf_2@Name(explore_109)#274])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Const","format":"int","out":0,"value":0},
{"op":"Const","format":"string","out":1,"value":"Name(Get_1)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"GetDynamic","out":0,"n":0,"label":1},
{"op":"Construct","out":1,"type":"{\"op\": \"eff$Tuple\", \"elements\": []}","tag":"{\"op\": \"eff$Tuple\", \"elements\": []}","args":{"any":[]}},
{"op":"Push","target":146,"args":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Invoke","receiver":1,"tag":"Get_1","args":{"any":[0]}}]},
{"label":"148(Name(explore_109))",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!({Get}\u222a{Choose}\u222a{Set}\u222a\u03d6\u2082\u2088\u2083)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!({Get}\u222a{Choose}\u222a{Set}\u222a\u03d6\u2082\u2088\u2083)","traced":{"any":[]}},
{"op":"Match","type":"{\"op\": \"eff$Sum\", \"constructors\": [{\"name\": Leaf_2, \"arg\": {\"op\": \"Unit\"}}]}","scrutinee":0,"clauses":[{"tag":"Leaf_2","target":147,"args":{"any":[]}}],"default":{"tag":"352d8e24-d9f1-4c07-bd8b-b80f2ab44273#[Missing Tag#612]","target":145,"args":{"any":[]}}}]},
{"label":"149(Name(k_122))",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PushStack","arg":1},
{"op":"Return","args":{"any":[0]}}]},
{"label":"150([k@[mcore:[#64]#285]#287])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u00d7\nintlist\u27e9!\u03d6\u2082\u2080\u2086","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u00d7\nintlist\u27e9!\u03d6\u2083\u2080\u2085","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u00d7\nintlist\u27e9!\u03d6\u2083\u2080\u2085","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u00d7\nintlist\u27e9!\u03d6\u2082\u2080\u2086","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"151([mcore:[#64]#285])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: coerce to (\u27e8int\u27e9 -{\u03d6\u2083\u2080\u2083}\u2192 \u27e8int\u27e9\u00d7\n\u27e8intlist\u27e9)!\u03d6\u2082\u2080\u2085","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to (\u27e8int\u27e9 -{\u03d6\u2083\u2084\u2089}\u2192 \u27e8int\u00d7\nintlist\u27e9)!\u03d6\u2083\u2080\u2084","traced":{"any":[]}},
{"op":"Push","target":150,"args":{"any":[0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8int\u27e9 -{\u03d6\u2083\u2084\u2089}\u2192 \u27e8int\u00d7\nintlist\u27e9)!\u03d6\u2083\u2080\u2084","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8int\u27e9 -{\u03d6\u2083\u2080\u2083}\u2192 \u27e8int\u27e9\u00d7\n\u27e8intlist\u27e9)!\u03d6\u2082\u2080\u2085","traced":{"any":[]}},
{"op":"Jump","target":149}]},
{"label":"152(Name(k_126))",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PushStack","arg":1},
{"op":"Return","args":{"any":[0]}}]},
{"label":"153([k@[mcore:[#68]#288]#292])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u00d7\nintlist\u27e9!\u03d6\u2082\u2080\u2083","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u00d7\nintlist\u27e9!\u03d6\u2083\u2080\u2089","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u00d7\nintlist\u27e9!\u03d6\u2083\u2080\u2089","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u00d7\nintlist\u27e9!\u03d6\u2082\u2080\u2083","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"154([mcore:[#68]#288])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: coerce to (\u27e8int\u27e9 -{\u03d6\u2083\u2080\u2087}\u2192 \u27e8int\u27e9\u00d7\n\u27e8intlist\u27e9)!\u03d6\u2082\u2080\u2082","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to (\u27e8int\u27e9 -{\u03d6\u2083\u2085\u2080}\u2192 \u27e8int\u00d7\nintlist\u27e9)!\u03d6\u2083\u2080\u2088","traced":{"any":[]}},
{"op":"Construct","out":0,"type":"{\"op\": \"eff$Tuple\", \"elements\": []}","tag":"{\"op\": \"eff$Tuple\", \"elements\": []}","args":{"any":[]}},
{"op":"Push","target":153,"args":{"any":[2]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8int\u27e9 -{\u03d6\u2083\u2085\u2080}\u2192 \u27e8int\u00d7\nintlist\u27e9)!\u03d6\u2083\u2080\u2088","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8int\u27e9 -{\u03d6\u2083\u2080\u2087}\u2192 \u27e8int\u27e9\u00d7\n\u27e8intlist\u27e9)!\u03d6\u2082\u2080\u2082","traced":{"any":[]}},
{"op":"Jump","target":152}]},
{"label":"155(Name(k_128))",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PushStack","arg":1},
{"op":"Return","args":{"any":[0]}}]},
{"label":"156([#300])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Const","format":"string","out":0,"value":"Undefined: non-exhaustive match"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"157([match_def@[k@[k@[#303]#307]#309]#310])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Const","format":"string","out":0,"value":"Undefined: non-exhaustive match"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"158([k@[k@[#313]#315]#317])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: coerce to (\u27e8int\u27e9\u00d7\n\u27e8intlist\u27e9)!\u03d6\u2081\u2089\u2085","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u00d7\nintlist\u27e9!(\u2205\u21aa\ufe0e\u03b4\u2081\u2087\u2086)","traced":{"any":[]}},
{"op":"Construct","out":0,"type":"{\"op\": \"eff$Tuple\", \"elements\": [{\"op\": \"Int\"}, {\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Sum\\\", \\\"constructors\\\": [{\\\"name\\\": Nil_4, \\\"arg\\\": {\\\"op\\\": \\\"Unit\\\"}}, {\\\"name\\\": Cons_5, \\\"arg\\\": {\\\"op\\\": \\\"Data\\\", \\\"type_tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"constructors\\\": [{\\\"tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"fields\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}]}}]}\", \"constructors\": [{\"tag\": \"Nil_4\", \"fields\": []}, {\"tag\": \"Cons_5\", \"fields\": [{\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"constructors\": [{\"tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"fields\": [{\"op\": \"Int\"}, {\"op\": \"Top\"}]}]}]}]}]}","tag":"{\"op\": \"eff$Tuple\", \"elements\": [{\"op\": \"Int\"}, {\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Sum\\\", \\\"constructors\\\": [{\\\"name\\\": Nil_4, \\\"arg\\\": {\\\"op\\\": \\\"Unit\\\"}}, {\\\"name\\\": Cons_5, \\\"arg\\\": {\\\"op\\\": \\\"Data\\\", \\\"type_tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"constructors\\\": [{\\\"tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"fields\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}]}}]}\", \"constructors\": [{\"tag\": \"Nil_4\", \"fields\": []}, {\"tag\": \"Cons_5\", \"fields\": [{\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"constructors\": [{\"tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"fields\": [{\"op\": \"Int\"}, {\"op\": \"Top\"}]}]}]}]}]}","args":{"any":[1,0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u00d7\nintlist\u27e9!(\u2205\u21aa\ufe0e\u03b4\u2081\u2087\u2086)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8int\u27e9\u00d7\n\u27e8intlist\u27e9)!\u03d6\u2081\u2089\u2085","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"159([k@[#313]#315])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8intlist\u27e9!\u03d6\u2081\u2089\u2085","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8intlist\u27e9!\u03d6\u2081\u2089\u2083","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8intlist\u27e9!\u03d6\u2081\u2089\u2082","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8intlist\u27e9!\u03d6\u2083\u2081\u2089","traced":{"any":[]}},
{"op":"Push","target":158,"args":{"any":[2]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8intlist\u27e9!\u03d6\u2083\u2081\u2089","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8intlist\u27e9!\u03d6\u2081\u2089\u2082","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8intlist\u27e9!\u03d6\u2081\u2089\u2083","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8intlist\u27e9!\u03d6\u2081\u2089\u2085","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"160([#313])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"BGN: coerce to \u27e8intlist -\u03b4\u2082\u2088\u2082\u2192 intlist\u27e9!\u03d6\u2081\u2089\u2085","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8intlist -\u03b4\u2082\u2088\u2082\u2192 intlist\u27e9!\u03d6\u2081\u2089\u2083","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to (\u27e8intlist\u27e9 -{\u03d6\u2083\u2081\u2087}\u2192 \u27e8intlist\u27e9)!\u03d6\u2081\u2089\u2081","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to (\u27e8intlist\u27e9 -{\u03d6\u2083\u2085\u2083}\u2192 \u27e8intlist\u27e9)!\u03d6\u2083\u2081\u2088","traced":{"any":[]}},
{"op":"Push","target":159,"args":{"any":[2,1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8intlist\u27e9 -{\u03d6\u2083\u2085\u2083}\u2192 \u27e8intlist\u27e9)!\u03d6\u2083\u2081\u2088","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8intlist\u27e9 -{\u03d6\u2083\u2081\u2087}\u2192 \u27e8intlist\u27e9)!\u03d6\u2081\u2089\u2081","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8intlist -\u03b4\u2082\u2088\u2082\u2192 intlist\u27e9!\u03d6\u2081\u2089\u2083","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8intlist -\u03b4\u2082\u2088\u2082\u2192 intlist\u27e9!\u03d6\u2081\u2089\u2085","traced":{"any":[]}},
{"op":"Jump","target":101}]},
{"label":"161([k@[k@[#303]#307]#309])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: coerce to (\u27e8int\u27e9\u00d7\n\u27e8intlist\u27e9)!\u03d6\u2081\u2089\u2088","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u00d7\nintlist\u27e9!\u03d6\u2081\u2089\u2087","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u00d7\nintlist\u27e9!\u03d6\u2081\u2089\u2087","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8int\u27e9\u00d7\n\u27e8intlist\u27e9)!\u03d6\u2081\u2089\u2088","traced":{"any":[]}},
{"op":"Match","type":"{\"op\": \"eff$Tuple\", \"elements\": [{\"op\": \"Int\"}, {\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Sum\\\", \\\"constructors\\\": [{\\\"name\\\": Nil_4, \\\"arg\\\": {\\\"op\\\": \\\"Unit\\\"}}, {\\\"name\\\": Cons_5, \\\"arg\\\": {\\\"op\\\": \\\"Data\\\", \\\"type_tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"constructors\\\": [{\\\"tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"fields\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}]}}]}\", \"constructors\": [{\"tag\": \"Nil_4\", \"fields\": []}, {\"tag\": \"Cons_5\", \"fields\": [{\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"constructors\": [{\"tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"fields\": [{\"op\": \"Int\"}, {\"op\": \"Top\"}]}]}]}]}]}","scrutinee":1,"clauses":[{"tag":"{\"op\": \"eff$Tuple\", \"elements\": [{\"op\": \"Int\"}, {\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Sum\\\", \\\"constructors\\\": [{\\\"name\\\": Nil_4, \\\"arg\\\": {\\\"op\\\": \\\"Unit\\\"}}, {\\\"name\\\": Cons_5, \\\"arg\\\": {\\\"op\\\": \\\"Data\\\", \\\"type_tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"constructors\\\": [{\\\"tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"fields\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}]}}]}\", \"constructors\": [{\"tag\": \"Nil_4\", \"fields\": []}, {\"tag\": \"Cons_5\", \"fields\": [{\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"constructors\": [{\"tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"fields\": [{\"op\": \"Int\"}, {\"op\": \"Top\"}]}]}]}]}]}","target":160,"args":{"any":[1,2]}}],"default":{"tag":"352d8e24-d9f1-4c07-bd8b-b80f2ab44273#[Missing Tag#613]","target":157,"args":{"any":[]}}}]},
{"label":"162([k@[#303]#307])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u00d7\nintlist\u27e9!\u03d6\u2081\u2089\u2088","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to (\u27e8int\u27e9\u00d7\n\u27e8intlist\u27e9)!\u03d6\u2081\u2089\u2086","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u00d7\nintlist\u27e9!\u03d6\u2081\u2088\u2081","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u00d7\nintlist\u27e9!\u03d6\u2083\u2081\u2086","traced":{"any":[]}},
{"op":"Push","target":161,"args":{"any":[1]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u00d7\nintlist\u27e9!\u03d6\u2083\u2081\u2086","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u00d7\nintlist\u27e9!\u03d6\u2081\u2088\u2081","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8int\u27e9\u00d7\n\u27e8intlist\u27e9)!\u03d6\u2081\u2089\u2086","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u00d7\nintlist\u27e9!\u03d6\u2081\u2089\u2088","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"163([#303])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: coerce to \u27e8int -\u03b4\u2082\u2088\u2080\u2192 int\u00d7\nintlist\u27e9!\u03d6\u2081\u2089\u2088","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int -\u03b4\u2082\u2088\u2080\u2192 int\u00d7\nintlist\u27e9!\u03d6\u2081\u2089\u2086","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to (\u27e8int\u27e9 -{\u03d6\u2083\u2081\u2084}\u2192 \u27e8int\u27e9\u00d7\n\u27e8intlist\u27e9)!\u03d6\u2081\u2088\u2080","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to (\u27e8int\u27e9 -{\u03d6\u2083\u2085\u2082}\u2192 \u27e8int\u00d7\nintlist\u27e9)!\u03d6\u2083\u2081\u2085","traced":{"any":[]}},
{"op":"Const","format":"bool","out":3,"value":false},
{"op":"Push","target":162,"args":{"any":[2,1]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8int\u27e9 -{\u03d6\u2083\u2085\u2082}\u2192 \u27e8int\u00d7\nintlist\u27e9)!\u03d6\u2083\u2081\u2085","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8int\u27e9 -{\u03d6\u2083\u2081\u2084}\u2192 \u27e8int\u27e9\u00d7\n\u27e8intlist\u27e9)!\u03d6\u2081\u2088\u2080","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int -\u03b4\u2082\u2088\u2080\u2192 int\u00d7\nintlist\u27e9!\u03d6\u2081\u2089\u2086","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int -\u03b4\u2082\u2088\u2080\u2192 int\u00d7\nintlist\u27e9!\u03d6\u2081\u2089\u2088","traced":{"any":[]}},
{"op":"Jump","target":155}]},
{"label":"164([k@[k@[mcore:[#73]#293]#297]#299])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u00d7\nintlist\u27e9!\u03d6\u2082\u2080\u2080","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u00d7\nintlist\u27e9!\u03d6\u2082\u2080\u2080","traced":{"any":[]}},
{"op":"Match","type":"{\"op\": \"eff$Tuple\", \"elements\": [{\"op\": \"Int\"}, {\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Sum\\\", \\\"constructors\\\": [{\\\"name\\\": Nil_4, \\\"arg\\\": {\\\"op\\\": \\\"Unit\\\"}}, {\\\"name\\\": Cons_5, \\\"arg\\\": {\\\"op\\\": \\\"Data\\\", \\\"type_tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"constructors\\\": [{\\\"tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"fields\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}]}}]}\", \"constructors\": [{\"tag\": \"Nil_4\", \"fields\": []}, {\"tag\": \"Cons_5\", \"fields\": [{\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"constructors\": [{\"tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"fields\": [{\"op\": \"Int\"}, {\"op\": \"Top\"}]}]}]}]}]}","scrutinee":1,"clauses":[{"tag":"{\"op\": \"eff$Tuple\", \"elements\": [{\"op\": \"Int\"}, {\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Sum\\\", \\\"constructors\\\": [{\\\"name\\\": Nil_4, \\\"arg\\\": {\\\"op\\\": \\\"Unit\\\"}}, {\\\"name\\\": Cons_5, \\\"arg\\\": {\\\"op\\\": \\\"Data\\\", \\\"type_tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"constructors\\\": [{\\\"tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"fields\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}]}}]}\", \"constructors\": [{\"tag\": \"Nil_4\", \"fields\": []}, {\"tag\": \"Cons_5\", \"fields\": [{\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"constructors\": [{\"tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"fields\": [{\"op\": \"Int\"}, {\"op\": \"Top\"}]}]}]}]}]}","target":163,"args":{"any":[1,2]}}],"default":{"tag":"352d8e24-d9f1-4c07-bd8b-b80f2ab44273#[Missing Tag#614]","target":156,"args":{"any":[]}}}]},
{"label":"165([k@[mcore:[#73]#293]#297])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: coerce to (\u27e8int\u27e9\u00d7\n\u27e8intlist\u27e9)!\u03d6\u2081\u2089\u2089","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u00d7\nintlist\u27e9!\u03d6\u2081\u2087\u2089","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u00d7\nintlist\u27e9!\u03d6\u2083\u2081\u2083","traced":{"any":[]}},
{"op":"Push","target":164,"args":{"any":[1]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u00d7\nintlist\u27e9!\u03d6\u2083\u2081\u2083","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u00d7\nintlist\u27e9!\u03d6\u2081\u2087\u2089","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8int\u27e9\u00d7\n\u27e8intlist\u27e9)!\u03d6\u2081\u2089\u2089","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"166([mcore:[#73]#293])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int -\u03b4\u2082\u2087\u2088\u2192 int\u00d7\nintlist\u27e9!\u03d6\u2081\u2089\u2089","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to (\u27e8int\u27e9 -{\u03d6\u2083\u2081\u2081}\u2192 \u27e8int\u27e9\u00d7\n\u27e8intlist\u27e9)!\u03d6\u2081\u2087\u2088","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to (\u27e8int\u27e9 -{\u03d6\u2083\u2085\u2081}\u2192 \u27e8int\u00d7\nintlist\u27e9)!\u03d6\u2083\u2081\u2082","traced":{"any":[]}},
{"op":"Const","format":"bool","out":2,"value":true},
{"op":"Push","target":165,"args":{"any":[1,0]}},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8int\u27e9 -{\u03d6\u2083\u2085\u2081}\u2192 \u27e8int\u00d7\nintlist\u27e9)!\u03d6\u2083\u2081\u2082","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8int\u27e9 -{\u03d6\u2083\u2081\u2081}\u2192 \u27e8int\u27e9\u00d7\n\u27e8intlist\u27e9)!\u03d6\u2081\u2087\u2088","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int -\u03b4\u2082\u2087\u2088\u2192 int\u00d7\nintlist\u27e9!\u03d6\u2081\u2089\u2089","traced":{"any":[]}},
{"op":"Jump","target":155}]},
{"label":"167([mcore:[#78]#319])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Construct","out":2,"type":"{\"op\": \"eff$Sum\", \"constructors\": [{\"name\": Nil_4, \"arg\": {\"op\": \"Unit\"}}]}","tag":"Nil_4","args":{"any":[]}},
{"op":"Construct","out":1,"type":"{\"op\": \"eff$Tuple\", \"elements\": [{\"op\": \"Int\"}, {\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Sum\\\", \\\"constructors\\\": [{\\\"name\\\": Nil_4, \\\"arg\\\": {\\\"op\\\": \\\"Unit\\\"}}, {\\\"name\\\": Cons_5, \\\"arg\\\": {\\\"op\\\": \\\"Data\\\", \\\"type_tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"constructors\\\": [{\\\"tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"fields\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}]}}]}\", \"constructors\": [{\"tag\": \"Nil_4\", \"fields\": []}, {\"tag\": \"Cons_5\", \"fields\": [{\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"constructors\": [{\"tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"fields\": [{\"op\": \"Int\"}, {\"op\": \"Top\"}]}]}]}]}]}","tag":"{\"op\": \"eff$Tuple\", \"elements\": [{\"op\": \"Int\"}, {\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Sum\\\", \\\"constructors\\\": [{\\\"name\\\": Nil_4, \\\"arg\\\": {\\\"op\\\": \\\"Unit\\\"}}, {\\\"name\\\": Cons_5, \\\"arg\\\": {\\\"op\\\": \\\"Data\\\", \\\"type_tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"constructors\\\": [{\\\"tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"fields\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}]}}]}\", \"constructors\": [{\"tag\": \"Nil_4\", \"fields\": []}, {\"tag\": \"Cons_5\", \"fields\": [{\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"constructors\": [{\"tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"fields\": [{\"op\": \"Int\"}, {\"op\": \"Top\"}]}]}]}]}]}","args":{"any":[1,2]}},
{"op":"Construct","out":1,"type":"{\"op\": \"eff$Sum\", \"constructors\": [{\"name\": Cons_5, \"arg\": {\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Data\\\", \\\"type_tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Sum\\\\\\\", \\\\\\\"constructors\\\\\\\": [{\\\\\\\"name\\\\\\\": Nil_4, \\\\\\\"arg\\\\\\\": {\\\\\\\"op\\\\\\\": \\\\\\\"Unit\\\\\\\"}}, {\\\\\\\"name\\\\\\\": Cons_5, \\\\\\\"arg\\\\\\\": {\\\\\\\"op\\\\\\\": \\\\\\\"Data\\\\\\\", \\\\\\\"type_tag\\\\\\\": \\\\\\\"{\\\\\\\\\\\\\\\"op\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"eff$Tuple\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"elements\\\\\\\\\\\\\\\": [{\\\\\\\\\\\\\\\"op\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Int\\\\\\\\\\\\\\\"}, {\\\\\\\\\\\\\\\"op\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Top\\\\\\\\\\\\\\\"}]}\\\\\\\", \\\\\\\"constructors\\\\\\\": [{\\\\\\\"tag\\\\\\\": \\\\\\\"{\\\\\\\\\\\\\\\"op\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"eff$Tuple\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"elements\\\\\\\\\\\\\\\": [{\\\\\\\\\\\\\\\"op\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Int\\\\\\\\\\\\\\\"}, {\\\\\\\\\\\\\\\"op\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Top\\\\\\\\\\\\\\\"}]}\\\\\\\", \\\\\\\"fields\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}]}}]}\\\", \\\"constructors\\\": [{\\\"tag\\\": \\\"Nil_4\\\", \\\"fields\\\": []}, {\\\"tag\\\": \\\"Cons_5\\\", \\\"fields\\\": [{\\\"op\\\": \\\"Data\\\", \\\"type_tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"constructors\\\": [{\\\"tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"fields\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}]}]}]}]}\", \"constructors\": [{\"tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Data\\\", \\\"type_tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Sum\\\\\\\", \\\\\\\"constructors\\\\\\\": [{\\\\\\\"name\\\\\\\": Nil_4, \\\\\\\"arg\\\\\\\": {\\\\\\\"op\\\\\\\": \\\\\\\"Unit\\\\\\\"}}, {\\\\\\\"name\\\\\\\": Cons_5, \\\\\\\"arg\\\\\\\": {\\\\\\\"op\\\\\\\": \\\\\\\"Data\\\\\\\", \\\\\\\"type_tag\\\\\\\": \\\\\\\"{\\\\\\\\\\\\\\\"op\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"eff$Tuple\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"elements\\\\\\\\\\\\\\\": [{\\\\\\\\\\\\\\\"op\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Int\\\\\\\\\\\\\\\"}, {\\\\\\\\\\\\\\\"op\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Top\\\\\\\\\\\\\\\"}]}\\\\\\\", \\\\\\\"constructors\\\\\\\": [{\\\\\\\"tag\\\\\\\": \\\\\\\"{\\\\\\\\\\\\\\\"op\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"eff$Tuple\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"elements\\\\\\\\\\\\\\\": [{\\\\\\\\\\\\\\\"op\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Int\\\\\\\\\\\\\\\"}, {\\\\\\\\\\\\\\\"op\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"Top\\\\\\\\\\\\\\\"}]}\\\\\\\", \\\\\\\"fields\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}]}}]}\\\", \\\"constructors\\\": [{\\\"tag\\\": \\\"Nil_4\\\", \\\"fields\\\": []}, {\\\"tag\\\": \\\"Cons_5\\\", \\\"fields\\\": [{\\\"op\\\": \\\"Data\\\", \\\"type_tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"constructors\\\": [{\\\"tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"fields\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}]}]}]}]}\", \"fields\": [{\"op\": \"Int\"}, {\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Sum\\\", \\\"constructors\\\": [{\\\"name\\\": Nil_4, \\\"arg\\\": {\\\"op\\\": \\\"Unit\\\"}}, {\\\"name\\\": Cons_5, \\\"arg\\\": {\\\"op\\\": \\\"Data\\\", \\\"type_tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"constructors\\\": [{\\\"tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"fields\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}]}}]}\", \"constructors\": [{\"tag\": \"Nil_4\", \"fields\": []}, {\"tag\": \"Cons_5\", \"fields\": [{\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"constructors\": [{\"tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"fields\": [{\"op\": \"Int\"}, {\"op\": \"Top\"}]}]}]}]}]}]}}]}","tag":"Cons_5","args":{"any":[1]}},
{"op":"Construct","out":0,"type":"{\"op\": \"eff$Tuple\", \"elements\": [{\"op\": \"Int\"}, {\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Sum\\\", \\\"constructors\\\": [{\\\"name\\\": Nil_4, \\\"arg\\\": {\\\"op\\\": \\\"Unit\\\"}}, {\\\"name\\\": Cons_5, \\\"arg\\\": {\\\"op\\\": \\\"Data\\\", \\\"type_tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"constructors\\\": [{\\\"tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"fields\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}]}}]}\", \"constructors\": [{\"tag\": \"Nil_4\", \"fields\": []}, {\"tag\": \"Cons_5\", \"fields\": [{\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"constructors\": [{\"tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"fields\": [{\"op\": \"Int\"}, {\"op\": \"Top\"}]}]}]}]}]}","tag":"{\"op\": \"eff$Tuple\", \"elements\": [{\"op\": \"Int\"}, {\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Sum\\\", \\\"constructors\\\": [{\\\"name\\\": Nil_4, \\\"arg\\\": {\\\"op\\\": \\\"Unit\\\"}}, {\\\"name\\\": Cons_5, \\\"arg\\\": {\\\"op\\\": \\\"Data\\\", \\\"type_tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"constructors\\\": [{\\\"tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"fields\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}]}}]}\", \"constructors\": [{\"tag\": \"Nil_4\", \"fields\": []}, {\"tag\": \"Cons_5\", \"fields\": [{\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"constructors\": [{\"tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"fields\": [{\"op\": \"Int\"}, {\"op\": \"Top\"}]}]}]}]}]}","args":{"any":[0,1]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"168([#333])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Jump","target":167}]},
{"label":"169([return_clause@[mcore:[#79]#327]#330])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned to return clause","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: coerce to (\u27e8int\u27e9 -{\u03d6\u2082\u2089\u2088}\u2192 \u27e8int\u27e9\u00d7\n\u27e8intlist\u27e9)!\u03d6\u2082\u2080\u2088","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to (\u27e8int\u27e9 -{\u2205\u21aa\ufe0e\u03b4\u2082\u2086\u2088}\u2192 \u27e8int\u27e9\u00d7\n\u27e8intlist\u27e9)!(\u2205\u21aa\ufe0e\u03b4\u2081\u2085\u2085)","traced":{"any":[]}},
{"op":"New","out":0,"targets":[168],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8int\u27e9 -{\u2205\u21aa\ufe0e\u03b4\u2082\u2086\u2088}\u2192 \u27e8int\u27e9\u00d7\n\u27e8intlist\u27e9)!(\u2205\u21aa\ufe0e\u03b4\u2081\u2085\u2085)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8int\u27e9 -{\u03d6\u2082\u2089\u2088}\u2192 \u27e8int\u27e9\u00d7\n\u27e8intlist\u27e9)!\u03d6\u2082\u2080\u2088","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"170([#339])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Const","format":"string","out":0,"value":"Undefined: non-exhaustive match"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"171([method_apply@[#342]#345])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Jump","target":151}]},
{"label":"172([#342])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: coerce to (\u27e8int\u27e9 -{\u03d6\u2083\u2080\u2082}\u2192 \u27e8int\u27e9\u00d7\n\u27e8intlist\u27e9)!(\u2205\u21aa\ufe0e\u03b4\u2082\u2088\u2087)","traced":{"any":[]}},
{"op":"New","out":0,"targets":[171],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8int\u27e9 -{\u03d6\u2083\u2080\u2082}\u2192 \u27e8int\u27e9\u00d7\n\u27e8intlist\u27e9)!(\u2205\u21aa\ufe0e\u03b4\u2082\u2088\u2087)","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"173([method_Get_1@[mcore:[#79]#327]#336])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Const","format":"int","out":2,"value":0},
{"op":"ShiftDyn","out":1,"n":2,"label":1},
{"op":"Swap","a":0,"b":1},
{"op":"Match","type":"{\"op\": \"eff$Tuple\", \"elements\": []}","scrutinee":1,"clauses":[{"tag":"{\"op\": \"eff$Tuple\", \"elements\": []}","target":172,"args":{"any":[]}}],"default":{"tag":"352d8e24-d9f1-4c07-bd8b-b80f2ab44273#[Missing Tag#615]","target":170,"args":{"any":[]}}}]},
{"label":"174([return_clause@[mcore:[#79]#327]#352])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned to return clause","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"175([#359])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Jump","target":154}]},
{"label":"176([method_Set_2@[mcore:[#79]#327]#354])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Const","format":"int","out":2,"value":0},
{"op":"ShiftDyn","out":1,"n":2,"label":1},
{"op":"Debug","msg":"BGN: coerce to (\u27e8int\u27e9 -{\u03d6\u2083\u2080\u2086}\u2192 \u27e8int\u27e9\u00d7\n\u27e8intlist\u27e9)!(\u2205\u21aa\ufe0e\u03b4\u2082\u2088\u2087)","traced":{"any":[]}},
{"op":"New","out":0,"targets":[175],"args":{"any":[1,0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8int\u27e9 -{\u03d6\u2083\u2080\u2086}\u2192 \u27e8int\u27e9\u00d7\n\u27e8intlist\u27e9)!(\u2205\u21aa\ufe0e\u03b4\u2082\u2088\u2087)","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"177([return_clause@[mcore:[#79]#327]#366])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned to return clause","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"178([#371])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Const","format":"string","out":0,"value":"Undefined: non-exhaustive match"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"179([method_apply@[#374]#377])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Jump","target":166}]},
{"label":"180([#374])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: coerce to (\u27e8int\u27e9 -{\u03d6\u2083\u2081\u2080}\u2192 \u27e8int\u00d7\nintlist\u27e9)!(\u2205\u21aa\ufe0e\u03b4\u2082\u2088\u2087)","traced":{"any":[]}},
{"op":"New","out":0,"targets":[179],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8int\u27e9 -{\u03d6\u2083\u2081\u2080}\u2192 \u27e8int\u00d7\nintlist\u27e9)!(\u2205\u21aa\ufe0e\u03b4\u2082\u2088\u2087)","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"181([method_Choose_0@[mcore:[#79]#327]#368])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Const","format":"int","out":2,"value":0},
{"op":"ShiftDyn","out":1,"n":2,"label":1},
{"op":"Swap","a":0,"b":1},
{"op":"Match","type":"{\"op\": \"eff$Tuple\", \"elements\": []}","scrutinee":1,"clauses":[{"tag":"{\"op\": \"eff$Tuple\", \"elements\": []}","target":180,"args":{"any":[]}}],"default":{"tag":"352d8e24-d9f1-4c07-bd8b-b80f2ab44273#[Missing Tag#616]","target":178,"args":{"any":[]}}}]},
{"label":"182([return_clause@[mcore:[#79]#327]#384])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned to return clause","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"183([mcore:[#79]#327])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"PrimOp","name":"freshlabel","out":{"any":[1]},"in":{"any":[]}},
{"op":"NewStack","out":2,"region":3,"label":1,"target":169,"args":{"any":[]}},
{"op":"PushStack","arg":2},
{"op":"New","out":2,"targets":[173],"args":{"any":[1]},"tags":["Get_1"]},
{"op":"Const","format":"string","out":3,"value":"Name(Get_1)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"NewStackWithBinding","out":2,"region":3,"label":3,"target":174,"args":{"any":[]},"binding":2},
{"op":"PushStack","arg":2},
{"op":"New","out":2,"targets":[176],"args":{"any":[1]},"tags":["Set_2"]},
{"op":"Const","format":"string","out":3,"value":"Name(Set_2)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"NewStackWithBinding","out":2,"region":3,"label":3,"target":177,"args":{"any":[]},"binding":2},
{"op":"PushStack","arg":2},
{"op":"New","out":1,"targets":[181],"args":{"any":[1]},"tags":["Choose_0"]},
{"op":"Const","format":"string","out":2,"value":"Name(Choose_0)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"NewStackWithBinding","out":1,"region":2,"label":2,"target":182,"args":{"any":[]},"binding":1},
{"op":"PushStack","arg":1},
{"op":"Invoke","receiver":0,"tag":"apply","args":{"any":[]}}]},
{"label":"184([mcore:[#80]#385])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!({Choose, Get,\nSet}\u222a\u03d6\u2083\u2082\u2087)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!({Choose, Get,\nSet}\u222a\u03d6\u2083\u2082\u2086)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!({Choose, Get,\nSet}\u222a\u03d6\u2083\u2082\u2085)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Name(Choose_0)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Const","format":"string","out":1,"value":"Name(Get_1)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"Const","format":"string","out":2,"value":"Name(Set_2)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!({Choose, Get,\nSet}\u222a\u03d6\u2083\u2082\u2085)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!({Choose, Get,\nSet}\u222a\u03d6\u2083\u2082\u2086)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!({Choose, Get,\nSet}\u222a\u03d6\u2083\u2082\u2087)","traced":{"any":[]}},
{"op":"Jump","target":148}]},
{"label":"185([switch case for Bool(true)#402])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!(\u2205\u21aa\ufe0e\u03b4\u2081\u2089\u2081)","traced":{"any":[]}},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!(\u2205\u21aa\ufe0e\u03b4\u2081\u2089\u2081)","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"186([#406])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":1,"value":"Name(Choose_0)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"Const","format":"string","out":2,"value":"Name(Get_1)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Const","format":"string","out":3,"value":"Name(Set_2)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Jump","target":184}]},
{"label":"187([k@[k@[k@[k@[#430]#432]#443]#445]#449])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2082\u2084\u2088","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2082\u2084\u2087","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2082\u2084\u2085","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2082\u2084\u2083","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2083\u2084\u2082","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2083\u2084\u2082","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2082\u2084\u2083","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2082\u2084\u2085","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2082\u2084\u2087","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2082\u2084\u2088","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"188([k@[k@[k@[#430]#432]#443]#445])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2082\u2084\u2088","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2082\u2084\u2087","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2082\u2084\u2085","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2082\u2084\u2082","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2082\u2084\u2081","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2083\u2084\u2080","traced":{"any":[]}},
{"op":"Const","format":"int","out":2,"value":1},
{"op":"Push","target":187,"args":{"any":[1]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2083\u2084\u2080","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2082\u2084\u2081","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2082\u2084\u2082","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2082\u2084\u2085","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2082\u2084\u2087","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2082\u2084\u2088","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"189([k@[k@[#430]#432]#443])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int -\u03b4\u2082\u2089\u2085\u2192 int\u27e9!\u03d6\u2082\u2084\u2088","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int -\u03b4\u2082\u2089\u2085\u2192 int\u27e9!\u03d6\u2082\u2084\u2087","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int -\u03b4\u2082\u2089\u2085\u2192 int\u27e9!\u03d6\u2082\u2084\u2085","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int -\u03b4\u2082\u2089\u2085\u2192 int\u27e9!\u03d6\u2082\u2084\u2082","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to (\u27e8int\u27e9 -{\u03d6\u2083\u2083\u2088}\u2192 \u27e8int\u27e9)!\u03d6\u2082\u2084\u2080","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to (\u27e8int\u27e9 -{\u2205\u21aa\ufe0e\u03b4\u2082\u2089\u2084}\u2192 \u27e8int\u27e9)!(\u2205\u21aa\ufe0e\u03b4\u2082\u2082\u2082)","traced":{"any":[]}},
{"op":"Push","target":188,"args":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8int\u27e9 -{\u2205\u21aa\ufe0e\u03b4\u2082\u2089\u2084}\u2192 \u27e8int\u27e9)!(\u2205\u21aa\ufe0e\u03b4\u2082\u2082\u2082)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8int\u27e9 -{\u03d6\u2083\u2083\u2088}\u2192 \u27e8int\u27e9)!\u03d6\u2082\u2084\u2080","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int -\u03b4\u2082\u2089\u2085\u2192 int\u27e9!\u03d6\u2082\u2084\u2082","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int -\u03b4\u2082\u2089\u2085\u2192 int\u27e9!\u03d6\u2082\u2084\u2085","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int -\u03b4\u2082\u2089\u2085\u2192 int\u27e9!\u03d6\u2082\u2084\u2087","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int -\u03b4\u2082\u2089\u2085\u2192 int\u27e9!\u03d6\u2082\u2084\u2088","traced":{"any":[]}},
{"op":"Jump","target":66}]},
{"label":"190([k@[#430]#432])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int -\u03b4\u2082\u2089\u2087\u2192 int\u27e9!\u03d6\u2082\u2084\u2088","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int -\u03b4\u2082\u2089\u2087\u2192 int\u27e9!\u03d6\u2082\u2084\u2087","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to (\u27e8int\u27e9 -{\u03d6\u2083\u2084\u2081}\u2192 \u27e8int\u27e9)!\u03d6\u2082\u2084\u2084","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to (\u27e8int\u27e9 -{\u03d6\u2083\u2085\u2088}\u2192 \u27e8int\u27e9)!\u03d6\u2083\u2083\u2087","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(Choose_0)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Const","format":"string","out":4,"value":"Name(Get_1)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"Const","format":"string","out":5,"value":"Name(Set_2)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[5]},"in":{"any":[5]}},
{"op":"Push","target":189,"args":{"any":[1]}},
{"op":"Copy","from":3,"to":1},
{"op":"Copy","from":5,"to":3},
{"op":"Swap","a":2,"b":4},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8int\u27e9 -{\u03d6\u2083\u2085\u2088}\u2192 \u27e8int\u27e9)!\u03d6\u2083\u2083\u2087","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8int\u27e9 -{\u03d6\u2083\u2084\u2081}\u2192 \u27e8int\u27e9)!\u03d6\u2082\u2084\u2084","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int -\u03b4\u2082\u2089\u2087\u2192 int\u27e9!\u03d6\u2082\u2084\u2087","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int -\u03b4\u2082\u2089\u2087\u2192 int\u27e9!\u03d6\u2082\u2084\u2088","traced":{"any":[]}},
{"op":"Jump","target":203}]},
{"label":"191([match_def@[#430]#450])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Const","format":"string","out":0,"value":"Undefined: non-exhaustive match"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"192([k@[#453]#457])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2082\u2083\u2087","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2082\u2083\u2086","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2083\u2083\u2086","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2083\u2083\u2086","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2082\u2083\u2086","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2082\u2083\u2087","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"193([#453])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"BGN: coerce to \u27e8intlist -\u03b4\u2082\u2089\u2083\u2192 int\u27e9!\u03d6\u2082\u2083\u2087","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to (\u27e8intlist\u27e9 -{\u03d6\u2083\u2083\u2084}\u2192 \u27e8int\u27e9)!\u03d6\u2082\u2083\u2085","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to (\u27e8intlist\u27e9 -{\u03d6\u2083\u2085\u2087}\u2192 \u27e8int\u27e9)!\u03d6\u2083\u2083\u2085","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Push","target":192,"args":{"any":[1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8intlist\u27e9 -{\u03d6\u2083\u2085\u2087}\u2192 \u27e8int\u27e9)!\u03d6\u2083\u2083\u2085","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8intlist\u27e9 -{\u03d6\u2083\u2083\u2084}\u2192 \u27e8int\u27e9)!\u03d6\u2082\u2083\u2085","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8intlist -\u03b4\u2082\u2089\u2083\u2192 int\u27e9!\u03d6\u2082\u2083\u2087","traced":{"any":[]}},
{"op":"Jump","target":128}]},
{"label":"194([#430])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2082\u2084\u2088","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2082\u2084\u2086","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2082\u2083\u2089","traced":{"any":[]}},
{"op":"Push","target":190,"args":{"any":[1,2]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2082\u2083\u2089","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2082\u2084\u2086","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2082\u2084\u2088","traced":{"any":[]}},
{"op":"Match","type":"{\"op\": \"eff$Tuple\", \"elements\": [{\"op\": \"Int\"}, {\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Sum\\\", \\\"constructors\\\": [{\\\"name\\\": Nil_4, \\\"arg\\\": {\\\"op\\\": \\\"Unit\\\"}}, {\\\"name\\\": Cons_5, \\\"arg\\\": {\\\"op\\\": \\\"Data\\\", \\\"type_tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"constructors\\\": [{\\\"tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"fields\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}]}}]}\", \"constructors\": [{\"tag\": \"Nil_4\", \"fields\": []}, {\"tag\": \"Cons_5\", \"fields\": [{\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"constructors\": [{\"tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"fields\": [{\"op\": \"Int\"}, {\"op\": \"Top\"}]}]}]}]}]}","scrutinee":0,"clauses":[{"tag":"{\"op\": \"eff$Tuple\", \"elements\": [{\"op\": \"Int\"}, {\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Sum\\\", \\\"constructors\\\": [{\\\"name\\\": Nil_4, \\\"arg\\\": {\\\"op\\\": \\\"Unit\\\"}}, {\\\"name\\\": Cons_5, \\\"arg\\\": {\\\"op\\\": \\\"Data\\\", \\\"type_tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"constructors\\\": [{\\\"tag\\\": \\\"{\\\\\\\"op\\\\\\\": \\\\\\\"eff$Tuple\\\\\\\", \\\\\\\"elements\\\\\\\": [{\\\\\\\"op\\\\\\\": \\\\\\\"Int\\\\\\\"}, {\\\\\\\"op\\\\\\\": \\\\\\\"Top\\\\\\\"}]}\\\", \\\"fields\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}]}}]}\", \"constructors\": [{\"tag\": \"Nil_4\", \"fields\": []}, {\"tag\": \"Cons_5\", \"fields\": [{\"op\": \"Data\", \"type_tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"constructors\": [{\"tag\": \"{\\\"op\\\": \\\"eff$Tuple\\\", \\\"elements\\\": [{\\\"op\\\": \\\"Int\\\"}, {\\\"op\\\": \\\"Top\\\"}]}\", \"fields\": [{\"op\": \"Int\"}, {\"op\": \"Top\"}]}]}]}]}]}","target":193,"args":{"any":[0,1]}}],"default":{"tag":"352d8e24-d9f1-4c07-bd8b-b80f2ab44273#[Missing Tag#617]","target":191,"args":{"any":[]}}}]},
{"label":"195([k@[switch case for Bool(false)#404]#428])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u00d7\nintlist\u27e9!\u03d6\u2082\u2084\u2088","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u00d7\nintlist\u27e9!\u03d6\u2082\u2084\u2086","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to (\u27e8int\u27e9\u00d7\n\u27e8intlist\u27e9)!\u03d6\u2082\u2083\u2088","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u00d7\nintlist\u27e9!\u03d6\u2082\u2081\u2083","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u00d7\nintlist\u27e9!\u03d6\u2083\u2083\u2083","traced":{"any":[]}},
{"op":"Push","target":194,"args":{"any":[1,2]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u00d7\nintlist\u27e9!\u03d6\u2083\u2083\u2083","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u00d7\nintlist\u27e9!\u03d6\u2082\u2081\u2083","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8int\u27e9\u00d7\n\u27e8intlist\u27e9)!\u03d6\u2082\u2083\u2088","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u00d7\nintlist\u27e9!\u03d6\u2082\u2084\u2086","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u00d7\nintlist\u27e9!\u03d6\u2082\u2084\u2088","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"196([switch case for Bool(false)#404])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int -\u03b4\u2082\u2089\u2081\u2192 int\u00d7\nintlist\u27e9!\u03d6\u2082\u2084\u2088","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int -\u03b4\u2082\u2089\u2081\u2192 int\u00d7\nintlist\u27e9!\u03d6\u2082\u2084\u2086","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int -\u03b4\u2082\u2089\u2081\u2192 int\u00d7\nintlist\u27e9!\u03d6\u2082\u2083\u2088","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to (\u27e8int\u27e9 -{\u03d6\u2083\u2083\u2081}\u2192 \u27e8int\u27e9\u00d7\n\u27e8intlist\u27e9)!\u03d6\u2082\u2081\u2082","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to (\u27e8int\u27e9 -{\u03d6\u2083\u2085\u2086}\u2192 \u27e8int\u00d7\nintlist\u27e9)!\u03d6\u2083\u2083\u2082","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to (\u27e8int\u27e9 -{\u03d6\u2083\u2085\u2084}\u2192 \u27e8int\u27e9\u00d7\n\u27e8intlist\u27e9)!\u03d6\u2083\u2082\u2080","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to (\u27e8int\u27e9 -{\u03d6\u2083\u2082\u2083}\u2192 \u27e8int\u27e9\u00d7\n\u27e8intlist\u27e9)!\u03d6\u2083\u2082\u2082","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to (\u27e8int\u27e9 -{\u03d6\u2083\u2080\u2080}\u2192 \u27e8int\u27e9\u00d7\n\u27e8intlist\u27e9)!\u03d6\u2082\u2089\u2086","traced":{"any":[]}},
{"op":"New","out":3,"targets":[186],"args":{"any":[1]},"tags":["apply"]},
{"op":"Const","format":"string","out":4,"value":"Name(Choose_0)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"Const","format":"string","out":5,"value":"Name(Get_1)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[5]},"in":{"any":[5]}},
{"op":"Const","format":"string","out":6,"value":"Name(Set_2)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[6]},"in":{"any":[6]}},
{"op":"Push","target":195,"args":{"any":[0,1,2]}},
{"op":"Copy","from":5,"to":2},
{"op":"Copy","from":4,"to":1},
{"op":"Copy","from":3,"to":0},
{"op":"Copy","from":6,"to":3},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8int\u27e9 -{\u03d6\u2083\u2080\u2080}\u2192 \u27e8int\u27e9\u00d7\n\u27e8intlist\u27e9)!\u03d6\u2082\u2089\u2086","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8int\u27e9 -{\u03d6\u2083\u2082\u2083}\u2192 \u27e8int\u27e9\u00d7\n\u27e8intlist\u27e9)!\u03d6\u2083\u2082\u2082","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8int\u27e9 -{\u03d6\u2083\u2085\u2084}\u2192 \u27e8int\u27e9\u00d7\n\u27e8intlist\u27e9)!\u03d6\u2083\u2082\u2080","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8int\u27e9 -{\u03d6\u2083\u2085\u2086}\u2192 \u27e8int\u00d7\nintlist\u27e9)!\u03d6\u2083\u2083\u2082","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8int\u27e9 -{\u03d6\u2083\u2083\u2081}\u2192 \u27e8int\u27e9\u00d7\n\u27e8intlist\u27e9)!\u03d6\u2082\u2081\u2082","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int -\u03b4\u2082\u2089\u2081\u2192 int\u00d7\nintlist\u27e9!\u03d6\u2082\u2083\u2088","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int -\u03b4\u2082\u2089\u2081\u2192 int\u00d7\nintlist\u27e9!\u03d6\u2082\u2084\u2086","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int -\u03b4\u2082\u2089\u2081\u2192 int\u00d7\nintlist\u27e9!\u03d6\u2082\u2084\u2088","traced":{"any":[]}},
{"op":"Jump","target":183}]},
{"label":"197([switch default case#458])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"string","out":0,"value":"Undefined: non-exhaustive match"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"198([switch default case#403])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Switch","arg":3,"values":[false],"targets":[196],"default":197}]},
{"label":"199([k@[k@[mcore:[#83]#395]#397]#401])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2082\u2085\u2081","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2082\u2085\u2081","traced":{"any":[]}},
{"op":"Switch","arg":0,"values":[true],"targets":[185],"default":198}]},
{"label":"200([k@[mcore:[#83]#395]#397])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8bool\u27e9!\u03d6\u2082\u2085\u2080","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8bool\u27e9!\u03d6\u2082\u2081\u2081","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8bool\u27e9!\u03d6\u2083\u2083\u2080","traced":{"any":[]}},
{"op":"Const","format":"int","out":4,"value":0},
{"op":"Push","target":199,"args":{"any":[1,2,3]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":4,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8bool\u27e9!\u03d6\u2083\u2083\u2080","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8bool\u27e9!\u03d6\u2082\u2081\u2081","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8bool\u27e9!\u03d6\u2082\u2085\u2080","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"201([mcore:[#83]#395])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4,5]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int -\u03b4\u2082\u2088\u2089\u2192 bool\u27e9!\u03d6\u2082\u2085\u2080","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to (\u27e8int\u27e9 -{\u03d6\u2083\u2082\u2088}\u2192 \u27e8bool\u27e9)!\u03d6\u2082\u2081\u2080","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to (\u27e8int\u27e9 -{\u2205\u21aa\ufe0e\u03b4\u2082\u2088\u2088}\u2192 \u27e8bool\u27e9)!(\u2205\u21aa\ufe0e\u03b4\u2081\u2088\u2088)","traced":{"any":[]}},
{"op":"Push","target":200,"args":{"any":[0,4,5]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8int\u27e9 -{\u2205\u21aa\ufe0e\u03b4\u2082\u2088\u2088}\u2192 \u27e8bool\u27e9)!(\u2205\u21aa\ufe0e\u03b4\u2081\u2088\u2088)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8int\u27e9 -{\u03d6\u2083\u2082\u2088}\u2192 \u27e8bool\u27e9)!\u03d6\u2082\u2081\u2080","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int -\u03b4\u2082\u2088\u2089\u2192 bool\u27e9!\u03d6\u2082\u2085\u2080","traced":{"any":[]}},
{"op":"Jump","target":2}]},
{"label":"202([method_apply@Name(loop_225)#463])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(Choose_0)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Const","format":"string","out":4,"value":"Name(Get_1)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"Const","format":"string","out":5,"value":"Name(Set_2)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[5]},"in":{"any":[5]}},
{"op":"Swap","a":3,"b":5},
{"op":"Swap","a":1,"b":5},
{"op":"Swap","a":4,"b":5},
{"op":"Swap","a":2,"b":5},
{"op":"Jump","target":201}]},
{"label":"203(Name(loop_225))",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4]}},
{"op":"Debug","msg":"BGN: coerce to (\u27e8int\u27e9 -{\u03d6\u2083\u2084\u2083}\u2192 \u27e8int\u27e9)!(\u2205\u21aa\ufe0e\u03b4\u2081\u2088\u2087)","traced":{"any":[]}},
{"op":"New","out":0,"targets":[202],"args":{"any":[4,0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8int\u27e9 -{\u03d6\u2083\u2084\u2083}\u2192 \u27e8int\u27e9)!(\u2205\u21aa\ufe0e\u03b4\u2081\u2088\u2087)","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"204([k@[k@Name(run_106)#475]#488])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2082\u2085\u2084","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2083\u2084\u2086","traced":{"any":[]}},
{"op":"Const","format":"int","out":1,"value":10},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2083\u2084\u2086","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2082\u2085\u2084","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"205([k@Name(run_106)#475])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2082\u2086\u2080","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2082\u2085\u2088","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8int\u27e9!\u03d6\u2082\u2085\u2086","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to (\u27e8int\u27e9 -{\u03d6\u2083\u2084\u2084}\u2192 \u27e8int\u27e9)!\u03d6\u2082\u2085\u2083","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to (\u27e8int\u27e9 -{\u03d6\u2083\u2086\u2080}\u2192 \u27e8int\u27e9)!\u03d6\u2083\u2084\u2085","traced":{"any":[]}},
{"op":"Const","format":"int","out":1,"value":0},
{"op":"Const","format":"string","out":2,"value":"Name(Choose_0)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Const","format":"string","out":3,"value":"Name(Get_1)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Const","format":"string","out":4,"value":"Name(Set_2)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"Push","target":204,"args":{"any":[]}},
{"op":"Swap","a":3,"b":4},
{"op":"Swap","a":2,"b":4},
{"op":"Swap","a":1,"b":4},
{"op":"Swap","a":0,"b":4},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8int\u27e9 -{\u03d6\u2083\u2086\u2080}\u2192 \u27e8int\u27e9)!\u03d6\u2083\u2084\u2085","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to (\u27e8int\u27e9 -{\u03d6\u2083\u2084\u2084}\u2192 \u27e8int\u27e9)!\u03d6\u2082\u2085\u2083","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2082\u2085\u2086","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2082\u2085\u2088","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8int\u27e9!\u03d6\u2082\u2086\u2080","traced":{"any":[]}},
{"op":"Jump","target":203}]},
{"label":"206(Name(run_106))",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8tree\u27e9!\u03d6\u2082\u2085\u2089","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: coerce to \u27e8tree\u27e9!\u03d6\u2082\u2086\u2081","traced":{"any":[]}},
{"op":"Push","target":205,"args":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8tree\u27e9!\u03d6\u2082\u2086\u2081","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: coerce to \u27e8tree\u27e9!\u03d6\u2082\u2085\u2089","traced":{"any":[]}},
{"op":"Jump","target":107}]},
{"label":"207([mcore:[static initializers#151]#491])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Const","format":"string","out":1,"value":"Name(Print_42)"},
{"op":"PrimOp","name":"freshlabel","out":{"any":[2]},"in":{"any":[]}},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[1]},"in":{"any":[1,2]}},
{"op":"Const","format":"string","out":1,"value":"Print"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[1]},"in":{"any":[1,2]}},
{"op":"Const","format":"string","out":1,"value":"Name(Read_43)"},
{"op":"PrimOp","name":"freshlabel","out":{"any":[2]},"in":{"any":[]}},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[1]},"in":{"any":[1,2]}},
{"op":"Const","format":"string","out":1,"value":"Read"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[1]},"in":{"any":[1,2]}},
{"op":"Const","format":"string","out":1,"value":"Name(Raise_44)"},
{"op":"PrimOp","name":"freshlabel","out":{"any":[2]},"in":{"any":[]}},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[1]},"in":{"any":[1,2]}},
{"op":"Const","format":"string","out":1,"value":"Raise"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[1]},"in":{"any":[1,2]}},
{"op":"Const","format":"string","out":1,"value":"Name(RandomInt_45)"},
{"op":"PrimOp","name":"freshlabel","out":{"any":[2]},"in":{"any":[]}},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[1]},"in":{"any":[1,2]}},
{"op":"Const","format":"string","out":1,"value":"RandomInt"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[1]},"in":{"any":[1,2]}},
{"op":"Const","format":"string","out":1,"value":"Name(RandomFloat_46)"},
{"op":"PrimOp","name":"freshlabel","out":{"any":[2]},"in":{"any":[]}},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[1]},"in":{"any":[1,2]}},
{"op":"Const","format":"string","out":1,"value":"RandomFloat"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[1]},"in":{"any":[1,2]}},
{"op":"Const","format":"string","out":1,"value":"Name(Write_47)"},
{"op":"PrimOp","name":"freshlabel","out":{"any":[2]},"in":{"any":[]}},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[1]},"in":{"any":[1,2]}},
{"op":"Const","format":"string","out":1,"value":"Write"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[1]},"in":{"any":[1,2]}},
{"op":"Const","format":"string","out":1,"value":"Name(Choose_0)"},
{"op":"PrimOp","name":"freshlabel","out":{"any":[2]},"in":{"any":[]}},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[1]},"in":{"any":[1,2]}},
{"op":"Const","format":"string","out":1,"value":"Choose"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[1]},"in":{"any":[1,2]}},
{"op":"Const","format":"string","out":1,"value":"Name(Get_1)"},
{"op":"PrimOp","name":"freshlabel","out":{"any":[2]},"in":{"any":[]}},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[1]},"in":{"any":[1,2]}},
{"op":"Const","format":"string","out":1,"value":"Get"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[1]},"in":{"any":[1,2]}},
{"op":"Const","format":"string","out":1,"value":"Name(Set_2)"},
{"op":"PrimOp","name":"freshlabel","out":{"any":[2]},"in":{"any":[]}},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[1]},"in":{"any":[1,2]}},
{"op":"Const","format":"string","out":1,"value":"Set"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[1]},"in":{"any":[1,2]}},
{"op":"Const","format":"string","out":1,"value":"ThisLib_e55cc67a-2ba7-41e5-bad6-e46c87b57fcc"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[1]},"in":{"any":[1,0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"208([k@[k@[main entrypoint#2]#553]#560])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"209([#562])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned to return clause","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"210([#564])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"random(): Double","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"211([#570])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned to return clause","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"212([#572])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"random(): Int","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"213([#578])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned to return clause","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"214([#580])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"215([#586])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned to return clause","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"216([#588])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"readLn(): String","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"217([#594])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned to return clause","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"218([#596])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"print(String): Unit","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"219([#602])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned to return clause","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"220([k@[main entrypoint#2]#553])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"New","out":0,"targets":[],"args":{"any":[]},"tags":[]},
{"op":"Const","format":"string","out":1,"value":"Name(Write_47)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"NewStackWithBinding","out":0,"region":1,"label":1,"target":209,"args":{"any":[]},"binding":0},
{"op":"PushStack","arg":0},
{"op":"New","out":0,"targets":[210],"args":{"any":[]},"tags":["RandomFloat_46"]},
{"op":"Const","format":"string","out":1,"value":"Name(RandomFloat_46)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"NewStackWithBinding","out":0,"region":1,"label":1,"target":211,"args":{"any":[]},"binding":0},
{"op":"PushStack","arg":0},
{"op":"New","out":0,"targets":[212],"args":{"any":[]},"tags":["RandomInt_45"]},
{"op":"Const","format":"string","out":1,"value":"Name(RandomInt_45)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"NewStackWithBinding","out":0,"region":1,"label":1,"target":213,"args":{"any":[]},"binding":0},
{"op":"PushStack","arg":0},
{"op":"New","out":0,"targets":[214],"args":{"any":[]},"tags":["Raise_44"]},
{"op":"Const","format":"string","out":1,"value":"Name(Raise_44)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"NewStackWithBinding","out":0,"region":1,"label":1,"target":215,"args":{"any":[]},"binding":0},
{"op":"PushStack","arg":0},
{"op":"New","out":0,"targets":[216],"args":{"any":[]},"tags":["Read_43"]},
{"op":"Const","format":"string","out":1,"value":"Name(Read_43)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"NewStackWithBinding","out":0,"region":1,"label":1,"target":217,"args":{"any":[]},"binding":0},
{"op":"PushStack","arg":0},
{"op":"New","out":0,"targets":[218],"args":{"any":[]},"tags":["Print_42"]},
{"op":"Const","format":"string","out":1,"value":"Name(Print_42)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"NewStackWithBinding","out":0,"region":1,"label":1,"target":219,"args":{"any":[]},"binding":0},
{"op":"PushStack","arg":0},
{"op":"Construct","out":0,"type":"Unit","tag":"unit","args":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"221([main entrypoint#2])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[]}},
{"op":"Copy","from":-1,"to":0},
{"op":"Push","target":220,"args":{"any":[]}},
{"op":"Jump","target":207}]}],
"symbols":[{"name":"_var_0 (* = *)","position":2},
{"name":"_var_1 (* >= *)","position":5},
{"name":"_var_2 (* > *)","position":8},
{"name":"_var_3 (* <= *)","position":11},
{"name":"_var_4 (* < *)","position":14},
{"name":"_var_5 (* < *)","position":17},
{"name":"_var_6 (* <> *)","position":20},
{"name":"acos","position":21},
{"name":"_var_8 (* +. *)","position":24},
{"name":"asin","position":25},
{"name":"atan","position":26},
{"name":"cos","position":27},
{"name":"_var_12 (* /. *)","position":30},
{"name":"exp","position":31},
{"name":"expm1","position":32},
{"name":"infinity","position":33},
{"name":"log","position":34},
{"name":"log1p","position":35},
{"name":"_var_18 (* *. *)","position":38},
{"name":"nan","position":39},
{"name":"_var_20 (* ~-. *)","position":40},
{"name":"neg_infinity","position":41},
{"name":"float_of_int","position":42},
{"name":"sin","position":43},
{"name":"sqrt","position":44},
{"name":"_var_25 (* -. *)","position":47},
{"name":"tan","position":48},
{"name":"_var_27 (* + *)","position":51},
{"name":"_var_28 (* / *)","position":54},
{"name":"mod","position":57},
{"name":"_var_30 (* * *)","position":60},
{"name":"_var_31 (* ~- *)","position":61},
{"name":"abs","position":62},
{"name":"_var_33 (* ** *)","position":63},
{"name":"_var_34 (* - *)","position":66},
{"name":"int_of_float","position":67},
{"name":"_var_36 (* ^ *)","position":70},
{"name":"string_length","position":71},
{"name":"string_of_float","position":72},
{"name":"string_of_int","position":73},
{"name":"sub","position":78},
{"name":"to_string","position":79},
{"name":"operator","position":90},
{"name":"_var_59 (* @ *)","position":101},
{"name":"make","position":107},
{"name":"max","position":116},
{"name":"maxl","position":128},
{"name":"run","position":206},
{"name":"$static-init","position":207},
{"name":"$entrypoint","position":221}],
"frameSize":{"regs_any":7}}