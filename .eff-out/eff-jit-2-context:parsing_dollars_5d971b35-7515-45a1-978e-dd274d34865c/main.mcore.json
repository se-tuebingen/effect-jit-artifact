{"definitions": [{"name": {"id": "=_0", "type": {"op": "Function", "params": [{"op": "Top"}], "return": {"op": "Function", "params": [{"op": "Top"}], "return": {"op": "Bool"}, "purity": "Pure"}, "purity": "Pure"}}, "value": {"op": "Abs", "params": [{"id": "arg0_2", "type": {"op": "Top"}}], "body": {"op": "Abs", "params": [{"id": "arg1_3", "type": {"op": "Top"}}], "body": {"op": "Primitive", "name": "equals(Any, Any): Bool", "args": [{"op": "Var", "id": "arg0_2", "type": {"op": "Top"}}, {"op": "Var", "id": "arg1_3", "type": {"op": "Top"}}], "returns": [{"id": "ret_4", "type": {"op": "Bool"}}], "rest": {"op": "Var", "id": "ret_4", "type": {"op": "Bool"}}}}}, "export_as": ["_var_0 (* = *)"]}, {"name": {"id": ">=_1", "type": {"op": "Function", "params": [{"op": "Top"}], "return": {"op": "Function", "params": [{"op": "Top"}], "return": {"op": "Bool"}, "purity": "Pure"}, "purity": "Pure"}}, "value": {"op": "Abs", "params": [{"id": "arg0_5", "type": {"op": "Top"}}], "body": {"op": "Abs", "params": [{"id": "arg1_6", "type": {"op": "Top"}}], "body": {"op": "Primitive", "name": "infixGte(Any, Any): Bool", "args": [{"op": "Var", "id": "arg0_5", "type": {"op": "Top"}}, {"op": "Var", "id": "arg1_6", "type": {"op": "Top"}}], "returns": [{"id": "ret_7", "type": {"op": "Bool"}}], "rest": {"op": "Var", "id": "ret_7", "type": {"op": "Bool"}}}}}, "export_as": ["_var_1 (* >= *)"]}, {"name": {"id": ">_2", "type": {"op": "Function", "params": [{"op": "Top"}], "return": {"op": "Function", "params": [{"op": "Top"}], "return": {"op": "Bool"}, "purity": "Pure"}, "purity": "Pure"}}, "value": {"op": "Abs", "params": [{"id": "arg0_8", "type": {"op": "Top"}}], "body": {"op": "Abs", "params": [{"id": "arg1_9", "type": {"op": "Top"}}], "body": {"op": "Primitive", "name": "infixGt(Any, Any): Bool", "args": [{"op": "Var", "id": "arg0_8", "type": {"op": "Top"}}, {"op": "Var", "id": "arg1_9", "type": {"op": "Top"}}], "returns": [{"id": "ret_10", "type": {"op": "Bool"}}], "rest": {"op": "Var", "id": "ret_10", "type": {"op": "Bool"}}}}}, "export_as": ["_var_2 (* > *)"]}, {"name": {"id": "<=_3", "type": {"op": "Function", "params": [{"op": "Top"}], "return": {"op": "Function", "params": [{"op": "Top"}], "return": {"op": "Bool"}, "purity": "Pure"}, "purity": "Pure"}}, "value": {"op": "Abs", "params": [{"id": "arg0_11", "type": {"op": "Top"}}], "body": {"op": "Abs", "params": [{"id": "arg1_12", "type": {"op": "Top"}}], "body": {"op": "Primitive", "name": "infixLte(Any, Any): Bool", "args": [{"op": "Var", "id": "arg0_11", "type": {"op": "Top"}}, {"op": "Var", "id": "arg1_12", "type": {"op": "Top"}}], "returns": [{"id": "ret_13", "type": {"op": "Bool"}}], "rest": {"op": "Var", "id": "ret_13", "type": {"op": "Bool"}}}}}, "export_as": ["_var_3 (* <= *)"]}, {"name": {"id": "<_4", "type": {"op": "Function", "params": [{"op": "Top"}], "return": {"op": "Function", "params": [{"op": "Top"}], "return": {"op": "Bool"}, "purity": "Pure"}, "purity": "Pure"}}, "value": {"op": "Abs", "params": [{"id": "arg0_14", "type": {"op": "Top"}}], "body": {"op": "Abs", "params": [{"id": "arg1_15", "type": {"op": "Top"}}], "body": {"op": "Primitive", "name": "infixLt(Any, Any): Bool", "args": [{"op": "Var", "id": "arg0_14", "type": {"op": "Top"}}, {"op": "Var", "id": "arg1_15", "type": {"op": "Top"}}], "returns": [{"id": "ret_16", "type": {"op": "Bool"}}], "rest": {"op": "Var", "id": "ret_16", "type": {"op": "Bool"}}}}}, "export_as": ["_var_4 (* < *)"]}, {"name": {"id": "<_5", "type": {"op": "Function", "params": [{"op": "Top"}], "return": {"op": "Function", "params": [{"op": "Top"}], "return": {"op": "Bool"}, "purity": "Pure"}, "purity": "Pure"}}, "value": {"op": "Abs", "params": [{"id": "arg0_17", "type": {"op": "Top"}}], "body": {"op": "Abs", "params": [{"id": "arg1_18", "type": {"op": "Top"}}], "body": {"op": "Primitive", "name": "infixLt(Any, Any): Bool", "args": [{"op": "Var", "id": "arg0_17", "type": {"op": "Top"}}, {"op": "Var", "id": "arg1_18", "type": {"op": "Top"}}], "returns": [{"id": "ret_19", "type": {"op": "Bool"}}], "rest": {"op": "Var", "id": "ret_19", "type": {"op": "Bool"}}}}}, "export_as": ["_var_5 (* < *)"]}, {"name": {"id": "<>_6", "type": {"op": "Function", "params": [{"op": "Top"}], "return": {"op": "Function", "params": [{"op": "Top"}], "return": {"op": "Bool"}, "purity": "Pure"}, "purity": "Pure"}}, "value": {"op": "Abs", "params": [{"id": "arg0_20", "type": {"op": "Top"}}], "body": {"op": "Abs", "params": [{"id": "arg1_21", "type": {"op": "Top"}}], "body": {"op": "Primitive", "name": "!sexp:(\"not(Boolean): Boolean\" (\"equals(Any, Any): Bool\" $arg0:top $arg1:top))", "args": [{"op": "Var", "id": "arg0_20", "type": {"op": "Top"}}, {"op": "Var", "id": "arg1_21", "type": {"op": "Top"}}], "returns": [{"id": "ret_22", "type": {"op": "Bool"}}], "rest": {"op": "Var", "id": "ret_22", "type": {"op": "Bool"}}}}}, "export_as": ["_var_6 (* <> *)"]}, {"name": {"id": "acos_7", "type": {"op": "Function", "params": [{"op": "Double"}], "return": {"op": "Double"}, "purity": "Pure"}}, "value": {"op": "Abs", "params": [{"id": "arg0_23", "type": {"op": "Double"}}], "body": {"op": "Primitive", "name": "acos(Double): Double", "args": [{"op": "Var", "id": "arg0_23", "type": {"op": "Double"}}], "returns": [{"id": "ret_24", "type": {"op": "Double"}}], "rest": {"op": "Var", "id": "ret_24", "type": {"op": "Double"}}}}, "export_as": ["acos"]}, {"name": {"id": "+._8", "type": {"op": "Function", "params": [{"op": "Double"}], "return": {"op": "Function", "params": [{"op": "Double"}], "return": {"op": "Double"}, "purity": "Pure"}, "purity": "Pure"}}, "value": {"op": "Abs", "params": [{"id": "arg0_25", "type": {"op": "Double"}}], "body": {"op": "Abs", "params": [{"id": "arg1_26", "type": {"op": "Double"}}], "body": {"op": "Primitive", "name": "infixAdd(Double, Double): Double", "args": [{"op": "Var", "id": "arg0_25", "type": {"op": "Double"}}, {"op": "Var", "id": "arg1_26", "type": {"op": "Double"}}], "returns": [{"id": "ret_27", "type": {"op": "Double"}}], "rest": {"op": "Var", "id": "ret_27", "type": {"op": "Double"}}}}}, "export_as": ["_var_8 (* +. *)"]}, {"name": {"id": "asin_9", "type": {"op": "Function", "params": [{"op": "Double"}], "return": {"op": "Double"}, "purity": "Pure"}}, "value": {"op": "Abs", "params": [{"id": "arg0_28", "type": {"op": "Double"}}], "body": {"op": "Primitive", "name": "asin(Double): Double", "args": [{"op": "Var", "id": "arg0_28", "type": {"op": "Double"}}], "returns": [{"id": "ret_29", "type": {"op": "Double"}}], "rest": {"op": "Var", "id": "ret_29", "type": {"op": "Double"}}}}, "export_as": ["asin"]}, {"name": {"id": "atan_10", "type": {"op": "Function", "params": [{"op": "Double"}], "return": {"op": "Double"}, "purity": "Pure"}}, "value": {"op": "Abs", "params": [{"id": "arg0_30", "type": {"op": "Double"}}], "body": {"op": "Primitive", "name": "atan(Double): Double", "args": [{"op": "Var", "id": "arg0_30", "type": {"op": "Double"}}], "returns": [{"id": "ret_31", "type": {"op": "Double"}}], "rest": {"op": "Var", "id": "ret_31", "type": {"op": "Double"}}}}, "export_as": ["atan"]}, {"name": {"id": "cos_11", "type": {"op": "Function", "params": [{"op": "Double"}], "return": {"op": "Double"}, "purity": "Pure"}}, "value": {"op": "Abs", "params": [{"id": "arg0_32", "type": {"op": "Double"}}], "body": {"op": "Primitive", "name": "cos(Double): Double", "args": [{"op": "Var", "id": "arg0_32", "type": {"op": "Double"}}], "returns": [{"id": "ret_33", "type": {"op": "Double"}}], "rest": {"op": "Var", "id": "ret_33", "type": {"op": "Double"}}}}, "export_as": ["cos"]}, {"name": {"id": "/._12", "type": {"op": "Function", "params": [{"op": "Double"}], "return": {"op": "Function", "params": [{"op": "Double"}], "return": {"op": "Double"}, "purity": "Pure"}, "purity": "Pure"}}, "value": {"op": "Abs", "params": [{"id": "arg0_34", "type": {"op": "Double"}}], "body": {"op": "Abs", "params": [{"id": "arg1_35", "type": {"op": "Double"}}], "body": {"op": "Primitive", "name": "infixDiv(Double, Double): Double", "args": [{"op": "Var", "id": "arg0_34", "type": {"op": "Double"}}, {"op": "Var", "id": "arg1_35", "type": {"op": "Double"}}], "returns": [{"id": "ret_36", "type": {"op": "Double"}}], "rest": {"op": "Var", "id": "ret_36", "type": {"op": "Double"}}}}}, "export_as": ["_var_12 (* /. *)"]}, {"name": {"id": "exp_13", "type": {"op": "Function", "params": [{"op": "Double"}], "return": {"op": "Double"}, "purity": "Pure"}}, "value": {"op": "Abs", "params": [{"id": "arg0_37", "type": {"op": "Double"}}], "body": {"op": "Primitive", "name": "exp(Double): Double", "args": [{"op": "Var", "id": "arg0_37", "type": {"op": "Double"}}], "returns": [{"id": "ret_38", "type": {"op": "Double"}}], "rest": {"op": "Var", "id": "ret_38", "type": {"op": "Double"}}}}, "export_as": ["exp"]}, {"name": {"id": "expm1_14", "type": {"op": "Function", "params": [], "return": {"op": "Bottom"}, "purity": "Effectful"}}, "value": {"op": "Abs", "params": [], "body": {"op": "Primitive", "name": "!undefined:primitive expm1", "args": [], "returns": [{"id": "panic_return_39", "type": {"op": "Top"}}], "rest": {"op": "Var", "id": "panic_return_39", "type": {"op": "Top"}}}}, "export_as": ["expm1"]}, {"name": {"id": "infinity_15", "type": {"op": "Function", "params": [], "return": {"op": "Bottom"}, "purity": "Effectful"}}, "value": {"op": "Abs", "params": [], "body": {"op": "Primitive", "name": "!undefined:primitive infinity", "args": [], "returns": [{"id": "panic_return_40", "type": {"op": "Top"}}], "rest": {"op": "Var", "id": "panic_return_40", "type": {"op": "Top"}}}}, "export_as": ["infinity"]}, {"name": {"id": "log_16", "type": {"op": "Function", "params": [{"op": "Double"}], "return": {"op": "Double"}, "purity": "Pure"}}, "value": {"op": "Abs", "params": [{"id": "arg0_41", "type": {"op": "Double"}}], "body": {"op": "Primitive", "name": "log(Double): Double", "args": [{"op": "Var", "id": "arg0_41", "type": {"op": "Double"}}], "returns": [{"id": "ret_42", "type": {"op": "Double"}}], "rest": {"op": "Var", "id": "ret_42", "type": {"op": "Double"}}}}, "export_as": ["log"]}, {"name": {"id": "log1p_17", "type": {"op": "Function", "params": [{"op": "Double"}], "return": {"op": "Double"}, "purity": "Pure"}}, "value": {"op": "Abs", "params": [{"id": "arg0_43", "type": {"op": "Double"}}], "body": {"op": "Primitive", "name": "log1p(Double): Double", "args": [{"op": "Var", "id": "arg0_43", "type": {"op": "Double"}}], "returns": [{"id": "ret_44", "type": {"op": "Double"}}], "rest": {"op": "Var", "id": "ret_44", "type": {"op": "Double"}}}}, "export_as": ["log1p"]}, {"name": {"id": "*._18", "type": {"op": "Function", "params": [{"op": "Double"}], "return": {"op": "Function", "params": [{"op": "Double"}], "return": {"op": "Double"}, "purity": "Pure"}, "purity": "Pure"}}, "value": {"op": "Abs", "params": [{"id": "arg0_45", "type": {"op": "Double"}}], "body": {"op": "Abs", "params": [{"id": "arg1_46", "type": {"op": "Double"}}], "body": {"op": "Primitive", "name": "infixMul(Double, Double): Double", "args": [{"op": "Var", "id": "arg0_45", "type": {"op": "Double"}}, {"op": "Var", "id": "arg1_46", "type": {"op": "Double"}}], "returns": [{"id": "ret_47", "type": {"op": "Double"}}], "rest": {"op": "Var", "id": "ret_47", "type": {"op": "Double"}}}}}, "export_as": ["_var_18 (* *. *)"]}, {"name": {"id": "nan_19", "type": {"op": "Function", "params": [], "return": {"op": "Bottom"}, "purity": "Effectful"}}, "value": {"op": "Abs", "params": [], "body": {"op": "Primitive", "name": "!undefined:primitive nan", "args": [], "returns": [{"id": "panic_return_48", "type": {"op": "Top"}}], "rest": {"op": "Var", "id": "panic_return_48", "type": {"op": "Top"}}}}, "export_as": ["nan"]}, {"name": {"id": "~-._20", "type": {"op": "Function", "params": [], "return": {"op": "Bottom"}, "purity": "Effectful"}}, "value": {"op": "Abs", "params": [], "body": {"op": "Primitive", "name": "!undefined:primitive ~-.", "args": [], "returns": [{"id": "panic_return_49", "type": {"op": "Top"}}], "rest": {"op": "Var", "id": "panic_return_49", "type": {"op": "Top"}}}}, "export_as": ["_var_20 (* ~-. *)"]}, {"name": {"id": "neg_infinity_21", "type": {"op": "Function", "params": [], "return": {"op": "Bottom"}, "purity": "Effectful"}}, "value": {"op": "Abs", "params": [], "body": {"op": "Primitive", "name": "!undefined:primitive neg_infinity", "args": [], "returns": [{"id": "panic_return_50", "type": {"op": "Top"}}], "rest": {"op": "Var", "id": "panic_return_50", "type": {"op": "Top"}}}}, "export_as": ["neg_infinity"]}, {"name": {"id": "float_of_int_22", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Double"}, "purity": "Pure"}}, "value": {"op": "Abs", "params": [{"id": "arg0_51", "type": {"op": "Int"}}], "body": {"op": "Primitive", "name": "toDouble(Int): Double", "args": [{"op": "Var", "id": "arg0_51", "type": {"op": "Int"}}], "returns": [{"id": "ret_52", "type": {"op": "Double"}}], "rest": {"op": "Var", "id": "ret_52", "type": {"op": "Double"}}}}, "export_as": ["float_of_int"]}, {"name": {"id": "sin_23", "type": {"op": "Function", "params": [{"op": "Double"}], "return": {"op": "Double"}, "purity": "Pure"}}, "value": {"op": "Abs", "params": [{"id": "arg0_53", "type": {"op": "Double"}}], "body": {"op": "Primitive", "name": "sin(Double): Double", "args": [{"op": "Var", "id": "arg0_53", "type": {"op": "Double"}}], "returns": [{"id": "ret_54", "type": {"op": "Double"}}], "rest": {"op": "Var", "id": "ret_54", "type": {"op": "Double"}}}}, "export_as": ["sin"]}, {"name": {"id": "sqrt_24", "type": {"op": "Function", "params": [{"op": "Double"}], "return": {"op": "Double"}, "purity": "Pure"}}, "value": {"op": "Abs", "params": [{"id": "arg0_55", "type": {"op": "Double"}}], "body": {"op": "Primitive", "name": "sqrt(Double): Double", "args": [{"op": "Var", "id": "arg0_55", "type": {"op": "Double"}}], "returns": [{"id": "ret_56", "type": {"op": "Double"}}], "rest": {"op": "Var", "id": "ret_56", "type": {"op": "Double"}}}}, "export_as": ["sqrt"]}, {"name": {"id": "-._25", "type": {"op": "Function", "params": [{"op": "Double"}], "return": {"op": "Function", "params": [{"op": "Double"}], "return": {"op": "Double"}, "purity": "Pure"}, "purity": "Pure"}}, "value": {"op": "Abs", "params": [{"id": "arg0_57", "type": {"op": "Double"}}], "body": {"op": "Abs", "params": [{"id": "arg1_58", "type": {"op": "Double"}}], "body": {"op": "Primitive", "name": "infixSub(Double, Double): Double", "args": [{"op": "Var", "id": "arg0_57", "type": {"op": "Double"}}, {"op": "Var", "id": "arg1_58", "type": {"op": "Double"}}], "returns": [{"id": "ret_59", "type": {"op": "Double"}}], "rest": {"op": "Var", "id": "ret_59", "type": {"op": "Double"}}}}}, "export_as": ["_var_25 (* -. *)"]}, {"name": {"id": "tan_26", "type": {"op": "Function", "params": [{"op": "Double"}], "return": {"op": "Double"}, "purity": "Pure"}}, "value": {"op": "Abs", "params": [{"id": "arg0_60", "type": {"op": "Double"}}], "body": {"op": "Primitive", "name": "tan(Double): Double", "args": [{"op": "Var", "id": "arg0_60", "type": {"op": "Double"}}], "returns": [{"id": "ret_61", "type": {"op": "Double"}}], "rest": {"op": "Var", "id": "ret_61", "type": {"op": "Double"}}}}, "export_as": ["tan"]}, {"name": {"id": "+_27", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Int"}, "purity": "Pure"}, "purity": "Pure"}}, "value": {"op": "Abs", "params": [{"id": "arg0_62", "type": {"op": "Int"}}], "body": {"op": "Abs", "params": [{"id": "arg1_63", "type": {"op": "Int"}}], "body": {"op": "Primitive", "name": "infixAdd(Int, Int): Int", "args": [{"op": "Var", "id": "arg0_62", "type": {"op": "Int"}}, {"op": "Var", "id": "arg1_63", "type": {"op": "Int"}}], "returns": [{"id": "ret_64", "type": {"op": "Int"}}], "rest": {"op": "Var", "id": "ret_64", "type": {"op": "Int"}}}}}, "export_as": ["_var_27 (* + *)"]}, {"name": {"id": "/_28", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Int"}, "purity": "Pure"}, "purity": "Pure"}}, "value": {"op": "Abs", "params": [{"id": "arg0_65", "type": {"op": "Int"}}], "body": {"op": "Abs", "params": [{"id": "arg1_66", "type": {"op": "Int"}}], "body": {"op": "Primitive", "name": "infixDiv(Int, Int): Int", "args": [{"op": "Var", "id": "arg0_65", "type": {"op": "Int"}}, {"op": "Var", "id": "arg1_66", "type": {"op": "Int"}}], "returns": [{"id": "ret_67", "type": {"op": "Int"}}], "rest": {"op": "Var", "id": "ret_67", "type": {"op": "Int"}}}}}, "export_as": ["_var_28 (* / *)"]}, {"name": {"id": "mod_29", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Int"}, "purity": "Pure"}, "purity": "Pure"}}, "value": {"op": "Abs", "params": [{"id": "arg0_68", "type": {"op": "Int"}}], "body": {"op": "Abs", "params": [{"id": "arg1_69", "type": {"op": "Int"}}], "body": {"op": "Primitive", "name": "mod(Int, Int): Int", "args": [{"op": "Var", "id": "arg0_68", "type": {"op": "Int"}}, {"op": "Var", "id": "arg1_69", "type": {"op": "Int"}}], "returns": [{"id": "ret_70", "type": {"op": "Int"}}], "rest": {"op": "Var", "id": "ret_70", "type": {"op": "Int"}}}}}, "export_as": ["mod"]}, {"name": {"id": "*_30", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Int"}, "purity": "Pure"}, "purity": "Pure"}}, "value": {"op": "Abs", "params": [{"id": "arg0_71", "type": {"op": "Int"}}], "body": {"op": "Abs", "params": [{"id": "arg1_72", "type": {"op": "Int"}}], "body": {"op": "Primitive", "name": "infixMul(Int, Int): Int", "args": [{"op": "Var", "id": "arg0_71", "type": {"op": "Int"}}, {"op": "Var", "id": "arg1_72", "type": {"op": "Int"}}], "returns": [{"id": "ret_73", "type": {"op": "Int"}}], "rest": {"op": "Var", "id": "ret_73", "type": {"op": "Int"}}}}}, "export_as": ["_var_30 (* * *)"]}, {"name": {"id": "~-_31", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Int"}, "purity": "Pure"}}, "value": {"op": "Abs", "params": [{"id": "arg0_74", "type": {"op": "Int"}}], "body": {"op": "Primitive", "name": "neg(Int): Int", "args": [{"op": "Var", "id": "arg0_74", "type": {"op": "Int"}}], "returns": [{"id": "ret_75", "type": {"op": "Int"}}], "rest": {"op": "Var", "id": "ret_75", "type": {"op": "Int"}}}}, "export_as": ["_var_31 (* ~- *)"]}, {"name": {"id": "abs_32", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Int"}, "purity": "Pure"}}, "value": {"op": "Abs", "params": [{"id": "arg0_76", "type": {"op": "Int"}}], "body": {"op": "Primitive", "name": "abs(Int): Int", "args": [{"op": "Var", "id": "arg0_76", "type": {"op": "Int"}}], "returns": [{"id": "ret_77", "type": {"op": "Int"}}], "rest": {"op": "Var", "id": "ret_77", "type": {"op": "Int"}}}}, "export_as": ["abs"]}, {"name": {"id": "**_33", "type": {"op": "Function", "params": [], "return": {"op": "Bottom"}, "purity": "Effectful"}}, "value": {"op": "Abs", "params": [], "body": {"op": "Primitive", "name": "!undefined:primitive **", "args": [], "returns": [{"id": "panic_return_78", "type": {"op": "Top"}}], "rest": {"op": "Var", "id": "panic_return_78", "type": {"op": "Top"}}}}, "export_as": ["_var_33 (* ** *)"]}, {"name": {"id": "-_34", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Int"}, "purity": "Pure"}, "purity": "Pure"}}, "value": {"op": "Abs", "params": [{"id": "arg0_79", "type": {"op": "Int"}}], "body": {"op": "Abs", "params": [{"id": "arg1_80", "type": {"op": "Int"}}], "body": {"op": "Primitive", "name": "infixSub(Int, Int): Int", "args": [{"op": "Var", "id": "arg0_79", "type": {"op": "Int"}}, {"op": "Var", "id": "arg1_80", "type": {"op": "Int"}}], "returns": [{"id": "ret_81", "type": {"op": "Int"}}], "rest": {"op": "Var", "id": "ret_81", "type": {"op": "Int"}}}}}, "export_as": ["_var_34 (* - *)"]}, {"name": {"id": "int_of_float_35", "type": {"op": "Function", "params": [{"op": "Double"}], "return": {"op": "Int"}, "purity": "Pure"}}, "value": {"op": "Abs", "params": [{"id": "arg0_82", "type": {"op": "Double"}}], "body": {"op": "Primitive", "name": "toInt(Double): Int", "args": [{"op": "Var", "id": "arg0_82", "type": {"op": "Double"}}], "returns": [{"id": "ret_83", "type": {"op": "Int"}}], "rest": {"op": "Var", "id": "ret_83", "type": {"op": "Int"}}}}, "export_as": ["int_of_float"]}, {"name": {"id": "^_36", "type": {"op": "Function", "params": [{"op": "String"}], "return": {"op": "Function", "params": [{"op": "String"}], "return": {"op": "String"}, "purity": "Pure"}, "purity": "Pure"}}, "value": {"op": "Abs", "params": [{"id": "arg0_84", "type": {"op": "String"}}], "body": {"op": "Abs", "params": [{"id": "arg1_85", "type": {"op": "String"}}], "body": {"op": "Primitive", "name": "infixConcat(String, String): String", "args": [{"op": "Var", "id": "arg0_84", "type": {"op": "String"}}, {"op": "Var", "id": "arg1_85", "type": {"op": "String"}}], "returns": [{"id": "ret_86", "type": {"op": "String"}}], "rest": {"op": "Var", "id": "ret_86", "type": {"op": "String"}}}}}, "export_as": ["_var_36 (* ^ *)"]}, {"name": {"id": "string_length_37", "type": {"op": "Function", "params": [{"op": "String"}], "return": {"op": "Int"}, "purity": "Pure"}}, "value": {"op": "Abs", "params": [{"id": "arg0_87", "type": {"op": "String"}}], "body": {"op": "Primitive", "name": "length(String): Int", "args": [{"op": "Var", "id": "arg0_87", "type": {"op": "String"}}], "returns": [{"id": "ret_88", "type": {"op": "Int"}}], "rest": {"op": "Var", "id": "ret_88", "type": {"op": "Int"}}}}, "export_as": ["string_length"]}, {"name": {"id": "string_of_float_38", "type": {"op": "Function", "params": [{"op": "Double"}], "return": {"op": "String"}, "purity": "Pure"}}, "value": {"op": "Abs", "params": [{"id": "arg0_89", "type": {"op": "Double"}}], "body": {"op": "Primitive", "name": "show(Double): String", "args": [{"op": "Var", "id": "arg0_89", "type": {"op": "Double"}}], "returns": [{"id": "ret_90", "type": {"op": "String"}}], "rest": {"op": "Var", "id": "ret_90", "type": {"op": "String"}}}}, "export_as": ["string_of_float"]}, {"name": {"id": "string_of_int_39", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "String"}, "purity": "Pure"}}, "value": {"op": "Abs", "params": [{"id": "arg0_91", "type": {"op": "Int"}}], "body": {"op": "Primitive", "name": "show(Int): String", "args": [{"op": "Var", "id": "arg0_91", "type": {"op": "Int"}}], "returns": [{"id": "ret_92", "type": {"op": "String"}}], "rest": {"op": "Var", "id": "ret_92", "type": {"op": "String"}}}}, "export_as": ["string_of_int"]}, {"name": {"id": "sub_40", "type": {"op": "Function", "params": [{"op": "String"}], "return": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "String"}, "purity": "Pure"}, "purity": "Pure"}, "purity": "Pure"}}, "value": {"op": "Abs", "params": [{"id": "arg0_93", "type": {"op": "String"}}], "body": {"op": "Abs", "params": [{"id": "arg1_94", "type": {"op": "Int"}}], "body": {"op": "Abs", "params": [{"id": "arg2_95", "type": {"op": "Int"}}], "body": {"op": "Primitive", "name": "substring(String, Int, Int): String", "args": [{"op": "Var", "id": "arg0_93", "type": {"op": "String"}}, {"op": "Var", "id": "arg1_94", "type": {"op": "Int"}}, {"op": "Var", "id": "arg2_95", "type": {"op": "Int"}}], "returns": [{"id": "ret_96", "type": {"op": "String"}}], "rest": {"op": "Var", "id": "ret_96", "type": {"op": "String"}}}}}}, "export_as": ["sub"]}, {"name": {"id": "to_string_41", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "String"}, "purity": "Pure"}}, "value": {"op": "Abs", "params": [{"id": "arg0_97", "type": {"op": "Int"}}], "body": {"op": "Primitive", "name": "show(Int): String", "args": [{"op": "Var", "id": "arg0_97", "type": {"op": "Int"}}], "returns": [{"id": "ret_98", "type": {"op": "String"}}], "rest": {"op": "Var", "id": "ret_98", "type": {"op": "String"}}}}, "export_as": ["to_string"]}, {"name": {"id": "Print_42", "type": {"op": "Label", "binding": {"op": "Codata", "interface_tag": "Print_42", "methods": [{"tag": "Print_42", "params": [{"op": "String"}], "return": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}}]}}}, "value": {"op": "FreshLabel"}, "export_as": ["Print"]}, {"name": {"id": "Read_43", "type": {"op": "Label", "binding": {"op": "Codata", "interface_tag": "Read_43", "methods": [{"tag": "Read_43", "params": [{"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}], "return": {"op": "String"}}]}}}, "value": {"op": "FreshLabel"}, "export_as": ["Read"]}, {"name": {"id": "Raise_44", "type": {"op": "Label", "binding": {"op": "Codata", "interface_tag": "Raise_44", "methods": [{"tag": "Raise_44", "params": [{"op": "String"}], "return": {"op": "Top"}}]}}}, "value": {"op": "FreshLabel"}, "export_as": ["Raise"]}, {"name": {"id": "RandomInt_45", "type": {"op": "Label", "binding": {"op": "Codata", "interface_tag": "RandomInt_45", "methods": [{"tag": "RandomInt_45", "params": [{"op": "Int"}], "return": {"op": "Int"}}]}}}, "value": {"op": "FreshLabel"}, "export_as": ["RandomInt"]}, {"name": {"id": "RandomFloat_46", "type": {"op": "Label", "binding": {"op": "Codata", "interface_tag": "RandomFloat_46", "methods": [{"tag": "RandomFloat_46", "params": [{"op": "Double"}], "return": {"op": "Double"}}]}}}, "value": {"op": "FreshLabel"}, "export_as": ["RandomFloat"]}, {"name": {"id": "Write_47", "type": {"op": "Label", "binding": {"op": "Codata", "interface_tag": "Write_47", "methods": [{"tag": "Write_47", "params": [{"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": [{\"op\": \"String\"}, {\"op\": \"String\"}]}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": [{\"op\": \"String\"}, {\"op\": \"String\"}]}", "fields": [{"op": "String"}, {"op": "String"}]}]}], "return": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}}]}}}, "value": {"op": "FreshLabel"}, "export_as": ["Write"]}, {"name": {"id": "Reade_0", "type": {"op": "Label", "binding": {"op": "Codata", "interface_tag": "Reade_0", "methods": [{"tag": "Reade_0", "params": [{"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}], "return": {"op": "Int"}}]}}}, "value": {"op": "FreshLabel"}, "export_as": ["Reade"]}, {"name": {"id": "Emit_1", "type": {"op": "Label", "binding": {"op": "Codata", "interface_tag": "Emit_1", "methods": [{"tag": "Emit_1", "params": [{"op": "Int"}], "return": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}}]}}}, "value": {"op": "FreshLabel"}, "export_as": ["Emit"]}, {"name": {"id": "Stop_2", "type": {"op": "Label", "binding": {"op": "Codata", "interface_tag": "Stop_2", "methods": [{"tag": "Stop_2", "params": [{"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}], "return": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}}]}}}, "value": {"op": "FreshLabel"}, "export_as": ["Stop"]}, {"name": {"id": "newline_48", "type": {"op": "Int"}}, "value": {"op": "Literal", "type": {"op": "Int"}, "value": 10}, "export_as": ["newline"]}, {"name": {"id": "is_newline_49", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Int"}, "purity": "Effectful"}}, "value": {"op": "Abs", "params": [{"id": "c_50", "type": {"op": "Int"}}], "body": {"op": "Let", "definitions": [{"name": {"id": "$bind_51", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Int"}, "purity": "Effectful"}}, "value": {"op": "DebugWrap", "annotation": "coerce to (⟨int⟩ -{ϖ₃}→ ⟨bool⟩)!ϖ₁", "inner": {"op": "DebugWrap", "annotation": "coerce to (⟨int⟩ -{∅↪︎δ₄}→ ⟨bool⟩)!(∅↪︎δ₁)", "inner": {"op": "App", "fn": {"op": "Var", "id": "=_0", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Int"}, "purity": "Pure"}, "purity": "Pure"}}, "args": [{"op": "Var", "id": "c_50", "type": {"op": "Int"}}]}}}, "export_as": []}], "body": {"op": "DebugWrap", "annotation": "coerce to ⟨bool⟩!ϖ₂", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨bool⟩!ϖ₅", "inner": {"op": "App", "fn": {"op": "Var", "id": "$bind_51", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Int"}, "purity": "Effectful"}}, "args": [{"op": "Literal", "type": {"op": "Int"}, "value": 10}]}}}}}, "export_as": ["is_newline"]}, {"name": {"id": "dollar_52", "type": {"op": "Int"}}, "value": {"op": "Literal", "type": {"op": "Int"}, "value": 36}, "export_as": ["dollar"]}, {"name": {"id": "is_dollar_53", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Int"}, "purity": "Effectful"}}, "value": {"op": "Abs", "params": [{"id": "c_54", "type": {"op": "Int"}}], "body": {"op": "Let", "definitions": [{"name": {"id": "$bind_55", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Int"}, "purity": "Effectful"}}, "value": {"op": "DebugWrap", "annotation": "coerce to (⟨int⟩ -{ϖ₉}→ ⟨bool⟩)!ϖ₇", "inner": {"op": "DebugWrap", "annotation": "coerce to (⟨int⟩ -{∅↪︎δ₉}→ ⟨bool⟩)!(∅↪︎δ₆)", "inner": {"op": "App", "fn": {"op": "Var", "id": "=_0", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Int"}, "purity": "Pure"}, "purity": "Pure"}}, "args": [{"op": "Var", "id": "c_54", "type": {"op": "Int"}}]}}}, "export_as": []}], "body": {"op": "DebugWrap", "annotation": "coerce to ⟨bool⟩!ϖ₈", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨bool⟩!ϖ₁₁", "inner": {"op": "App", "fn": {"op": "Var", "id": "$bind_55", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Int"}, "purity": "Effectful"}}, "args": [{"op": "Literal", "type": {"op": "Int"}, "value": 36}]}}}}}, "export_as": ["is_dollar"]}, {"name": {"id": "run_56", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Int"}, "purity": "Effectful"}}, "value": {"op": "Abs", "params": [{"id": "n_57", "type": {"op": "Int"}}], "body": {"op": "LetRec", "definitions": [{"name": {"id": "parse_58", "type": {"op": "Int"}}, "value": {"op": "Abs", "params": [{"id": "x_116", "type": {"op": "Int"}}], "body": {"op": "Let", "definitions": [{"name": {"id": "handler_124", "type": {"op": "Codata", "interface_tag": "Reade_0", "methods": [{"tag": "Reade_0", "params": [{"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}], "return": {"op": "Int"}}]}}, "value": {"op": "GetDynamic", "label": {"op": "Var", "id": "Reade_0", "type": {"op": "Label", "binding": {"op": "Codata", "interface_tag": "Reade_0", "methods": [{"tag": "Reade_0", "params": [{"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}], "return": {"op": "Int"}}]}}}, "n": {"op": "Literal", "type": {"op": "Int"}, "value": 0}}, "export_as": []}], "body": {"op": "Let", "definitions": [{"name": {"id": "y_260", "type": {"op": "Int"}}, "value": {"op": "Invoke", "receiver": {"op": "Var", "id": "handler_124", "type": {"op": "Codata", "interface_tag": "Reade_0", "methods": [{"tag": "Reade_0", "params": [{"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}], "return": {"op": "Int"}}]}}, "ifce_tag": "Reade_0", "tag": "Reade_0", "args": [{"op": "Construct", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "args": []}]}, "export_as": []}], "body": {"op": "Let", "definitions": [{"name": {"id": "$bind_269", "type": {"op": "Int"}}, "value": {"op": "DebugWrap", "annotation": "coerce to ⟨bool⟩!({Reade}∪{Emit}∪{Stop}∪ϖ₁₄₂)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨bool⟩!({Reade}∪{Emit}∪{Stop}∪ϖ₁₄₁)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨bool⟩!ϖ₃₆", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨bool⟩!ϖ₁₀₈", "inner": {"op": "App", "fn": {"op": "Var", "id": "is_dollar_53", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Int"}, "purity": "Effectful"}}, "args": [{"op": "Var", "id": "y_260", "type": {"op": "Int"}}]}}}}}, "export_as": []}], "body": {"op": "DebugWrap", "annotation": "coerce to ⟨𝟙⟩!({Reade}∪{Emit}∪{Stop}∪ϖ₁₄₂)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨𝟙⟩!({Reade}∪{Emit}∪{Stop}∪ϖ₁₄₁)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨𝟙⟩!({Reade}∪{Emit}∪{Stop}∪ϖ₁₄₀)", "inner": {"op": "Let", "definitions": [{"name": {"id": "scrutinee_125", "type": {"op": "Int"}}, "value": {"op": "Var", "id": "$bind_269", "type": {"op": "Int"}}, "export_as": []}], "body": {"op": "Let", "definitions": [{"name": {"id": "cond_132", "type": {"op": "Int"}}, "value": {"op": "Var", "id": "scrutinee_125", "type": {"op": "Int"}}, "export_as": []}], "body": {"op": "Switch", "scrutinee": {"op": "Var", "id": "cond_132", "type": {"op": "Int"}}, "cases": [{"value": {"op": "Literal", "type": {"op": "Bool"}, "value": true}, "then": {"op": "Let", "definitions": [{"name": {"id": "$bind_270", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Int"}, "purity": "Effectful"}}, "value": {"op": "DebugWrap", "annotation": "coerce to ⟨int -δ₁₀₉→ int⟩!({Reade}∪{Emit}∪{Stop}∪ϖ₁₄₇)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int -δ₁₀₉→ int⟩!ϖ₃₃", "inner": {"op": "DebugWrap", "annotation": "coerce to (⟨int⟩ -{ϖ₁₀₉}→ ⟨int⟩)!ϖ₃₁", "inner": {"op": "DebugWrap", "annotation": "coerce to (⟨int⟩ -{∅↪︎δ₁₀₈}→ ⟨int⟩)!(∅↪︎δ₃₂)", "inner": {"op": "App", "fn": {"op": "Var", "id": "+_27", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Int"}, "purity": "Pure"}, "purity": "Pure"}}, "args": [{"op": "Var", "id": "x_116", "type": {"op": "Int"}}]}}}}}, "export_as": []}], "body": {"op": "Let", "definitions": [{"name": {"id": "$bind_271", "type": {"op": "Int"}}, "value": {"op": "DebugWrap", "annotation": "coerce to ⟨int⟩!({Reade}∪{Emit}∪{Stop}∪ϖ₁₄₇)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int⟩!ϖ₃₃", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int⟩!ϖ₃₂", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int⟩!ϖ₁₁₁", "inner": {"op": "App", "fn": {"op": "Var", "id": "$bind_270", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Int"}, "purity": "Effectful"}}, "args": [{"op": "Literal", "type": {"op": "Int"}, "value": 1}]}}}}}, "export_as": []}], "body": {"op": "DebugWrap", "annotation": "coerce to ⟨𝟙⟩!({Reade}∪{Emit}∪{Stop}∪ϖ₁₄₇)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨𝟙⟩!({Reade}∪{Emit}∪{Stop}∪ϖ₁₄₆)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨𝟙⟩!({Reade}∪{Emit}∪{Stop}∪ϖ₁₄₅)", "inner": {"op": "App", "fn": {"op": "Var", "id": "parse_58", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}, "purity": "Effectful"}}, "args": [{"op": "Var", "id": "$bind_271", "type": {"op": "Int"}}]}}}}}}}], "default": {"op": "Let", "definitions": [{"name": {"id": "cond_126", "type": {"op": "Int"}}, "value": {"op": "Var", "id": "scrutinee_125", "type": {"op": "Int"}}, "export_as": []}], "body": {"op": "Switch", "scrutinee": {"op": "Var", "id": "cond_126", "type": {"op": "Int"}}, "cases": [{"value": {"op": "Literal", "type": {"op": "Bool"}, "value": false}, "then": {"op": "Let", "definitions": [{"name": {"id": "$bind_272", "type": {"op": "Int"}}, "value": {"op": "DebugWrap", "annotation": "coerce to ⟨bool⟩!({Emit}∪{Reade}∪{Stop}∪ϖ₁₃₉)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨bool⟩!ϖ₂₈", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨bool⟩!ϖ₁₁₈", "inner": {"op": "App", "fn": {"op": "Var", "id": "is_newline_49", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Int"}, "purity": "Effectful"}}, "args": [{"op": "Var", "id": "y_260", "type": {"op": "Int"}}]}}}}, "export_as": []}], "body": {"op": "DebugWrap", "annotation": "coerce to ⟨𝟙⟩!({Emit}∪{Reade}∪{Stop}∪ϖ₁₃₉)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨𝟙⟩!({Emit}∪{Reade}∪{Stop}∪ϖ₁₃₈)", "inner": {"op": "Let", "definitions": [{"name": {"id": "scrutinee_127", "type": {"op": "Int"}}, "value": {"op": "Var", "id": "$bind_272", "type": {"op": "Int"}}, "export_as": []}], "body": {"op": "Let", "definitions": [{"name": {"id": "cond_130", "type": {"op": "Int"}}, "value": {"op": "Var", "id": "scrutinee_127", "type": {"op": "Int"}}, "export_as": []}], "body": {"op": "Switch", "scrutinee": {"op": "Var", "id": "cond_130", "type": {"op": "Int"}}, "cases": [{"value": {"op": "Literal", "type": {"op": "Bool"}, "value": true}, "then": {"op": "Let", "definitions": [{"name": {"id": "handler_131", "type": {"op": "Codata", "interface_tag": "Emit_1", "methods": [{"tag": "Emit_1", "params": [{"op": "Int"}], "return": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}}]}}, "value": {"op": "GetDynamic", "label": {"op": "Var", "id": "Emit_1", "type": {"op": "Label", "binding": {"op": "Codata", "interface_tag": "Emit_1", "methods": [{"tag": "Emit_1", "params": [{"op": "Int"}], "return": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}}]}}}, "n": {"op": "Literal", "type": {"op": "Int"}, "value": 0}}, "export_as": []}], "body": {"op": "Let", "definitions": [{"name": {"id": "y_273", "type": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}}, "value": {"op": "Invoke", "receiver": {"op": "Var", "id": "handler_131", "type": {"op": "Codata", "interface_tag": "Emit_1", "methods": [{"tag": "Emit_1", "params": [{"op": "Int"}], "return": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}}]}}, "ifce_tag": "Emit_1", "tag": "Emit_1", "args": [{"op": "Var", "id": "x_116", "type": {"op": "Int"}}]}, "export_as": []}], "body": {"op": "DebugWrap", "annotation": "coerce to ⟨𝟙⟩!({Emit}∪{Reade}∪{Stop}∪ϖ₁₄₈)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨𝟙⟩!({Reade,\nEmit}∪{Stop}∪ϖ₁₄₄)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨𝟙⟩!({Reade,\nEmit}∪{Stop}∪ϖ₁₄₃)", "inner": {"op": "App", "fn": {"op": "Var", "id": "parse_58", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}, "purity": "Effectful"}}, "args": [{"op": "Literal", "type": {"op": "Int"}, "value": 0}]}}}}}}}], "default": {"op": "Let", "definitions": [{"name": {"id": "cond_128", "type": {"op": "Int"}}, "value": {"op": "Var", "id": "scrutinee_127", "type": {"op": "Int"}}, "export_as": []}], "body": {"op": "Switch", "scrutinee": {"op": "Var", "id": "cond_128", "type": {"op": "Int"}}, "cases": [{"value": {"op": "Literal", "type": {"op": "Bool"}, "value": false}, "then": {"op": "Let", "definitions": [{"name": {"id": "handler_129", "type": {"op": "Codata", "interface_tag": "Stop_2", "methods": [{"tag": "Stop_2", "params": [{"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}], "return": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}}]}}, "value": {"op": "GetDynamic", "label": {"op": "Var", "id": "Stop_2", "type": {"op": "Label", "binding": {"op": "Codata", "interface_tag": "Stop_2", "methods": [{"tag": "Stop_2", "params": [{"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}], "return": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}}]}}}, "n": {"op": "Literal", "type": {"op": "Int"}, "value": 0}}, "export_as": []}], "body": {"op": "Let", "definitions": [{"name": {"id": "y_274", "type": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}}, "value": {"op": "Invoke", "receiver": {"op": "Var", "id": "handler_129", "type": {"op": "Codata", "interface_tag": "Stop_2", "methods": [{"tag": "Stop_2", "params": [{"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}], "return": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}}]}}, "ifce_tag": "Stop_2", "tag": "Stop_2", "args": [{"op": "Construct", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "args": []}]}, "export_as": []}], "body": {"op": "DebugWrap", "annotation": "coerce to ⟨𝟙⟩!({Stop}∪ϖ₁₃₇)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨𝟙⟩!({Stop}∪∅↪︎δ₁₃₁)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨𝟙⟩!(∅↪︎{Stop})", "inner": {"op": "Var", "id": "y_274", "type": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}}}}}}}}], "default": {"op": "Primitive", "name": "!undefined:non-exhaustive match", "args": [], "returns": [{"id": "panic_return_1", "type": {"op": "Top"}}], "rest": {"op": "Var", "id": "panic_return_1", "type": {"op": "Top"}}}}}}}}}}}}], "default": {"op": "Primitive", "name": "!undefined:non-exhaustive match", "args": [], "returns": [{"id": "panic_return_1", "type": {"op": "Top"}}], "rest": {"op": "Var", "id": "panic_return_1", "type": {"op": "Top"}}}}}}}}}}}}}}}, "export_as": []}], "body": {"op": "Let", "definitions": [{"name": {"id": "$bind_243", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Int"}, "purity": "Effectful"}}, "value": {"op": "DebugWrap", "annotation": "coerce to ⟨int -δ₁₄₉→ int⟩!ϖ₁₀₄", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int -δ₁₄₉→ int⟩!ϖ₁₀₂", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int -δ₁₄₉→ int⟩!ϖ₁₀₀", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int -δ₁₄₉→ int⟩!ϖ₂₁₅", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int -δ₁₄₉→ int⟩!ϖ₁₄₉", "inner": {"op": "DebugWrap", "annotation": "coerce to (⟨int⟩ -{ϖ₁₅₅}→ ⟨int⟩)!ϖ₅₁", "inner": {"op": "DebugWrap", "annotation": "coerce to (⟨int⟩ -{ϖ₁₅₆}→ ⟨int⟩)!ϖ₁₅₁", "inner": {"op": "App", "fn": {"op": "Abs", "params": [{"id": "handled body_121", "type": {"op": "Function", "params": [], "return": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}, "purity": "Effectful"}}], "body": {"op": "Reset", "label": {"op": "Var", "id": "Emit_1", "type": {"op": "Label", "binding": {"op": "Codata", "interface_tag": "Emit_1", "methods": [{"tag": "Emit_1", "params": [{"op": "Int"}], "return": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}}]}}}, "region": {"id": "ignore", "type": {"op": "Ptr"}}, "binding": {"op": "New", "ifce_tag": "Emit_1", "methods": [{"tag": "Emit_1", "params": [{"id": "e_247", "type": {"op": "Int"}}], "body": {"op": "Shift", "label": {"op": "Var", "id": "Emit_1", "type": {"op": "Label", "binding": {"op": "Codata", "interface_tag": "Emit_1", "methods": [{"tag": "Emit_1", "params": [{"op": "Int"}], "return": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}}]}}}, "n": {"op": "Literal", "type": {"op": "Int"}, "value": 0}, "k": {"id": "k_123", "type": {"op": "Stack", "resume_return": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Int"}, "purity": "Effectful"}, "resume_args": [{"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}]}}, "body": {"op": "Let", "definitions": [{"name": {"id": "k_248", "type": {"op": "Function", "params": [{"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}], "return": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Int"}, "purity": "Effectful"}, "purity": "Effectful"}}, "value": {"op": "Abs", "params": [{"id": "kparam_122", "type": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}}], "body": {"op": "Resume", "k": {"op": "Var", "id": "k_123", "type": {"op": "Stack", "resume_return": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Int"}, "purity": "Effectful"}, "resume_args": [{"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}]}}, "args": [{"op": "Var", "id": "kparam_122", "type": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}}]}}, "export_as": []}], "body": {"op": "DebugWrap", "annotation": "coerce to (⟨int⟩ -{ϖ₁₅₈}→ ⟨int⟩)!(∅↪︎δ₂₅₀)", "inner": {"op": "Abs", "params": [{"id": "s_249", "type": {"op": "Int"}}], "body": {"op": "Let", "definitions": [{"name": {"id": "$bind_250", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Int"}, "purity": "Effectful"}}, "value": {"op": "DebugWrap", "annotation": "coerce to (⟨int⟩ -{ϖ₁₅₉}→ ⟨int⟩)!ϖ₄₆", "inner": {"op": "DebugWrap", "annotation": "coerce to (⟨int⟩ -{ϖ₂₂₉}→ ⟨int⟩)!ϖ₁₆₀", "inner": {"op": "App", "fn": {"op": "Var", "id": "k_248", "type": {"op": "Function", "params": [{"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}], "return": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Int"}, "purity": "Effectful"}, "purity": "Effectful"}}, "args": [{"op": "Construct", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "args": []}]}}}, "export_as": []}], "body": {"op": "Let", "definitions": [{"name": {"id": "$bind_251", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Int"}, "purity": "Effectful"}}, "value": {"op": "DebugWrap", "annotation": "coerce to ⟨int -δ₁₅₄→ int⟩!ϖ₄₇", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int -δ₁₅₄→ int⟩!ϖ₄₄", "inner": {"op": "DebugWrap", "annotation": "coerce to (⟨int⟩ -{ϖ₁₆₁}→ ⟨int⟩)!ϖ₄₂", "inner": {"op": "DebugWrap", "annotation": "coerce to (⟨int⟩ -{∅↪︎δ₁₅₃}→ ⟨int⟩)!(∅↪︎δ₄₂)", "inner": {"op": "App", "fn": {"op": "Var", "id": "+_27", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Int"}, "purity": "Pure"}, "purity": "Pure"}}, "args": [{"op": "Var", "id": "s_249", "type": {"op": "Int"}}]}}}}}, "export_as": []}], "body": {"op": "Let", "definitions": [{"name": {"id": "$bind_252", "type": {"op": "Int"}}, "value": {"op": "DebugWrap", "annotation": "coerce to ⟨int⟩!ϖ₄₇", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int⟩!ϖ₄₄", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int⟩!ϖ₄₃", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int⟩!ϖ₁₆₃", "inner": {"op": "App", "fn": {"op": "Var", "id": "$bind_251", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Int"}, "purity": "Effectful"}}, "args": [{"op": "Var", "id": "e_247", "type": {"op": "Int"}}]}}}}}, "export_as": []}], "body": {"op": "DebugWrap", "annotation": "coerce to ⟨int⟩!ϖ₄₇", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int⟩!ϖ₄₅", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int⟩!ϖ₁₆₄", "inner": {"op": "App", "fn": {"op": "Var", "id": "$bind_250", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Int"}, "purity": "Effectful"}}, "args": [{"op": "Var", "id": "$bind_252", "type": {"op": "Int"}}]}}}}}}}}}}, "returnType": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}}}]}, "body": {"op": "App", "fn": {"op": "Var", "id": "handled body_121", "type": {"op": "Function", "params": [], "return": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}, "purity": "Effectful"}}, "args": []}, "return": {"params": [{"id": "$val_param_245", "type": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}}], "body": {"op": "DebugWrap", "annotation": "coerce to (⟨int⟩ -{ϖ₁₅₃}→ ⟨int⟩)!ϖ₄₉", "inner": {"op": "DebugWrap", "annotation": "coerce to (⟨int⟩ -{∅↪︎δ₁₄₅}→ ⟨int⟩)!(∅↪︎δ₄₀)", "inner": {"op": "Abs", "params": [{"id": "s_246", "type": {"op": "Int"}}], "body": {"op": "Var", "id": "s_246", "type": {"op": "Int"}}}}}}}}, "args": [{"op": "Abs", "params": [], "body": {"op": "DebugWrap", "annotation": "coerce to ⟨𝟙⟩!({Emit}∪ϖ₂₉₄)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨𝟙⟩!({Emit}∪ϖ₂₉₃)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨𝟙⟩!({Emit}∪ϖ₂₉₂)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨𝟙⟩!({Emit}∪ϖ₂₉₁)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨𝟙⟩!({Emit}∪ϖ₂₉₀)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨𝟙⟩!({Emit}∪ϖ₂₈₉)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨𝟙⟩!({Emit}∪ϖ₂₈₈)", "inner": {"op": "App", "fn": {"op": "Abs", "params": [{"id": "handled body_117", "type": {"op": "Function", "params": [], "return": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}, "purity": "Effectful"}}], "body": {"op": "Reset", "label": {"op": "Var", "id": "Stop_2", "type": {"op": "Label", "binding": {"op": "Codata", "interface_tag": "Stop_2", "methods": [{"tag": "Stop_2", "params": [{"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}], "return": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}}]}}}, "region": {"id": "ignore", "type": {"op": "Ptr"}}, "binding": {"op": "New", "ifce_tag": "Stop_2", "methods": [{"tag": "Stop_2", "params": [{"id": "tuple_120", "type": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}}], "body": {"op": "Shift", "label": {"op": "Var", "id": "Stop_2", "type": {"op": "Label", "binding": {"op": "Codata", "interface_tag": "Stop_2", "methods": [{"tag": "Stop_2", "params": [{"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}], "return": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}}]}}}, "n": {"op": "Literal", "type": {"op": "Int"}, "value": 0}, "k": {"id": "k_119", "type": {"op": "Stack", "resume_return": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}, "resume_args": [{"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}]}}, "body": {"op": "Let", "definitions": [{"name": {"id": "k_241", "type": {"op": "Function", "params": [{"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}], "return": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}, "purity": "Effectful"}}, "value": {"op": "Abs", "params": [{"id": "kparam_118", "type": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}}], "body": {"op": "Resume", "k": {"op": "Var", "id": "k_119", "type": {"op": "Stack", "resume_return": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}, "resume_args": [{"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}]}}, "args": [{"op": "Var", "id": "kparam_118", "type": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}}]}}, "export_as": []}], "body": {"op": "Match", "scrutinee": {"op": "Var", "id": "tuple_120", "type": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}}, "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "clauses": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "params": [], "body": {"op": "DebugWrap", "annotation": "coerce to ⟨𝟙⟩!(∅↪︎({Emit}∪δ₂₄₃))", "inner": {"op": "Construct", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "args": []}}}], "default_clause": {"params": [], "body": {"op": "Primitive", "name": "!undefined:non-exhaustive match", "args": [], "returns": [{"id": "panic_return_1", "type": {"op": "Top"}}], "rest": {"op": "Var", "id": "panic_return_1", "type": {"op": "Top"}}}}}}, "returnType": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}}}]}, "body": {"op": "App", "fn": {"op": "Var", "id": "handled body_117", "type": {"op": "Function", "params": [], "return": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}, "purity": "Effectful"}}, "args": []}, "return": {"params": [{"id": "$id_par_240", "type": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}}], "body": {"op": "DebugWrap", "annotation": "coerce to ⟨𝟙⟩!(∅↪︎({Emit}∪δ₂₄₃))", "inner": {"op": "Var", "id": "$id_par_240", "type": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}}}}}}, "args": [{"op": "Abs", "params": [], "body": {"op": "Let", "definitions": [{"name": {"id": "$bind_215", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}, "purity": "Effectful"}, "purity": "Effectful"}}, "value": {"op": "DebugWrap", "annotation": "coerce to ⟨int -δ₁₆₅→ int -{Emit,\nStop}∪δ₂₆₂→ 𝟙⟩!({Stop}∪{Emit}∪ϖ₂₈₇)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int -δ₁₆₅→ int -{Emit,\nStop}∪δ₂₆₂→ 𝟙⟩!({Stop}∪{Emit}∪ϖ₂₈₆)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int -δ₁₆₅→ int -{Emit,\nStop}∪δ₂₆₂→ 𝟙⟩!({Stop}∪{Emit}∪ϖ₂₈₅)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int -δ₁₆₅→ int -{Emit,\nStop}∪δ₂₆₂→ 𝟙⟩!({Stop}∪{Emit}∪ϖ₂₈₄)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int -δ₁₆₅→ int -{Emit,\nStop}∪δ₂₆₂→ 𝟙⟩!({Stop}∪{Emit}∪ϖ₂₈₃)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int -δ₁₆₅→ int -{Emit,\nStop}∪δ₂₆₂→ 𝟙⟩!({Stop}∪{Emit}∪ϖ₂₈₂)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int -δ₁₆₅→ int -{Emit,\nStop}∪δ₂₆₂→ 𝟙⟩!({Stop}∪{Emit}∪ϖ₂₈₁)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int -δ₁₆₅→ int -{Emit,\nStop}∪δ₂₆₂→ 𝟙⟩!({Stop}∪{Emit}∪ϖ₂₈₀)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int -δ₁₆₅→ int -{Emit,\nStop}∪δ₂₆₂→ 𝟙⟩!({Stop}∪{Emit}∪ϖ₂₇₉)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int -δ₁₆₅→ int -{Emit,\nStop}∪δ₂₆₂→ 𝟙⟩!({Emit,\nStop}∪ϖ₂₇₈)", "inner": {"op": "DebugWrap", "annotation": "coerce to (⟨int⟩ -{ϖ₁₇₉}→ ⟨int⟩ -{{Stop}∪{Emit}∪ϖ₃₀₆}→ ⟨𝟙⟩)!({Emit,\nStop}∪ϖ₂₇₇)", "inner": {"op": "DebugWrap", "annotation": "coerce to (⟨int⟩ -{ϖ₁₈₀}→ ⟨int⟩ -{{Stop}∪{Emit}∪ϖ₃₀₅}→ ⟨𝟙⟩)!({Emit,\nStop}∪ϖ₂₇₆)", "inner": {"op": "App", "fn": {"op": "Abs", "params": [{"id": "handled body_106", "type": {"op": "Function", "params": [], "return": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}, "purity": "Effectful"}}], "body": {"op": "Reset", "label": {"op": "Var", "id": "Reade_0", "type": {"op": "Label", "binding": {"op": "Codata", "interface_tag": "Reade_0", "methods": [{"tag": "Reade_0", "params": [{"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}], "return": {"op": "Int"}}]}}}, "region": {"id": "ignore", "type": {"op": "Ptr"}}, "binding": {"op": "New", "ifce_tag": "Reade_0", "methods": [{"tag": "Reade_0", "params": [{"id": "tuple_109", "type": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}}], "body": {"op": "Shift", "label": {"op": "Var", "id": "Reade_0", "type": {"op": "Label", "binding": {"op": "Codata", "interface_tag": "Reade_0", "methods": [{"tag": "Reade_0", "params": [{"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}], "return": {"op": "Int"}}]}}}, "n": {"op": "Literal", "type": {"op": "Int"}, "value": 0}, "k": {"id": "k_108", "type": {"op": "Stack", "resume_return": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}, "purity": "Effectful"}, "purity": "Effectful"}, "resume_args": [{"op": "Int"}]}}, "body": {"op": "Let", "definitions": [{"name": {"id": "k_221", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}, "purity": "Effectful"}, "purity": "Effectful"}, "purity": "Effectful"}}, "value": {"op": "Abs", "params": [{"id": "kparam_107", "type": {"op": "Int"}}], "body": {"op": "Resume", "k": {"op": "Var", "id": "k_108", "type": {"op": "Stack", "resume_return": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}, "purity": "Effectful"}, "purity": "Effectful"}, "resume_args": [{"op": "Int"}]}}, "args": [{"op": "Var", "id": "kparam_107", "type": {"op": "Int"}}]}}, "export_as": []}], "body": {"op": "Match", "scrutinee": {"op": "Var", "id": "tuple_109", "type": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}}, "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "clauses": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "params": [], "body": {"op": "DebugWrap", "annotation": "coerce to (⟨int⟩ -{∅↪︎δ₁₆₂}→ ⟨int⟩ -{{Stop}∪{Emit}∪ϖ₃₀₂}→ ⟨𝟙⟩)!(∅↪︎({Emit,\nStop}∪δ₂₃₁))", "inner": {"op": "Abs", "params": [{"id": "i_222", "type": {"op": "Int"}}], "body": {"op": "Abs", "params": [{"id": "j_223", "type": {"op": "Int"}}], "body": {"op": "Let", "definitions": [{"name": {"id": "$bind_224", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Int"}, "purity": "Effectful"}}, "value": {"op": "DebugWrap", "annotation": "coerce to ⟨int -δ₁₆₈→ bool⟩!ϖ₈₈", "inner": {"op": "DebugWrap", "annotation": "coerce to (⟨int⟩ -{ϖ₁₈₃}→ ⟨bool⟩)!ϖ₅₇", "inner": {"op": "DebugWrap", "annotation": "coerce to (⟨int⟩ -{∅↪︎δ₁₆₇}→ ⟨bool⟩)!(∅↪︎δ₅₇)", "inner": {"op": "App", "fn": {"op": "Var", "id": ">_2", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Int"}, "purity": "Pure"}, "purity": "Pure"}}, "args": [{"op": "Var", "id": "i_222", "type": {"op": "Int"}}]}}}}, "export_as": []}], "body": {"op": "Let", "definitions": [{"name": {"id": "$bind_225", "type": {"op": "Int"}}, "value": {"op": "DebugWrap", "annotation": "coerce to ⟨bool⟩!ϖ₈₈", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨bool⟩!ϖ₅₈", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨bool⟩!ϖ₁₈₅", "inner": {"op": "App", "fn": {"op": "Var", "id": "$bind_224", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Int"}, "purity": "Effectful"}}, "args": [{"op": "Var", "id": "n_57", "type": {"op": "Int"}}]}}}}, "export_as": []}], "body": {"op": "DebugWrap", "annotation": "coerce to ⟨𝟙⟩!({Stop}∪{Emit}∪ϖ₃₀₁)", "inner": {"op": "Let", "definitions": [{"name": {"id": "scrutinee_110", "type": {"op": "Int"}}, "value": {"op": "Var", "id": "$bind_225", "type": {"op": "Int"}}, "export_as": []}], "body": {"op": "Let", "definitions": [{"name": {"id": "cond_115", "type": {"op": "Int"}}, "value": {"op": "Var", "id": "scrutinee_110", "type": {"op": "Int"}}, "export_as": []}], "body": {"op": "Switch", "scrutinee": {"op": "Var", "id": "cond_115", "type": {"op": "Int"}}, "cases": [{"value": {"op": "Literal", "type": {"op": "Bool"}, "value": true}, "then": {"op": "Let", "definitions": [{"name": {"id": "handler_116", "type": {"op": "Codata", "interface_tag": "Stop_2", "methods": [{"tag": "Stop_2", "params": [{"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}], "return": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}}]}}, "value": {"op": "GetDynamic", "label": {"op": "Var", "id": "Stop_2", "type": {"op": "Label", "binding": {"op": "Codata", "interface_tag": "Stop_2", "methods": [{"tag": "Stop_2", "params": [{"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}], "return": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}}]}}}, "n": {"op": "Literal", "type": {"op": "Int"}, "value": 0}}, "export_as": []}], "body": {"op": "Let", "definitions": [{"name": {"id": "y_226", "type": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}}, "value": {"op": "Invoke", "receiver": {"op": "Var", "id": "handler_116", "type": {"op": "Codata", "interface_tag": "Stop_2", "methods": [{"tag": "Stop_2", "params": [{"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}], "return": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}}]}}, "ifce_tag": "Stop_2", "tag": "Stop_2", "args": [{"op": "Construct", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "args": []}]}, "export_as": []}], "body": {"op": "DebugWrap", "annotation": "coerce to ⟨𝟙⟩!({Stop}∪ϖ₁₈₇)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨𝟙⟩!({Stop}∪∅↪︎δ₁₆₉)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨𝟙⟩!(∅↪︎{Stop})", "inner": {"op": "Var", "id": "y_226", "type": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}}}}}}}}], "default": {"op": "Let", "definitions": [{"name": {"id": "cond_111", "type": {"op": "Int"}}, "value": {"op": "Var", "id": "scrutinee_110", "type": {"op": "Int"}}, "export_as": []}], "body": {"op": "Switch", "scrutinee": {"op": "Var", "id": "cond_111", "type": {"op": "Int"}}, "cases": [{"value": {"op": "Literal", "type": {"op": "Bool"}, "value": false}, "then": {"op": "Let", "definitions": [{"name": {"id": "$bind_227", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Int"}, "purity": "Effectful"}}, "value": {"op": "DebugWrap", "annotation": "coerce to ⟨int -δ₁₇₃→ bool⟩!({Emit,\nStop}∪ϖ₃₀₀)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int -δ₁₇₃→ bool⟩!ϖ₈₃", "inner": {"op": "DebugWrap", "annotation": "coerce to (⟨int⟩ -{ϖ₁₈₉}→ ⟨bool⟩)!ϖ₅₉", "inner": {"op": "DebugWrap", "annotation": "coerce to (⟨int⟩ -{∅↪︎δ₁₇₂}→ ⟨bool⟩)!(∅↪︎δ₆₁)", "inner": {"op": "App", "fn": {"op": "Var", "id": "=_0", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Int"}, "purity": "Pure"}, "purity": "Pure"}}, "args": [{"op": "Var", "id": "j_223", "type": {"op": "Int"}}]}}}}}, "export_as": []}], "body": {"op": "Let", "definitions": [{"name": {"id": "$bind_228", "type": {"op": "Int"}}, "value": {"op": "DebugWrap", "annotation": "coerce to ⟨bool⟩!({Emit,\nStop}∪ϖ₃₀₀)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨bool⟩!ϖ₈₃", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨bool⟩!ϖ₆₀", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨bool⟩!ϖ₁₉₁", "inner": {"op": "App", "fn": {"op": "Var", "id": "$bind_227", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Int"}, "purity": "Effectful"}}, "args": [{"op": "Literal", "type": {"op": "Int"}, "value": 0}]}}}}}, "export_as": []}], "body": {"op": "DebugWrap", "annotation": "coerce to ⟨𝟙⟩!({Emit,\nStop}∪ϖ₃₀₀)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨𝟙⟩!({Emit,\nStop}∪ϖ₂₉₉)", "inner": {"op": "Let", "definitions": [{"name": {"id": "scrutinee_112", "type": {"op": "Int"}}, "value": {"op": "Var", "id": "$bind_228", "type": {"op": "Int"}}, "export_as": []}], "body": {"op": "Let", "definitions": [{"name": {"id": "cond_114", "type": {"op": "Int"}}, "value": {"op": "Var", "id": "scrutinee_112", "type": {"op": "Int"}}, "export_as": []}], "body": {"op": "Switch", "scrutinee": {"op": "Var", "id": "cond_114", "type": {"op": "Int"}}, "cases": [{"value": {"op": "Literal", "type": {"op": "Bool"}, "value": true}, "then": {"op": "Let", "definitions": [{"name": {"id": "$bind_229", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}, "purity": "Effectful"}, "purity": "Effectful"}}, "value": {"op": "DebugWrap", "annotation": "coerce to ⟨int -δ₁₇₅→ int -{Emit,\nStop}∪δ₂₇₂→ 𝟙⟩!({Emit,\nStop}∪ϖ₂₉₈)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int -δ₁₇₅→ int -{Emit,\nStop}∪δ₂₇₂→ 𝟙⟩!({Emit,\nStop}∪ϖ₂₉₇)", "inner": {"op": "DebugWrap", "annotation": "coerce to (⟨int⟩ -{ϖ₁₉₂}→ ⟨int⟩ -{{Emit,\nStop}∪ϖ₃₁₇}→ ⟨𝟙⟩)!({Emit,\nStop}∪ϖ₂₉₆)", "inner": {"op": "DebugWrap", "annotation": "coerce to (⟨int⟩ -{ϖ₂₄₈}→ ⟨int⟩ -{{Emit,\nStop}∪ϖ₃₁₆}→ ⟨𝟙⟩)!({Emit,\nStop}∪ϖ₂₉₅)", "inner": {"op": "App", "fn": {"op": "Var", "id": "k_221", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}, "purity": "Effectful"}, "purity": "Effectful"}, "purity": "Effectful"}}, "args": [{"op": "Var", "id": "newline_48", "type": {"op": "Int"}}]}}}}}, "export_as": []}], "body": {"op": "Let", "definitions": [{"name": {"id": "$bind_230", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Int"}, "purity": "Effectful"}}, "value": {"op": "DebugWrap", "annotation": "coerce to ⟨int -δ₁₇₇→ int⟩!({Emit,\nStop}∪ϖ₂₉₈)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int -δ₁₇₇→ int⟩!({Emit,\nStop}∪ϖ₂₉₇)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int -δ₁₇₇→ int⟩!ϖ₇₅", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int -δ₁₇₇→ int⟩!ϖ₇₂", "inner": {"op": "DebugWrap", "annotation": "coerce to (⟨int⟩ -{ϖ₁₉₄}→ ⟨int⟩)!ϖ₇₀", "inner": {"op": "DebugWrap", "annotation": "coerce to (⟨int⟩ -{∅↪︎δ₁₇₆}→ ⟨int⟩)!(∅↪︎δ₇₅)", "inner": {"op": "App", "fn": {"op": "Var", "id": "+_27", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Int"}, "purity": "Pure"}, "purity": "Pure"}}, "args": [{"op": "Var", "id": "i_222", "type": {"op": "Int"}}]}}}}}}}, "export_as": []}], "body": {"op": "Let", "definitions": [{"name": {"id": "$bind_231", "type": {"op": "Int"}}, "value": {"op": "DebugWrap", "annotation": "coerce to ⟨int⟩!({Emit,\nStop}∪ϖ₂₉₈)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int⟩!({Emit,\nStop}∪ϖ₂₉₇)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int⟩!ϖ₇₅", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int⟩!ϖ₇₂", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int⟩!ϖ₇₁", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int⟩!ϖ₁₉₆", "inner": {"op": "App", "fn": {"op": "Var", "id": "$bind_230", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Int"}, "purity": "Effectful"}}, "args": [{"op": "Literal", "type": {"op": "Int"}, "value": 1}]}}}}}}}, "export_as": []}], "body": {"op": "Let", "definitions": [{"name": {"id": "$bind_232", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}, "purity": "Effectful"}}, "value": {"op": "DebugWrap", "annotation": "coerce to ⟨int -{Emit, Stop}∪δ₂₇₄→ 𝟙⟩!({Emit,\nStop}∪ϖ₂₉₈)", "inner": {"op": "DebugWrap", "annotation": "coerce to (⟨int⟩ -{{Emit, Stop}∪ϖ₃₁₉}→ ⟨𝟙⟩)!({Emit,\nStop}∪ϖ₂₉₇)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int -{Emit,\nStop}∪δ₂₇₃→ 𝟙⟩!ϖ₇₅", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int -{Emit,\nStop}∪δ₂₇₃→ 𝟙⟩!ϖ₇₃", "inner": {"op": "DebugWrap", "annotation": "coerce to (⟨int⟩ -{{Emit,\nStop}∪ϖ₃₁₈}→ ⟨𝟙⟩)!ϖ₁₉₈", "inner": {"op": "App", "fn": {"op": "Var", "id": "$bind_229", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}, "purity": "Effectful"}, "purity": "Effectful"}}, "args": [{"op": "Var", "id": "$bind_231", "type": {"op": "Int"}}]}}}}}}, "export_as": []}], "body": {"op": "Let", "definitions": [{"name": {"id": "$bind_233", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Int"}, "purity": "Effectful"}}, "value": {"op": "DebugWrap", "annotation": "coerce to ⟨int -δ₁₈₁→ int⟩!({Emit,\nStop}∪ϖ₂₉₈)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int -δ₁₈₁→ int⟩!({Emit,\nStop}∪ϖ₃₂₂)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int -δ₁₈₁→ int⟩!ϖ₇₈", "inner": {"op": "DebugWrap", "annotation": "coerce to (⟨int⟩ -{ϖ₁₉₉}→ ⟨int⟩)!ϖ₇₆", "inner": {"op": "DebugWrap", "annotation": "coerce to (⟨int⟩ -{∅↪︎δ₁₈₀}→ ⟨int⟩)!(∅↪︎δ₈₁)", "inner": {"op": "App", "fn": {"op": "Var", "id": "+_27", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Int"}, "purity": "Pure"}, "purity": "Pure"}}, "args": [{"op": "Var", "id": "i_222", "type": {"op": "Int"}}]}}}}}}, "export_as": []}], "body": {"op": "Let", "definitions": [{"name": {"id": "$bind_234", "type": {"op": "Int"}}, "value": {"op": "DebugWrap", "annotation": "coerce to ⟨int⟩!({Emit,\nStop}∪ϖ₂₉₈)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int⟩!({Emit,\nStop}∪ϖ₃₂₂)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int⟩!ϖ₇₈", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int⟩!ϖ₇₇", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int⟩!ϖ₂₀₁", "inner": {"op": "App", "fn": {"op": "Var", "id": "$bind_233", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Int"}, "purity": "Effectful"}}, "args": [{"op": "Literal", "type": {"op": "Int"}, "value": 1}]}}}}}}, "export_as": []}], "body": {"op": "DebugWrap", "annotation": "coerce to ⟨𝟙⟩!({Emit,\nStop}∪ϖ₂₉₈)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨𝟙⟩!({Emit,\nStop}∪ϖ₃₂₂)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨𝟙⟩!({Emit,\nStop}∪ϖ₃₂₁)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨𝟙⟩!({Emit,\nStop}∪ϖ₃₂₀)", "inner": {"op": "App", "fn": {"op": "Var", "id": "$bind_232", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}, "purity": "Effectful"}}, "args": [{"op": "Var", "id": "$bind_234", "type": {"op": "Int"}}]}}}}}}}}}}}}], "default": {"op": "Let", "definitions": [{"name": {"id": "cond_113", "type": {"op": "Int"}}, "value": {"op": "Var", "id": "scrutinee_112", "type": {"op": "Int"}}, "export_as": []}], "body": {"op": "Switch", "scrutinee": {"op": "Var", "id": "cond_113", "type": {"op": "Int"}}, "cases": [{"value": {"op": "Literal", "type": {"op": "Bool"}, "value": false}, "then": {"op": "Let", "definitions": [{"name": {"id": "$bind_235", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}, "purity": "Effectful"}, "purity": "Effectful"}}, "value": {"op": "DebugWrap", "annotation": "coerce to ⟨int -δ₁₈₃→ int -{Emit,\nStop}∪δ₂₇₉→ 𝟙⟩!({Emit,\nStop}∪ϖ₃₁₄)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int -δ₁₈₃→ int -{Emit,\nStop}∪δ₂₇₉→ 𝟙⟩!({Emit,\nStop}∪ϖ₃₁₃)", "inner": {"op": "DebugWrap", "annotation": "coerce to (⟨int⟩ -{ϖ₂₀₃}→ ⟨int⟩ -{{Emit,\nStop}∪ϖ₃₂₅}→ ⟨𝟙⟩)!({Emit,\nStop}∪ϖ₃₁₂)", "inner": {"op": "DebugWrap", "annotation": "coerce to (⟨int⟩ -{ϖ₂₅₃}→ ⟨int⟩ -{{Emit,\nStop}∪ϖ₃₂₄}→ ⟨𝟙⟩)!({Emit,\nStop}∪ϖ₃₁₁)", "inner": {"op": "App", "fn": {"op": "Var", "id": "k_221", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}, "purity": "Effectful"}, "purity": "Effectful"}, "purity": "Effectful"}}, "args": [{"op": "Var", "id": "dollar_52", "type": {"op": "Int"}}]}}}}}, "export_as": []}], "body": {"op": "Let", "definitions": [{"name": {"id": "$bind_236", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}, "purity": "Effectful"}}, "value": {"op": "DebugWrap", "annotation": "coerce to ⟨int -{Emit, Stop}∪δ₂₈₁→ 𝟙⟩!({Emit,\nStop}∪ϖ₃₁₄)", "inner": {"op": "DebugWrap", "annotation": "coerce to (⟨int⟩ -{{Emit, Stop}∪ϖ₃₂₇}→ ⟨𝟙⟩)!({Emit,\nStop}∪ϖ₃₁₃)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int -{Emit,\nStop}∪δ₂₈₀→ 𝟙⟩!ϖ₆₂", "inner": {"op": "DebugWrap", "annotation": "coerce to (⟨int⟩ -{{Emit,\nStop}∪ϖ₃₂₆}→ ⟨𝟙⟩)!ϖ₂₀₆", "inner": {"op": "App", "fn": {"op": "Var", "id": "$bind_235", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}, "purity": "Effectful"}, "purity": "Effectful"}}, "args": [{"op": "Var", "id": "i_222", "type": {"op": "Int"}}]}}}}}, "export_as": []}], "body": {"op": "Let", "definitions": [{"name": {"id": "$bind_237", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Int"}, "purity": "Effectful"}}, "value": {"op": "DebugWrap", "annotation": "coerce to ⟨int -δ₁₈₇→ int⟩!({Emit,\nStop}∪ϖ₃₁₄)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int -δ₁₈₇→ int⟩!({Emit,\nStop}∪ϖ₃₃₀)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int -δ₁₈₇→ int⟩!ϖ₆₅", "inner": {"op": "DebugWrap", "annotation": "coerce to (⟨int⟩ -{ϖ₂₀₇}→ ⟨int⟩)!ϖ₆₃", "inner": {"op": "DebugWrap", "annotation": "coerce to (⟨int⟩ -{∅↪︎δ₁₈₆}→ ⟨int⟩)!(∅↪︎δ₆₈)", "inner": {"op": "App", "fn": {"op": "Var", "id": "-_34", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Int"}, "purity": "Pure"}, "purity": "Pure"}}, "args": [{"op": "Var", "id": "j_223", "type": {"op": "Int"}}]}}}}}}, "export_as": []}], "body": {"op": "Let", "definitions": [{"name": {"id": "$bind_238", "type": {"op": "Int"}}, "value": {"op": "DebugWrap", "annotation": "coerce to ⟨int⟩!({Emit,\nStop}∪ϖ₃₁₄)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int⟩!({Emit,\nStop}∪ϖ₃₃₀)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int⟩!ϖ₆₅", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int⟩!ϖ₆₄", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int⟩!ϖ₂₀₉", "inner": {"op": "App", "fn": {"op": "Var", "id": "$bind_237", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Int"}, "purity": "Effectful"}}, "args": [{"op": "Literal", "type": {"op": "Int"}, "value": 1}]}}}}}}, "export_as": []}], "body": {"op": "DebugWrap", "annotation": "coerce to ⟨𝟙⟩!({Emit,\nStop}∪ϖ₃₁₄)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨𝟙⟩!({Emit,\nStop}∪ϖ₃₃₀)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨𝟙⟩!({Emit,\nStop}∪ϖ₃₂₉)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨𝟙⟩!({Emit,\nStop}∪ϖ₃₂₈)", "inner": {"op": "App", "fn": {"op": "Var", "id": "$bind_236", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}, "purity": "Effectful"}}, "args": [{"op": "Var", "id": "$bind_238", "type": {"op": "Int"}}]}}}}}}}}}}], "default": {"op": "Primitive", "name": "!undefined:non-exhaustive match", "args": [], "returns": [{"id": "panic_return_1", "type": {"op": "Top"}}], "rest": {"op": "Var", "id": "panic_return_1", "type": {"op": "Top"}}}}}}}}}}}}}], "default": {"op": "Primitive", "name": "!undefined:non-exhaustive match", "args": [], "returns": [{"id": "panic_return_1", "type": {"op": "Top"}}], "rest": {"op": "Var", "id": "panic_return_1", "type": {"op": "Top"}}}}}}}}}}}}}}}], "default_clause": {"params": [], "body": {"op": "Primitive", "name": "!undefined:non-exhaustive match", "args": [], "returns": [{"id": "panic_return_1", "type": {"op": "Top"}}], "rest": {"op": "Var", "id": "panic_return_1", "type": {"op": "Top"}}}}}}, "returnType": {"op": "Int"}}}]}, "body": {"op": "App", "fn": {"op": "Var", "id": "handled body_106", "type": {"op": "Function", "params": [], "return": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}, "purity": "Effectful"}}, "args": []}, "return": {"params": [{"id": "$val_param_218", "type": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}}], "body": {"op": "DebugWrap", "annotation": "coerce to (⟨int⟩ -{ϖ₁₇₇}→ ⟨int⟩ -{ϖ₂₃₄}→ ⟨𝟙⟩)!ϖ₉₁", "inner": {"op": "DebugWrap", "annotation": "coerce to (⟨int⟩ -{∅↪︎δ₁₆₁}→ ⟨int⟩ -{∅↪︎δ₂₀₀}→ ⟨𝟙⟩)!(∅↪︎δ₅₆)", "inner": {"op": "Abs", "params": [{"id": "i_219", "type": {"op": "Int"}}], "body": {"op": "Abs", "params": [{"id": "j_220", "type": {"op": "Int"}}], "body": {"op": "Var", "id": "$val_param_218", "type": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}}}}}}}}}, "args": [{"op": "Abs", "params": [], "body": {"op": "DebugWrap", "annotation": "coerce to ⟨𝟙⟩!({Reade, Emit,\nStop}∪ϖ₂₇₅)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨𝟙⟩!({Reade, Emit,\nStop}∪ϖ₂₇₄)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨𝟙⟩!({Reade, Emit,\nStop}∪ϖ₂₇₃)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨𝟙⟩!({Reade, Emit,\nStop}∪ϖ₂₇₂)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨𝟙⟩!({Reade, Emit,\nStop}∪ϖ₂₂₇)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨𝟙⟩!({Reade, Emit,\nStop}∪ϖ₂₂₆)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨𝟙⟩!({Reade, Emit,\nStop}∪ϖ₂₂₅)", "inner": {"op": "App", "fn": {"op": "Var", "id": "parse_58", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}, "purity": "Effectful"}}, "args": [{"op": "Literal", "type": {"op": "Int"}, "value": 0}]}}}}}}}}}]}}}}}}}}}}}}}, "export_as": []}], "body": {"op": "Let", "definitions": [{"name": {"id": "$bind_216", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}, "purity": "Effectful"}}, "value": {"op": "DebugWrap", "annotation": "coerce to ⟨int -{Emit,\nStop}∪δ₂₆₄→ 𝟙⟩!({Stop}∪{Emit}∪ϖ₂₈₇)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int -{Emit,\nStop}∪δ₂₆₄→ 𝟙⟩!({Stop}∪{Emit}∪ϖ₂₈₆)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int -{Emit,\nStop}∪δ₂₆₄→ 𝟙⟩!({Stop}∪{Emit}∪ϖ₂₈₅)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int -{Emit,\nStop}∪δ₂₆₄→ 𝟙⟩!({Stop}∪{Emit}∪ϖ₂₈₄)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int -{Emit,\nStop}∪δ₂₆₄→ 𝟙⟩!({Stop}∪{Emit}∪ϖ₂₈₃)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int -{Emit,\nStop}∪δ₂₆₄→ 𝟙⟩!({Stop}∪{Emit}∪ϖ₂₈₂)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int -{Emit,\nStop}∪δ₂₆₄→ 𝟙⟩!({Stop}∪{Emit}∪ϖ₂₈₁)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int -{Emit,\nStop}∪δ₂₆₄→ 𝟙⟩!({Stop}∪{Emit}∪ϖ₂₈₀)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int -{Emit,\nStop}∪δ₂₆₄→ 𝟙⟩!({Stop}∪{Emit}∪ϖ₂₇₉)", "inner": {"op": "DebugWrap", "annotation": "coerce to (⟨int⟩ -{{Stop}∪{Emit}∪ϖ₃₀₈}→ ⟨𝟙⟩)!({Emit,\nStop}∪ϖ₂₇₈)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int -{Emit,\nStop}∪δ₂₆₃→ 𝟙⟩!ϖ₉₄", "inner": {"op": "DebugWrap", "annotation": "coerce to (⟨int⟩ -{{Stop}∪{Emit}∪ϖ₃₀₇}→ ⟨𝟙⟩)!ϖ₂₁₃", "inner": {"op": "App", "fn": {"op": "Var", "id": "$bind_215", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}, "purity": "Effectful"}, "purity": "Effectful"}}, "args": [{"op": "Literal", "type": {"op": "Int"}, "value": 0}]}}}}}}}}}}}}}, "export_as": []}], "body": {"op": "DebugWrap", "annotation": "coerce to ⟨𝟙⟩!({Stop}∪{Emit}∪ϖ₂₈₇)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨𝟙⟩!({Stop}∪{Emit}∪ϖ₂₈₆)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨𝟙⟩!({Stop}∪{Emit}∪ϖ₂₈₅)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨𝟙⟩!({Stop}∪{Emit}∪ϖ₂₈₄)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨𝟙⟩!({Stop}∪{Emit}∪ϖ₂₈₃)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨𝟙⟩!({Stop}∪{Emit}∪ϖ₂₈₂)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨𝟙⟩!({Stop}∪{Emit}∪ϖ₂₈₁)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨𝟙⟩!({Stop}∪{Emit}∪ϖ₂₈₀)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨𝟙⟩!({Stop}∪{Emit}∪ϖ₂₇₉)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨𝟙⟩!({Stop}∪{Emit}∪ϖ₃₁₀)", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨𝟙⟩!({Stop}∪{Emit}∪ϖ₃₀₉)", "inner": {"op": "App", "fn": {"op": "Var", "id": "$bind_216", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}, "purity": "Effectful"}}, "args": [{"op": "Literal", "type": {"op": "Int"}, "value": 0}]}}}}}}}}}}}}}}}]}}}}}}}}}]}}}}}}}}, "export_as": []}], "body": {"op": "DebugWrap", "annotation": "coerce to ⟨int⟩!ϖ₁₀₄", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int⟩!ϖ₁₀₂", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int⟩!ϖ₁₀₀", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int⟩!ϖ₂₁₅", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int⟩!ϖ₁₄₉", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int⟩!ϖ₅₂", "inner": {"op": "DebugWrap", "annotation": "coerce to ⟨int⟩!ϖ₁₆₇", "inner": {"op": "App", "fn": {"op": "Var", "id": "$bind_243", "type": {"op": "Function", "params": [{"op": "Int"}], "return": {"op": "Int"}, "purity": "Effectful"}}, "args": [{"op": "Literal", "type": {"op": "Int"}, "value": 0}]}}}}}}}}}}}, "export_as": ["run"]}], "main": {"op": "Reset", "label": {"op": "Var", "id": "Write_47", "type": {"op": "Label", "binding": {"op": "Codata", "interface_tag": "Write_47", "methods": [{"tag": "Write_47", "params": [{"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": [{\"op\": \"String\"}, {\"op\": \"String\"}]}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": [{\"op\": \"String\"}, {\"op\": \"String\"}]}", "fields": [{"op": "String"}, {"op": "String"}]}]}], "return": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}}]}}}, "region": {"id": "ignored", "type": {"op": "Ptr"}}, "binding": {"op": "New", "ifce_tag": "Write_47", "methods": []}, "body": {"op": "Reset", "label": {"op": "Var", "id": "RandomFloat_46", "type": {"op": "Label", "binding": {"op": "Codata", "interface_tag": "RandomFloat_46", "methods": [{"tag": "RandomFloat_46", "params": [{"op": "Double"}], "return": {"op": "Double"}}]}}}, "region": {"id": "ignored", "type": {"op": "Ptr"}}, "binding": {"op": "New", "ifce_tag": "RandomFloat_46", "methods": [{"tag": "RandomFloat_46", "params": [], "body": {"op": "Primitive", "name": "random(): Double", "args": [], "returns": [{"id": "ret0_105", "type": {"op": "Double"}}], "rest": {"op": "Var", "id": "ret0_105", "type": {"op": "Double"}}}}]}, "body": {"op": "Reset", "label": {"op": "Var", "id": "RandomInt_45", "type": {"op": "Label", "binding": {"op": "Codata", "interface_tag": "RandomInt_45", "methods": [{"tag": "RandomInt_45", "params": [{"op": "Int"}], "return": {"op": "Int"}}]}}}, "region": {"id": "ignored", "type": {"op": "Ptr"}}, "binding": {"op": "New", "ifce_tag": "RandomInt_45", "methods": [{"tag": "RandomInt_45", "params": [], "body": {"op": "Primitive", "name": "random(): Int", "args": [], "returns": [{"id": "ret0_104", "type": {"op": "Int"}}], "rest": {"op": "Var", "id": "ret0_104", "type": {"op": "Int"}}}}]}, "body": {"op": "Reset", "label": {"op": "Var", "id": "Raise_44", "type": {"op": "Label", "binding": {"op": "Codata", "interface_tag": "Raise_44", "methods": [{"tag": "Raise_44", "params": [{"op": "String"}], "return": {"op": "Top"}}]}}}, "region": {"id": "ignored", "type": {"op": "Ptr"}}, "binding": {"op": "New", "ifce_tag": "Raise_44", "methods": [{"tag": "Raise_44", "params": [{"id": "param0_102", "type": {"op": "String"}}], "body": {"op": "Primitive", "name": "panic(String): Bottom", "args": [{"op": "Var", "id": "param0_102", "type": {"op": "String"}}], "returns": [{"id": "ret0_103", "type": {"op": "Bottom"}}], "rest": {"op": "Var", "id": "ret0_103", "type": {"op": "Bottom"}}}}]}, "body": {"op": "Reset", "label": {"op": "Var", "id": "Read_43", "type": {"op": "Label", "binding": {"op": "Codata", "interface_tag": "Read_43", "methods": [{"tag": "Read_43", "params": [{"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}], "return": {"op": "String"}}]}}}, "region": {"id": "ignored", "type": {"op": "Ptr"}}, "binding": {"op": "New", "ifce_tag": "Read_43", "methods": [{"tag": "Read_43", "params": [], "body": {"op": "Primitive", "name": "readLn(): String", "args": [], "returns": [{"id": "ret0_101", "type": {"op": "String"}}], "rest": {"op": "Var", "id": "ret0_101", "type": {"op": "String"}}}}]}, "body": {"op": "Reset", "label": {"op": "Var", "id": "Print_42", "type": {"op": "Label", "binding": {"op": "Codata", "interface_tag": "Print_42", "methods": [{"tag": "Print_42", "params": [{"op": "String"}], "return": {"op": "Data", "type_tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "constructors": [{"tag": "{\"op\": \"eff$Tuple\", \"elements\": []}", "fields": []}]}}]}}}, "region": {"id": "ignored", "type": {"op": "Ptr"}}, "binding": {"op": "New", "ifce_tag": "Print_42", "methods": [{"tag": "Print_42", "params": [{"id": "param0_99", "type": {"op": "String"}}], "body": {"op": "Primitive", "name": "print(String): Unit", "args": [{"op": "Var", "id": "param0_99", "type": {"op": "String"}}], "returns": [{"id": "ret0_100", "type": {"op": "Unit"}}], "rest": {"op": "Var", "id": "ret0_100", "type": {"op": "Unit"}}}}]}, "body": {"op": "Seq", "elems": []}, "return": {"params": [{"id": "return_133", "type": {"op": "Top"}}], "body": {"op": "Var", "id": "return_133", "type": {"op": "Top"}}}}, "return": {"params": [{"id": "return_134", "type": {"op": "Top"}}], "body": {"op": "Var", "id": "return_134", "type": {"op": "Top"}}}}, "return": {"params": [{"id": "return_135", "type": {"op": "Top"}}], "body": {"op": "Var", "id": "return_135", "type": {"op": "Top"}}}}, "return": {"params": [{"id": "return_136", "type": {"op": "Top"}}], "body": {"op": "Var", "id": "return_136", "type": {"op": "Top"}}}}, "return": {"params": [{"id": "return_137", "type": {"op": "Top"}}], "body": {"op": "Var", "id": "return_137", "type": {"op": "Top"}}}}, "return": {"params": [{"id": "return_138", "type": {"op": "Top"}}], "body": {"op": "Var", "id": "return_138", "type": {"op": "Top"}}}}}