// Standard output to the console.
module interface std/core/console
 
//------------------------------
//#kki: import declarations
 
import std/core/types = std/core/types = "";
import std/core/unsafe = std/core/unsafe = "";
import std/core/hnd = std/core/hnd = "";
import std/core/string = std/core/string = "";
import std/core/show = std/core/show = "";
 
//------------------------------
//#kki: external imports
 
 
//------------------------------
//#kki: fixity declarations
 
 
//------------------------------
//#kki: local imported aliases
 
// Stateful functions can manipulate heap `:h` using allocations, reads and writes.
local alias std/core/types/st[139,1,139,47]<(h :: H)> :: H -> E = <(std/core/types/read :: H -> X)<(h :: H)>,(std/core/types/write :: H -> X)<(h :: H)>,(std/core/types/alloc :: H -> X)<(h :: H)>> = 1;
 
//------------------------------
//#kki: type declarations
 
// The console effect signifies that a function may write to the console.
pub type console[23,1,23,21] :: X ;
 
//------------------------------
//#kki: declarations
 
val redirect[30,14,30,21] : (std/core/types/ref :: (H, V) -> V)<(std/core/types/global :: H),(std/core/types/maybe :: V -> V)<(std/core/types/string) -> <(console :: X)> ()>>;
// Print a string to the console
 fun xprints[45,8,45,14] : (s : std/core/types/string) -> <(console :: X)> ();
// Print a string to the console, including a final newline character.
 fun xprintsln[38,8,38,16] : (s : std/core/types/string) -> <(console :: X)> ();
 fun prints[55,14,55,19] : (s : std/core/types/string) -> <(console :: X)> ();
// Print a value that has a `show` function
pub  fun show/print[76,9,76,18] : forall<a> (x : a, ?show : (a) -> std/core/types/string) -> <(console :: X)> ();
// Print a string to the console.
pub  fun string/print[72,9,72,20] : (s : std/core/types/string) -> <(console :: X)> ();
// Redirect `print` and `println` calls to a specified function.
 fun print-redirect[34,14,34,27] : (print : (msg : std/core/types/string) -> <(console :: X)> ()) -> <(std/core/types/st :: H -> E)<(std/core/types/global :: H)>,(console :: X),(std/core/types/ndet :: X)> ();
 fun printsln[62,14,62,21] : (s : std/core/types/string) -> <(console :: X)> ();
// Print a value that has a `show` function, including a final newline character.
pub  fun show/println[84,9,84,20] : forall<a> (x : a, ?show : (a) -> std/core/types/string) -> <(console :: X)> ();
// Print a string to the console, including a final newline character.
pub  fun string/println[80,9,80,22] : (s : std/core/types/string) -> <(console :: X)> ();
 
//------------------------------
//#kki: external declarations
 
// _Unsafe_. This function removes the state effect from the effect of an action
 extern unsafe-nostate[52,15,52,28] : forall<a,(h :: H)> (action : () -> <(std/core/types/st :: H -> E)<(h :: H)>,(console :: X)> a) -> (() -> <(console :: X)> a) = inline "#1";
 
//------------------------------
//#kki: inline definitions
 
//.inline-section
 fun show/print // inline size: 2
  = forall<a> fn<<(console :: X)>>(x: a, @implicit/show: (a) -> std/core/types/string){
    std/core/console/prints((@implicit/show(x)));
  };
 fun string/print // inline size: 1
  = fn<<(console :: X)>>(s: std/core/types/string){
    std/core/console/prints(s);
  };
 fun show/println // inline size: 2
  = forall<a> fn<<(console :: X)>>(x: a, @implicit/show: (a) -> std/core/types/string){
    std/core/console/printsln((@implicit/show(x)));
  };
 fun string/println // inline size: 1
  = fn<<(console :: X)>>(s: std/core/types/string){
    std/core/console/printsln(s);
  };