{"blocks":[{"label":"0(Name(getCurrentEvv))",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"current-evv"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"PrimOp","name":"getRef(Ref[Ptr]): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1(Name(setCurrentEvv))",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Const","format":"string","out":1,"value":"current-evv"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"PrimOp","name":"setRef(Ref[Ptr], Ptr): Unit","out":{"any":[0]},"in":{"any":[1,0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"2(Name(swapCurrentEvv))",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Const","format":"string","out":1,"value":"current-evv"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"PrimOp","name":"getRef(Ref[Ptr]): Ptr","out":{"any":[2]},"in":{"any":[1]}},
{"op":"PrimOp","name":"setRef(Ref[Ptr], Ptr): Unit","out":{"any":[0]},"in":{"any":[1,0]}},
{"op":"Copy","from":2,"to":0},
{"op":"Return","args":{"any":[0]}}]},
{"label":"3([k@[k@[k@Name(evvSwapCreate1)#21]#23]#26])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Return","args":{"any":[0]}}]},
{"label":"4([k@[k@Name(evvSwapCreate1)#21]#23])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Construct","out":0,"type":"evv","tag":"cons","args":{"any":[0,2]}},
{"op":"Push","target":3,"args":{"any":[1]}},
{"op":"Jump","target":1}]},
{"label":"5([k@Name(evvSwapCreate1)#21])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Push","target":4,"args":{"any":[0,2]}},
{"op":"Jump","target":40}]},
{"label":"6(Name(evvSwapCreate1))",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Construct","out":1,"type":"evv","tag":"nil","args":{"any":[]}},
{"op":"Push","target":5,"args":{"any":[0,1]}},
{"op":"Jump","target":0}]},
{"label":"7([k@[k@Name(evvSwapCreate0)#28]#31])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Return","args":{"any":[0]}}]},
{"label":"8([k@Name(evvSwapCreate0)#28])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Construct","out":1,"type":"evv","tag":"nil","args":{"any":[]}},
{"op":"Push","target":7,"args":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Jump","target":1}]},
{"label":"9(Name(evvSwapCreate0))",
"frameDescriptor":{"regs_any":0},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[]}},
{"op":"Push","target":8,"args":{"any":[]}},
{"op":"Jump","target":0}]},
{"label":"10([#41])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Return","args":{"any":[0]}}]},
{"label":"11([k@[k@[k@Name(evvSwapDelete)#33]#37]#39])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Push","target":10,"args":{"any":[1]}},
{"op":"Jump","target":1}]},
{"label":"12([k@[k@Name(evvSwapDelete)#33]#37])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Push","target":11,"args":{"any":[0]}},
{"op":"Swap","a":0,"b":1},
{"op":"Jump","target":23}]},
{"label":"13([k@Name(evvSwapDelete)#33])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"infixAdd(Int, Int): Int","out":{"any":[0]},"in":{"any":[1,0]}},
{"op":"Push","target":12,"args":{"any":[0]}},
{"op":"Jump","target":0}]},
{"label":"14([switch case for Bool(false)#42])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Return","args":{"any":[0]}}]},
{"label":"15([switch default case#44])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":1},
{"op":"Return","args":{"any":[0]}}]},
{"label":"16(Name(evvSwapDelete))",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Push","target":13,"args":{"any":[0]}},
{"op":"Switch","arg":1,"values":[false],"targets":[14],"default":15}]},
{"label":"17(Name(evHtag))",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Proj","out":0,"type":"std/core/hnd/ev","scrutinee":0,"tag":"std/core/hnd/Ev","field":0},
{"op":"Proj","out":0,"type":"std/core/hnd/htag","scrutinee":0,"tag":"std/core/hnd/Htag","field":0},
{"op":"Return","args":{"any":[0]}}]},
{"label":"18([match_def@Name(evvDelete)#49])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Const","format":"string","out":0,"value":"Out of bounds index into evidence vector"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"19([switch case for Int(0)#54])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Copy","from":2,"to":0},
{"op":"Return","args":{"any":[0]}}]},
{"label":"20([k@[switch default case#55]#61])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Construct","out":0,"type":"evv","tag":"cons","args":{"any":[1,0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"21([switch default case#55])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"int","out":3,"value":1},
{"op":"PrimOp","name":"infixSub(Int, Int): Int","out":{"any":[1]},"in":{"any":[1,3]}},
{"op":"Push","target":20,"args":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Copy","from":2,"to":1},
{"op":"Jump","target":23}]},
{"label":"22([match_cons@Name(evvDelete)#53])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Swap","a":0,"b":1},
{"op":"Switch","arg":1,"values":[0],"targets":[19],"default":21}]},
{"label":"23(Name(evvDelete))",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Match","type":"evv","scrutinee":1,"clauses":[{"tag":"cons","target":22,"args":{"any":[1,2]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3006]","target":18,"args":{"any":[]}}}]},
{"label":"24([match_def@Name(evvInsert)#64])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Construct","out":0,"type":"evv","tag":"cons","args":{"any":[0,1]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"25([k@[switch case for Bool(true)#75]#77])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Construct","out":0,"type":"evv","tag":"cons","args":{"any":[1,0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"26([switch case for Bool(true)#75])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Push","target":25,"args":{"any":[2]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":3,"to":0},
{"op":"Jump","target":31}]},
{"label":"27([switch default case#80])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Construct","out":0,"type":"evv","tag":"cons","args":{"any":[0,1]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"28([#71])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"infixGt(String, String): Boolean","out":{"any":[0]},"in":{"any":[5,0]}},
{"op":"Swap","a":3,"b":4},
{"op":"Swap","a":2,"b":4},
{"op":"Swap","a":1,"b":4},
{"op":"Swap","a":0,"b":4},
{"op":"Switch","arg":4,"values":[true],"targets":[26],"default":27}]},
{"label":"29([k@[match_cons@Name(evvInsert)#66]#68])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Push","target":28,"args":{"any":[1,2,3,4,0]}},
{"op":"Copy","from":3,"to":0},
{"op":"Jump","target":17}]},
{"label":"30([match_cons@Name(evvInsert)#66])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Push","target":29,"args":{"any":[0,1,2,3]}},
{"op":"Jump","target":17}]},
{"label":"31(Name(evvInsert))",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Swap","a":0,"b":1},
{"op":"Match","type":"evv","scrutinee":1,"clauses":[{"tag":"cons","target":30,"args":{"any":[2,3]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3007]","target":24,"args":{"any":[]}}}]},
{"label":"32([match_def@Name(evvIndex)#82])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Const","format":"string","out":0,"value":"Undefined: no evidence for htag"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"33([switch case for Bool(true)#94])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"34([switch default case#95])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"int","out":3,"value":1},
{"op":"PrimOp","name":"infixAdd(Int, Int): Int","out":{"any":[0]},"in":{"any":[0,3]}},
{"op":"Swap","a":2,"b":0},
{"op":"Jump","target":37}]},
{"label":"35([k@[match_cons@Name(evvIndex)#86]#90])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"infixEq(String, String): Boolean","out":{"any":[0]},"in":{"any":[4,0]}},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Switch","arg":3,"values":[true],"targets":[33],"default":34}]},
{"label":"36([match_cons@Name(evvIndex)#86])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Proj","out":4,"type":"std/core/hnd/htag","scrutinee":1,"tag":"std/core/hnd/Htag","field":0},
{"op":"Push","target":35,"args":{"any":[0,1,3,4]}},
{"op":"Copy","from":2,"to":0},
{"op":"Jump","target":17}]},
{"label":"37(Name(evvIndex))",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Swap","a":2,"b":0},
{"op":"Match","type":"evv","scrutinee":2,"clauses":[{"tag":"cons","target":36,"args":{"any":[2,3]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3008]","target":32,"args":{"any":[]}}}]},
{"label":"38([switch case for Int(0)#100])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Proj","out":0,"type":"evv","scrutinee":0,"tag":"cons","field":0},
{"op":"Return","args":{"any":[0]}}]},
{"label":"39([switch default case#102])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Proj","out":0,"type":"evv","scrutinee":0,"tag":"cons","field":1},
{"op":"Const","format":"int","out":2,"value":1},
{"op":"PrimOp","name":"infixSub(Int, Int): Int","out":{"any":[1]},"in":{"any":[1,2]}},
{"op":"Jump","target":40}]},
{"label":"40(Name(elt))",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Switch","arg":1,"values":[0],"targets":[38],"default":39}]},
{"label":"41([match_def@[mcore:[#373]#109]#110])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"42([#111])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"htag\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"tagname\\\"0\",\"type\": {\"op\": \"String\"}},\"annotation\": \"genTest: normal: (@x: string) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"tagname\\\\\\\"0\\\",\\\"type\\\": {\\\"op\\\": \\\"String\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"htag\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"tagname\\\"0\",\"type\": {\"op\": \"String\"}},\"annotation\": \"genTest: normal: (@x: string) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"tagname\\\\\\\"0\\\",\\\"type\\\": {\\\"op\\\": \\\"String\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"43([mcore:[#373]#109])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"htag\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}: \"std/core/hnd/htag\".\"std/core/hnd/Htag\"(({\"op\": \"Var\",\"id\": \"@\\\"tagname\\\"0\",\"type\": {\"op\": \"String\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"htag\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}: \"std/core/hnd/htag\".\"std/core/hnd/Htag\"(({\"op\": \"Var\",\"id\": \"@\\\"tagname\\\"0\",\"type\": {\"op\": \"String\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/htag","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Htag","target":42,"args":{"any":[0]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3009]","target":41,"args":{"any":[]}}}]},
{"label":"44([k@[mcore:[#376]#112]#114])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Jump","target":1057}]},
{"label":"45([#118])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"46([k@[#119]#121])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"47([match_def@[#119]#123])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"48([match_std/core/hnd/Htag@[#119]#124])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"tagname\\\"2\",\"type\": {\"op\": \"String\"}},\"annotation\": \"genTest: normal: (@x: string) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"tagname\\\\\\\"2\\\",\\\"type\\\": {\\\"op\\\": \\\"String\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"tagname\\\"2\",\"type\": {\"op\": \"String\"}},\"annotation\": \"genTest: normal: (@x: string) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"tagname\\\\\\\"2\\\",\\\"type\\\": {\\\"op\\\": \\\"String\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"49([#119])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"tagname\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (@this) {\n  ((@skip std/core/hnd/Htag((@x: string) : string) : (hnd/htag :: ((E, V) -> V) -> V)<(a :: (E, V) -> V)> ) as @pat@1: ((hnd/htag :: ((E, V) -> V) -> V)<(2026 :: (E, V) -> V)>))\n     -> @x;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}: \"std/core/hnd/htag\".\"std/core/hnd/Htag\"(({\"op\": \"Var\",\"id\": \"@\\\"tagname\\\"2\",\"type\": {\"op\": \"String\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}: \"std/core/hnd/htag\".\"std/core/hnd/Htag\"(({\"op\": \"Var\",\"id\": \"@\\\"tagname\\\"2\",\"type\": {\"op\": \"String\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (@this) {\n  ((@skip std/core/hnd/Htag((@x: string) : string) : (hnd/htag :: ((E, V) -> V) -> V)<(a :: (E, V) -> V)> ) as @pat@1: ((hnd/htag :: ((E, V) -> V) -> V)<(2026 :: (E, V) -> V)>))\n     -> @x;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"tagname\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}})]","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/htag","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Htag","target":48,"args":{"any":[0]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3010]","target":47,"args":{"any":[]}}}]},
{"label":"50([match_def@[mcore:[#376]#112]#117])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"tagname\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}: \"std/core/types/@optional\".\"std/core/types/@None\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"tagname\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}: \"std/core/types/@optional\".\"std/core/types/@None\"(())","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/@optional","scrutinee":1,"clauses":[{"tag":"std/core/types/@None","target":49,"args":{"any":[]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3011]","target":45,"args":{"any":[]}}}]},
{"label":"51([#125])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"tagname\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}),(@uniq-tagname@2014,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"value\\\"1\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@uniq-tagname@2014: string) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"value\\\\\\\"1\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"tagname\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}),(@uniq-tagname@2014,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"value\\\"1\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@uniq-tagname@2014: string) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"value\\\\\\\"1\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"52([mcore:[#376]#112])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Htag<(a :: (E, V) -> V)>((match (tagname) {\n  ((std/core/types/@Optional((@uniq-tagname@2014: string) : string) : ? string ) as @pat: ? string)\n     -> @uniq-tagname@2014;\n  ((@skip std/core/types/@None() : ? string ) as @pat@0: ? string)\n     -> (match (@this) {\n      ((@skip std/core/hnd/Htag((@x: string) : string) : (hnd/htag :: ((E, V) -> V) -> V)<(a :: (E, V) -> V)> ) as @pat@1: ((hnd/htag :: ((E, V) -> V) -> V)<(2026 :: (E, V) -> V)>))\n         -> @x;\n    });\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (tagname) {\n  ((std/core/types/@Optional((@uniq-tagname@2014: string) : string) : ? string ) as @pat: ? string)\n     -> @uniq-tagname@2014;\n  ((@skip std/core/types/@None() : ? string ) as @pat@0: ? string)\n     -> (match (@this) {\n      ((@skip std/core/hnd/Htag((@x: string) : string) : (hnd/htag :: ((E, V) -> V) -> V)<(a :: (E, V) -> V)> ) as @pat@1: ((hnd/htag :: ((E, V) -> V) -> V)<(2026 :: (E, V) -> V)>))\n         -> @x;\n    });\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"tagname\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}: \"std/core/types/@optional\".\"std/core/types/@Optional\"(({\"op\": \"Var\",\"id\": \"@\\\"value\\\"1\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Push","target":44,"args":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"tagname\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}: \"std/core/types/@optional\".\"std/core/types/@Optional\"(({\"op\": \"Var\",\"id\": \"@\\\"value\\\"1\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (tagname) {\n  ((std/core/types/@Optional((@uniq-tagname@2014: string) : string) : ? string ) as @pat: ? string)\n     -> @uniq-tagname@2014;\n  ((@skip std/core/types/@None() : ? string ) as @pat@0: ? string)\n     -> (match (@this) {\n      ((@skip std/core/hnd/Htag((@x: string) : string) : (hnd/htag :: ((E, V) -> V) -> V)<(a :: (E, V) -> V)> ) as @pat@1: ((hnd/htag :: ((E, V) -> V) -> V)<(2026 :: (E, V) -> V)>))\n         -> @x;\n    });\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Htag<(a :: (E, V) -> V)>((match (tagname) {\n  ((std/core/types/@Optional((@uniq-tagname@2014: string) : string) : ? string ) as @pat: ? string)\n     -> @uniq-tagname@2014;\n  ((@skip std/core/types/@None() : ? string ) as @pat@0: ? string)\n     -> (match (@this) {\n      ((@skip std/core/hnd/Htag((@x: string) : string) : (hnd/htag :: ((E, V) -> V) -> V)<(a :: (E, V) -> V)> ) as @pat@1: ((hnd/htag :: ((E, V) -> V) -> V)<(2026 :: (E, V) -> V)>))\n         -> @x;\n    });\n}))","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/@optional","scrutinee":1,"clauses":[{"tag":"std/core/types/@Optional","target":51,"args":{"any":[2]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3012]","target":50,"args":{"any":[]}}}]},
{"label":"53([match_def@[mcore:[#377]#126]#127])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"54([#128])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"3\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@x: hnd/htag<2048>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"3\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"4\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/marker<2034,2035>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"4\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"5\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@1: 2048<2034,2035>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"5\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"6\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (@pat@2: hnd/evv<2034>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"6\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"3\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@x: hnd/htag<2048>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"3\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"4\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/marker<2034,2035>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"4\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"5\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@1: 2048<2034,2035>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"5\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"6\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (@pat@2: hnd/evv<2034>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"6\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"55([mcore:[#377]#126])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"3\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"4\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"5\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"6\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"3\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"4\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"5\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"6\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/ev","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Ev","target":54,"args":{"any":[0,1,2,3]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3013]","target":53,"args":{"any":[]}}}]},
{"label":"56([k@[mcore:[#383]#129]#131])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Swap","a":3,"b":1},
{"op":"Jump","target":1058}]},
{"label":"57([#135])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"58([k@[#136]#138])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"59([match_def@[#136]#140])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"60([match_std/core/hnd/Ev@[#136]#141])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"8\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@x: hnd/htag<2090>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"8\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@0@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"9\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@0@0: hnd/marker<2034,2035>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"9\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@1@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"10\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@1@0: 2090<2034,2035>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"10\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"11\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (@pat@2: hnd/evv<2034>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"11\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"8\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@x: hnd/htag<2090>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"8\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@0@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"9\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@0@0: hnd/marker<2034,2035>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"9\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@1@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"10\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@1@0: 2090<2034,2035>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"10\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"11\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (@pat@2: hnd/evv<2034>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"11\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"61([#136])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"htag\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (@this) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@x: (hnd/htag :: ((E, V) -> V) -> V)<(2090 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@0@0: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@1@0: (2090 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (@pat@2: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat@1: ((hnd/ev :: ((E, V) -> V) -> V)<(2090 :: (E, V) -> V)>))\n     -> @x;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"8\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"9\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"10\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"11\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"8\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"9\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"10\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"11\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (@this) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@x: (hnd/htag :: ((E, V) -> V) -> V)<(2090 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@0@0: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@1@0: (2090 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (@pat@2: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat@1: ((hnd/ev :: ((E, V) -> V) -> V)<(2090 :: (E, V) -> V)>))\n     -> @x;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"htag\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}})]","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/ev","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Ev","target":60,"args":{"any":[0,1,2,3]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3014]","target":59,"args":{"any":[]}}}]},
{"label":"62([match_def@[mcore:[#383]#129]#134])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"htag\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}: \"std/core/types/@optional\".\"std/core/types/@None\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"htag\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}: \"std/core/types/@optional\".\"std/core/types/@None\"(())","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/@optional","scrutinee":1,"clauses":[{"tag":"std/core/types/@None","target":61,"args":{"any":[]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3015]","target":57,"args":{"any":[]}}}]},
{"label":"63([#142])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"htag\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}),(@uniq-htag@2065,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"value\\\"7\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@uniq-htag@2065: hnd/htag<2090>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"value\\\\\\\"7\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"htag\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}),(@uniq-htag@2065,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"value\\\"7\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@uniq-htag@2065: hnd/htag<2090>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"value\\\\\\\"7\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"64([mcore:[#383]#129])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Ev<(a :: (E, V) -> V),(e :: E),a>((match (htag) {\n    ((std/core/types/@Optional((@uniq-htag@2065: (hnd/htag :: ((E, V) -> V) -> V)<(2090 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(a :: (E, V) -> V)>) : ? ((hnd/htag :: ((E, V) -> V) -> V)<(a :: (E, V) -> V)>) ) as @pat: ? ((hnd/htag :: ((E, V) -> V) -> V)<(2090 :: (E, V) -> V)>))\n       -> @uniq-htag@2065;\n    ((@skip std/core/types/@None() : ? ((hnd/htag :: ((E, V) -> V) -> V)<(a :: (E, V) -> V)>) ) as @pat@0: ? ((hnd/htag :: ((E, V) -> V) -> V)<(2090 :: (E, V) -> V)>))\n       -> (match (@this) {\n        ((@skip std/core/hnd/Ev<(e :: E),a>((@x: (hnd/htag :: ((E, V) -> V) -> V)<(2090 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@0@0: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@1@0: (2090 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (@pat@2: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat@1: ((hnd/ev :: ((E, V) -> V) -> V)<(2090 :: (E, V) -> V)>))\n           -> @x;\n      });\n  }), marker, hnd, hevv)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (htag) {\n  ((std/core/types/@Optional((@uniq-htag@2065: (hnd/htag :: ((E, V) -> V) -> V)<(2090 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(a :: (E, V) -> V)>) : ? ((hnd/htag :: ((E, V) -> V) -> V)<(a :: (E, V) -> V)>) ) as @pat: ? ((hnd/htag :: ((E, V) -> V) -> V)<(2090 :: (E, V) -> V)>))\n     -> @uniq-htag@2065;\n  ((@skip std/core/types/@None() : ? ((hnd/htag :: ((E, V) -> V) -> V)<(a :: (E, V) -> V)>) ) as @pat@0: ? ((hnd/htag :: ((E, V) -> V) -> V)<(2090 :: (E, V) -> V)>))\n     -> (match (@this) {\n      ((@skip std/core/hnd/Ev<(e :: E),a>((@x: (hnd/htag :: ((E, V) -> V) -> V)<(2090 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@0@0: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@1@0: (2090 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (@pat@2: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat@1: ((hnd/ev :: ((E, V) -> V) -> V)<(2090 :: (E, V) -> V)>))\n         -> @x;\n    });\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"htag\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}: \"std/core/types/@optional\".\"std/core/types/@Optional\"(({\"op\": \"Var\",\"id\": \"@\\\"value\\\"7\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Push","target":56,"args":{"any":[4,3,2]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"htag\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}: \"std/core/types/@optional\".\"std/core/types/@Optional\"(({\"op\": \"Var\",\"id\": \"@\\\"value\\\"7\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (htag) {\n  ((std/core/types/@Optional((@uniq-htag@2065: (hnd/htag :: ((E, V) -> V) -> V)<(2090 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(a :: (E, V) -> V)>) : ? ((hnd/htag :: ((E, V) -> V) -> V)<(a :: (E, V) -> V)>) ) as @pat: ? ((hnd/htag :: ((E, V) -> V) -> V)<(2090 :: (E, V) -> V)>))\n     -> @uniq-htag@2065;\n  ((@skip std/core/types/@None() : ? ((hnd/htag :: ((E, V) -> V) -> V)<(a :: (E, V) -> V)>) ) as @pat@0: ? ((hnd/htag :: ((E, V) -> V) -> V)<(2090 :: (E, V) -> V)>))\n     -> (match (@this) {\n      ((@skip std/core/hnd/Ev<(e :: E),a>((@x: (hnd/htag :: ((E, V) -> V) -> V)<(2090 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@0@0: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@1@0: (2090 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (@pat@2: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat@1: ((hnd/ev :: ((E, V) -> V) -> V)<(2090 :: (E, V) -> V)>))\n         -> @x;\n    });\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Ev<(a :: (E, V) -> V),(e :: E),a>((match (htag) {\n    ((std/core/types/@Optional((@uniq-htag@2065: (hnd/htag :: ((E, V) -> V) -> V)<(2090 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(a :: (E, V) -> V)>) : ? ((hnd/htag :: ((E, V) -> V) -> V)<(a :: (E, V) -> V)>) ) as @pat: ? ((hnd/htag :: ((E, V) -> V) -> V)<(2090 :: (E, V) -> V)>))\n       -> @uniq-htag@2065;\n    ((@skip std/core/types/@None() : ? ((hnd/htag :: ((E, V) -> V) -> V)<(a :: (E, V) -> V)>) ) as @pat@0: ? ((hnd/htag :: ((E, V) -> V) -> V)<(2090 :: (E, V) -> V)>))\n       -> (match (@this) {\n        ((@skip std/core/hnd/Ev<(e :: E),a>((@x: (hnd/htag :: ((E, V) -> V) -> V)<(2090 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@0@0: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@1@0: (2090 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (@pat@2: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat@1: ((hnd/ev :: ((E, V) -> V) -> V)<(2090 :: (E, V) -> V)>))\n           -> @x;\n      });\n  }), marker, hnd, hevv)","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/@optional","scrutinee":1,"clauses":[{"tag":"std/core/types/@Optional","target":63,"args":{"any":[2]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3016]","target":62,"args":{"any":[]}}}]},
{"label":"65([match_def@[mcore:[#384]#143]#144])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"66([#145])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"clause0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"12\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (@x: (hnd/marker<2128,2129>, hnd/ev<2127>) -> 2128 2126) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"12\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"clause0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"12\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (@x: (hnd/marker<2128,2129>, hnd/ev<2127>) -> 2128 2126) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"12\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"67([mcore:[#384]#143])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"clause0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}: \"std/core/hnd/clause0\".\"std/core/hnd/Clause0\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"12\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"clause0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}: \"std/core/hnd/clause0\".\"std/core/hnd/Clause0\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"12\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/clause0","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Clause0","target":66,"args":{"any":[0]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3017]","target":65,"args":{"any":[]}}}]},
{"label":"68([k@[mcore:[#387]#146]#148])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Jump","target":1059}]},
{"label":"69([#152])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"70([k@[#153]#155])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"71([match_def@[#153]#157])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"72([match_std/core/hnd/Clause0@[#153]#158])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"14\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (@x: (hnd/marker<2194,2195>, hnd/ev<2193>) -> 2194 2192) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"14\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"14\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (@x: (hnd/marker<2194,2195>, hnd/ev<2193>) -> 2194 2192) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"14\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"73([#153])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"clause\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (@this) {\n  ((@skip std/core/hnd/Clause0((@x: ((hnd/marker :: (E, V) -> V)<(2194 :: E),2195>, (hnd/ev :: ((E, V) -> V) -> V)<(2193 :: (E, V) -> V)>) -> (2194 :: E) 2192) : ((hnd/marker :: (E, V) -> V)<(e :: E),c>, (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>) -> (e :: E) a) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<a,(b :: (E, V) -> V),(e :: E),c> ) as @pat@1: ((hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<2192,(2193 :: (E, V) -> V),(2194 :: E),2195>))\n     -> @x;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}: \"std/core/hnd/clause0\".\"std/core/hnd/Clause0\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"14\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}: \"std/core/hnd/clause0\".\"std/core/hnd/Clause0\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"14\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (@this) {\n  ((@skip std/core/hnd/Clause0((@x: ((hnd/marker :: (E, V) -> V)<(2194 :: E),2195>, (hnd/ev :: ((E, V) -> V) -> V)<(2193 :: (E, V) -> V)>) -> (2194 :: E) 2192) : ((hnd/marker :: (E, V) -> V)<(e :: E),c>, (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>) -> (e :: E) a) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<a,(b :: (E, V) -> V),(e :: E),c> ) as @pat@1: ((hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<2192,(2193 :: (E, V) -> V),(2194 :: E),2195>))\n     -> @x;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"clause\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}})]","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/clause0","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Clause0","target":72,"args":{"any":[0]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3018]","target":71,"args":{"any":[]}}}]},
{"label":"74([match_def@[mcore:[#387]#146]#151])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"clause\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}: \"std/core/types/@optional\".\"std/core/types/@None\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"clause\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}: \"std/core/types/@optional\".\"std/core/types/@None\"(())","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/@optional","scrutinee":1,"clauses":[{"tag":"std/core/types/@None","target":73,"args":{"any":[]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3019]","target":69,"args":{"any":[]}}}]},
{"label":"75([#159])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"clause\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}),(@uniq-clause@2165,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"value\\\"13\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@uniq-clause@2165: (hnd/marker<2194,2195>, hnd/ev<2193>) -> 2194 2192) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"value\\\\\\\"13\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"clause\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}),(@uniq-clause@2165,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"value\\\"13\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@uniq-clause@2165: (hnd/marker<2194,2195>, hnd/ev<2193>) -> 2194 2192) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"value\\\\\\\"13\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"76([mcore:[#387]#146])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Clause0<a,(a :: (E, V) -> V),(e :: E),a>((match (clause) {\n  ((std/core/types/@Optional((@uniq-clause@2165: ((hnd/marker :: (E, V) -> V)<(2194 :: E),2195>, (hnd/ev :: ((E, V) -> V) -> V)<(2193 :: (E, V) -> V)>) -> (2194 :: E) 2192) : ((hnd/marker :: (E, V) -> V)<(e :: E),c>, (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>) -> (e :: E) a) : ? (((hnd/marker :: (E, V) -> V)<(e :: E),c>, (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>) -> (e :: E) a) ) as @pat: ? (((hnd/marker :: (E, V) -> V)<(2194 :: E),2195>, (hnd/ev :: ((E, V) -> V) -> V)<(2193 :: (E, V) -> V)>) -> (2194 :: E) 2192))\n     -> @uniq-clause@2165;\n  ((@skip std/core/types/@None() : ? (((hnd/marker :: (E, V) -> V)<(e :: E),c>, (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>) -> (e :: E) a) ) as @pat@0: ? (((hnd/marker :: (E, V) -> V)<(2194 :: E),2195>, (hnd/ev :: ((E, V) -> V) -> V)<(2193 :: (E, V) -> V)>) -> (2194 :: E) 2192))\n     -> (match (@this) {\n      ((@skip std/core/hnd/Clause0((@x: ((hnd/marker :: (E, V) -> V)<(2194 :: E),2195>, (hnd/ev :: ((E, V) -> V) -> V)<(2193 :: (E, V) -> V)>) -> (2194 :: E) 2192) : ((hnd/marker :: (E, V) -> V)<(e :: E),c>, (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>) -> (e :: E) a) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<a,(b :: (E, V) -> V),(e :: E),c> ) as @pat@1: ((hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<2192,(2193 :: (E, V) -> V),(2194 :: E),2195>))\n         -> @x;\n    });\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (clause) {\n  ((std/core/types/@Optional((@uniq-clause@2165: ((hnd/marker :: (E, V) -> V)<(2194 :: E),2195>, (hnd/ev :: ((E, V) -> V) -> V)<(2193 :: (E, V) -> V)>) -> (2194 :: E) 2192) : ((hnd/marker :: (E, V) -> V)<(e :: E),c>, (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>) -> (e :: E) a) : ? (((hnd/marker :: (E, V) -> V)<(e :: E),c>, (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>) -> (e :: E) a) ) as @pat: ? (((hnd/marker :: (E, V) -> V)<(2194 :: E),2195>, (hnd/ev :: ((E, V) -> V) -> V)<(2193 :: (E, V) -> V)>) -> (2194 :: E) 2192))\n     -> @uniq-clause@2165;\n  ((@skip std/core/types/@None() : ? (((hnd/marker :: (E, V) -> V)<(e :: E),c>, (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>) -> (e :: E) a) ) as @pat@0: ? (((hnd/marker :: (E, V) -> V)<(2194 :: E),2195>, (hnd/ev :: ((E, V) -> V) -> V)<(2193 :: (E, V) -> V)>) -> (2194 :: E) 2192))\n     -> (match (@this) {\n      ((@skip std/core/hnd/Clause0((@x: ((hnd/marker :: (E, V) -> V)<(2194 :: E),2195>, (hnd/ev :: ((E, V) -> V) -> V)<(2193 :: (E, V) -> V)>) -> (2194 :: E) 2192) : ((hnd/marker :: (E, V) -> V)<(e :: E),c>, (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>) -> (e :: E) a) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<a,(b :: (E, V) -> V),(e :: E),c> ) as @pat@1: ((hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<2192,(2193 :: (E, V) -> V),(2194 :: E),2195>))\n         -> @x;\n    });\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"clause\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}: \"std/core/types/@optional\".\"std/core/types/@Optional\"(({\"op\": \"Var\",\"id\": \"@\\\"value\\\"13\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Push","target":68,"args":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"clause\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}: \"std/core/types/@optional\".\"std/core/types/@Optional\"(({\"op\": \"Var\",\"id\": \"@\\\"value\\\"13\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (clause) {\n  ((std/core/types/@Optional((@uniq-clause@2165: ((hnd/marker :: (E, V) -> V)<(2194 :: E),2195>, (hnd/ev :: ((E, V) -> V) -> V)<(2193 :: (E, V) -> V)>) -> (2194 :: E) 2192) : ((hnd/marker :: (E, V) -> V)<(e :: E),c>, (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>) -> (e :: E) a) : ? (((hnd/marker :: (E, V) -> V)<(e :: E),c>, (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>) -> (e :: E) a) ) as @pat: ? (((hnd/marker :: (E, V) -> V)<(2194 :: E),2195>, (hnd/ev :: ((E, V) -> V) -> V)<(2193 :: (E, V) -> V)>) -> (2194 :: E) 2192))\n     -> @uniq-clause@2165;\n  ((@skip std/core/types/@None() : ? (((hnd/marker :: (E, V) -> V)<(e :: E),c>, (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>) -> (e :: E) a) ) as @pat@0: ? (((hnd/marker :: (E, V) -> V)<(2194 :: E),2195>, (hnd/ev :: ((E, V) -> V) -> V)<(2193 :: (E, V) -> V)>) -> (2194 :: E) 2192))\n     -> (match (@this) {\n      ((@skip std/core/hnd/Clause0((@x: ((hnd/marker :: (E, V) -> V)<(2194 :: E),2195>, (hnd/ev :: ((E, V) -> V) -> V)<(2193 :: (E, V) -> V)>) -> (2194 :: E) 2192) : ((hnd/marker :: (E, V) -> V)<(e :: E),c>, (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>) -> (e :: E) a) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<a,(b :: (E, V) -> V),(e :: E),c> ) as @pat@1: ((hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<2192,(2193 :: (E, V) -> V),(2194 :: E),2195>))\n         -> @x;\n    });\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Clause0<a,(a :: (E, V) -> V),(e :: E),a>((match (clause) {\n  ((std/core/types/@Optional((@uniq-clause@2165: ((hnd/marker :: (E, V) -> V)<(2194 :: E),2195>, (hnd/ev :: ((E, V) -> V) -> V)<(2193 :: (E, V) -> V)>) -> (2194 :: E) 2192) : ((hnd/marker :: (E, V) -> V)<(e :: E),c>, (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>) -> (e :: E) a) : ? (((hnd/marker :: (E, V) -> V)<(e :: E),c>, (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>) -> (e :: E) a) ) as @pat: ? (((hnd/marker :: (E, V) -> V)<(2194 :: E),2195>, (hnd/ev :: ((E, V) -> V) -> V)<(2193 :: (E, V) -> V)>) -> (2194 :: E) 2192))\n     -> @uniq-clause@2165;\n  ((@skip std/core/types/@None() : ? (((hnd/marker :: (E, V) -> V)<(e :: E),c>, (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>) -> (e :: E) a) ) as @pat@0: ? (((hnd/marker :: (E, V) -> V)<(2194 :: E),2195>, (hnd/ev :: ((E, V) -> V) -> V)<(2193 :: (E, V) -> V)>) -> (2194 :: E) 2192))\n     -> (match (@this) {\n      ((@skip std/core/hnd/Clause0((@x: ((hnd/marker :: (E, V) -> V)<(2194 :: E),2195>, (hnd/ev :: ((E, V) -> V) -> V)<(2193 :: (E, V) -> V)>) -> (2194 :: E) 2192) : ((hnd/marker :: (E, V) -> V)<(e :: E),c>, (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>) -> (e :: E) a) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<a,(b :: (E, V) -> V),(e :: E),c> ) as @pat@1: ((hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<2192,(2193 :: (E, V) -> V),(2194 :: E),2195>))\n         -> @x;\n    });\n}))","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/@optional","scrutinee":1,"clauses":[{"tag":"std/core/types/@Optional","target":75,"args":{"any":[2]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3020]","target":74,"args":{"any":[]}}}]},
{"label":"77([match_def@[mcore:[#388]#160]#161])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"78([#162])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"clause1\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"15\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (@x: (hnd/marker<2239,2240>, hnd/ev<2238>, 2236) -> 2239 2237) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"15\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}, {\\\"op\\\": \\\"Top\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"clause1\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"15\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (@x: (hnd/marker<2239,2240>, hnd/ev<2238>, 2236) -> 2239 2237) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"15\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}, {\\\"op\\\": \\\"Top\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"79([mcore:[#388]#160])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"clause1\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}: \"std/core/hnd/clause1\".\"std/core/hnd/Clause1\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"15\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"clause1\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}: \"std/core/hnd/clause1\".\"std/core/hnd/Clause1\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"15\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/clause1","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Clause1","target":78,"args":{"any":[0]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3021]","target":77,"args":{"any":[]}}}]},
{"label":"80([k@[mcore:[#391]#163]#165])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Jump","target":1060}]},
{"label":"81([#169])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"82([k@[#170]#172])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"83([match_def@[#170]#174])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"84([match_std/core/hnd/Clause1@[#170]#175])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"17\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (@x: (hnd/marker<2322,2323>, hnd/ev<2321>, 2319) -> 2322 2320) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"17\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}, {\\\"op\\\": \\\"Top\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"17\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (@x: (hnd/marker<2322,2323>, hnd/ev<2321>, 2319) -> 2322 2320) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"17\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}, {\\\"op\\\": \\\"Top\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"85([#170])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"clause\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (@this) {\n  ((@skip std/core/hnd/Clause1((@x: ((hnd/marker :: (E, V) -> V)<(2322 :: E),2323>, (hnd/ev :: ((E, V) -> V) -> V)<(2321 :: (E, V) -> V)>, 2319) -> (2322 :: E) 2320) : ((hnd/marker :: (E, V) -> V)<(e :: E),d>, (hnd/ev :: ((E, V) -> V) -> V)<(c :: (E, V) -> V)>, a) -> (e :: E) b) : (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<a,b,(c :: (E, V) -> V),(e :: E),d> ) as @pat@1: ((hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<2319,2320,(2321 :: (E, V) -> V),(2322 :: E),2323>))\n     -> @x;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}: \"std/core/hnd/clause1\".\"std/core/hnd/Clause1\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"17\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}: \"std/core/hnd/clause1\".\"std/core/hnd/Clause1\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"17\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (@this) {\n  ((@skip std/core/hnd/Clause1((@x: ((hnd/marker :: (E, V) -> V)<(2322 :: E),2323>, (hnd/ev :: ((E, V) -> V) -> V)<(2321 :: (E, V) -> V)>, 2319) -> (2322 :: E) 2320) : ((hnd/marker :: (E, V) -> V)<(e :: E),d>, (hnd/ev :: ((E, V) -> V) -> V)<(c :: (E, V) -> V)>, a) -> (e :: E) b) : (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<a,b,(c :: (E, V) -> V),(e :: E),d> ) as @pat@1: ((hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<2319,2320,(2321 :: (E, V) -> V),(2322 :: E),2323>))\n     -> @x;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"clause\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}})]","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/clause1","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Clause1","target":84,"args":{"any":[0]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3022]","target":83,"args":{"any":[]}}}]},
{"label":"86([match_def@[mcore:[#391]#163]#168])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"clause\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}: \"std/core/types/@optional\".\"std/core/types/@None\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"clause\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}: \"std/core/types/@optional\".\"std/core/types/@None\"(())","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/@optional","scrutinee":1,"clauses":[{"tag":"std/core/types/@None","target":85,"args":{"any":[]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3023]","target":81,"args":{"any":[]}}}]},
{"label":"87([#176])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"clause\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}),(@uniq-clause@2287,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"value\\\"16\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@uniq-clause@2287: (hnd/marker<2322,2323>, hnd/ev<2321>, 2319) -> 2322 2320) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"value\\\\\\\"16\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"clause\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}),(@uniq-clause@2287,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"value\\\"16\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@uniq-clause@2287: (hnd/marker<2322,2323>, hnd/ev<2321>, 2319) -> 2322 2320) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"value\\\\\\\"16\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"88([mcore:[#391]#163])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Clause1<a,a,(a :: (E, V) -> V),(e :: E),a>((match (clause) {\n  ((std/core/types/@Optional((@uniq-clause@2287: ((hnd/marker :: (E, V) -> V)<(2322 :: E),2323>, (hnd/ev :: ((E, V) -> V) -> V)<(2321 :: (E, V) -> V)>, 2319) -> (2322 :: E) 2320) : ((hnd/marker :: (E, V) -> V)<(e :: E),d>, (hnd/ev :: ((E, V) -> V) -> V)<(c :: (E, V) -> V)>, a) -> (e :: E) b) : ? (((hnd/marker :: (E, V) -> V)<(e :: E),d>, (hnd/ev :: ((E, V) -> V) -> V)<(c :: (E, V) -> V)>, a) -> (e :: E) b) ) as @pat: ? (((hnd/marker :: (E, V) -> V)<(2322 :: E),2323>, (hnd/ev :: ((E, V) -> V) -> V)<(2321 :: (E, V) -> V)>, 2319) -> (2322 :: E) 2320))\n     -> @uniq-clause@2287;\n  ((@skip std/core/types/@None() : ? (((hnd/marker :: (E, V) -> V)<(e :: E),d>, (hnd/ev :: ((E, V) -> V) -> V)<(c :: (E, V) -> V)>, a) -> (e :: E) b) ) as @pat@0: ? (((hnd/marker :: (E, V) -> V)<(2322 :: E),2323>, (hnd/ev :: ((E, V) -> V) -> V)<(2321 :: (E, V) -> V)>, 2319) -> (2322 :: E) 2320))\n     -> (match (@this) {\n      ((@skip std/core/hnd/Clause1((@x: ((hnd/marker :: (E, V) -> V)<(2322 :: E),2323>, (hnd/ev :: ((E, V) -> V) -> V)<(2321 :: (E, V) -> V)>, 2319) -> (2322 :: E) 2320) : ((hnd/marker :: (E, V) -> V)<(e :: E),d>, (hnd/ev :: ((E, V) -> V) -> V)<(c :: (E, V) -> V)>, a) -> (e :: E) b) : (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<a,b,(c :: (E, V) -> V),(e :: E),d> ) as @pat@1: ((hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<2319,2320,(2321 :: (E, V) -> V),(2322 :: E),2323>))\n         -> @x;\n    });\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (clause) {\n  ((std/core/types/@Optional((@uniq-clause@2287: ((hnd/marker :: (E, V) -> V)<(2322 :: E),2323>, (hnd/ev :: ((E, V) -> V) -> V)<(2321 :: (E, V) -> V)>, 2319) -> (2322 :: E) 2320) : ((hnd/marker :: (E, V) -> V)<(e :: E),d>, (hnd/ev :: ((E, V) -> V) -> V)<(c :: (E, V) -> V)>, a) -> (e :: E) b) : ? (((hnd/marker :: (E, V) -> V)<(e :: E),d>, (hnd/ev :: ((E, V) -> V) -> V)<(c :: (E, V) -> V)>, a) -> (e :: E) b) ) as @pat: ? (((hnd/marker :: (E, V) -> V)<(2322 :: E),2323>, (hnd/ev :: ((E, V) -> V) -> V)<(2321 :: (E, V) -> V)>, 2319) -> (2322 :: E) 2320))\n     -> @uniq-clause@2287;\n  ((@skip std/core/types/@None() : ? (((hnd/marker :: (E, V) -> V)<(e :: E),d>, (hnd/ev :: ((E, V) -> V) -> V)<(c :: (E, V) -> V)>, a) -> (e :: E) b) ) as @pat@0: ? (((hnd/marker :: (E, V) -> V)<(2322 :: E),2323>, (hnd/ev :: ((E, V) -> V) -> V)<(2321 :: (E, V) -> V)>, 2319) -> (2322 :: E) 2320))\n     -> (match (@this) {\n      ((@skip std/core/hnd/Clause1((@x: ((hnd/marker :: (E, V) -> V)<(2322 :: E),2323>, (hnd/ev :: ((E, V) -> V) -> V)<(2321 :: (E, V) -> V)>, 2319) -> (2322 :: E) 2320) : ((hnd/marker :: (E, V) -> V)<(e :: E),d>, (hnd/ev :: ((E, V) -> V) -> V)<(c :: (E, V) -> V)>, a) -> (e :: E) b) : (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<a,b,(c :: (E, V) -> V),(e :: E),d> ) as @pat@1: ((hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<2319,2320,(2321 :: (E, V) -> V),(2322 :: E),2323>))\n         -> @x;\n    });\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"clause\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}: \"std/core/types/@optional\".\"std/core/types/@Optional\"(({\"op\": \"Var\",\"id\": \"@\\\"value\\\"16\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Push","target":80,"args":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"clause\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}: \"std/core/types/@optional\".\"std/core/types/@Optional\"(({\"op\": \"Var\",\"id\": \"@\\\"value\\\"16\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (clause) {\n  ((std/core/types/@Optional((@uniq-clause@2287: ((hnd/marker :: (E, V) -> V)<(2322 :: E),2323>, (hnd/ev :: ((E, V) -> V) -> V)<(2321 :: (E, V) -> V)>, 2319) -> (2322 :: E) 2320) : ((hnd/marker :: (E, V) -> V)<(e :: E),d>, (hnd/ev :: ((E, V) -> V) -> V)<(c :: (E, V) -> V)>, a) -> (e :: E) b) : ? (((hnd/marker :: (E, V) -> V)<(e :: E),d>, (hnd/ev :: ((E, V) -> V) -> V)<(c :: (E, V) -> V)>, a) -> (e :: E) b) ) as @pat: ? (((hnd/marker :: (E, V) -> V)<(2322 :: E),2323>, (hnd/ev :: ((E, V) -> V) -> V)<(2321 :: (E, V) -> V)>, 2319) -> (2322 :: E) 2320))\n     -> @uniq-clause@2287;\n  ((@skip std/core/types/@None() : ? (((hnd/marker :: (E, V) -> V)<(e :: E),d>, (hnd/ev :: ((E, V) -> V) -> V)<(c :: (E, V) -> V)>, a) -> (e :: E) b) ) as @pat@0: ? (((hnd/marker :: (E, V) -> V)<(2322 :: E),2323>, (hnd/ev :: ((E, V) -> V) -> V)<(2321 :: (E, V) -> V)>, 2319) -> (2322 :: E) 2320))\n     -> (match (@this) {\n      ((@skip std/core/hnd/Clause1((@x: ((hnd/marker :: (E, V) -> V)<(2322 :: E),2323>, (hnd/ev :: ((E, V) -> V) -> V)<(2321 :: (E, V) -> V)>, 2319) -> (2322 :: E) 2320) : ((hnd/marker :: (E, V) -> V)<(e :: E),d>, (hnd/ev :: ((E, V) -> V) -> V)<(c :: (E, V) -> V)>, a) -> (e :: E) b) : (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<a,b,(c :: (E, V) -> V),(e :: E),d> ) as @pat@1: ((hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<2319,2320,(2321 :: (E, V) -> V),(2322 :: E),2323>))\n         -> @x;\n    });\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Clause1<a,a,(a :: (E, V) -> V),(e :: E),a>((match (clause) {\n  ((std/core/types/@Optional((@uniq-clause@2287: ((hnd/marker :: (E, V) -> V)<(2322 :: E),2323>, (hnd/ev :: ((E, V) -> V) -> V)<(2321 :: (E, V) -> V)>, 2319) -> (2322 :: E) 2320) : ((hnd/marker :: (E, V) -> V)<(e :: E),d>, (hnd/ev :: ((E, V) -> V) -> V)<(c :: (E, V) -> V)>, a) -> (e :: E) b) : ? (((hnd/marker :: (E, V) -> V)<(e :: E),d>, (hnd/ev :: ((E, V) -> V) -> V)<(c :: (E, V) -> V)>, a) -> (e :: E) b) ) as @pat: ? (((hnd/marker :: (E, V) -> V)<(2322 :: E),2323>, (hnd/ev :: ((E, V) -> V) -> V)<(2321 :: (E, V) -> V)>, 2319) -> (2322 :: E) 2320))\n     -> @uniq-clause@2287;\n  ((@skip std/core/types/@None() : ? (((hnd/marker :: (E, V) -> V)<(e :: E),d>, (hnd/ev :: ((E, V) -> V) -> V)<(c :: (E, V) -> V)>, a) -> (e :: E) b) ) as @pat@0: ? (((hnd/marker :: (E, V) -> V)<(2322 :: E),2323>, (hnd/ev :: ((E, V) -> V) -> V)<(2321 :: (E, V) -> V)>, 2319) -> (2322 :: E) 2320))\n     -> (match (@this) {\n      ((@skip std/core/hnd/Clause1((@x: ((hnd/marker :: (E, V) -> V)<(2322 :: E),2323>, (hnd/ev :: ((E, V) -> V) -> V)<(2321 :: (E, V) -> V)>, 2319) -> (2322 :: E) 2320) : ((hnd/marker :: (E, V) -> V)<(e :: E),d>, (hnd/ev :: ((E, V) -> V) -> V)<(c :: (E, V) -> V)>, a) -> (e :: E) b) : (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<a,b,(c :: (E, V) -> V),(e :: E),d> ) as @pat@1: ((hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<2319,2320,(2321 :: (E, V) -> V),(2322 :: E),2323>))\n         -> @x;\n    });\n}))","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/@optional","scrutinee":1,"clauses":[{"tag":"std/core/types/@Optional","target":87,"args":{"any":[2]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3024]","target":86,"args":{"any":[]}}}]},
{"label":"89([match_def@[mcore:[#392]#177]#178])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"90([#179])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"clause2\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause2\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"18\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (@x: (hnd/marker<2375,2376>, hnd/ev<2374>, 2371, 2372) -> 2375 2373) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"18\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}, {\\\"op\\\": \\\"Top\\\"}, {\\\"op\\\": \\\"Top\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"clause2\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause2\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"18\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (@x: (hnd/marker<2375,2376>, hnd/ev<2374>, 2371, 2372) -> 2375 2373) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"18\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}, {\\\"op\\\": \\\"Top\\\"}, {\\\"op\\\": \\\"Top\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"91([mcore:[#392]#177])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"clause2\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause2\"}}: \"std/core/hnd/clause2\".\"std/core/hnd/Clause2\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"18\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"clause2\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause2\"}}: \"std/core/hnd/clause2\".\"std/core/hnd/Clause2\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"18\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/clause2","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Clause2","target":90,"args":{"any":[0]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3025]","target":89,"args":{"any":[]}}}]},
{"label":"92([k@[mcore:[#395]#180]#182])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Jump","target":1061}]},
{"label":"93([#186])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"94([k@[#187]#189])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"95([match_def@[#187]#191])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"96([match_std/core/hnd/Clause2@[#187]#192])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause2\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"20\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (@x: (hnd/marker<2476,2477>, hnd/ev<2475>, 2472, 2473) -> 2476 2474) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"20\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}, {\\\"op\\\": \\\"Top\\\"}, {\\\"op\\\": \\\"Top\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause2\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"20\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (@x: (hnd/marker<2476,2477>, hnd/ev<2475>, 2472, 2473) -> 2476 2474) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"20\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}, {\\\"op\\\": \\\"Top\\\"}, {\\\"op\\\": \\\"Top\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"97([#187])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"clause\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (@this) {\n  ((@skip std/core/hnd/Clause2((@x: ((hnd/marker :: (E, V) -> V)<(2476 :: E),2477>, (hnd/ev :: ((E, V) -> V) -> V)<(2475 :: (E, V) -> V)>, 2472, 2473) -> (2476 :: E) 2474) : ((hnd/marker :: (E, V) -> V)<(e :: E),a1>, (hnd/ev :: ((E, V) -> V) -> V)<(d :: (E, V) -> V)>, a, b) -> (e :: E) c) : (hnd/clause2 :: (V, V, V, (E, V) -> V, E, V) -> V)<a,b,c,(d :: (E, V) -> V),(e :: E),a1> ) as @pat@1: ((hnd/clause2 :: (V, V, V, (E, V) -> V, E, V) -> V)<2472,2473,2474,(2475 :: (E, V) -> V),(2476 :: E),2477>))\n     -> @x;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause2\"}}: \"std/core/hnd/clause2\".\"std/core/hnd/Clause2\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"20\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause2\"}}: \"std/core/hnd/clause2\".\"std/core/hnd/Clause2\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"20\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (@this) {\n  ((@skip std/core/hnd/Clause2((@x: ((hnd/marker :: (E, V) -> V)<(2476 :: E),2477>, (hnd/ev :: ((E, V) -> V) -> V)<(2475 :: (E, V) -> V)>, 2472, 2473) -> (2476 :: E) 2474) : ((hnd/marker :: (E, V) -> V)<(e :: E),a1>, (hnd/ev :: ((E, V) -> V) -> V)<(d :: (E, V) -> V)>, a, b) -> (e :: E) c) : (hnd/clause2 :: (V, V, V, (E, V) -> V, E, V) -> V)<a,b,c,(d :: (E, V) -> V),(e :: E),a1> ) as @pat@1: ((hnd/clause2 :: (V, V, V, (E, V) -> V, E, V) -> V)<2472,2473,2474,(2475 :: (E, V) -> V),(2476 :: E),2477>))\n     -> @x;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"clause\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}})]","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/clause2","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Clause2","target":96,"args":{"any":[0]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3026]","target":95,"args":{"any":[]}}}]},
{"label":"98([match_def@[mcore:[#395]#180]#185])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"clause\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}: \"std/core/types/@optional\".\"std/core/types/@None\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"clause\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}: \"std/core/types/@optional\".\"std/core/types/@None\"(())","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/@optional","scrutinee":1,"clauses":[{"tag":"std/core/types/@None","target":97,"args":{"any":[]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3027]","target":93,"args":{"any":[]}}}]},
{"label":"99([#193])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"clause\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}),(@uniq-clause@2435,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"value\\\"19\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@uniq-clause@2435: (hnd/marker<2476,2477>, hnd/ev<2475>, 2472, 2473) -> 2476 2474) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"value\\\\\\\"19\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"clause\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}),(@uniq-clause@2435,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"value\\\"19\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@uniq-clause@2435: (hnd/marker<2476,2477>, hnd/ev<2475>, 2472, 2473) -> 2476 2474) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"value\\\\\\\"19\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"100([mcore:[#395]#180])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Clause2<a,a,a,(a :: (E, V) -> V),(e :: E),a>((match (clause) {\n  ((std/core/types/@Optional((@uniq-clause@2435: ((hnd/marker :: (E, V) -> V)<(2476 :: E),2477>, (hnd/ev :: ((E, V) -> V) -> V)<(2475 :: (E, V) -> V)>, 2472, 2473) -> (2476 :: E) 2474) : ((hnd/marker :: (E, V) -> V)<(e :: E),a1>, (hnd/ev :: ((E, V) -> V) -> V)<(d :: (E, V) -> V)>, a, b) -> (e :: E) c) : ? (((hnd/marker :: (E, V) -> V)<(e :: E),a1>, (hnd/ev :: ((E, V) -> V) -> V)<(d :: (E, V) -> V)>, a, b) -> (e :: E) c) ) as @pat: ? (((hnd/marker :: (E, V) -> V)<(2476 :: E),2477>, (hnd/ev :: ((E, V) -> V) -> V)<(2475 :: (E, V) -> V)>, 2472, 2473) -> (2476 :: E) 2474))\n     -> @uniq-clause@2435;\n  ((@skip std/core/types/@None() : ? (((hnd/marker :: (E, V) -> V)<(e :: E),a1>, (hnd/ev :: ((E, V) -> V) -> V)<(d :: (E, V) -> V)>, a, b) -> (e :: E) c) ) as @pat@0: ? (((hnd/marker :: (E, V) -> V)<(2476 :: E),2477>, (hnd/ev :: ((E, V) -> V) -> V)<(2475 :: (E, V) -> V)>, 2472, 2473) -> (2476 :: E) 2474))\n     -> (match (@this) {\n      ((@skip std/core/hnd/Clause2((@x: ((hnd/marker :: (E, V) -> V)<(2476 :: E),2477>, (hnd/ev :: ((E, V) -> V) -> V)<(2475 :: (E, V) -> V)>, 2472, 2473) -> (2476 :: E) 2474) : ((hnd/marker :: (E, V) -> V)<(e :: E),a1>, (hnd/ev :: ((E, V) -> V) -> V)<(d :: (E, V) -> V)>, a, b) -> (e :: E) c) : (hnd/clause2 :: (V, V, V, (E, V) -> V, E, V) -> V)<a,b,c,(d :: (E, V) -> V),(e :: E),a1> ) as @pat@1: ((hnd/clause2 :: (V, V, V, (E, V) -> V, E, V) -> V)<2472,2473,2474,(2475 :: (E, V) -> V),(2476 :: E),2477>))\n         -> @x;\n    });\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (clause) {\n  ((std/core/types/@Optional((@uniq-clause@2435: ((hnd/marker :: (E, V) -> V)<(2476 :: E),2477>, (hnd/ev :: ((E, V) -> V) -> V)<(2475 :: (E, V) -> V)>, 2472, 2473) -> (2476 :: E) 2474) : ((hnd/marker :: (E, V) -> V)<(e :: E),a1>, (hnd/ev :: ((E, V) -> V) -> V)<(d :: (E, V) -> V)>, a, b) -> (e :: E) c) : ? (((hnd/marker :: (E, V) -> V)<(e :: E),a1>, (hnd/ev :: ((E, V) -> V) -> V)<(d :: (E, V) -> V)>, a, b) -> (e :: E) c) ) as @pat: ? (((hnd/marker :: (E, V) -> V)<(2476 :: E),2477>, (hnd/ev :: ((E, V) -> V) -> V)<(2475 :: (E, V) -> V)>, 2472, 2473) -> (2476 :: E) 2474))\n     -> @uniq-clause@2435;\n  ((@skip std/core/types/@None() : ? (((hnd/marker :: (E, V) -> V)<(e :: E),a1>, (hnd/ev :: ((E, V) -> V) -> V)<(d :: (E, V) -> V)>, a, b) -> (e :: E) c) ) as @pat@0: ? (((hnd/marker :: (E, V) -> V)<(2476 :: E),2477>, (hnd/ev :: ((E, V) -> V) -> V)<(2475 :: (E, V) -> V)>, 2472, 2473) -> (2476 :: E) 2474))\n     -> (match (@this) {\n      ((@skip std/core/hnd/Clause2((@x: ((hnd/marker :: (E, V) -> V)<(2476 :: E),2477>, (hnd/ev :: ((E, V) -> V) -> V)<(2475 :: (E, V) -> V)>, 2472, 2473) -> (2476 :: E) 2474) : ((hnd/marker :: (E, V) -> V)<(e :: E),a1>, (hnd/ev :: ((E, V) -> V) -> V)<(d :: (E, V) -> V)>, a, b) -> (e :: E) c) : (hnd/clause2 :: (V, V, V, (E, V) -> V, E, V) -> V)<a,b,c,(d :: (E, V) -> V),(e :: E),a1> ) as @pat@1: ((hnd/clause2 :: (V, V, V, (E, V) -> V, E, V) -> V)<2472,2473,2474,(2475 :: (E, V) -> V),(2476 :: E),2477>))\n         -> @x;\n    });\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"clause\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}: \"std/core/types/@optional\".\"std/core/types/@Optional\"(({\"op\": \"Var\",\"id\": \"@\\\"value\\\"19\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Push","target":92,"args":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"clause\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}: \"std/core/types/@optional\".\"std/core/types/@Optional\"(({\"op\": \"Var\",\"id\": \"@\\\"value\\\"19\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (clause) {\n  ((std/core/types/@Optional((@uniq-clause@2435: ((hnd/marker :: (E, V) -> V)<(2476 :: E),2477>, (hnd/ev :: ((E, V) -> V) -> V)<(2475 :: (E, V) -> V)>, 2472, 2473) -> (2476 :: E) 2474) : ((hnd/marker :: (E, V) -> V)<(e :: E),a1>, (hnd/ev :: ((E, V) -> V) -> V)<(d :: (E, V) -> V)>, a, b) -> (e :: E) c) : ? (((hnd/marker :: (E, V) -> V)<(e :: E),a1>, (hnd/ev :: ((E, V) -> V) -> V)<(d :: (E, V) -> V)>, a, b) -> (e :: E) c) ) as @pat: ? (((hnd/marker :: (E, V) -> V)<(2476 :: E),2477>, (hnd/ev :: ((E, V) -> V) -> V)<(2475 :: (E, V) -> V)>, 2472, 2473) -> (2476 :: E) 2474))\n     -> @uniq-clause@2435;\n  ((@skip std/core/types/@None() : ? (((hnd/marker :: (E, V) -> V)<(e :: E),a1>, (hnd/ev :: ((E, V) -> V) -> V)<(d :: (E, V) -> V)>, a, b) -> (e :: E) c) ) as @pat@0: ? (((hnd/marker :: (E, V) -> V)<(2476 :: E),2477>, (hnd/ev :: ((E, V) -> V) -> V)<(2475 :: (E, V) -> V)>, 2472, 2473) -> (2476 :: E) 2474))\n     -> (match (@this) {\n      ((@skip std/core/hnd/Clause2((@x: ((hnd/marker :: (E, V) -> V)<(2476 :: E),2477>, (hnd/ev :: ((E, V) -> V) -> V)<(2475 :: (E, V) -> V)>, 2472, 2473) -> (2476 :: E) 2474) : ((hnd/marker :: (E, V) -> V)<(e :: E),a1>, (hnd/ev :: ((E, V) -> V) -> V)<(d :: (E, V) -> V)>, a, b) -> (e :: E) c) : (hnd/clause2 :: (V, V, V, (E, V) -> V, E, V) -> V)<a,b,c,(d :: (E, V) -> V),(e :: E),a1> ) as @pat@1: ((hnd/clause2 :: (V, V, V, (E, V) -> V, E, V) -> V)<2472,2473,2474,(2475 :: (E, V) -> V),(2476 :: E),2477>))\n         -> @x;\n    });\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Clause2<a,a,a,(a :: (E, V) -> V),(e :: E),a>((match (clause) {\n  ((std/core/types/@Optional((@uniq-clause@2435: ((hnd/marker :: (E, V) -> V)<(2476 :: E),2477>, (hnd/ev :: ((E, V) -> V) -> V)<(2475 :: (E, V) -> V)>, 2472, 2473) -> (2476 :: E) 2474) : ((hnd/marker :: (E, V) -> V)<(e :: E),a1>, (hnd/ev :: ((E, V) -> V) -> V)<(d :: (E, V) -> V)>, a, b) -> (e :: E) c) : ? (((hnd/marker :: (E, V) -> V)<(e :: E),a1>, (hnd/ev :: ((E, V) -> V) -> V)<(d :: (E, V) -> V)>, a, b) -> (e :: E) c) ) as @pat: ? (((hnd/marker :: (E, V) -> V)<(2476 :: E),2477>, (hnd/ev :: ((E, V) -> V) -> V)<(2475 :: (E, V) -> V)>, 2472, 2473) -> (2476 :: E) 2474))\n     -> @uniq-clause@2435;\n  ((@skip std/core/types/@None() : ? (((hnd/marker :: (E, V) -> V)<(e :: E),a1>, (hnd/ev :: ((E, V) -> V) -> V)<(d :: (E, V) -> V)>, a, b) -> (e :: E) c) ) as @pat@0: ? (((hnd/marker :: (E, V) -> V)<(2476 :: E),2477>, (hnd/ev :: ((E, V) -> V) -> V)<(2475 :: (E, V) -> V)>, 2472, 2473) -> (2476 :: E) 2474))\n     -> (match (@this) {\n      ((@skip std/core/hnd/Clause2((@x: ((hnd/marker :: (E, V) -> V)<(2476 :: E),2477>, (hnd/ev :: ((E, V) -> V) -> V)<(2475 :: (E, V) -> V)>, 2472, 2473) -> (2476 :: E) 2474) : ((hnd/marker :: (E, V) -> V)<(e :: E),a1>, (hnd/ev :: ((E, V) -> V) -> V)<(d :: (E, V) -> V)>, a, b) -> (e :: E) c) : (hnd/clause2 :: (V, V, V, (E, V) -> V, E, V) -> V)<a,b,c,(d :: (E, V) -> V),(e :: E),a1> ) as @pat@1: ((hnd/clause2 :: (V, V, V, (E, V) -> V, E, V) -> V)<2472,2473,2474,(2475 :: (E, V) -> V),(2476 :: E),2477>))\n         -> @x;\n    });\n}))","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/@optional","scrutinee":1,"clauses":[{"tag":"std/core/types/@Optional","target":99,"args":{"any":[2]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3028]","target":98,"args":{"any":[]}}}]},
{"label":"101([match_def@[mcore:[#396]#194]#195])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"resume-result\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/False","traced":{"any":[]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/False","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"resume-result\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"102([#198])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"resume-result\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"result\\\"21\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@0: 2501) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"result\\\\\\\"21\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/True","traced":{"any":[]}},
{"op":"Const","format":"bool","out":0,"value":true},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/True","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"resume-result\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"result\\\"21\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@0: 2501) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"result\\\\\\\"21\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"103([mcore:[#396]#194])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"resume-result\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}}: \"std/core/hnd/resume-result\".\"std/core/hnd/Deep\"(({\"op\": \"Var\",\"id\": \"@\\\"result\\\"21\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"resume-result\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}}: \"std/core/hnd/resume-result\".\"std/core/hnd/Deep\"(({\"op\": \"Var\",\"id\": \"@\\\"result\\\"21\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/resume-result","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Deep","target":102,"args":{"any":[0]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3029]","target":101,"args":{"any":[]}}}]},
{"label":"104([match_def@[mcore:[#397]#201]#202])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"resume-result\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/False","traced":{"any":[]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/False","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"resume-result\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"105([#205])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"resume-result\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"result\\\"22\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@0: 2521) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"result\\\\\\\"22\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/True","traced":{"any":[]}},
{"op":"Const","format":"bool","out":0,"value":true},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/True","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"resume-result\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"result\\\"22\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@0: 2521) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"result\\\\\\\"22\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"106([mcore:[#397]#201])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"resume-result\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}}: \"std/core/hnd/resume-result\".\"std/core/hnd/Shallow\"(({\"op\": \"Var\",\"id\": \"@\\\"result\\\"22\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"resume-result\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}}: \"std/core/hnd/resume-result\".\"std/core/hnd/Shallow\"(({\"op\": \"Var\",\"id\": \"@\\\"result\\\"22\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/resume-result","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Shallow","target":105,"args":{"any":[0]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3030]","target":104,"args":{"any":[]}}}]},
{"label":"107([match_def@[mcore:[#398]#208]#209])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"resume-result\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/False","traced":{"any":[]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/False","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"resume-result\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"108([#212])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"resume-result\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"result\\\"23\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@0: 2542) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"result\\\\\\\"23\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/True","traced":{"any":[]}},
{"op":"Const","format":"bool","out":0,"value":true},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/True","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"resume-result\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"result\\\"23\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@0: 2542) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"result\\\\\\\"23\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"109([mcore:[#398]#208])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"resume-result\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}}: \"std/core/hnd/resume-result\".\"std/core/hnd/Finalize\"(({\"op\": \"Var\",\"id\": \"@\\\"result\\\"23\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"resume-result\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}}: \"std/core/hnd/resume-result\".\"std/core/hnd/Finalize\"(({\"op\": \"Var\",\"id\": \"@\\\"result\\\"23\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/resume-result","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Finalize","target":108,"args":{"any":[0]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3031]","target":107,"args":{"any":[]}}}]},
{"label":"110([match_def@[mcore:[#399]#215]#216])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"111([#217])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-context\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"k\\\"24\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (@x: (hnd/resume-result<2580,2583>) -> 2581 2583) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"k\\\\\\\"24\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/resume-result\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-context\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"k\\\"24\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (@x: (hnd/resume-result<2580,2583>) -> 2581 2583) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"k\\\\\\\"24\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/resume-result\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"112([mcore:[#399]#215])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-context\"}}: \"std/core/hnd/resume-context\".\"std/core/hnd/Resume-context\"(({\"op\": \"Var\",\"id\": \"@\\\"k\\\"24\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-context\"}}: \"std/core/hnd/resume-context\".\"std/core/hnd/Resume-context\"(({\"op\": \"Var\",\"id\": \"@\\\"k\\\"24\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/resume-context","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Resume-context","target":111,"args":{"any":[0]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3032]","target":110,"args":{"any":[]}}}]},
{"label":"113([k@[mcore:[#402]#218]#220])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Jump","target":1065}]},
{"label":"114([#224])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"115([k@[#225]#227])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"116([match_def@[#225]#229])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"117([#230])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-context\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"k\\\"26\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (@x: (hnd/resume-result<2646,2649>) -> 2647 2649) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"k\\\\\\\"26\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/resume-result\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-context\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"k\\\"26\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (@x: (hnd/resume-result<2646,2649>) -> 2647 2649) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"k\\\\\\\"26\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/resume-result\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"118([#225])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"k\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (@this) {\n  ((@skip std/core/hnd/Resume-context((@x: ((hnd/resume-result :: (V, V) -> V)<2646,2649>) -> (2647 :: E) 2649) : ((hnd/resume-result :: (V, V) -> V)<a,b>) -> (e :: E) b) : (hnd/resume-context :: (V, E, E, V) -> V)<a,(e :: E),(e1 :: E),b> ) as @pat@1: ((hnd/resume-context :: (V, E, E, V) -> V)<2646,(2647 :: E),(2648 :: E),2649>))\n     -> @x;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-context\"}}: \"std/core/hnd/resume-context\".\"std/core/hnd/Resume-context\"(({\"op\": \"Var\",\"id\": \"@\\\"k\\\"26\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-context\"}}: \"std/core/hnd/resume-context\".\"std/core/hnd/Resume-context\"(({\"op\": \"Var\",\"id\": \"@\\\"k\\\"26\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (@this) {\n  ((@skip std/core/hnd/Resume-context((@x: ((hnd/resume-result :: (V, V) -> V)<2646,2649>) -> (2647 :: E) 2649) : ((hnd/resume-result :: (V, V) -> V)<a,b>) -> (e :: E) b) : (hnd/resume-context :: (V, E, E, V) -> V)<a,(e :: E),(e1 :: E),b> ) as @pat@1: ((hnd/resume-context :: (V, E, E, V) -> V)<2646,(2647 :: E),(2648 :: E),2649>))\n     -> @x;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"k\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}})]","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/resume-context","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Resume-context","target":117,"args":{"any":[0]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3033]","target":116,"args":{"any":[]}}}]},
{"label":"119([match_def@[mcore:[#402]#218]#223])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"k\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}: \"std/core/types/@optional\".\"std/core/types/@None\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"k\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}: \"std/core/types/@optional\".\"std/core/types/@None\"(())","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/@optional","scrutinee":1,"clauses":[{"tag":"std/core/types/@None","target":118,"args":{"any":[]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3034]","target":114,"args":{"any":[]}}}]},
{"label":"120([#231])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"k\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}),(@uniq-k@2619,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"value\\\"25\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@uniq-k@2619: (hnd/resume-result<2646,2649>) -> 2647 2649) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"value\\\\\\\"25\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"k\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}),(@uniq-k@2619,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"value\\\"25\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@uniq-k@2619: (hnd/resume-result<2646,2649>) -> 2647 2649) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"value\\\\\\\"25\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"121([mcore:[#402]#218])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>((match (k) {\n  ((std/core/types/@Optional((@uniq-k@2619: ((hnd/resume-result :: (V, V) -> V)<2646,2649>) -> (2647 :: E) 2649) : ((hnd/resume-result :: (V, V) -> V)<a,b>) -> (e :: E) b) : ? (((hnd/resume-result :: (V, V) -> V)<a,b>) -> (e :: E) b) ) as @pat: ? (((hnd/resume-result :: (V, V) -> V)<2646,2649>) -> (2647 :: E) 2649))\n     -> @uniq-k@2619;\n  ((@skip std/core/types/@None() : ? (((hnd/resume-result :: (V, V) -> V)<a,b>) -> (e :: E) b) ) as @pat@0: ? (((hnd/resume-result :: (V, V) -> V)<2646,2649>) -> (2647 :: E) 2649))\n     -> (match (@this) {\n      ((@skip std/core/hnd/Resume-context((@x: ((hnd/resume-result :: (V, V) -> V)<2646,2649>) -> (2647 :: E) 2649) : ((hnd/resume-result :: (V, V) -> V)<a,b>) -> (e :: E) b) : (hnd/resume-context :: (V, E, E, V) -> V)<a,(e :: E),(e1 :: E),b> ) as @pat@1: ((hnd/resume-context :: (V, E, E, V) -> V)<2646,(2647 :: E),(2648 :: E),2649>))\n         -> @x;\n    });\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (k) {\n  ((std/core/types/@Optional((@uniq-k@2619: ((hnd/resume-result :: (V, V) -> V)<2646,2649>) -> (2647 :: E) 2649) : ((hnd/resume-result :: (V, V) -> V)<a,b>) -> (e :: E) b) : ? (((hnd/resume-result :: (V, V) -> V)<a,b>) -> (e :: E) b) ) as @pat: ? (((hnd/resume-result :: (V, V) -> V)<2646,2649>) -> (2647 :: E) 2649))\n     -> @uniq-k@2619;\n  ((@skip std/core/types/@None() : ? (((hnd/resume-result :: (V, V) -> V)<a,b>) -> (e :: E) b) ) as @pat@0: ? (((hnd/resume-result :: (V, V) -> V)<2646,2649>) -> (2647 :: E) 2649))\n     -> (match (@this) {\n      ((@skip std/core/hnd/Resume-context((@x: ((hnd/resume-result :: (V, V) -> V)<2646,2649>) -> (2647 :: E) 2649) : ((hnd/resume-result :: (V, V) -> V)<a,b>) -> (e :: E) b) : (hnd/resume-context :: (V, E, E, V) -> V)<a,(e :: E),(e1 :: E),b> ) as @pat@1: ((hnd/resume-context :: (V, E, E, V) -> V)<2646,(2647 :: E),(2648 :: E),2649>))\n         -> @x;\n    });\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"k\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}: \"std/core/types/@optional\".\"std/core/types/@Optional\"(({\"op\": \"Var\",\"id\": \"@\\\"value\\\"25\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Push","target":113,"args":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"k\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}: \"std/core/types/@optional\".\"std/core/types/@Optional\"(({\"op\": \"Var\",\"id\": \"@\\\"value\\\"25\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (k) {\n  ((std/core/types/@Optional((@uniq-k@2619: ((hnd/resume-result :: (V, V) -> V)<2646,2649>) -> (2647 :: E) 2649) : ((hnd/resume-result :: (V, V) -> V)<a,b>) -> (e :: E) b) : ? (((hnd/resume-result :: (V, V) -> V)<a,b>) -> (e :: E) b) ) as @pat: ? (((hnd/resume-result :: (V, V) -> V)<2646,2649>) -> (2647 :: E) 2649))\n     -> @uniq-k@2619;\n  ((@skip std/core/types/@None() : ? (((hnd/resume-result :: (V, V) -> V)<a,b>) -> (e :: E) b) ) as @pat@0: ? (((hnd/resume-result :: (V, V) -> V)<2646,2649>) -> (2647 :: E) 2649))\n     -> (match (@this) {\n      ((@skip std/core/hnd/Resume-context((@x: ((hnd/resume-result :: (V, V) -> V)<2646,2649>) -> (2647 :: E) 2649) : ((hnd/resume-result :: (V, V) -> V)<a,b>) -> (e :: E) b) : (hnd/resume-context :: (V, E, E, V) -> V)<a,(e :: E),(e1 :: E),b> ) as @pat@1: ((hnd/resume-context :: (V, E, E, V) -> V)<2646,(2647 :: E),(2648 :: E),2649>))\n         -> @x;\n    });\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>((match (k) {\n  ((std/core/types/@Optional((@uniq-k@2619: ((hnd/resume-result :: (V, V) -> V)<2646,2649>) -> (2647 :: E) 2649) : ((hnd/resume-result :: (V, V) -> V)<a,b>) -> (e :: E) b) : ? (((hnd/resume-result :: (V, V) -> V)<a,b>) -> (e :: E) b) ) as @pat: ? (((hnd/resume-result :: (V, V) -> V)<2646,2649>) -> (2647 :: E) 2649))\n     -> @uniq-k@2619;\n  ((@skip std/core/types/@None() : ? (((hnd/resume-result :: (V, V) -> V)<a,b>) -> (e :: E) b) ) as @pat@0: ? (((hnd/resume-result :: (V, V) -> V)<2646,2649>) -> (2647 :: E) 2649))\n     -> (match (@this) {\n      ((@skip std/core/hnd/Resume-context((@x: ((hnd/resume-result :: (V, V) -> V)<2646,2649>) -> (2647 :: E) 2649) : ((hnd/resume-result :: (V, V) -> V)<a,b>) -> (e :: E) b) : (hnd/resume-context :: (V, E, E, V) -> V)<a,(e :: E),(e1 :: E),b> ) as @pat@1: ((hnd/resume-context :: (V, E, E, V) -> V)<2646,(2647 :: E),(2648 :: E),2649>))\n         -> @x;\n    });\n}))","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/@optional","scrutinee":1,"clauses":[{"tag":"std/core/types/@Optional","target":120,"args":{"any":[2]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3035]","target":119,"args":{"any":[]}}}]},
{"label":"122([match_def@[mcore:[#403]#232]#233])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"yld\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/False","traced":{"any":[]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/False","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"yld\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"123([#236])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"yld\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/True","traced":{"any":[]}},
{"op":"Const","format":"bool","out":0,"value":true},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/True","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"yld\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"124([mcore:[#403]#232])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"yld\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}}: \"std/core/hnd/yld\".\"std/core/hnd/Pure\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"yld\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}}: \"std/core/hnd/yld\".\"std/core/hnd/Pure\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/yld","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Pure","target":123,"args":{"any":[]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3036]","target":122,"args":{"any":[]}}}]},
{"label":"125([match_def@[mcore:[#404]#239]#240])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"yld\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/False","traced":{"any":[]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/False","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"yld\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"126([#243])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"yld\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/True","traced":{"any":[]}},
{"op":"Const","format":"bool","out":0,"value":true},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/True","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"yld\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"127([mcore:[#404]#239])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"yld\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}}: \"std/core/hnd/yld\".\"std/core/hnd/YieldingFinal\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"yld\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}}: \"std/core/hnd/yld\".\"std/core/hnd/YieldingFinal\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/yld","scrutinee":0,"clauses":[{"tag":"std/core/hnd/YieldingFinal","target":126,"args":{"any":[]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3037]","target":125,"args":{"any":[]}}}]},
{"label":"128([match_def@[mcore:[#405]#246]#247])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"yld\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/False","traced":{"any":[]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/False","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"yld\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"129([#250])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"yld\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/True","traced":{"any":[]}},
{"op":"Const","format":"bool","out":0,"value":true},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/True","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"yld\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"130([mcore:[#405]#246])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"yld\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}}: \"std/core/hnd/yld\".\"std/core/hnd/Yielding\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"yld\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}}: \"std/core/hnd/yld\".\"std/core/hnd/Yielding\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/yld","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Yielding","target":129,"args":{"any":[]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3038]","target":128,"args":{"any":[]}}}]},
{"label":"131([match_def@[mcore:[#406]#253]#254])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@2,{\"op\": \"Var\",\"id\": \"yld\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/False","traced":{"any":[]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/False","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@2,{\"op\": \"Var\",\"id\": \"yld\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"132([#257])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"yld\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"27\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (@pat@0: ((hnd/resume-result<2737,2740>) -> 2738 2740) -> 2738 2740) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"27\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/resume-result\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"cont\\\"28\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Function\",\"params\": [],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (@pat@1: (() -> 2737) -> 2738 2739) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"cont\\\\\\\"28\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Function\\\",\\\"params\\\": [],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/True","traced":{"any":[]}},
{"op":"Const","format":"bool","out":0,"value":true},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/True","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"yld\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"27\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (@pat@0: ((hnd/resume-result<2737,2740>) -> 2738 2740) -> 2738 2740) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"27\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/resume-result\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"cont\\\"28\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Function\",\"params\": [],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (@pat@1: (() -> 2737) -> 2738 2739) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"cont\\\\\\\"28\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Function\\\",\\\"params\\\": [],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"133([mcore:[#406]#253])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"yld\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}}: \"std/core/hnd/yld\".\"std/core/hnd/Yield\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"27\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}, {\"op\": \"Var\",\"id\": \"@\\\"cont\\\"28\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Function\",\"params\": [],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"yld\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}}: \"std/core/hnd/yld\".\"std/core/hnd/Yield\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"27\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}, {\"op\": \"Var\",\"id\": \"@\\\"cont\\\"28\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Function\",\"params\": [],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/yld","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Yield","target":132,"args":{"any":[0,1]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3039]","target":131,"args":{"any":[]}}}]},
{"label":"134([k@[k@[mcore:[#409]#260]#262]#267])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"135([k@[mcore:[#409]#260]#262])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Const","format":"int","out":2,"value":0},
{"op":"Jump","target":37}]},
{"label":"136([mcore:[#409]#260])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@extern-evv-index<(e :: E),(a :: (E, V) -> V)>(htag)","traced":{"any":[]}},
{"op":"Push","target":135,"args":{"any":[0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@extern-evv-index<(e :: E),(a :: (E, V) -> V)>(htag)","traced":{"any":[]}},
{"op":"Jump","target":0}]},
{"label":"137([mcore:[#410]#268])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Return","args":{"any":[0]}}]},
{"label":"138([k@[mcore:[#411]#270]#272])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"139([return_clause@[mcore:[#411]#270]#274])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned to return clause","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: returnClause","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: returnClause","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"140([k@[mcore:[#411]#270]#276])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"141([mcore:[#411]#270])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@extern-reset-vm<a,(e :: E),a>(m, ret, action)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: reset","traced":{"any":[]}},
{"op":"NewStack","out":0,"region":1,"label":0,"target":139,"args":{"any":[1]}},
{"op":"PushStack","arg":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: reset","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@extern-reset-vm<a,(e :: E),a>(m, ret, action)","traced":{"any":[]}},
{"op":"Invoke","receiver":2,"tag":"apply","args":{"any":[]}}]},
{"label":"142([mcore:[#413]#278])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: action()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: action()","traced":{"any":[]}},
{"op":"Invoke","receiver":0,"tag":"apply","args":{"any":[]}}]},
{"label":"143([mcore:[#416]#279])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Htag<(a :: (E, V) -> V)>(tag)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Htag<(a :: (E, V) -> V)>(tag)","traced":{"any":[]}},
{"op":"Jump","target":1057}]},
{"label":"144([mcore:[#417]#280])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"CallLib","lib":0,"symbol":"evvSwapCreate0"}]},
{"label":"145([mcore:[#419]#284])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"146([k@[k@[k@[mcore:[#420]#289]#294]#296]#301])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Return","args":{"any":[0]}}]},
{"label":"147([k@[k@[mcore:[#420]#289]#294]#296])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"keep\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Push","target":146,"args":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Copy","from":2,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"keep\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":145}]},
{"label":"148([k@[mcore:[#420]#289]#294])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: f()","traced":{"any":[]}},
{"op":"Push","target":147,"args":{"any":[0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[]}}]},
{"label":"149([mcore:[#420]#289])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap-create0<(e :: E)>()","traced":{"any":[]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"Push","target":148,"args":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap-create0<(e :: E)>()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":144}]},
{"label":"150([mcore:[#421]#302])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"CallLib","lib":0,"symbol":"evvSwapCreate0"}]},
{"label":"151([mcore:[#424]#306])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"152([k@[k@[k@[mcore:[#425]#311]#316]#318]#323])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Return","args":{"any":[0]}}]},
{"label":"153([k@[k@[mcore:[#425]#311]#316]#318])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"keep\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Push","target":152,"args":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Copy","from":2,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"keep\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":151}]},
{"label":"154([k@[mcore:[#425]#311]#316])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: f(x1)","traced":{"any":[]}},
{"op":"Push","target":153,"args":{"any":[0]}},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f(x1)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"155([mcore:[#425]#311])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap-create0<(e :: E)>()","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Push","target":154,"args":{"any":[0,1]}},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap-create0<(e :: E)>()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":150}]},
{"label":"156([mcore:[#426]#324])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"CallLib","lib":0,"symbol":"evvSwapCreate0"}]},
{"label":"157([mcore:[#430]#328])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"158([k@[k@[k@[mcore:[#431]#333]#338]#340]#345])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Return","args":{"any":[0]}}]},
{"label":"159([k@[k@[mcore:[#431]#333]#338]#340])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"keep\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Push","target":158,"args":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Copy","from":2,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"keep\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":157}]},
{"label":"160([k@[mcore:[#431]#333]#338])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: f(x1, x2)","traced":{"any":[]}},
{"op":"Push","target":159,"args":{"any":[0]}},
{"op":"Copy","from":2,"to":0},
{"op":"Copy","from":1,"to":2},
{"op":"Copy","from":3,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f(x1, x2)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":2,"tag":"apply","args":{"any":[0,1]}}]},
{"label":"161([mcore:[#431]#333])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap-create0<(e :: E)>()","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Push","target":160,"args":{"any":[0,1,2]}},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap-create0<(e :: E)>()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":156}]},
{"label":"162([mcore:[#432]#346])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"CallLib","lib":0,"symbol":"evvSwapCreate0"}]},
{"label":"163([mcore:[#437]#350])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"164([k@[k@[k@[mcore:[#438]#355]#360]#362]#367])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Return","args":{"any":[0]}}]},
{"label":"165([k@[k@[mcore:[#438]#355]#360]#362])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"keep\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Push","target":164,"args":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Copy","from":2,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"keep\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":163}]},
{"label":"166([k@[mcore:[#438]#355]#360])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: f(x1, x2, x3)","traced":{"any":[]}},
{"op":"Push","target":165,"args":{"any":[0]}},
{"op":"Copy","from":2,"to":0},
{"op":"Copy","from":4,"to":2},
{"op":"Swap","a":3,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f(x1, x2, x3)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":3,"tag":"apply","args":{"any":[0,1,2]}}]},
{"label":"167([mcore:[#438]#355])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap-create0<(e :: E)>()","traced":{"any":[]}},
{"op":"Const","format":"string","out":4,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"Push","target":166,"args":{"any":[0,1,2,3]}},
{"op":"Copy","from":4,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap-create0<(e :: E)>()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":162}]},
{"label":"168([mcore:[#439]#368])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"CallLib","lib":0,"symbol":"evvSwapCreate0"}]},
{"label":"169([mcore:[#445]#372])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"170([k@[k@[k@[mcore:[#446]#377]#382]#384]#389])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Return","args":{"any":[0]}}]},
{"label":"171([k@[k@[mcore:[#446]#377]#382]#384])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"keep\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Push","target":170,"args":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Copy","from":2,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"keep\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":169}]},
{"label":"172([k@[mcore:[#446]#377]#382])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: f(x1, x2, x3, x4)","traced":{"any":[]}},
{"op":"Push","target":171,"args":{"any":[0]}},
{"op":"Copy","from":2,"to":0},
{"op":"Copy","from":4,"to":2},
{"op":"Copy","from":1,"to":4},
{"op":"Copy","from":3,"to":1},
{"op":"Copy","from":5,"to":3},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f(x1, x2, x3, x4)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":4,"tag":"apply","args":{"any":[0,1,2,3]}}]},
{"label":"173([mcore:[#446]#377])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4,5]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap-create0<(e :: E)>()","traced":{"any":[]}},
{"op":"Const","format":"string","out":5,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[5]},"in":{"any":[5]}},
{"op":"Push","target":172,"args":{"any":[0,1,2,3,4]}},
{"op":"Copy","from":5,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap-create0<(e :: E)>()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":168}]},
{"label":"174([match_def@[mcore:[#452]#390]#391])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"175([k@[k@[#392]#394]#396])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"176([match_def@[k@[#392]#394]#398])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"177([k@[#399]#401])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"178([#399])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@2,{\"op\": \"Var\",\"id\": \"@x33\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}),(f,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"34\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (f: (hnd/marker<3233,3234>, hnd/ev<3289>) -> 3233 3287) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"34\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/cast-clause0<a,(e :: E),(e :: E),(a :: (E, V) -> V),a>(f)(m, ev)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/cast-clause0<a,(e :: E),(e :: E),(a :: (E, V) -> V),a>(f)(m, ev)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@2,{\"op\": \"Var\",\"id\": \"@x33\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}),(f,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"34\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (f: (hnd/marker<3233,3234>, hnd/ev<3289>) -> 3233 3287) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"34\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Invoke","receiver":2,"tag":"apply","args":{"any":[0,1]}}]},
{"label":"179([k@[#392]#394])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@x33\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}: \"std/core/hnd/clause0\".\"std/core/hnd/Clause0\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"34\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@x33\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}: \"std/core/hnd/clause0\".\"std/core/hnd/Clause0\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"34\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/clause0","scrutinee":2,"clauses":[{"tag":"std/core/hnd/Clause0","target":178,"args":{"any":[2]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3040]","target":176,"args":{"any":[]}}}]},
{"label":"180([#392])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"29\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<3289>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"29\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(m,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"30\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (m: hnd/marker<3233,3234>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"30\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(h,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"31\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h: 3289<3233,3234>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"31\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"32\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/evv<3233>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"32\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match ((op<(e :: E),a>(h))) {\n  ((@skip std/core/hnd/Clause0((f: ((hnd/marker :: (E, V) -> V)<(3233 :: E),3234>, (hnd/ev :: ((E, V) -> V) -> V)<(3289 :: (E, V) -> V)>) -> (3233 :: E) 3287) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(c :: (E, V) -> V)>) -> (e :: E) b) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<b,(c :: (E, V) -> V),(e :: E),a> ) as @pat@2: ((hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<3287,(3289 :: (E, V) -> V),(3233 :: E),3234>))\n     -> std/core/hnd/cast-clause0<a,(e :: E),(e :: E),(a :: (E, V) -> V),a>(f)(m, ev);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: op<(e :: E),a>(h)","traced":{"any":[]}},
{"op":"Push","target":179,"args":{"any":[3,0]}},
{"op":"Copy","from":4,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op<(e :: E),a>(h)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match ((op<(e :: E),a>(h))) {\n  ((@skip std/core/hnd/Clause0((f: ((hnd/marker :: (E, V) -> V)<(3233 :: E),3234>, (hnd/ev :: ((E, V) -> V) -> V)<(3289 :: (E, V) -> V)>) -> (3233 :: E) 3287) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(c :: (E, V) -> V)>) -> (e :: E) b) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<b,(c :: (E, V) -> V),(e :: E),a> ) as @pat@2: ((hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<3287,(3289 :: (E, V) -> V),(3233 :: E),3234>))\n     -> std/core/hnd/cast-clause0<a,(e :: E),(e :: E),(a :: (E, V) -> V),a>(f)(m, ev);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"29\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<3289>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"29\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(m,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"30\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (m: hnd/marker<3233,3234>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"30\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(h,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"31\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h: 3289<3233,3234>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"31\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"32\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/evv<3233>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"32\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"181([mcore:[#452]#390])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"29\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"30\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"31\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"32\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"29\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"30\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"31\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"32\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/ev","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Ev","target":180,"args":{"any":[2,3,4,5]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3041]","target":174,"args":{"any":[]}}}]},
{"label":"182([match_def@[mcore:[#459]#403]#404])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"183([k@[k@[#405]#407]#409])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"184([match_def@[k@[#405]#407]#411])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"185([k@[#412]#414])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"186([#412])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@2,{\"op\": \"Var\",\"id\": \"@x39\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}),(f,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"40\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (f: (hnd/marker<3307,3308>, hnd/ev<3370>, 3368) -> 3307 3369) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"40\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}, {\\\"op\\\": \\\"Top\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: f(m, ev, x)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f(m, ev, x)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@2,{\"op\": \"Var\",\"id\": \"@x39\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}),(f,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"40\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (f: (hnd/marker<3307,3308>, hnd/ev<3370>, 3368) -> 3307 3369) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"40\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}, {\\\"op\\\": \\\"Top\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Invoke","receiver":3,"tag":"apply","args":{"any":[0,1,2]}}]},
{"label":"187([k@[#405]#407])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@x39\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}: \"std/core/hnd/clause1\".\"std/core/hnd/Clause1\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"40\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@x39\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}: \"std/core/hnd/clause1\".\"std/core/hnd/Clause1\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"40\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/clause1","scrutinee":3,"clauses":[{"tag":"std/core/hnd/Clause1","target":186,"args":{"any":[3]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3042]","target":184,"args":{"any":[]}}}]},
{"label":"188([#405])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"35\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<3370>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"35\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(m,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"36\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (m: hnd/marker<3307,3308>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"36\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(h,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"37\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h: 3370<3307,3308>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"37\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"38\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/evv<3307>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"38\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match ((op<(e :: E),a>(h))) {\n  ((@skip std/core/hnd/Clause1((f: ((hnd/marker :: (E, V) -> V)<(3307 :: E),3308>, (hnd/ev :: ((E, V) -> V) -> V)<(3370 :: (E, V) -> V)>, 3368) -> (3307 :: E) 3369) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(d :: (E, V) -> V)>, b) -> (e :: E) c) : (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<b,c,(d :: (E, V) -> V),(e :: E),a> ) as @pat@2: ((hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<3368,3369,(3370 :: (E, V) -> V),(3307 :: E),3308>))\n     -> f(m, ev, x);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: op<(e :: E),a>(h)","traced":{"any":[]}},
{"op":"Push","target":187,"args":{"any":[4,0,2]}},
{"op":"Copy","from":5,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op<(e :: E),a>(h)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match ((op<(e :: E),a>(h))) {\n  ((@skip std/core/hnd/Clause1((f: ((hnd/marker :: (E, V) -> V)<(3307 :: E),3308>, (hnd/ev :: ((E, V) -> V) -> V)<(3370 :: (E, V) -> V)>, 3368) -> (3307 :: E) 3369) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(d :: (E, V) -> V)>, b) -> (e :: E) c) : (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<b,c,(d :: (E, V) -> V),(e :: E),a> ) as @pat@2: ((hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<3368,3369,(3370 :: (E, V) -> V),(3307 :: E),3308>))\n     -> f(m, ev, x);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"35\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<3370>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"35\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(m,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"36\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (m: hnd/marker<3307,3308>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"36\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(h,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"37\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h: 3370<3307,3308>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"37\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"38\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/evv<3307>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"38\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"189([mcore:[#459]#403])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"35\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"36\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"37\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"38\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"35\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"36\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"37\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"38\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/ev","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Ev","target":188,"args":{"any":[3,4,5,6]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3043]","target":182,"args":{"any":[]}}}]},
{"label":"190([match_def@[mcore:[#467]#416]#417])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"191([k@[k@[#418]#420]#422])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"192([match_def@[k@[#418]#420]#424])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"193([k@[#425]#427])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"194([#425])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@2,{\"op\": \"Var\",\"id\": \"@x45\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause2\"}}),(f,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"46\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (f: (hnd/marker<3393,3394>, hnd/ev<3465>, 3461, 3462) -> 3393 3463) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"46\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}, {\\\"op\\\": \\\"Top\\\"}, {\\\"op\\\": \\\"Top\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: f(m, evx, x, y)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f(m, evx, x, y)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@2,{\"op\": \"Var\",\"id\": \"@x45\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause2\"}}),(f,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"46\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (f: (hnd/marker<3393,3394>, hnd/ev<3465>, 3461, 3462) -> 3393 3463) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"46\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}, {\\\"op\\\": \\\"Top\\\"}, {\\\"op\\\": \\\"Top\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Invoke","receiver":4,"tag":"apply","args":{"any":[0,1,2,3]}}]},
{"label":"195([k@[#418]#420])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@x45\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause2\"}}: \"std/core/hnd/clause2\".\"std/core/hnd/Clause2\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"46\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Swap","a":3,"b":4},
{"op":"Swap","a":2,"b":4},
{"op":"Swap","a":1,"b":4},
{"op":"Swap","a":0,"b":4},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@x45\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause2\"}}: \"std/core/hnd/clause2\".\"std/core/hnd/Clause2\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"46\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/clause2","scrutinee":4,"clauses":[{"tag":"std/core/hnd/Clause2","target":194,"args":{"any":[4]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3044]","target":192,"args":{"any":[]}}}]},
{"label":"196([#418])",
"frameDescriptor":{"regs_any":8},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"evx\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"41\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<3465>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"41\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(m,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"42\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (m: hnd/marker<3393,3394>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"42\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(h,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"43\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h: 3465<3393,3394>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"43\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"44\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/evv<3393>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"44\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match ((op<(e :: E),a>(h))) {\n  ((@skip std/core/hnd/Clause2((f: ((hnd/marker :: (E, V) -> V)<(3393 :: E),3394>, (hnd/ev :: ((E, V) -> V) -> V)<(3465 :: (E, V) -> V)>, 3461, 3462) -> (3393 :: E) 3463) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(a1 :: (E, V) -> V)>, b, c) -> (e :: E) d) : (hnd/clause2 :: (V, V, V, (E, V) -> V, E, V) -> V)<b,c,d,(a1 :: (E, V) -> V),(e :: E),a> ) as @pat@2: ((hnd/clause2 :: (V, V, V, (E, V) -> V, E, V) -> V)<3461,3462,3463,(3465 :: (E, V) -> V),(3393 :: E),3394>))\n     -> f(m, evx, x, y);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: op<(e :: E),a>(h)","traced":{"any":[]}},
{"op":"Push","target":195,"args":{"any":[5,0,2,3]}},
{"op":"Copy","from":6,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op<(e :: E),a>(h)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match ((op<(e :: E),a>(h))) {\n  ((@skip std/core/hnd/Clause2((f: ((hnd/marker :: (E, V) -> V)<(3393 :: E),3394>, (hnd/ev :: ((E, V) -> V) -> V)<(3465 :: (E, V) -> V)>, 3461, 3462) -> (3393 :: E) 3463) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(a1 :: (E, V) -> V)>, b, c) -> (e :: E) d) : (hnd/clause2 :: (V, V, V, (E, V) -> V, E, V) -> V)<b,c,d,(a1 :: (E, V) -> V),(e :: E),a> ) as @pat@2: ((hnd/clause2 :: (V, V, V, (E, V) -> V, E, V) -> V)<3461,3462,3463,(3465 :: (E, V) -> V),(3393 :: E),3394>))\n     -> f(m, evx, x, y);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"evx\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"41\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<3465>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"41\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(m,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"42\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (m: hnd/marker<3393,3394>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"42\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(h,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"43\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h: 3465<3393,3394>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"43\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"44\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/evv<3393>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"44\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"197([mcore:[#467]#416])",
"frameDescriptor":{"regs_any":8},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"evx\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"41\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"42\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"43\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"44\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"evx\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"41\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"42\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"43\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"44\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/ev","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Ev","target":196,"args":{"any":[4,5,6,7]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3045]","target":190,"args":{"any":[]}}}]},
{"label":"198([k@[mcore:[#469]#429]#433])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"199([return_clause@[mcore:[#469]#429]#435])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned to return clause","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"200([k@[mcore:[#469]#429]#437])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"201([mcore:[#469]#429])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@extern-prompt-local-var-prim-vm<a,a,(e :: E),(h :: H)>(init, action)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: prompt-local-var-prim","traced":{"any":[]}},
{"op":"PrimOp","name":"freshlabel","out":{"any":[2]},"in":{"any":[]}},
{"op":"NewStack","out":2,"region":3,"label":2,"target":199,"args":{"any":[]}},
{"op":"PushStack","arg":2},
{"op":"Allocate","out":0,"init":0,"region":3},
{"op":"Debug","msg":"AFTER TERMINATOR: END: prompt-local-var-prim","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@extern-prompt-local-var-prim-vm<a,a,(e :: E),(h :: H)>(init, action)","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"202([mcore:[#473]#439])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genExpr: clause(x, k)","traced":{"any":[]}},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: clause(x, k)","traced":{"any":[]}},
{"op":"Invoke","receiver":2,"tag":"apply","args":{"any":[0,1]}}]},
{"label":"203([mcore:[#475]#440])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: Resuming","traced":{"any":[]}},
{"op":"PushStack","arg":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Resuming","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"204([k@[mcore:[#476]#441]#445])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"205([method_apply@[mcore:[#476]#441]#448])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Jump","target":203}]},
{"label":"206([mcore:[#476]#441])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@extern-yield-to-prim-vm<a,(e :: E),(e :: E),a>(m, clause)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: yield-to-prim","traced":{"any":[]}},
{"op":"Const","format":"int","out":2,"value":0},
{"op":"ShiftDyn","out":0,"n":2,"label":0},
{"op":"New","out":0,"targets":[205],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: yield-to-prim","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@extern-yield-to-prim-vm<a,(e :: E),(e :: E),a>(m, clause)","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"207([k@[mcore:[#477]#451]#453])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"208([mcore:[#477]#451])",
"frameDescriptor":{"regs_any":0},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@extern-evv-get<(e :: E)>()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@extern-evv-get<(e :: E)>()","traced":{"any":[]}},
{"op":"Jump","target":0}]},
{"label":"209([k@[mcore:[#478]#454]#456])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"210([mcore:[#478]#454])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@extern-evv-insert<(e :: E),(e :: E),(a :: (E, V) -> V)>(evv, ev)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@extern-evv-insert<(e :: E),(e :: E),(a :: (E, V) -> V)>(evv, ev)","traced":{"any":[]}},
{"op":"Jump","target":31}]},
{"label":"211([mcore:[#479]#457])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@extern-fresh-marker<a,(e :: E)>()","traced":{"any":[]}},
{"op":"PrimOp","name":"freshlabel","out":{"any":[0]},"in":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@extern-fresh-marker<a,(e :: E)>()","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"212([mcore:[#482]#459])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@extern-evv-eq<(e :: E)>(evv0, evv1)","traced":{"any":[]}},
{"op":"PrimOp","name":"ptr_eq","out":{"any":[0]},"in":{"any":[0,1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@extern-evv-eq<(e :: E)>(evv0, evv1)","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"213([mcore:[#483]#460])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@extern-guard<(e :: E)>(w)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Undefined:  std/core/hnd/@extern-guard"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@extern-guard<(e :: E)>(w)","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"214([mcore:[#484]#463])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@extern-yield-extend<a,a,(e :: E)>(next)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Undefined:  std/core/hnd/@extern-yield-extend"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@extern-yield-extend<a,a,(e :: E)>(next)","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"215([mcore:[#485]#466])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@extern-yield-cont<a,(e :: E),a>(f)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Undefined:  std/core/hnd/@extern-yield-cont"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@extern-yield-cont<a,(e :: E),a>(f)","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"216([k@[mcore:[#486]#469]#471])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"217([return_clause@[mcore:[#486]#469]#473])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned to return clause","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"218([mcore:[#486]#469])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@extern-yield-prompt<a,(e :: E),a>(m)","traced":{"any":[]}},
{"op":"NewStack","out":0,"region":1,"label":0,"target":217,"args":{"any":[]}},
{"op":"PushStack","arg":0},
{"op":"Const","format":"string","out":0,"value":"Name(std/core/hnd/Pure)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@extern-yield-prompt<a,(e :: E),a>(m)","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"219([mcore:[#487]#476])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@extern-yield-to-final<a,(e :: E),(e :: E),a>(m, clause)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Undefined:  std/core/hnd/@extern-yield-to-final"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@extern-yield-to-final<a,(e :: E),(e :: E),a>(m, clause)","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"220([k@[mcore:[#488]#479]#481])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"221([mcore:[#488]#479])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@extern-evv-swap-delete<(e :: E),(e :: E)>(i, behind)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@extern-evv-swap-delete<(e :: E),(e :: E)>(i, behind)","traced":{"any":[]}},
{"op":"Jump","target":16}]},
{"label":"222([mcore:[#489]#482])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@extern-fresh-marker-named<a,(e :: E)>()","traced":{"any":[]}},
{"op":"PrimOp","name":"freshlabel","out":{"any":[0]},"in":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@extern-fresh-marker-named<a,(e :: E)>()","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"223([mcore:[#490]#484])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@extern-evv-swap-create<(e :: E)>(indices)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Undefined:  std/core/hnd/@extern-evv-swap-create"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@extern-evv-swap-create<(e :: E)>(indices)","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"224([match_def@[mcore:[#497]#487]#488])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"225([k@[k@[#489]#491]#493])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"226([match_def@[k@[#489]#491]#495])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"227([k@[#496]#498])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"228([#496])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@2,{\"op\": \"Var\",\"id\": \"@x51\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}),(f,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"52\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (f: (hnd/marker<3931,3932>, hnd/ev<3995>, 3992) -> 3931 3993) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"52\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}, {\\\"op\\\": \\\"Top\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: f(m, ev, x)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f(m, ev, x)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@2,{\"op\": \"Var\",\"id\": \"@x51\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}),(f,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"52\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (f: (hnd/marker<3931,3932>, hnd/ev<3995>, 3992) -> 3931 3993) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"52\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}, {\\\"op\\\": \\\"Top\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Invoke","receiver":3,"tag":"apply","args":{"any":[0,1,2]}}]},
{"label":"229([k@[#489]#491])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@x51\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}: \"std/core/hnd/clause1\".\"std/core/hnd/Clause1\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"52\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@x51\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}: \"std/core/hnd/clause1\".\"std/core/hnd/Clause1\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"52\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/clause1","scrutinee":3,"clauses":[{"tag":"std/core/hnd/Clause1","target":228,"args":{"any":[3]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3046]","target":226,"args":{"any":[]}}}]},
{"label":"230([#489])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"47\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<3995>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"47\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(m,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"48\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (m: hnd/marker<3931,3932>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"48\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(h,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"49\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h: 3995<3931,3932>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"49\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"50\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/evv<3931>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"50\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match ((op<(e :: E),a>(h))) {\n  ((@skip std/core/hnd/Clause1((f: ((hnd/marker :: (E, V) -> V)<(3931 :: E),3932>, (hnd/ev :: ((E, V) -> V) -> V)<(3995 :: (E, V) -> V)>, 3992) -> (3931 :: E) 3993) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(d :: (E, V) -> V)>, b) -> (e :: E) c) : (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<b,c,(d :: (E, V) -> V),(e :: E),a> ) as @pat@2: ((hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<3992,3993,(3995 :: (E, V) -> V),(3931 :: E),3932>))\n     -> f(m, ev, x);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: op<(e :: E),a>(h)","traced":{"any":[]}},
{"op":"Push","target":229,"args":{"any":[4,0,2]}},
{"op":"Copy","from":5,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op<(e :: E),a>(h)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match ((op<(e :: E),a>(h))) {\n  ((@skip std/core/hnd/Clause1((f: ((hnd/marker :: (E, V) -> V)<(3931 :: E),3932>, (hnd/ev :: ((E, V) -> V) -> V)<(3995 :: (E, V) -> V)>, 3992) -> (3931 :: E) 3993) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(d :: (E, V) -> V)>, b) -> (e :: E) c) : (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<b,c,(d :: (E, V) -> V),(e :: E),a> ) as @pat@2: ((hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<3992,3993,(3995 :: (E, V) -> V),(3931 :: E),3932>))\n     -> f(m, ev, x);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"47\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<3995>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"47\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(m,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"48\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (m: hnd/marker<3931,3932>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"48\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(h,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"49\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h: 3995<3931,3932>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"49\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"50\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/evv<3931>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"50\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"231([mcore:[#497]#487])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"47\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"48\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"49\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"50\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"47\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"48\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"49\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"50\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/ev","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Ev","target":230,"args":{"any":[3,4,5,6]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3047]","target":224,"args":{"any":[]}}}]},
{"label":"232([mcore:[#498]#500])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@extern-yield-to-prim<a,(e :: E),(e :: E),a>(m, clause)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Undefined:  std/core/hnd/@extern-yield-to-prim"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@extern-yield-to-prim<a,(e :: E),(e :: E),a>(m, clause)","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"233([mcore:[#501]#503])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genExpr: op()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op()","traced":{"any":[]}},
{"op":"Invoke","receiver":2,"tag":"apply","args":{"any":[]}}]},
{"label":"234([method_apply@[mcore:[#503]#504]#508])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Jump","target":233}]},
{"label":"235([mcore:[#503]#504])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Clause0<a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(@_wildcard-x737_14: (hnd/marker :: (E, V) -> V)<(4088 :: E),4089>, @_wildcard-x737_17: (hnd/ev :: ((E, V) -> V) -> V)<(4090 :: (E, V) -> V)>){\n  (op());\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[234],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Clause0<a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(@_wildcard-x737_14: (hnd/marker :: (E, V) -> V)<(4088 :: E),4089>, @_wildcard-x737_17: (hnd/ev :: ((E, V) -> V) -> V)<(4090 :: (E, V) -> V)>){\n  (op());\n}))","traced":{"any":[]}},
{"op":"Jump","target":1059}]},
{"label":"236([mcore:[#507]#511])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: op(x)","traced":{"any":[]}},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op(x)","traced":{"any":[]}},
{"op":"Invoke","receiver":3,"tag":"apply","args":{"any":[0]}}]},
{"label":"237([method_apply@[mcore:[#509]#512]#517])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Jump","target":236}]},
{"label":"238([mcore:[#509]#512])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Clause1<a,a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(@_wildcard-x691_14: (hnd/marker :: (E, V) -> V)<(4143 :: E),4144>, @_wildcard-x691_17: (hnd/ev :: ((E, V) -> V) -> V)<(4145 :: (E, V) -> V)>, x: 4146){\n  (op(x));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[237],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Clause1<a,a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(@_wildcard-x691_14: (hnd/marker :: (E, V) -> V)<(4143 :: E),4144>, @_wildcard-x691_17: (hnd/ev :: ((E, V) -> V) -> V)<(4145 :: (E, V) -> V)>, x: 4146){\n  (op(x));\n}))","traced":{"any":[]}},
{"op":"Jump","target":1060}]},
{"label":"239([mcore:[#514]#520])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4]}},
{"op":"Debug","msg":"BGN: genExpr: op(x1, x2)","traced":{"any":[]}},
{"op":"Copy","from":3,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op(x1, x2)","traced":{"any":[]}},
{"op":"Invoke","receiver":4,"tag":"apply","args":{"any":[0,1]}}]},
{"label":"240([method_apply@[mcore:[#516]#521]#527])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Jump","target":239}]},
{"label":"241([mcore:[#516]#521])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Clause2<a,a,a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(@_wildcard-x779_14: (hnd/marker :: (E, V) -> V)<(4209 :: E),4210>, @_wildcard-x779_17: (hnd/ev :: ((E, V) -> V) -> V)<(4211 :: (E, V) -> V)>, x1: 4212, x2: 4213){\n  (op(x1, x2));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[240],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Clause2<a,a,a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(@_wildcard-x779_14: (hnd/marker :: (E, V) -> V)<(4209 :: E),4210>, @_wildcard-x779_17: (hnd/ev :: ((E, V) -> V) -> V)<(4211 :: (E, V) -> V)>, x1: 4212, x2: 4213){\n  (op(x1, x2));\n}))","traced":{"any":[]}},
{"op":"Jump","target":1061}]},
{"label":"242([mcore:[#517]#530])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"swapCurrentEvv"}]},
{"label":"243([match_def@[mcore:[#518]#535]#536])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"244([k@[#537]#542])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"245([#537])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"53\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<4263>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"53\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"54\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/marker<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"54\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"55\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2: 4263<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"55\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(w,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"56\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (w: hnd/evv<4237>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"56\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap<(total :: E),(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap<(total :: E),(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"53\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<4263>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"53\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"54\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/marker<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"54\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"55\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2: 4263<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"55\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(w,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"56\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (w: hnd/evv<4237>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"56\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Jump","target":242}]},
{"label":"246([mcore:[#518]#535])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"53\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"54\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"55\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"56\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"53\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"54\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"55\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"56\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/ev","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Ev","target":245,"args":{"any":[0,1,2,3]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3048]","target":243,"args":{"any":[]}}}]},
{"label":"247([mcore:[#520]#544])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Copy","from":2,"to":0},
{"op":"Return","args":{"any":[0]}}]},
{"label":"248([method_apply@[mcore:[#522]#545]#549])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Jump","target":247}]},
{"label":"249([mcore:[#522]#545])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Clause0<a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(@_wildcard-x740_14: (hnd/marker :: (E, V) -> V)<(4303 :: E),4305>, @_wildcard-x740_17: (hnd/ev :: ((E, V) -> V) -> V)<(4304 :: (E, V) -> V)>){\n  v;\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[248],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Clause0<a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(@_wildcard-x740_14: (hnd/marker :: (E, V) -> V)<(4303 :: E),4305>, @_wildcard-x740_17: (hnd/ev :: ((E, V) -> V) -> V)<(4304 :: (E, V) -> V)>){\n  v;\n}))","traced":{"any":[]}},
{"op":"Jump","target":1059}]},
{"label":"250([mcore:[#525]#552])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@extern-eq-marker<a,a,(e :: E),(e :: E)>(x, y)","traced":{"any":[]}},
{"op":"PrimOp","name":"#1==#2","out":{"any":[0]},"in":{"any":[0,1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@extern-eq-marker<a,a,(e :: E),(e :: E)>(x, y)","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"251([mcore:[#526]#553])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@extern-evv-show<(e :: E)>(evv)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Undefined:  std/core/hnd/@extern-evv-show"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@extern-evv-show<(e :: E)>(evv)","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"252([mcore:[#527]#556])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@extern-unsafe-reyield<a,(e :: E)>(yld)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Undefined:  std/core/hnd/@extern-unsafe-reyield"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@extern-unsafe-reyield<a,(e :: E)>(yld)","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"253([mcore:[#528]#559])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@extern-yield-capture<(e :: E)>()","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Undefined:  std/core/hnd/@extern-yield-capture"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@extern-yield-capture<(e :: E)>()","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"254([mcore:[#530]#562])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/ref/(!)<(h :: H),a,(div :: X)>(ref)","traced":{"any":[]}},
{"op":"PrimOp","name":"getRef(Ref[Ptr]): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/ref/(!)<(h :: H),a,(div :: X)>(ref)","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"255([match_def@[mcore:[#535]#563]#564])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"256([k@[k@[#565]#567]#570])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"257([k@[#565]#567])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"258([#565])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-context\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"k\\\"57\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (@x: (hnd/resume-result<4490,4493>) -> 4491 4493) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"k\\\\\\\"57\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/resume-result\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: @x((std/core/hnd/Deep<a,a>(x)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Deep<a,a>(x)","traced":{"any":[]}},
{"op":"Push","target":257,"args":{"any":[1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Deep<a,a>(x)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: @x((std/core/hnd/Deep<a,a>(x)))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-context\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"k\\\"57\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (@x: (hnd/resume-result<4490,4493>) -> 4491 4493) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"k\\\\\\\"57\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/resume-result\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Jump","target":1062}]},
{"label":"259([mcore:[#535]#563])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-context\"}}: \"std/core/hnd/resume-context\".\"std/core/hnd/Resume-context\"(({\"op\": \"Var\",\"id\": \"@\\\"k\\\"57\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-context\"}}: \"std/core/hnd/resume-context\".\"std/core/hnd/Resume-context\"(({\"op\": \"Var\",\"id\": \"@\\\"k\\\"57\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/resume-context","scrutinee":1,"clauses":[{"tag":"std/core/hnd/Resume-context","target":258,"args":{"any":[1]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3049]","target":255,"args":{"any":[]}}}]},
{"label":"260([mcore:[#536]#573])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@extern-resume-final<a>()","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Undefined:  std/core/hnd/@extern-resume-final"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@extern-resume-final<a>()","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"261([match_def@[mcore:[#541]#576]#577])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"262([k@[k@[#578]#580]#583])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"263([k@[#578]#580])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"264([#578])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-context\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"k\\\"58\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (@x: (hnd/resume-result<4576,4579>) -> 4577 4579) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"k\\\\\\\"58\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/resume-result\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: @x((std/core/hnd/Shallow<a,a>(x)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Shallow<a,a>(x)","traced":{"any":[]}},
{"op":"Push","target":263,"args":{"any":[1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Shallow<a,a>(x)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: @x((std/core/hnd/Shallow<a,a>(x)))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-context\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"k\\\"58\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (@x: (hnd/resume-result<4576,4579>) -> 4577 4579) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"k\\\\\\\"58\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/resume-result\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Jump","target":1063}]},
{"label":"265([mcore:[#541]#576])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-context\"}}: \"std/core/hnd/resume-context\".\"std/core/hnd/Resume-context\"(({\"op\": \"Var\",\"id\": \"@\\\"k\\\"58\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-context\"}}: \"std/core/hnd/resume-context\".\"std/core/hnd/Resume-context\"(({\"op\": \"Var\",\"id\": \"@\\\"k\\\"58\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/resume-context","scrutinee":1,"clauses":[{"tag":"std/core/hnd/Resume-context","target":264,"args":{"any":[1]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3050]","target":261,"args":{"any":[]}}}]},
{"label":"266([match_def@[mcore:[#542]#586]#587])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"267([#588])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"@pat-x127_20\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}),(tag,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"tagname\\\"59\",\"type\": {\"op\": \"String\"}},\"annotation\": \"genTest: normal: (tag: string) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"tagname\\\\\\\"59\\\",\\\"type\\\": {\\\"op\\\": \\\"String\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"@pat-x127_20\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}),(tag,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"tagname\\\"59\",\"type\": {\"op\": \"String\"}},\"annotation\": \"genTest: normal: (tag: string) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"tagname\\\\\\\"59\\\",\\\"type\\\": {\\\"op\\\": \\\"String\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"268([mcore:[#542]#586])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@pat-x127_20\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}: \"std/core/hnd/htag\".\"std/core/hnd/Htag\"(({\"op\": \"Var\",\"id\": \"@\\\"tagname\\\"59\",\"type\": {\"op\": \"String\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@pat-x127_20\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}: \"std/core/hnd/htag\".\"std/core/hnd/Htag\"(({\"op\": \"Var\",\"id\": \"@\\\"tagname\\\"59\",\"type\": {\"op\": \"String\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/htag","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Htag","target":267,"args":{"any":[0]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3051]","target":266,"args":{"any":[]}}}]},
{"label":"269([k@[switch case for Bool(true)#591]#593])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"270([switch case for Bool(true)#591])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-extend<a,a,(e :: E)>(next)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-extend<a,a,(e :: E)>(next)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":214}]},
{"label":"271([k@[switch case for Bool(false)#597]#599])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"272([switch case for Bool(false)#597])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: next(x)","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: next(x)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"273([switch default case#601])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"274([switch default case#595])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"bool","out":2,"value":false},
{"op":"Switch","arg":2,"values":[false],"targets":[272],"default":273}]},
{"label":"275([mcore:[#547]#589])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"bool","out":2,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":2,"values":[true],"targets":[270],"default":274}]},
{"label":"276([mcore:[#550]#602])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"277([mcore:[#563]#607])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"278([k@[#623]#625])",
"frameDescriptor":{"regs_any":8},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Const","format":"string","out":6,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[6]},"in":{"any":[6]}},
{"op":"Const","format":"string","out":7,"value":"Name(std/core/hnd/Pure)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[7]},"in":{"any":[7]}},
{"op":"Swap","a":1,"b":5},
{"op":"Swap","a":2,"b":5},
{"op":"Swap","a":3,"b":5},
{"op":"Swap","a":4,"b":5},
{"op":"Swap","a":0,"b":5},
{"op":"Jump","target":352}]},
{"label":"279([#623])",
"frameDescriptor":{"regs_any":8},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/prompt<a,(e :: E),(a :: (E, V) -> V),a>(w0', w1', ev, m, ret, (cont(res)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: cont(res)","traced":{"any":[]}},
{"op":"Push","target":278,"args":{"any":[2,3,5,6,7]}},
{"op":"Copy","from":4,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: cont(res)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/prompt<a,(e :: E),(a :: (E, V) -> V),a>(w0', w1', ev, m, ret, (cont(res)))","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"280([k@[k@[k@[mcore:[#573]#612]#614]#616]#618])",
"frameDescriptor":{"regs_any":8},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_@1\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w1')","traced":{"any":[]}},
{"op":"Const","format":"string","out":7,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[7]},"in":{"any":[7]}},
{"op":"Push","target":279,"args":{"any":[1,2,3,4,5,6,0]}},
{"op":"Copy","from":7,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w1')","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_@1\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":277}]},
{"label":"281([switch case for Bool(true)#634])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@2,{\"op\": \"Var\",\"id\": \"@x61\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@2,{\"op\": \"Var\",\"id\": \"@x61\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"282([k@[switch case for Bool(false)#636]#638])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"283([switch case for Bool(false)#636])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@3,{\"op\": \"Var\",\"id\": \"@x61\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-insert<(e :: E),(e :: E),(a :: (E, V) -> V)>(w0', ev)","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-insert<(e :: E),(e :: E),(a :: (E, V) -> V)>(w0', ev)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@3,{\"op\": \"Var\",\"id\": \"@x61\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Jump","target":210}]},
{"label":"284([switch default case#640])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"285([switch default case#635])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Switch","arg":2,"values":[false],"targets":[283],"default":284}]},
{"label":"286([k@[k@[mcore:[#573]#612]#614]#616])",
"frameDescriptor":{"regs_any":8},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Push","target":280,"args":{"any":[1,2,3,4,5,6]}},
{"op":"Copy","from":7,"to":3},
{"op":"Copy","from":2,"to":1},
{"op":"Copy","from":6,"to":2},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":0,"values":[true],"targets":[281],"default":285}]},
{"label":"287([k@[mcore:[#573]#612]#614])",
"frameDescriptor":{"regs_any":8},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w1'\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match ((std/core/hnd/evv-eq<(e :: E)>(w0, w0'))) {\n  ((std/core/types/True() : bool ) as @pat@2: bool)\n     -> w1;\n  ((@skip std/core/types/False() : bool ) as @pat@3: bool)\n     -> std/core/hnd/evv-insert<(e :: E),(e :: E),(a :: (E, V) -> V)>(w0', ev);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-eq<(e :: E)>(w0, w0')","traced":{"any":[]}},
{"op":"Push","target":286,"args":{"any":[1,2,3,4,5,0,7]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":6,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-eq<(e :: E)>(w0, w0')","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match ((std/core/hnd/evv-eq<(e :: E)>(w0, w0'))) {\n  ((std/core/types/True() : bool ) as @pat@2: bool)\n     -> w1;\n  ((@skip std/core/types/False() : bool ) as @pat@3: bool)\n     -> std/core/hnd/evv-insert<(e :: E),(e :: E),(a :: (E, V) -> V)>(w0', ev);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w1'\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":212}]},
{"label":"288([mcore:[#573]#612])",
"frameDescriptor":{"regs_any":9},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4,5,6,7,8]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w0'\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-get<(e :: E)>()","traced":{"any":[]}},
{"op":"Push","target":287,"args":{"any":[0,2,4,1,5,7,8]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-get<(e :: E)>()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w0'\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":208}]},
{"label":"289([mcore:[#583]#641])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"290([mcore:[#591]#646])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genTest: normal: (x: 4779) -> {\"op\": \"Var\",\"id\": \"@\\\"result\\\"63\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genTest: normal: (x: 4779) -> {\"op\": \"Var\",\"id\": \"@\\\"result\\\"63\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"291([mcore:[#595]#647])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genTest: normal: (x@0: 4779) -> {\"op\": \"Var\",\"id\": \"@\\\"result\\\"64\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genTest: normal: (x@0: 4779) -> {\"op\": \"Var\",\"id\": \"@\\\"result\\\"64\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"292([mcore:[#608]#648])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"293([mcore:[#618]#653])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genTest: normal: (x@1@0: 4982) -> {\"op\": \"Var\",\"id\": \"@\\\"result\\\"65\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genTest: normal: (x@1@0: 4982) -> {\"op\": \"Var\",\"id\": \"@\\\"result\\\"65\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"294([method_apply@[mcore:[#620]#654]#657])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Jump","target":293}]},
{"label":"295([mcore:[#620]#654])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-to-final<a,(total :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x432_85: ((hnd/resume-result :: (V, V) -> V)<4779,4982>) -> (4980 :: E) 4982){\n    x@1@0;\n  }))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[294],"args":{"any":[0]},"tags":["apply"]},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-to-final<a,(total :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x432_85: ((hnd/resume-result :: (V, V) -> V)<4779,4982>) -> (4980 :: E) 4982){\n    x@1@0;\n  }))","traced":{"any":[]}},
{"op":"Jump","target":219}]},
{"label":"296([match_def@[#662]#663])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"297([#677])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Jump","target":295}]},
{"label":"298([#690])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"299([k@[k@[k@[k@[#666]#668]#670]#675]#681])",
"frameDescriptor":{"regs_any":8},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Const","format":"string","out":6,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[6]},"in":{"any":[6]}},
{"op":"Const","format":"string","out":7,"value":"Name(std/core/hnd/Pure)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[7]},"in":{"any":[7]}},
{"op":"Swap","a":1,"b":5},
{"op":"Swap","a":2,"b":5},
{"op":"Swap","a":3,"b":5},
{"op":"Swap","a":4,"b":5},
{"op":"Swap","a":0,"b":5},
{"op":"Jump","target":352}]},
{"label":"300([k@[k@[k@[#666]#668]#670]#675])",
"frameDescriptor":{"regs_any":8},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/prompt<a,(e :: E),(a :: (E, V) -> V),a>(w0@1', w1@1', ev, m, ret, (cont@0((fn(){\n    (std/core/hnd/yield-to-final<a,(total :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x432_85: ((hnd/resume-result :: (V, V) -> V)<4779,4982>) -> (4980 :: E) 4982){\n        x@1@0;\n      })));\n  }))))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: cont@0((fn(){\n  (std/core/hnd/yield-to-final<a,(total :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x432_85: ((hnd/resume-result :: (V, V) -> V)<4779,4982>) -> (4980 :: E) 4982){\n      x@1@0;\n    })));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[297],"args":{"any":[2,4]},"tags":["apply"]},
{"op":"Push","target":299,"args":{"any":[3,4,5,6,7]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: cont@0((fn(){\n  (std/core/hnd/yield-to-final<a,(total :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x432_85: ((hnd/resume-result :: (V, V) -> V)<4779,4982>) -> (4980 :: E) 4982){\n      x@1@0;\n    })));\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/prompt<a,(e :: E),(a :: (E, V) -> V),a>(w0@1', w1@1', ev, m, ret, (cont@0((fn(){\n    (std/core/hnd/yield-to-final<a,(total :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x432_85: ((hnd/resume-result :: (V, V) -> V)<4779,4982>) -> (4980 :: E) 4982){\n        x@1@0;\n      })));\n  }))))","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"301([k@[k@[#666]#668]#670])",
"frameDescriptor":{"regs_any":8},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_@3\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w1@1')","traced":{"any":[]}},
{"op":"Const","format":"string","out":7,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[7]},"in":{"any":[7]}},
{"op":"Push","target":300,"args":{"any":[1,2,3,4,5,6,0]}},
{"op":"Copy","from":7,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w1@1')","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_@3\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":292}]},
{"label":"302([switch case for Bool(true)#692])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@10,{\"op\": \"Var\",\"id\": \"@x66\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@10,{\"op\": \"Var\",\"id\": \"@x66\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"303([k@[switch case for Bool(false)#694]#696])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"304([switch case for Bool(false)#694])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@11,{\"op\": \"Var\",\"id\": \"@x66\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-insert<(e :: E),(e :: E),(a :: (E, V) -> V)>(w0@1', ev)","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-insert<(e :: E),(e :: E),(a :: (E, V) -> V)>(w0@1', ev)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@11,{\"op\": \"Var\",\"id\": \"@x66\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Jump","target":210}]},
{"label":"305([switch default case#698])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"306([switch default case#693])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Switch","arg":2,"values":[false],"targets":[304],"default":305}]},
{"label":"307([k@[#666]#668])",
"frameDescriptor":{"regs_any":8},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Push","target":301,"args":{"any":[1,2,3,4,5,6]}},
{"op":"Copy","from":3,"to":1},
{"op":"Copy","from":6,"to":2},
{"op":"Copy","from":7,"to":3},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":0,"values":[true],"targets":[302],"default":306}]},
{"label":"308([#666])",
"frameDescriptor":{"regs_any":8},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w1@1'\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match ((std/core/hnd/evv-eq<(e :: E)>(w0, w0@1'))) {\n  ((std/core/types/True() : bool ) as @pat@10: bool)\n     -> w1;\n  ((@skip std/core/types/False() : bool ) as @pat@11: bool)\n     -> std/core/hnd/evv-insert<(e :: E),(e :: E),(a :: (E, V) -> V)>(w0@1', ev);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-eq<(e :: E)>(w0, w0@1')","traced":{"any":[]}},
{"op":"Push","target":307,"args":{"any":[1,2,3,4,5,0,7]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":6,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-eq<(e :: E)>(w0, w0@1')","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match ((std/core/hnd/evv-eq<(e :: E)>(w0, w0@1'))) {\n  ((std/core/types/True() : bool ) as @pat@10: bool)\n     -> w1;\n  ((@skip std/core/types/False() : bool ) as @pat@11: bool)\n     -> std/core/hnd/evv-insert<(e :: E),(e :: E),(a :: (E, V) -> V)>(w0@1', ev);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w1@1'\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":212}]},
{"label":"309([match_std/core/hnd/Finalize@[#662]#664])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@9@0,{\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}}),(x@1@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"result\\\"65\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x@1@0: 4982) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"result\\\\\\\"65\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: val w0@1' : (hnd/evv :: E -> V)<(e :: E)>;\nval w1@1' : (hnd/evv :: E -> V)<(e :: E)>;\nval _@3 : ();\nstd/core/hnd/prompt<a,(e :: E),(a :: (E, V) -> V),a>(w0@1', w1@1', ev, m, ret, (cont@0((fn(){\n    (std/core/hnd/yield-to-final<a,(total :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x432_85: ((hnd/resume-result :: (V, V) -> V)<4779,4982>) -> (4980 :: E) 4982){\n        x@1@0;\n      })));\n  }))))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w0@1'\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-get<(e :: E)>()","traced":{"any":[]}},
{"op":"Push","target":308,"args":{"any":[0,6,1,2,3,4,5]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-get<(e :: E)>()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w0@1'\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: val w0@1' : (hnd/evv :: E -> V)<(e :: E)>;\nval w1@1' : (hnd/evv :: E -> V)<(e :: E)>;\nval _@3 : ();\nstd/core/hnd/prompt<a,(e :: E),(a :: (E, V) -> V),a>(w0@1', w1@1', ev, m, ret, (cont@0((fn(){\n    (std/core/hnd/yield-to-final<a,(total :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x432_85: ((hnd/resume-result :: (V, V) -> V)<4779,4982>) -> (4980 :: E) 4982){\n        x@1@0;\n      })));\n  }))))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@9@0,{\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}}),(x@1@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"result\\\"65\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x@1@0: 4982) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"result\\\\\\\"65\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Jump","target":208}]},
{"label":"310([#662])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}}: \"std/core/hnd/resume-result\".\"std/core/hnd/Finalize\"(({\"op\": \"Var\",\"id\": \"@\\\"result\\\"65\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Swap","a":4,"b":5},
{"op":"Swap","a":3,"b":5},
{"op":"Swap","a":6,"b":5},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}}: \"std/core/hnd/resume-result\".\"std/core/hnd/Finalize\"(({\"op\": \"Var\",\"id\": \"@\\\"result\\\"65\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/resume-result","scrutinee":6,"clauses":[{"tag":"std/core/hnd/Finalize","target":309,"args":{"any":[6]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3052]","target":296,"args":{"any":[]}}}]},
{"label":"311([method_apply@[#699]#701])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Jump","target":291}]},
{"label":"312([k@[k@[#699]#705]#708])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"313([k@[switch case for Bool(true)#710]#712])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"314([switch case for Bool(true)#710])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@9,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-extend<a,a,(e :: E)>(ret)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-extend<a,a,(e :: E)>(ret)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@9,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":214}]},
{"label":"315([k@[switch case for Bool(false)#716]#718])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"316([switch case for Bool(false)#716])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0@0,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: ret(x@1@10006)","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: ret(x@1@10006)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0@0,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"317([switch default case#720])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"318([switch default case#714])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"bool","out":2,"value":false},
{"op":"Switch","arg":2,"values":[false],"targets":[316],"default":317}]},
{"label":"319([k@[#699]#705])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: match ((std/core/hnd/yielding())) {\n  ((std/core/types/True() : bool ) as @pat@9: bool)\n     -> std/core/hnd/yield-extend<a,a,(e :: E)>(ret);\n  ((@skip std/core/types/False() : bool ) as @pat@0@0: bool)\n     -> ret(x@1@10006);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"bool","out":2,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match ((std/core/hnd/yielding())) {\n  ((std/core/types/True() : bool ) as @pat@9: bool)\n     -> std/core/hnd/yield-extend<a,a,(e :: E)>(ret);\n  ((@skip std/core/types/False() : bool ) as @pat@0@0: bool)\n     -> ret(x@1@10006);\n}","traced":{"any":[]}},
{"op":"Switch","arg":2,"values":[true],"targets":[314],"default":318}]},
{"label":"320([#699])",
"frameDescriptor":{"regs_any":8},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@8,{\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}}),(x@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"result\\\"64\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x@0: 4779) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"result\\\\\\\"64\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: val x@1@10006 : a\n      = cont@0((fn(){\n        x@0;\n      }));\nmatch ((std/core/hnd/yielding())) {\n  ((std/core/types/True() : bool ) as @pat@9: bool)\n     -> std/core/hnd/yield-extend<a,a,(e :: E)>(ret);\n  ((@skip std/core/types/False() : bool ) as @pat@0@0: bool)\n     -> ret(x@1@10006);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"x@1@10006\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: cont@0((fn(){\n  x@0;\n}))","traced":{"any":[]}},
{"op":"New","out":1,"targets":[311],"args":{"any":[7]},"tags":["apply"]},
{"op":"Push","target":319,"args":{"any":[4]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: cont@0((fn(){\n  x@0;\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"x@1@10006\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: val x@1@10006 : a\n      = cont@0((fn(){\n        x@0;\n      }));\nmatch ((std/core/hnd/yielding())) {\n  ((std/core/types/True() : bool ) as @pat@9: bool)\n     -> std/core/hnd/yield-extend<a,a,(e :: E)>(ret);\n  ((@skip std/core/types/False() : bool ) as @pat@0@0: bool)\n     -> ret(x@1@10006);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@8,{\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}}),(x@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"result\\\"64\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x@0: 4779) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"result\\\\\\\"64\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"321([match_def@[mcore:[#623]#660]#661])",
"frameDescriptor":{"regs_any":8},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}}: \"std/core/hnd/resume-result\".\"std/core/hnd/Shallow\"(({\"op\": \"Var\",\"id\": \"@\\\"result\\\"64\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}}: \"std/core/hnd/resume-result\".\"std/core/hnd/Shallow\"(({\"op\": \"Var\",\"id\": \"@\\\"result\\\"64\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/resume-result","scrutinee":3,"clauses":[{"tag":"std/core/hnd/Shallow","target":320,"args":{"any":[7]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3053]","target":310,"args":{"any":[]}}}]},
{"label":"322([#734])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Jump","target":290}]},
{"label":"323([k@[#738]#747])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"324([#738])",
"frameDescriptor":{"regs_any":8},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Const","format":"string","out":6,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[6]},"in":{"any":[6]}},
{"op":"Const","format":"string","out":7,"value":"Name(std/core/hnd/Pure)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[7]},"in":{"any":[7]}},
{"op":"Swap","a":1,"b":5},
{"op":"Swap","a":2,"b":5},
{"op":"Swap","a":3,"b":5},
{"op":"Swap","a":4,"b":5},
{"op":"Swap","a":0,"b":5},
{"op":"Jump","target":352}]},
{"label":"325([k@[k@[k@[k@[#721]#723]#725]#727]#732])",
"frameDescriptor":{"regs_any":8},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/prompt<a,(e :: E),(a :: (E, V) -> V),a>(w0@0', w1@0', ev, m, ret, (cont@0((fn(){\n    x;\n  }))))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: cont@0((fn(){\n  x;\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[322],"args":{"any":[2]},"tags":["apply"]},
{"op":"Push","target":324,"args":{"any":[3,4,5,6,7]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: cont@0((fn(){\n  x;\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/prompt<a,(e :: E),(a :: (E, V) -> V),a>(w0@0', w1@0', ev, m, ret, (cont@0((fn(){\n    x;\n  }))))","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"326([k@[k@[k@[#721]#723]#725]#727])",
"frameDescriptor":{"regs_any":8},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_@2\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w1@0')","traced":{"any":[]}},
{"op":"Const","format":"string","out":7,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[7]},"in":{"any":[7]}},
{"op":"Push","target":325,"args":{"any":[1,2,3,4,5,6,0]}},
{"op":"Copy","from":7,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w1@0')","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_@2\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":289}]},
{"label":"327([switch case for Bool(true)#749])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@6,{\"op\": \"Var\",\"id\": \"@x64\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@6,{\"op\": \"Var\",\"id\": \"@x64\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"328([k@[switch case for Bool(false)#751]#753])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"329([switch case for Bool(false)#751])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@7,{\"op\": \"Var\",\"id\": \"@x64\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-insert<(e :: E),(e :: E),(a :: (E, V) -> V)>(w0@0', ev)","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-insert<(e :: E),(e :: E),(a :: (E, V) -> V)>(w0@0', ev)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@7,{\"op\": \"Var\",\"id\": \"@x64\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Jump","target":210}]},
{"label":"330([switch default case#755])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"331([switch default case#750])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Switch","arg":2,"values":[false],"targets":[329],"default":330}]},
{"label":"332([k@[k@[#721]#723]#725])",
"frameDescriptor":{"regs_any":8},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Push","target":326,"args":{"any":[1,2,3,4,5,6]}},
{"op":"Copy","from":3,"to":1},
{"op":"Copy","from":6,"to":2},
{"op":"Copy","from":7,"to":3},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":0,"values":[true],"targets":[327],"default":331}]},
{"label":"333([k@[#721]#723])",
"frameDescriptor":{"regs_any":8},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w1@0'\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match ((std/core/hnd/evv-eq<(e :: E)>(w0, w0@0'))) {\n  ((std/core/types/True() : bool ) as @pat@6: bool)\n     -> w1;\n  ((@skip std/core/types/False() : bool ) as @pat@7: bool)\n     -> std/core/hnd/evv-insert<(e :: E),(e :: E),(a :: (E, V) -> V)>(w0@0', ev);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-eq<(e :: E)>(w0, w0@0')","traced":{"any":[]}},
{"op":"Push","target":332,"args":{"any":[1,2,3,4,5,0,7]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":6,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-eq<(e :: E)>(w0, w0@0')","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match ((std/core/hnd/evv-eq<(e :: E)>(w0, w0@0'))) {\n  ((std/core/types/True() : bool ) as @pat@6: bool)\n     -> w1;\n  ((@skip std/core/types/False() : bool ) as @pat@7: bool)\n     -> std/core/hnd/evv-insert<(e :: E),(e :: E),(a :: (E, V) -> V)>(w0@0', ev);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w1@0'\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":212}]},
{"label":"334([#721])",
"frameDescriptor":{"regs_any":8},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@5,{\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}}),(x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"result\\\"63\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x: 4779) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"result\\\\\\\"63\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: val w0@0' : (hnd/evv :: E -> V)<(e :: E)>;\nval w1@0' : (hnd/evv :: E -> V)<(e :: E)>;\nval _@2 : ();\nstd/core/hnd/prompt<a,(e :: E),(a :: (E, V) -> V),a>(w0@0', w1@0', ev, m, ret, (cont@0((fn(){\n    x;\n  }))))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w0@0'\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-get<(e :: E)>()","traced":{"any":[]}},
{"op":"Push","target":333,"args":{"any":[0,7,1,2,4,5,6]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-get<(e :: E)>()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w0@0'\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: val w0@0' : (hnd/evv :: E -> V)<(e :: E)>;\nval w1@0' : (hnd/evv :: E -> V)<(e :: E)>;\nval _@2 : ();\nstd/core/hnd/prompt<a,(e :: E),(a :: (E, V) -> V),a>(w0@0', w1@0', ev, m, ret, (cont@0((fn(){\n    x;\n  }))))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@5,{\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}}),(x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"result\\\"63\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x: 4779) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"result\\\\\\\"63\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Jump","target":208}]},
{"label":"335([mcore:[#623]#660])",
"frameDescriptor":{"regs_any":9},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4,5,6,7,8]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}}: \"std/core/hnd/resume-result\".\"std/core/hnd/Deep\"(({\"op\": \"Var\",\"id\": \"@\\\"result\\\"63\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Copy","from":8,"to":6},
{"op":"Copy","from":0,"to":3},
{"op":"Copy","from":1,"to":0},
{"op":"Copy","from":2,"to":1},
{"op":"Copy","from":4,"to":2},
{"op":"Copy","from":5,"to":4},
{"op":"Copy","from":7,"to":5},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}}: \"std/core/hnd/resume-result\".\"std/core/hnd/Deep\"(({\"op\": \"Var\",\"id\": \"@\\\"result\\\"63\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/resume-result","scrutinee":3,"clauses":[{"tag":"std/core/hnd/Deep","target":334,"args":{"any":[7]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3054]","target":321,"args":{"any":[]}}}]},
{"label":"336([#771])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"337([method_apply@[#772]#775])",
"frameDescriptor":{"regs_any":9},
"instructions":[{"op":"Const","format":"string","out":7,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[7]},"in":{"any":[7]}},
{"op":"Const","format":"string","out":8,"value":"Name(std/core/hnd/Pure)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[8]},"in":{"any":[8]}},
{"op":"Swap","a":7,"b":5},
{"op":"Swap","a":3,"b":5},
{"op":"Swap","a":4,"b":5},
{"op":"Swap","a":6,"b":8},
{"op":"Jump","target":335}]},
{"label":"338([k@[#772]#785])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"339([#772])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@4,{\"op\": \"Var\",\"id\": \"@x60\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}}),(clause,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"61\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (clause: ((hnd/resume-result<4779,4982>) -> 4980 4982) -> 4980 4982) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"61\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/resume-result\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"}),(cont@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"cont\\\"62\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Function\",\"params\": [],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (cont@0: (() -> 4779) -> 4980 4979) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"cont\\\\\\\"62\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Function\\\",\\\"params\\\": [],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: clause((fn<(e :: E)>(r: (hnd/resume-result :: (V, V) -> V)<4779,4982>){\n  (match (r) {\n    ((std/core/hnd/Deep((x: 4779) : a) : (hnd/resume-result :: (V, V) -> V)<a,b> ) as @pat@5: ((hnd/resume-result :: (V, V) -> V)<4779,4982>))\n       -> val w0@0' : (hnd/evv :: E -> V)<(e :: E)>;\n          val w1@0' : (hnd/evv :: E -> V)<(e :: E)>;\n          val _@2 : ();\n      std/core/hnd/prompt<a,(e :: E),(a :: (E, V) -> V),a>(w0@0', w1@0', ev, m, ret, (cont@0((fn(){\n          x;\n        }))));\n    ((std/core/hnd/Shallow((x@0: 4779) : a) : (hnd/resume-result :: (V, V) -> V)<a,b> ) as @pat@8: ((hnd/resume-result :: (V, V) -> V)<4779,4982>))\n       -> val x@1@10006 : a\n                = cont@0((fn(){\n                  x@0;\n                }));\n      (match ((std/core/hnd/yielding())) {\n        ((std/core/types/True() : bool ) as @pat@9: bool)\n           -> std/core/hnd/yield-extend<a,a,(e :: E)>(ret);\n        ((@skip std/core/types/False() : bool ) as @pat@0@0: bool)\n           -> ret(x@1@10006);\n      });\n    ((@skip std/core/hnd/Finalize((x@1@0: 4982) : a) : (hnd/resume-result :: (V, V) -> V)<a,b> ) as @pat@9@0: ((hnd/resume-result :: (V, V) -> V)<4779,4982>))\n       -> val w0@1' : (hnd/evv :: E -> V)<(e :: E)>;\n          val w1@1' : (hnd/evv :: E -> V)<(e :: E)>;\n          val _@3 : ();\n      std/core/hnd/prompt<a,(e :: E),(a :: (E, V) -> V),a>(w0@1', w1@1', ev, m, ret, (cont@0((fn(){\n          (std/core/hnd/yield-to-final<a,(total :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x432_85: ((hnd/resume-result :: (V, V) -> V)<4779,4982>) -> (4980 :: E) 4982){\n              x@1@0;\n            })));\n        }))));\n  });\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[337],"args":{"any":[6,0,1,2,3,4]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: clause((fn<(e :: E)>(r: (hnd/resume-result :: (V, V) -> V)<4779,4982>){\n  (match (r) {\n    ((std/core/hnd/Deep((x: 4779) : a) : (hnd/resume-result :: (V, V) -> V)<a,b> ) as @pat@5: ((hnd/resume-result :: (V, V) -> V)<4779,4982>))\n       -> val w0@0' : (hnd/evv :: E -> V)<(e :: E)>;\n          val w1@0' : (hnd/evv :: E -> V)<(e :: E)>;\n          val _@2 : ();\n      std/core/hnd/prompt<a,(e :: E),(a :: (E, V) -> V),a>(w0@0', w1@0', ev, m, ret, (cont@0((fn(){\n          x;\n        }))));\n    ((std/core/hnd/Shallow((x@0: 4779) : a) : (hnd/resume-result :: (V, V) -> V)<a,b> ) as @pat@8: ((hnd/resume-result :: (V, V) -> V)<4779,4982>))\n       -> val x@1@10006 : a\n                = cont@0((fn(){\n                  x@0;\n                }));\n      (match ((std/core/hnd/yielding())) {\n        ((std/core/types/True() : bool ) as @pat@9: bool)\n           -> std/core/hnd/yield-extend<a,a,(e :: E)>(ret);\n        ((@skip std/core/types/False() : bool ) as @pat@0@0: bool)\n           -> ret(x@1@10006);\n      });\n    ((@skip std/core/hnd/Finalize((x@1@0: 4982) : a) : (hnd/resume-result :: (V, V) -> V)<a,b> ) as @pat@9@0: ((hnd/resume-result :: (V, V) -> V)<4779,4982>))\n       -> val w0@1' : (hnd/evv :: E -> V)<(e :: E)>;\n          val w1@1' : (hnd/evv :: E -> V)<(e :: E)>;\n          val _@3 : ();\n      std/core/hnd/prompt<a,(e :: E),(a :: (E, V) -> V),a>(w0@1', w1@1', ev, m, ret, (cont@0((fn(){\n          (std/core/hnd/yield-to-final<a,(total :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x432_85: ((hnd/resume-result :: (V, V) -> V)<4779,4982>) -> (4980 :: E) 4982){\n              x@1@0;\n            })));\n        }))));\n  });\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@4,{\"op\": \"Var\",\"id\": \"@x60\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}}),(clause,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"61\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (clause: ((hnd/resume-result<4779,4982>) -> 4980 4982) -> 4980 4982) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"61\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/resume-result\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"}),(cont@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"cont\\\"62\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Function\",\"params\": [],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (cont@0: (() -> 4779) -> 4980 4979) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"cont\\\\\\\"62\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Function\\\",\\\"params\\\": [],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Invoke","receiver":5,"tag":"apply","args":{"any":[0]}}]},
{"label":"340([match_def@[match_def@[#768]#769]#770])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@x60\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}}: \"std/core/hnd/yld\".\"std/core/hnd/Yield\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"61\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}, {\"op\": \"Var\",\"id\": \"@\\\"cont\\\"62\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Function\",\"params\": [],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Swap","a":4,"b":5},
{"op":"Swap","a":3,"b":5},
{"op":"Swap","a":2,"b":5},
{"op":"Swap","a":1,"b":5},
{"op":"Swap","a":0,"b":5},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@x60\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}}: \"std/core/hnd/yld\".\"std/core/hnd/Yield\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"61\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}, {\"op\": \"Var\",\"id\": \"@\\\"cont\\\"62\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Function\",\"params\": [],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/yld","scrutinee":5,"clauses":[{"tag":"std/core/hnd/Yield","target":339,"args":{"any":[5,6]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3055]","target":336,"args":{"any":[]}}}]},
{"label":"341([method_apply@[#787]#791])",
"frameDescriptor":{"regs_any":9},
"instructions":[{"op":"Const","format":"string","out":7,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[7]},"in":{"any":[7]}},
{"op":"Const","format":"string","out":8,"value":"Name(std/core/hnd/Pure)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[8]},"in":{"any":[8]}},
{"op":"Swap","a":7,"b":5},
{"op":"Swap","a":3,"b":5},
{"op":"Swap","a":4,"b":5},
{"op":"Swap","a":6,"b":8},
{"op":"Jump","target":288}]},
{"label":"342([k@[#787]#801])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"343([#787])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"@x60\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (4980 :: E) 4979, res: a){\n  val w0' : (hnd/evv :: E -> V)<(e :: E)>;\n  val w1' : (hnd/evv :: E -> V)<(e :: E)>;\n  val _@1 : ();\n  std/core/hnd/prompt<b,(e :: E),(b :: (E, V) -> V),b>(w0', w1', ev, m, ret, (cont(res)));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[341],"args":{"any":[1,2,3,4,5]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (4980 :: E) 4979, res: a){\n  val w0' : (hnd/evv :: E -> V)<(e :: E)>;\n  val w1' : (hnd/evv :: E -> V)<(e :: E)>;\n  val _@1 : ();\n  std/core/hnd/prompt<b,(e :: E),(b :: (E, V) -> V),b>(w0', w1', ev, m, ret, (cont(res)));\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"@x60\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}})]","traced":{"any":[]}},
{"op":"Jump","target":215}]},
{"label":"344([match_def@[#768]#769])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@x60\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}}: \"std/core/hnd/yld\".\"std/core/hnd/Yielding\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@x60\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}}: \"std/core/hnd/yld\".\"std/core/hnd/Yielding\"(())","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/yld","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Yielding","target":343,"args":{"any":[]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3056]","target":340,"args":{"any":[]}}}]},
{"label":"345([match_std/core/hnd/YieldingFinal@[#768]#803])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"@x60\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/keep-yielding-final<(e :: E),a>()","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Undefined:  std/core/hnd/keep-yielding-final"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/keep-yielding-final<(e :: E),a>()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"@x60\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"346([#768])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@x60\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}}: \"std/core/hnd/yld\".\"std/core/hnd/YieldingFinal\"(())","traced":{"any":[]}},
{"op":"Copy","from":4,"to":3},
{"op":"Copy","from":5,"to":4},
{"op":"Copy","from":6,"to":5},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@x60\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}}: \"std/core/hnd/yld\".\"std/core/hnd/YieldingFinal\"(())","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/yld","scrutinee":0,"clauses":[{"tag":"std/core/hnd/YieldingFinal","target":345,"args":{"any":[]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3057]","target":344,"args":{"any":[]}}}]},
{"label":"347([k@[#807]#809])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"348([#807])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"@x60\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: ret(result)","traced":{"any":[]}},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: ret(result)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"@x60\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}})]","traced":{"any":[]}},
{"op":"Invoke","receiver":4,"tag":"apply","args":{"any":[0]}}]},
{"label":"349([k@[k@[k@[mcore:[#625]#633]#757]#762]#767])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@x60\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}}: \"std/core/hnd/yld\".\"std/core/hnd/Pure\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@x60\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}}: \"std/core/hnd/yld\".\"std/core/hnd/Pure\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/yld","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Pure","target":348,"args":{"any":[]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3058]","target":346,"args":{"any":[]}}}]},
{"label":"350([k@[k@[mcore:[#625]#633]#757]#762])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-prompt<a,(e :: E),a>(m)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Name(std/core/hnd/Pure)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Push","target":349,"args":{"any":[1,2,3,4,5,6]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-prompt<a,(e :: E),a>(m)","traced":{"any":[]}},
{"op":"Jump","target":218}]},
{"label":"351([k@[mcore:[#625]#633]#757])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_@0\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Push","target":350,"args":{"any":[1,2,3,4,5,6]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":5,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_@0\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":276}]},
{"label":"352([mcore:[#625]#633])",
"frameDescriptor":{"regs_any":8},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4,5,6,7]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/guard<(e :: E)>(w1)","traced":{"any":[]}},
{"op":"Push","target":351,"args":{"any":[2,3,5,4,0,1]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/guard<(e :: E)>(w1)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":213}]},
{"label":"353([mcore:[#636]#811])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"354([k@[k@[#824]#829]#831])",
"frameDescriptor":{"regs_any":8},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Const","format":"string","out":6,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[6]},"in":{"any":[6]}},
{"op":"Const","format":"string","out":7,"value":"Name(std/core/hnd/Pure)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[7]},"in":{"any":[7]}},
{"op":"Swap","a":1,"b":5},
{"op":"Swap","a":2,"b":5},
{"op":"Swap","a":3,"b":5},
{"op":"Swap","a":4,"b":5},
{"op":"Swap","a":0,"b":5},
{"op":"Jump","target":352}]},
{"label":"355([k@[#824]#829])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/prompt<a,(e :: E),(a :: (E, V) -> V),a>(w0, w1, ev, m, ret, (action()))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: action()","traced":{"any":[]}},
{"op":"Push","target":354,"args":{"any":[2,3,4,5,6]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: action()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/prompt<a,(e :: E),(a :: (E, V) -> V),a>(w0, w1, ev, m, ret, (action()))","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[]}}]},
{"label":"356([#824])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w1)","traced":{"any":[]}},
{"op":"Const","format":"string","out":6,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[6]},"in":{"any":[6]}},
{"op":"Push","target":355,"args":{"any":[1,2,3,4,5,0]}},
{"op":"Copy","from":6,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w1)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":353}]},
{"label":"357([k@[k@[k@[mcore:[#645]#816]#818]#820]#822])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w1\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-insert<(e :: E),(e :: E),(a :: (E, V) -> V)>(w0, ev)","traced":{"any":[]}},
{"op":"Push","target":356,"args":{"any":[1,0,2,3,4]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":4,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-insert<(e :: E),(e :: E),(a :: (E, V) -> V)>(w0, ev)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w1\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":210}]},
{"label":"358([k@[k@[mcore:[#645]#816]#818]#820])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Ev<(a :: (E, V) -> V),(e :: E),a>(tag, m, h, w0)","traced":{"any":[]}},
{"op":"Push","target":357,"args":{"any":[1,0,3,5]}},
{"op":"Copy","from":5,"to":3},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":4,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Ev<(a :: (E, V) -> V),(e :: E),a>(tag, m, h, w0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}","traced":{"any":[]}},
{"op":"Jump","target":1058}]},
{"label":"359([k@[mcore:[#645]#816]#818])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"m\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/fresh-marker<a,(e :: E)>()","traced":{"any":[]}},
{"op":"Push","target":358,"args":{"any":[1,2,3,4,0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/fresh-marker<a,(e :: E)>()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"m\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}","traced":{"any":[]}},
{"op":"Jump","target":211}]},
{"label":"360([mcore:[#645]#816])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4,5]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-get<(e :: E)>()","traced":{"any":[]}},
{"op":"Push","target":359,"args":{"any":[3,1,2,0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-get<(e :: E)>()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":208}]},
{"label":"361([mcore:[#656]#839])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"362([mcore:[#661]#844])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"363([k@[k@[k@[#858]#863]#865]#870])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Return","args":{"any":[0]}}]},
{"label":"364([k@[k@[#858]#863]#865])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_@0\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Push","target":363,"args":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Copy","from":2,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_@0\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":362}]},
{"label":"365([k@[#858]#863])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"res\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@reset-vm<a,(e :: E),a>(m, ret, action)","traced":{"any":[]}},
{"op":"Push","target":364,"args":{"any":[4]}},
{"op":"Copy","from":2,"to":0},
{"op":"Copy","from":1,"to":2},
{"op":"Copy","from":3,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@reset-vm<a,(e :: E),a>(m, ret, action)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"res\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Jump","target":141}]},
{"label":"366([#858])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w1)","traced":{"any":[]}},
{"op":"Const","format":"string","out":5,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[5]},"in":{"any":[5]}},
{"op":"Push","target":365,"args":{"any":[1,2,3,4]}},
{"op":"Copy","from":5,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w1)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":361}]},
{"label":"367([k@[k@[k@[mcore:[#662]#849]#851]#853]#855])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Push","target":366,"args":{"any":[1,2,3,4]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":4,"to":0},
{"op":"Jump","target":210}]},
{"label":"368([k@[k@[mcore:[#662]#849]#851]#853])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w1\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-insert<(e :: E),(_e :: E),(a :: (E, V) -> V)>(w0, (std/core/hnd/Ev<(a :: (E, V) -> V),(e :: E),a>(tag, m, h, w0)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Ev<(a :: (E, V) -> V),(e :: E),a>(tag, m, h, w0)","traced":{"any":[]}},
{"op":"Push","target":367,"args":{"any":[1,0,3,5]}},
{"op":"Copy","from":5,"to":3},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":4,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Ev<(a :: (E, V) -> V),(e :: E),a>(tag, m, h, w0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-insert<(e :: E),(_e :: E),(a :: (E, V) -> V)>(w0, (std/core/hnd/Ev<(a :: (E, V) -> V),(e :: E),a>(tag, m, h, w0)))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w1\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":1058}]},
{"label":"369([k@[mcore:[#662]#849]#851])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"m\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/fresh-marker<a,(e :: E)>()","traced":{"any":[]}},
{"op":"Push","target":368,"args":{"any":[1,2,3,4,0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/fresh-marker<a,(e :: E)>()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"m\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}","traced":{"any":[]}},
{"op":"Jump","target":211}]},
{"label":"370([mcore:[#662]#849])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-get<(e :: E)>()","traced":{"any":[]}},
{"op":"Push","target":369,"args":{"any":[3,1,2,0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-get<(e :: E)>()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":208}]},
{"label":"371([mcore:[#668]#871])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"372([mcore:[#675]#876])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/mask-at1<a,a,(e :: E),(e :: E)>(i, behind, cont, res)","traced":{"any":[]}},
{"op":"Const","format":"string","out":4,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/mask-at1<a,a,(e :: E),(e :: E)>(i, behind, cont, res)","traced":{"any":[]}},
{"op":"Jump","target":382}]},
{"label":"373([#895])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Const","format":"string","out":4,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"Jump","target":372}]},
{"label":"374([k@[switch case for Bool(true)#891]#902])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"375([switch case for Bool(true)#891])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (5330 :: E) 5328, res: a){\n  std/core/hnd/mask-at1<a,b,(e :: E),(e :: E)>(i, behind, cont, res);\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[373],"args":{"any":[0,1]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (5330 :: E) 5328, res: a){\n  std/core/hnd/mask-at1<a,b,(e :: E),(e :: E)>(i, behind, cont, res);\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":215}]},
{"label":"376([switch case for Bool(false)#906])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"377([switch default case#907])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"378([switch default case#904])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Switch","arg":1,"values":[false],"targets":[376],"default":377}]},
{"label":"379([k@[k@[k@[mcore:[#677]#880]#882]#884]#889])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":3,"values":[true],"targets":[375],"default":378}]},
{"label":"380([k@[k@[mcore:[#677]#880]#882]#884])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":4,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"Push","target":379,"args":{"any":[1,2,0]}},
{"op":"Copy","from":4,"to":1},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":371}]},
{"label":"381([k@[mcore:[#677]#880]#882])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: action(x)","traced":{"any":[]}},
{"op":"Push","target":380,"args":{"any":[2,3,0]}},
{"op":"Copy","from":4,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: action(x)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"382([mcore:[#677]#880])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap-delete<(_e :: E),(e :: E)>(i, behind)","traced":{"any":[]}},
{"op":"Push","target":381,"args":{"any":[2,1,0,3]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap-delete<(_e :: E),(e :: E)>(i, behind)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":221}]},
{"label":"383([mcore:[#682]#908])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"384([mcore:[#689]#913])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/mask-at1<a,a,(e :: E),(e :: E)>(i, behind, cont, res)","traced":{"any":[]}},
{"op":"Const","format":"string","out":4,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/mask-at1<a,a,(e :: E),(e :: E)>(i, behind, cont, res)","traced":{"any":[]}},
{"op":"Jump","target":382}]},
{"label":"385([#932])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Const","format":"string","out":4,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"Jump","target":384}]},
{"label":"386([k@[switch case for Bool(true)#928]#939])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"387([switch case for Bool(true)#928])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (5429 :: E) 5427, res: a){\n  std/core/hnd/mask-at1<a,b,(e :: E),(e :: E)>(i, behind, cont, res);\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[385],"args":{"any":[0,1]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (5429 :: E) 5427, res: a){\n  std/core/hnd/mask-at1<a,b,(e :: E),(e :: E)>(i, behind, cont, res);\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":215}]},
{"label":"388([switch case for Bool(false)#943])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"389([switch default case#944])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"390([switch default case#941])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Switch","arg":1,"values":[false],"targets":[388],"default":389}]},
{"label":"391([k@[k@[k@[mcore:[#691]#917]#919]#921]#926])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":3,"values":[true],"targets":[387],"default":390}]},
{"label":"392([k@[k@[mcore:[#691]#917]#919]#921])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":4,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"Push","target":391,"args":{"any":[1,2,0]}},
{"op":"Copy","from":4,"to":1},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":383}]},
{"label":"393([k@[mcore:[#691]#917]#919])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: action()","traced":{"any":[]}},
{"op":"Push","target":392,"args":{"any":[2,3,0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: action()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[]}}]},
{"label":"394([mcore:[#691]#917])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap-delete<(_e :: E),(e :: E)>(i, behind)","traced":{"any":[]}},
{"op":"Push","target":393,"args":{"any":[2,1,0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap-delete<(_e :: E),(e :: E)>(i, behind)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":221}]},
{"label":"395([#953])",
"frameDescriptor":{"regs_any":8},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Const","format":"string","out":5,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[5]},"in":{"any":[5]}},
{"op":"Const","format":"string","out":6,"value":"Name(std/core/hnd/Pure)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[6]},"in":{"any":[6]}},
{"op":"Copy","from":6,"to":7},
{"op":"Copy","from":5,"to":6},
{"op":"Copy","from":0,"to":5},
{"op":"Copy","from":4,"to":0},
{"op":"Swap","a":1,"b":4},
{"op":"Swap","a":2,"b":4},
{"op":"Swap","a":3,"b":4},
{"op":"Jump","target":352}]},
{"label":"396([k@[k@[k@[mcore:[#708]#945]#947]#949]#951])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/prompt<a,(e :: E),(a :: (E, V) -> V),a>(w0, w0, ev, m, ret, (action(ev)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: action(ev)","traced":{"any":[]}},
{"op":"Push","target":395,"args":{"any":[0,2,3,4]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: action(ev)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/prompt<a,(e :: E),(a :: (E, V) -> V),a>(w0, w0, ev, m, ret, (action(ev)))","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"397([k@[k@[mcore:[#708]#945]#947]#949])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Ev<(a :: (E, V) -> V),(e :: E),a>(tag, m, h, w0)","traced":{"any":[]}},
{"op":"Push","target":396,"args":{"any":[1,3,4,0]}},
{"op":"Copy","from":3,"to":1},
{"op":"Copy","from":0,"to":3},
{"op":"Copy","from":5,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Ev<(a :: (E, V) -> V),(e :: E),a>(tag, m, h, w0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}","traced":{"any":[]}},
{"op":"Jump","target":1058}]},
{"label":"398([k@[mcore:[#708]#945]#947])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-get<(e :: E)>()","traced":{"any":[]}},
{"op":"Push","target":397,"args":{"any":[1,2,0,3,4]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-get<(e :: E)>()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":208}]},
{"label":"399([mcore:[#708]#945])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4,5]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"m\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/fresh-marker-named<a,(e :: E)>()","traced":{"any":[]}},
{"op":"Push","target":398,"args":{"any":[3,1,2,0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/fresh-marker-named<a,(e :: E)>()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"m\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}","traced":{"any":[]}},
{"op":"Jump","target":222}]},
{"label":"400([mcore:[#709]#961])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"evvSwapCreate1"}]},
{"label":"401([mcore:[#712]#966])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"402([mcore:[#718]#971])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/open-at1<a,a,(e :: E),(e :: E)>(i, cont, res)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/open-at1<a,a,(e :: E),(e :: E)>(i, cont, res)","traced":{"any":[]}},
{"op":"Jump","target":412}]},
{"label":"403([#993])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Jump","target":402}]},
{"label":"404([k@[switch case for Bool(true)#989]#1000])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"405([switch case for Bool(true)#989])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (5634 :: E) 5632, res: a){\n  std/core/hnd/open-at1<a,b,(e :: E),(e :: E)>(i, cont, res);\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[403],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (5634 :: E) 5632, res: a){\n  std/core/hnd/open-at1<a,b,(e :: E),(e :: E)>(i, cont, res);\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":215}]},
{"label":"406([switch case for Bool(false)#1004])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"407([switch default case#1005])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"408([switch default case#1002])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Switch","arg":1,"values":[false],"targets":[406],"default":407}]},
{"label":"409([k@[k@[k@[mcore:[#720]#975]#980]#982]#987])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":2,"values":[true],"targets":[405],"default":408}]},
{"label":"410([k@[k@[mcore:[#720]#975]#980]#982])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Push","target":409,"args":{"any":[1,0]}},
{"op":"Copy","from":3,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":401}]},
{"label":"411([k@[mcore:[#720]#975]#980])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: f(x)","traced":{"any":[]}},
{"op":"Push","target":410,"args":{"any":[2,0]}},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f(x)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"412([mcore:[#720]#975])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap-create1<(e :: E)>(i)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Push","target":411,"args":{"any":[1,0,2]}},
{"op":"Copy","from":3,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap-create1<(e :: E)>(i)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":400}]},
{"label":"413([mcore:[#721]#1006])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"evvSwapCreate1"}]},
{"label":"414([mcore:[#723]#1011])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"415([mcore:[#729]#1016])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/open-at1<a,a,(e :: E),(e :: E)>(i, cont, res)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/open-at1<a,a,(e :: E),(e :: E)>(i, cont, res)","traced":{"any":[]}},
{"op":"Jump","target":412}]},
{"label":"416([#1038])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Jump","target":415}]},
{"label":"417([k@[switch case for Bool(true)#1034]#1045])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"418([switch case for Bool(true)#1034])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (5728 :: E) 5726, res: a){\n  std/core/hnd/open-at1<a,b,(e :: E),(e :: E)>(i, cont, res);\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[416],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (5728 :: E) 5726, res: a){\n  std/core/hnd/open-at1<a,b,(e :: E),(e :: E)>(i, cont, res);\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":215}]},
{"label":"419([switch case for Bool(false)#1049])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"420([switch default case#1050])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"421([switch default case#1047])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Switch","arg":1,"values":[false],"targets":[419],"default":420}]},
{"label":"422([k@[k@[k@[mcore:[#731]#1020]#1025]#1027]#1032])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":2,"values":[true],"targets":[418],"default":421}]},
{"label":"423([k@[k@[mcore:[#731]#1020]#1025]#1027])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Push","target":422,"args":{"any":[1,0]}},
{"op":"Copy","from":3,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":414}]},
{"label":"424([k@[mcore:[#731]#1020]#1025])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: f()","traced":{"any":[]}},
{"op":"Push","target":423,"args":{"any":[2,0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[]}}]},
{"label":"425([mcore:[#731]#1020])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap-create1<(e :: E)>(i)","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Push","target":424,"args":{"any":[1,0]}},
{"op":"Copy","from":2,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap-create1<(e :: E)>(i)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":413}]},
{"label":"426([mcore:[#732]#1051])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"evvSwapCreate1"}]},
{"label":"427([mcore:[#735]#1056])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"428([mcore:[#741]#1061])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/open-at1<a,a,(e :: E),(e :: E)>(i, cont, res)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/open-at1<a,a,(e :: E),(e :: E)>(i, cont, res)","traced":{"any":[]}},
{"op":"Jump","target":412}]},
{"label":"429([#1083])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Jump","target":428}]},
{"label":"430([k@[switch case for Bool(true)#1079]#1090])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"431([switch case for Bool(true)#1079])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (5827 :: E) 5825, res: a){\n  std/core/hnd/open-at1<a,b,(e :: E),(e :: E)>(i, cont, res);\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[429],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (5827 :: E) 5825, res: a){\n  std/core/hnd/open-at1<a,b,(e :: E),(e :: E)>(i, cont, res);\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":215}]},
{"label":"432([switch case for Bool(false)#1094])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"433([switch default case#1095])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"434([switch default case#1092])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Switch","arg":1,"values":[false],"targets":[432],"default":433}]},
{"label":"435([k@[k@[k@[mcore:[#743]#1065]#1070]#1072]#1077])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":2,"values":[true],"targets":[431],"default":434}]},
{"label":"436([k@[k@[mcore:[#743]#1065]#1070]#1072])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Push","target":435,"args":{"any":[1,0]}},
{"op":"Copy","from":3,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":427}]},
{"label":"437([k@[mcore:[#743]#1065]#1070])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: f(x)","traced":{"any":[]}},
{"op":"Push","target":436,"args":{"any":[2,0]}},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f(x)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"438([mcore:[#743]#1065])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap-create1<(e :: E)>(i)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Push","target":437,"args":{"any":[1,0,2]}},
{"op":"Copy","from":3,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap-create1<(e :: E)>(i)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":426}]},
{"label":"439([mcore:[#744]#1096])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"evvSwapCreate1"}]},
{"label":"440([mcore:[#748]#1101])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"441([mcore:[#754]#1106])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/open-at1<a,a,(e :: E),(e :: E)>(i, cont, res)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/open-at1<a,a,(e :: E),(e :: E)>(i, cont, res)","traced":{"any":[]}},
{"op":"Jump","target":412}]},
{"label":"442([#1128])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Jump","target":441}]},
{"label":"443([k@[switch case for Bool(true)#1124]#1135])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"444([switch case for Bool(true)#1124])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (5937 :: E) 5935, res: a){\n  std/core/hnd/open-at1<a,b,(e :: E),(e :: E)>(i, cont, res);\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[442],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (5937 :: E) 5935, res: a){\n  std/core/hnd/open-at1<a,b,(e :: E),(e :: E)>(i, cont, res);\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":215}]},
{"label":"445([switch case for Bool(false)#1139])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"446([switch default case#1140])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"447([switch default case#1137])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Switch","arg":1,"values":[false],"targets":[445],"default":446}]},
{"label":"448([k@[k@[k@[mcore:[#756]#1110]#1115]#1117]#1122])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":2,"values":[true],"targets":[444],"default":447}]},
{"label":"449([k@[k@[mcore:[#756]#1110]#1115]#1117])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Push","target":448,"args":{"any":[1,0]}},
{"op":"Copy","from":3,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":440}]},
{"label":"450([k@[mcore:[#756]#1110]#1115])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: f(x1, x2)","traced":{"any":[]}},
{"op":"Push","target":449,"args":{"any":[2,0]}},
{"op":"Copy","from":1,"to":2},
{"op":"Copy","from":3,"to":0},
{"op":"Copy","from":4,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f(x1, x2)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":2,"tag":"apply","args":{"any":[0,1]}}]},
{"label":"451([mcore:[#756]#1110])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap-create1<(e :: E)>(i)","traced":{"any":[]}},
{"op":"Const","format":"string","out":4,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"Push","target":450,"args":{"any":[1,0,2,3]}},
{"op":"Copy","from":4,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap-create1<(e :: E)>(i)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":439}]},
{"label":"452([mcore:[#757]#1141])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"evvSwapCreate1"}]},
{"label":"453([mcore:[#762]#1146])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"454([mcore:[#768]#1151])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/open-at1<a,a,(e :: E),(e :: E)>(i, cont, res)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/open-at1<a,a,(e :: E),(e :: E)>(i, cont, res)","traced":{"any":[]}},
{"op":"Jump","target":412}]},
{"label":"455([#1173])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Jump","target":454}]},
{"label":"456([k@[switch case for Bool(true)#1169]#1180])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"457([switch case for Bool(true)#1169])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (6058 :: E) 6056, res: a){\n  std/core/hnd/open-at1<a,b,(e :: E),(e :: E)>(i, cont, res);\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[455],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (6058 :: E) 6056, res: a){\n  std/core/hnd/open-at1<a,b,(e :: E),(e :: E)>(i, cont, res);\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":215}]},
{"label":"458([switch case for Bool(false)#1184])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"459([switch default case#1185])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"460([switch default case#1182])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Switch","arg":1,"values":[false],"targets":[458],"default":459}]},
{"label":"461([k@[k@[k@[mcore:[#770]#1155]#1160]#1162]#1167])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":2,"values":[true],"targets":[457],"default":460}]},
{"label":"462([k@[k@[mcore:[#770]#1155]#1160]#1162])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Push","target":461,"args":{"any":[1,0]}},
{"op":"Copy","from":3,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":453}]},
{"label":"463([k@[mcore:[#770]#1155]#1160])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: f(x1, x2, x3)","traced":{"any":[]}},
{"op":"Push","target":462,"args":{"any":[2,0]}},
{"op":"Copy","from":5,"to":2},
{"op":"Copy","from":3,"to":0},
{"op":"Copy","from":1,"to":3},
{"op":"Copy","from":4,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f(x1, x2, x3)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":3,"tag":"apply","args":{"any":[0,1,2]}}]},
{"label":"464([mcore:[#770]#1155])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4,5]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap-create1<(e :: E)>(i)","traced":{"any":[]}},
{"op":"Const","format":"string","out":5,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[5]},"in":{"any":[5]}},
{"op":"Push","target":463,"args":{"any":[1,0,2,3,4]}},
{"op":"Copy","from":5,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap-create1<(e :: E)>(i)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":452}]},
{"label":"465([mcore:[#771]#1186])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"evvSwapCreate1"}]},
{"label":"466([mcore:[#777]#1191])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"467([mcore:[#783]#1196])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/open-at1<a,a,(e :: E),(e :: E)>(i, cont, res)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/open-at1<a,a,(e :: E),(e :: E)>(i, cont, res)","traced":{"any":[]}},
{"op":"Jump","target":412}]},
{"label":"468([#1218])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Jump","target":467}]},
{"label":"469([k@[switch case for Bool(true)#1214]#1225])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"470([switch case for Bool(true)#1214])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (6190 :: E) 6188, res: a){\n  std/core/hnd/open-at1<a,b,(e :: E),(e :: E)>(i, cont, res);\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[468],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (6190 :: E) 6188, res: a){\n  std/core/hnd/open-at1<a,b,(e :: E),(e :: E)>(i, cont, res);\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":215}]},
{"label":"471([switch case for Bool(false)#1229])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"472([switch default case#1230])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"473([switch default case#1227])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Switch","arg":1,"values":[false],"targets":[471],"default":472}]},
{"label":"474([k@[k@[k@[mcore:[#785]#1200]#1205]#1207]#1212])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":2,"values":[true],"targets":[470],"default":473}]},
{"label":"475([k@[k@[mcore:[#785]#1200]#1205]#1207])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Push","target":474,"args":{"any":[1,0]}},
{"op":"Copy","from":3,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":466}]},
{"label":"476([k@[mcore:[#785]#1200]#1205])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: f(x1, x2, x3, x4)","traced":{"any":[]}},
{"op":"Push","target":475,"args":{"any":[2,0]}},
{"op":"Copy","from":5,"to":2},
{"op":"Copy","from":3,"to":0},
{"op":"Copy","from":6,"to":3},
{"op":"Swap","a":1,"b":4},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f(x1, x2, x3, x4)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":4,"tag":"apply","args":{"any":[0,1,2,3]}}]},
{"label":"477([mcore:[#785]#1200])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4,5,6]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap-create1<(e :: E)>(i)","traced":{"any":[]}},
{"op":"Const","format":"string","out":6,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[6]},"in":{"any":[6]}},
{"op":"Push","target":476,"args":{"any":[1,0,2,3,4,5]}},
{"op":"Copy","from":6,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap-create1<(e :: E)>(i)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":465}]},
{"label":"478([mcore:[#790]#1231])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"479([mcore:[#796]#1236])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/open1<a,a,(e :: E),(e :: E)>(indices, cont, res)","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/open1<a,a,(e :: E),(e :: E)>(indices, cont, res)","traced":{"any":[]}},
{"op":"Jump","target":489}]},
{"label":"480([#1255])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":2,"b":3},
{"op":"Jump","target":479}]},
{"label":"481([k@[switch case for Bool(true)#1251]#1262])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"482([switch case for Bool(true)#1251])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (6307 :: E) 6305, res: a){\n  std/core/hnd/open1<a,b,(e :: E),(e :: E)>(indices, cont, res);\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[480],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (6307 :: E) 6305, res: a){\n  std/core/hnd/open1<a,b,(e :: E),(e :: E)>(indices, cont, res);\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":215}]},
{"label":"483([switch case for Bool(false)#1266])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"484([switch default case#1267])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"485([switch default case#1264])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Switch","arg":1,"values":[false],"targets":[483],"default":484}]},
{"label":"486([k@[k@[k@[mcore:[#798]#1240]#1242]#1244]#1249])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":2,"values":[true],"targets":[482],"default":485}]},
{"label":"487([k@[k@[mcore:[#798]#1240]#1242]#1244])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Push","target":486,"args":{"any":[1,0]}},
{"op":"Copy","from":3,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":478}]},
{"label":"488([k@[mcore:[#798]#1240]#1242])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: f(x)","traced":{"any":[]}},
{"op":"Push","target":487,"args":{"any":[2,0]}},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f(x)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"489([mcore:[#798]#1240])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap-create<(e :: E)>(indices)","traced":{"any":[]}},
{"op":"Push","target":488,"args":{"any":[1,0,2]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap-create<(e :: E)>(indices)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":223}]},
{"label":"490([mcore:[#802]#1268])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"491([mcore:[#808]#1273])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/open1<a,a,(e :: E),(e :: E)>(indices, cont, res)","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/open1<a,a,(e :: E),(e :: E)>(indices, cont, res)","traced":{"any":[]}},
{"op":"Jump","target":489}]},
{"label":"492([#1292])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":2,"b":3},
{"op":"Jump","target":491}]},
{"label":"493([k@[switch case for Bool(true)#1288]#1299])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"494([switch case for Bool(true)#1288])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (6401 :: E) 6399, res: a){\n  std/core/hnd/open1<a,b,(e :: E),(e :: E)>(indices, cont, res);\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[492],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (6401 :: E) 6399, res: a){\n  std/core/hnd/open1<a,b,(e :: E),(e :: E)>(indices, cont, res);\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":215}]},
{"label":"495([switch case for Bool(false)#1303])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"496([switch default case#1304])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"497([switch default case#1301])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Switch","arg":1,"values":[false],"targets":[495],"default":496}]},
{"label":"498([k@[k@[k@[mcore:[#810]#1277]#1279]#1281]#1286])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":2,"values":[true],"targets":[494],"default":497}]},
{"label":"499([k@[k@[mcore:[#810]#1277]#1279]#1281])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Push","target":498,"args":{"any":[1,0]}},
{"op":"Copy","from":3,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":490}]},
{"label":"500([k@[mcore:[#810]#1277]#1279])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: f()","traced":{"any":[]}},
{"op":"Push","target":499,"args":{"any":[2,0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[]}}]},
{"label":"501([mcore:[#810]#1277])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap-create<(e :: E)>(indices)","traced":{"any":[]}},
{"op":"Push","target":500,"args":{"any":[1,0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap-create<(e :: E)>(indices)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":223}]},
{"label":"502([mcore:[#815]#1305])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"503([mcore:[#821]#1310])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/open1<a,a,(e :: E),(e :: E)>(indices, cont, res)","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/open1<a,a,(e :: E),(e :: E)>(indices, cont, res)","traced":{"any":[]}},
{"op":"Jump","target":489}]},
{"label":"504([#1329])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":2,"b":3},
{"op":"Jump","target":503}]},
{"label":"505([k@[switch case for Bool(true)#1325]#1336])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"506([switch case for Bool(true)#1325])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (6500 :: E) 6498, res: a){\n  std/core/hnd/open1<a,b,(e :: E),(e :: E)>(indices, cont, res);\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[504],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (6500 :: E) 6498, res: a){\n  std/core/hnd/open1<a,b,(e :: E),(e :: E)>(indices, cont, res);\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":215}]},
{"label":"507([switch case for Bool(false)#1340])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"508([switch default case#1341])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"509([switch default case#1338])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Switch","arg":1,"values":[false],"targets":[507],"default":508}]},
{"label":"510([k@[k@[k@[mcore:[#823]#1314]#1316]#1318]#1323])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":2,"values":[true],"targets":[506],"default":509}]},
{"label":"511([k@[k@[mcore:[#823]#1314]#1316]#1318])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Push","target":510,"args":{"any":[1,0]}},
{"op":"Copy","from":3,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":502}]},
{"label":"512([k@[mcore:[#823]#1314]#1316])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: f(x)","traced":{"any":[]}},
{"op":"Push","target":511,"args":{"any":[2,0]}},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f(x)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"513([mcore:[#823]#1314])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap-create<(e :: E)>(indices)","traced":{"any":[]}},
{"op":"Push","target":512,"args":{"any":[1,0,2]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap-create<(e :: E)>(indices)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":223}]},
{"label":"514([mcore:[#829]#1342])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"515([mcore:[#835]#1347])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/open1<a,a,(e :: E),(e :: E)>(indices, cont, res)","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/open1<a,a,(e :: E),(e :: E)>(indices, cont, res)","traced":{"any":[]}},
{"op":"Jump","target":489}]},
{"label":"516([#1366])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":2,"b":3},
{"op":"Jump","target":515}]},
{"label":"517([k@[switch case for Bool(true)#1362]#1373])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"518([switch case for Bool(true)#1362])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (6610 :: E) 6608, res: a){\n  std/core/hnd/open1<a,b,(e :: E),(e :: E)>(indices, cont, res);\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[516],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (6610 :: E) 6608, res: a){\n  std/core/hnd/open1<a,b,(e :: E),(e :: E)>(indices, cont, res);\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":215}]},
{"label":"519([switch case for Bool(false)#1377])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"520([switch default case#1378])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"521([switch default case#1375])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Switch","arg":1,"values":[false],"targets":[519],"default":520}]},
{"label":"522([k@[k@[k@[mcore:[#837]#1351]#1353]#1355]#1360])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":2,"values":[true],"targets":[518],"default":521}]},
{"label":"523([k@[k@[mcore:[#837]#1351]#1353]#1355])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Push","target":522,"args":{"any":[1,0]}},
{"op":"Copy","from":3,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":514}]},
{"label":"524([k@[mcore:[#837]#1351]#1353])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: f(x1, x2)","traced":{"any":[]}},
{"op":"Push","target":523,"args":{"any":[2,0]}},
{"op":"Copy","from":1,"to":2},
{"op":"Copy","from":3,"to":0},
{"op":"Copy","from":4,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f(x1, x2)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":2,"tag":"apply","args":{"any":[0,1]}}]},
{"label":"525([mcore:[#837]#1351])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap-create<(e :: E)>(indices)","traced":{"any":[]}},
{"op":"Push","target":524,"args":{"any":[1,0,2,3]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap-create<(e :: E)>(indices)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":223}]},
{"label":"526([mcore:[#844]#1379])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"527([mcore:[#850]#1384])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/open1<a,a,(e :: E),(e :: E)>(indices, cont, res)","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/open1<a,a,(e :: E),(e :: E)>(indices, cont, res)","traced":{"any":[]}},
{"op":"Jump","target":489}]},
{"label":"528([#1403])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":2,"b":3},
{"op":"Jump","target":527}]},
{"label":"529([k@[switch case for Bool(true)#1399]#1410])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"530([switch case for Bool(true)#1399])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (6731 :: E) 6729, res: a){\n  std/core/hnd/open1<a,b,(e :: E),(e :: E)>(indices, cont, res);\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[528],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (6731 :: E) 6729, res: a){\n  std/core/hnd/open1<a,b,(e :: E),(e :: E)>(indices, cont, res);\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":215}]},
{"label":"531([switch case for Bool(false)#1414])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"532([switch default case#1415])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"533([switch default case#1412])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Switch","arg":1,"values":[false],"targets":[531],"default":532}]},
{"label":"534([k@[k@[k@[mcore:[#852]#1388]#1390]#1392]#1397])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":2,"values":[true],"targets":[530],"default":533}]},
{"label":"535([k@[k@[mcore:[#852]#1388]#1390]#1392])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Push","target":534,"args":{"any":[1,0]}},
{"op":"Copy","from":3,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":526}]},
{"label":"536([k@[mcore:[#852]#1388]#1390])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: f(x1, x2, x3)","traced":{"any":[]}},
{"op":"Push","target":535,"args":{"any":[2,0]}},
{"op":"Copy","from":5,"to":2},
{"op":"Copy","from":3,"to":0},
{"op":"Copy","from":1,"to":3},
{"op":"Copy","from":4,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f(x1, x2, x3)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":3,"tag":"apply","args":{"any":[0,1,2]}}]},
{"label":"537([mcore:[#852]#1388])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4,5]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap-create<(e :: E)>(indices)","traced":{"any":[]}},
{"op":"Push","target":536,"args":{"any":[1,0,2,3,4]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap-create<(e :: E)>(indices)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":223}]},
{"label":"538([mcore:[#860]#1416])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"539([mcore:[#866]#1421])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/open1<a,a,(e :: E),(e :: E)>(indices, cont, res)","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/open1<a,a,(e :: E),(e :: E)>(indices, cont, res)","traced":{"any":[]}},
{"op":"Jump","target":489}]},
{"label":"540([#1440])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":2,"b":3},
{"op":"Jump","target":539}]},
{"label":"541([k@[switch case for Bool(true)#1436]#1447])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"542([switch case for Bool(true)#1436])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (6863 :: E) 6861, res: a){\n  std/core/hnd/open1<a,b,(e :: E),(e :: E)>(indices, cont, res);\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[540],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (6863 :: E) 6861, res: a){\n  std/core/hnd/open1<a,b,(e :: E),(e :: E)>(indices, cont, res);\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":215}]},
{"label":"543([switch case for Bool(false)#1451])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"544([switch default case#1452])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"545([switch default case#1449])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Switch","arg":1,"values":[false],"targets":[543],"default":544}]},
{"label":"546([k@[k@[k@[mcore:[#868]#1425]#1427]#1429]#1434])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":2,"values":[true],"targets":[542],"default":545}]},
{"label":"547([k@[k@[mcore:[#868]#1425]#1427]#1429])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Push","target":546,"args":{"any":[1,0]}},
{"op":"Copy","from":3,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":538}]},
{"label":"548([k@[mcore:[#868]#1425]#1427])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: f(x1, x2, x3, x4)","traced":{"any":[]}},
{"op":"Push","target":547,"args":{"any":[2,0]}},
{"op":"Copy","from":5,"to":2},
{"op":"Copy","from":3,"to":0},
{"op":"Copy","from":6,"to":3},
{"op":"Swap","a":1,"b":4},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f(x1, x2, x3, x4)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":4,"tag":"apply","args":{"any":[0,1,2,3]}}]},
{"label":"549([mcore:[#868]#1425])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4,5,6]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap-create<(e :: E)>(indices)","traced":{"any":[]}},
{"op":"Push","target":548,"args":{"any":[1,0,2,3,4,5]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap-create<(e :: E)>(indices)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":223}]},
{"label":"550([mcore:[#874]#1453])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"CallLib","lib":3,"symbol":"std/core/types/Tuple3"}]},
{"label":"551([match_def@[mcore:[#880]#1460]#1461])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"552([k@[k@[#1462]#1464]#1466])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"553([match_def@[k@[#1462]#1464]#1468])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"554([k@[k@[#1469]#1474]#1477])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"555([k@[#1469]#1474])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":2,"b":0},
{"op":"Invoke","receiver":3,"tag":"apply","args":{"any":[0,1,2]}}]},
{"label":"556([#1469])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@2,{\"op\": \"Var\",\"id\": \"@x70\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}),(f,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"71\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (f: (hnd/marker<3931,3932>, hnd/ev<6957>, (6952, 6953, 6954)) -> 3931 6955) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"71\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}, {\\\"op\\\": \\\"Top\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: f(m, ev, (std/core/types/Tuple3<a,a,a>(x1, x2, x3)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/Tuple3<a,a,a>(x1, x2, x3)","traced":{"any":[]}},
{"op":"Const","format":"string","out":6,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[6]},"in":{"any":[6]}},
{"op":"Push","target":555,"args":{"any":[5,0,1]}},
{"op":"Copy","from":3,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Copy","from":6,"to":3},
{"op":"Copy","from":4,"to":2},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/Tuple3<a,a,a>(x1, x2, x3)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f(m, ev, (std/core/types/Tuple3<a,a,a>(x1, x2, x3)))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@2,{\"op\": \"Var\",\"id\": \"@x70\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}),(f,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"71\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (f: (hnd/marker<3931,3932>, hnd/ev<6957>, (6952, 6953, 6954)) -> 3931 6955) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"71\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}, {\\\"op\\\": \\\"Top\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Jump","target":550}]},
{"label":"557([k@[#1462]#1464])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@x70\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}: \"std/core/hnd/clause1\".\"std/core/hnd/Clause1\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"71\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Swap","a":4,"b":5},
{"op":"Swap","a":3,"b":5},
{"op":"Swap","a":2,"b":5},
{"op":"Swap","a":1,"b":5},
{"op":"Swap","a":0,"b":5},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@x70\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}: \"std/core/hnd/clause1\".\"std/core/hnd/Clause1\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"71\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/clause1","scrutinee":5,"clauses":[{"tag":"std/core/hnd/Clause1","target":556,"args":{"any":[5]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3059]","target":553,"args":{"any":[]}}}]},
{"label":"558([#1462])",
"frameDescriptor":{"regs_any":9},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"66\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<6957>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"66\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(m,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"67\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (m: hnd/marker<3931,3932>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"67\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(h,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"68\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h: 6957<3931,3932>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"68\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"69\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/evv<3931>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"69\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match ((op<(e :: E),a>(h))) {\n  ((@skip std/core/hnd/Clause1((f: ((hnd/marker :: (E, V) -> V)<(3931 :: E),3932>, (hnd/ev :: ((E, V) -> V) -> V)<(6957 :: (E, V) -> V)>, (6952, 6953, 6954)) -> (3931 :: E) 6955) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(b1 :: (E, V) -> V)>, (b, c, d)) -> (e :: E) a1) : (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<(b, c, d),a1,(b1 :: (E, V) -> V),(e :: E),a> ) as @pat@2: ((hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<(6952, 6953, 6954),6955,(6957 :: (E, V) -> V),(3931 :: E),3932>))\n     -> f(m, ev, (std/core/types/Tuple3<a,a,a>(x1, x2, x3)));\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: op<(e :: E),a>(h)","traced":{"any":[]}},
{"op":"Push","target":557,"args":{"any":[6,0,2,3,4]}},
{"op":"Copy","from":7,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op<(e :: E),a>(h)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match ((op<(e :: E),a>(h))) {\n  ((@skip std/core/hnd/Clause1((f: ((hnd/marker :: (E, V) -> V)<(3931 :: E),3932>, (hnd/ev :: ((E, V) -> V) -> V)<(6957 :: (E, V) -> V)>, (6952, 6953, 6954)) -> (3931 :: E) 6955) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(b1 :: (E, V) -> V)>, (b, c, d)) -> (e :: E) a1) : (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<(b, c, d),a1,(b1 :: (E, V) -> V),(e :: E),a> ) as @pat@2: ((hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<(6952, 6953, 6954),6955,(6957 :: (E, V) -> V),(3931 :: E),3932>))\n     -> f(m, ev, (std/core/types/Tuple3<a,a,a>(x1, x2, x3)));\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"66\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<6957>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"66\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(m,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"67\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (m: hnd/marker<3931,3932>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"67\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(h,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"68\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h: 6957<3931,3932>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"68\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"69\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/evv<3931>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"69\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"559([mcore:[#880]#1460])",
"frameDescriptor":{"regs_any":9},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4,5]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"66\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"67\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"68\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"69\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"66\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"67\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"68\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"69\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/ev","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Ev","target":558,"args":{"any":[5,6,7,8]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3060]","target":551,"args":{"any":[]}}}]},
{"label":"560([mcore:[#886]#1479])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4]}},
{"op":"Const","format":"string","out":4,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"CallLib","lib":4,"symbol":"std/core/types/Tuple4"}]},
{"label":"561([match_def@[mcore:[#893]#1487]#1488])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"562([k@[k@[#1489]#1491]#1493])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"563([match_def@[k@[#1489]#1491]#1495])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"564([k@[k@[#1496]#1501]#1504])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"565([k@[#1496]#1501])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":2,"b":0},
{"op":"Invoke","receiver":3,"tag":"apply","args":{"any":[0,1,2]}}]},
{"label":"566([#1496])",
"frameDescriptor":{"regs_any":8},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@2,{\"op\": \"Var\",\"id\": \"@x76\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}),(f,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"77\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (f: (hnd/marker<3931,3932>, hnd/ev<7058>, (7052, 7053, 7054, 7055)) -> 3931 7056) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"77\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}, {\\\"op\\\": \\\"Top\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: f(m, ev, (std/core/types/Tuple4<a,a,a,a>(x1, x2, x3, x4)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/Tuple4<a,a,a,a>(x1, x2, x3, x4)","traced":{"any":[]}},
{"op":"Const","format":"string","out":7,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[7]},"in":{"any":[7]}},
{"op":"Push","target":565,"args":{"any":[6,0,1]}},
{"op":"Copy","from":3,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Copy","from":5,"to":3},
{"op":"Copy","from":4,"to":2},
{"op":"Copy","from":7,"to":4},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/Tuple4<a,a,a,a>(x1, x2, x3, x4)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f(m, ev, (std/core/types/Tuple4<a,a,a,a>(x1, x2, x3, x4)))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@2,{\"op\": \"Var\",\"id\": \"@x76\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}),(f,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"77\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (f: (hnd/marker<3931,3932>, hnd/ev<7058>, (7052, 7053, 7054, 7055)) -> 3931 7056) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"77\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}, {\\\"op\\\": \\\"Top\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Jump","target":560}]},
{"label":"567([k@[#1489]#1491])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@x76\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}: \"std/core/hnd/clause1\".\"std/core/hnd/Clause1\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"77\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Swap","a":4,"b":5},
{"op":"Swap","a":3,"b":5},
{"op":"Swap","a":2,"b":5},
{"op":"Swap","a":1,"b":5},
{"op":"Swap","a":0,"b":5},
{"op":"Swap","a":6,"b":5},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@x76\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}: \"std/core/hnd/clause1\".\"std/core/hnd/Clause1\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"77\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/clause1","scrutinee":6,"clauses":[{"tag":"std/core/hnd/Clause1","target":566,"args":{"any":[6]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3061]","target":563,"args":{"any":[]}}}]},
{"label":"568([#1489])",
"frameDescriptor":{"regs_any":10},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"72\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<7058>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"72\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(m,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"73\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (m: hnd/marker<3931,3932>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"73\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(h,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"74\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h: 7058<3931,3932>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"74\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"75\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/evv<3931>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"75\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match ((op<(e :: E),a>(h))) {\n  ((@skip std/core/hnd/Clause1((f: ((hnd/marker :: (E, V) -> V)<(3931 :: E),3932>, (hnd/ev :: ((E, V) -> V) -> V)<(7058 :: (E, V) -> V)>, (7052, 7053, 7054, 7055)) -> (3931 :: E) 7056) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(c1 :: (E, V) -> V)>, (b, c, d, a1)) -> (e :: E) b1) : (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<(b, c, d, a1),b1,(c1 :: (E, V) -> V),(e :: E),a> ) as @pat@2: ((hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<(7052, 7053, 7054, 7055),7056,(7058 :: (E, V) -> V),(3931 :: E),3932>))\n     -> f(m, ev, (std/core/types/Tuple4<a,a,a,a>(x1, x2, x3, x4)));\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: op<(e :: E),a>(h)","traced":{"any":[]}},
{"op":"Push","target":567,"args":{"any":[7,0,2,3,4,5]}},
{"op":"Copy","from":8,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op<(e :: E),a>(h)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match ((op<(e :: E),a>(h))) {\n  ((@skip std/core/hnd/Clause1((f: ((hnd/marker :: (E, V) -> V)<(3931 :: E),3932>, (hnd/ev :: ((E, V) -> V) -> V)<(7058 :: (E, V) -> V)>, (7052, 7053, 7054, 7055)) -> (3931 :: E) 7056) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(c1 :: (E, V) -> V)>, (b, c, d, a1)) -> (e :: E) b1) : (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<(b, c, d, a1),b1,(c1 :: (E, V) -> V),(e :: E),a> ) as @pat@2: ((hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<(7052, 7053, 7054, 7055),7056,(7058 :: (E, V) -> V),(3931 :: E),3932>))\n     -> f(m, ev, (std/core/types/Tuple4<a,a,a,a>(x1, x2, x3, x4)));\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"72\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<7058>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"72\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(m,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"73\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (m: hnd/marker<3931,3932>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"73\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(h,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"74\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h: 7058<3931,3932>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"74\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"75\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/evv<3931>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"75\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"569([mcore:[#893]#1487])",
"frameDescriptor":{"regs_any":10},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4,5,6]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"72\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"73\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"74\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"75\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"72\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"73\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"74\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"75\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/ev","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Ev","target":568,"args":{"any":[6,7,8,9]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3062]","target":561,"args":{"any":[]}}}]},
{"label":"570([mcore:[#898]#1506])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"571([k@[k@[k@[mcore:[#899]#1511]#1513]#1515]#1520])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Return","args":{"any":[0]}}]},
{"label":"572([k@[k@[mcore:[#899]#1511]#1513]#1515])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Push","target":571,"args":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Copy","from":2,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":570}]},
{"label":"573([k@[mcore:[#899]#1511]#1513])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@yield-to-prim-vm<a,(e :: E),(e :: E),a>(m, clause)","traced":{"any":[]}},
{"op":"Push","target":572,"args":{"any":[0]}},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@yield-to-prim-vm<a,(e :: E),(e :: E),a>(m, clause)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Jump","target":206}]},
{"label":"574([mcore:[#899]#1511])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-get<(e :: E)>()","traced":{"any":[]}},
{"op":"Push","target":573,"args":{"any":[1,0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-get<(e :: E)>()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":208}]},
{"label":"575([mcore:[#905]#1521])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: f()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f()","traced":{"any":[]}},
{"op":"Invoke","receiver":0,"tag":"apply","args":{"any":[]}}]},
{"label":"576([#1527])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Jump","target":575}]},
{"label":"577([k@[mcore:[#907]#1522]#1524])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-extend<() -> (e :: E) a,a,(e :: E)>((fn<(e :: E)>(f: () -> (7175 :: E) 7174){\n  (f());\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[576],"args":{"any":[]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-extend<() -> (e :: E) a,a,(e :: E)>((fn<(e :: E)>(f: () -> (7175 :: E) 7174){\n  (f());\n}))","traced":{"any":[]}},
{"op":"Jump","target":214}]},
{"label":"578([mcore:[#907]#1522])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"g\",\"type\": {\"op\": \"Function\",\"params\": [],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-to-prim<a,(e :: E),(e :: E),a>(m, clause)","traced":{"any":[]}},
{"op":"Push","target":577,"args":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-to-prim<a,(e :: E),(e :: E),a>(m, clause)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"g\",\"type\": {\"op\": \"Function\",\"params\": [],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}","traced":{"any":[]}},
{"op":"Jump","target":232}]},
{"label":"579([k@[mcore:[#915]#1530]#1532])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"580([mcore:[#915]#1530])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: op((std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k)","traced":{"any":[]}},
{"op":"Push","target":579,"args":{"any":[1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op((std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k)))","traced":{"any":[]}},
{"op":"Jump","target":1065}]},
{"label":"581([method_apply@[mcore:[#917]#1534]#1537])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Jump","target":580}]},
{"label":"582([mcore:[#917]#1534])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<7248,7252>) -> (7249 :: E) 7252){\n    (op((std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k))));\n  }))","traced":{"any":[]}},
{"op":"New","out":1,"targets":[581],"args":{"any":[3]},"tags":["apply"]},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<7248,7252>) -> (7249 :: E) 7252){\n    (op((std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k))));\n  }))","traced":{"any":[]}},
{"op":"Jump","target":574}]},
{"label":"583([method_apply@[mcore:[#919]#1543]#1547])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":2,"b":3},
{"op":"Jump","target":582}]},
{"label":"584([mcore:[#919]#1543])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Clause0<a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(7249 :: E),7252>, @_wildcard-x722_16: (hnd/ev :: ((E, V) -> V) -> V)<(7251 :: (E, V) -> V)>){\n  (std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<7248,7252>) -> (7249 :: E) 7252){\n      (op((std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k))));\n    })));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[583],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Clause0<a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(7249 :: E),7252>, @_wildcard-x722_16: (hnd/ev :: ((E, V) -> V) -> V)<(7251 :: (E, V) -> V)>){\n  (std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<7248,7252>) -> (7249 :: E) 7252){\n      (op((std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k))));\n    })));\n}))","traced":{"any":[]}},
{"op":"Jump","target":1059}]},
{"label":"585([k@[mcore:[#928]#1553]#1555])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Invoke","receiver":2,"tag":"apply","args":{"any":[0,1]}}]},
{"label":"586([mcore:[#928]#1553])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genExpr: op(x, (std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k)","traced":{"any":[]}},
{"op":"Push","target":585,"args":{"any":[1,2]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op(x, (std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k)))","traced":{"any":[]}},
{"op":"Jump","target":1065}]},
{"label":"587([method_apply@[mcore:[#930]#1557]#1560])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Jump","target":586}]},
{"label":"588([mcore:[#930]#1557])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<7339,7343>) -> (7340 :: E) 7343){\n    (op(x, (std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k))));\n  }))","traced":{"any":[]}},
{"op":"New","out":1,"targets":[587],"args":{"any":[4,2]},"tags":["apply"]},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<7339,7343>) -> (7340 :: E) 7343){\n    (op(x, (std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k))));\n  }))","traced":{"any":[]}},
{"op":"Jump","target":574}]},
{"label":"589([method_apply@[mcore:[#932]#1566]#1571])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Const","format":"string","out":4,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"Swap","a":3,"b":4},
{"op":"Jump","target":588}]},
{"label":"590([mcore:[#932]#1566])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Clause1<a,a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(7340 :: E),7343>, @_wildcard-x648_16: (hnd/ev :: ((E, V) -> V) -> V)<(7342 :: (E, V) -> V)>, x: 7338){\n  (std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<7339,7343>) -> (7340 :: E) 7343){\n      (op(x, (std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k))));\n    })));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[589],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Clause1<a,a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(7340 :: E),7343>, @_wildcard-x648_16: (hnd/ev :: ((E, V) -> V) -> V)<(7342 :: (E, V) -> V)>, x: 7338){\n  (std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<7339,7343>) -> (7340 :: E) 7343){\n      (op(x, (std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k))));\n    })));\n}))","traced":{"any":[]}},
{"op":"Jump","target":1060}]},
{"label":"591([k@[mcore:[#942]#1577]#1579])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":2,"b":0},
{"op":"Invoke","receiver":3,"tag":"apply","args":{"any":[0,1,2]}}]},
{"label":"592([mcore:[#942]#1577])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: op(x1, x2, (std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k)","traced":{"any":[]}},
{"op":"Push","target":591,"args":{"any":[1,2,3]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op(x1, x2, (std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k)))","traced":{"any":[]}},
{"op":"Jump","target":1065}]},
{"label":"593([method_apply@[mcore:[#944]#1581]#1584])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Jump","target":592}]},
{"label":"594([mcore:[#944]#1581])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4,5]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<7441,7445>) -> (7442 :: E) 7445){\n    (op(x1, x2, (std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k))));\n  }))","traced":{"any":[]}},
{"op":"New","out":1,"targets":[593],"args":{"any":[5,2,3]},"tags":["apply"]},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<7441,7445>) -> (7442 :: E) 7445){\n    (op(x1, x2, (std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k))));\n  }))","traced":{"any":[]}},
{"op":"Jump","target":574}]},
{"label":"595([method_apply@[mcore:[#946]#1590]#1596])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Const","format":"string","out":5,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[5]},"in":{"any":[5]}},
{"op":"Swap","a":4,"b":5},
{"op":"Jump","target":594}]},
{"label":"596([mcore:[#946]#1590])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Clause2<a,a,a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(7442 :: E),7445>, @_wildcard-x773_16: (hnd/ev :: ((E, V) -> V) -> V)<(7444 :: (E, V) -> V)>, x1: 7439, x2: 7440){\n  (std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<7441,7445>) -> (7442 :: E) 7445){\n      (op(x1, x2, (std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k))));\n    })));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[595],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Clause2<a,a,a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(7442 :: E),7445>, @_wildcard-x773_16: (hnd/ev :: ((E, V) -> V) -> V)<(7444 :: (E, V) -> V)>, x1: 7439, x2: 7440){\n  (std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<7441,7445>) -> (7442 :: E) 7445){\n      (op(x1, x2, (std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k))));\n    })));\n}))","traced":{"any":[]}},
{"op":"Jump","target":1061}]},
{"label":"597([match_def@[mcore:[#957]#1602]#1603])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"598([k@[k@[#1604]#1606]#1609])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"599([k@[#1604]#1606])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Invoke","receiver":4,"tag":"apply","args":{"any":[0,1,2,3]}}]},
{"label":"600([#1604])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}),(x1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"78\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x1: 7528) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"78\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"79\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x2: 7529) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"79\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x3,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"80\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x3: 7530) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"80\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: op(x1, x2, x3, (std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k)","traced":{"any":[]}},
{"op":"Push","target":599,"args":{"any":[2,3,4,1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op(x1, x2, x3, (std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k)))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}),(x1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"78\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x1: 7528) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"78\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"79\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x2: 7529) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"79\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x3,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"80\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x3: 7530) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"80\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Jump","target":1065}]},
{"label":"601([mcore:[#957]#1602])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}: \"std/core/types/tuple3\".\"std/core/types/Tuple3\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"78\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"79\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"80\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}: \"std/core/types/tuple3\".\"std/core/types/Tuple3\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"78\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"79\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"80\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/tuple3","scrutinee":2,"clauses":[{"tag":"std/core/types/Tuple3","target":600,"args":{"any":[2,3,4]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3063]","target":597,"args":{"any":[]}}}]},
{"label":"602([method_apply@[mcore:[#959]#1611]#1614])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Jump","target":601}]},
{"label":"603([mcore:[#959]#1611])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<7531,7535>) -> (7532 :: E) 7535){\n    (match (x) {\n      ((@skip std/core/types/Tuple3((x1: 7528) : a, (x2: 7529) : a, (x3: 7530) : a) : (a, b, c) ) as @pat: (7528, 7529, 7530))\n         -> op(x1, x2, x3, (std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k)));\n    });\n  }))","traced":{"any":[]}},
{"op":"New","out":1,"targets":[602],"args":{"any":[4,2]},"tags":["apply"]},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<7531,7535>) -> (7532 :: E) 7535){\n    (match (x) {\n      ((@skip std/core/types/Tuple3((x1: 7528) : a, (x2: 7529) : a, (x3: 7530) : a) : (a, b, c) ) as @pat: (7528, 7529, 7530))\n         -> op(x1, x2, x3, (std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k)));\n    });\n  }))","traced":{"any":[]}},
{"op":"Jump","target":574}]},
{"label":"604([method_apply@[mcore:[#961]#1620]#1625])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Const","format":"string","out":4,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"Swap","a":3,"b":4},
{"op":"Jump","target":603}]},
{"label":"605([mcore:[#961]#1620])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Clause1<(a, b, c),a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(7532 :: E),7535>, @_wildcard-x648_16: (hnd/ev :: ((E, V) -> V) -> V)<(7534 :: (E, V) -> V)>, x: (7528, 7529, 7530)){\n  (std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<7531,7535>) -> (7532 :: E) 7535){\n      (match (x) {\n        ((@skip std/core/types/Tuple3((x1: 7528) : a, (x2: 7529) : a, (x3: 7530) : a) : (a, b, c) ) as @pat: (7528, 7529, 7530))\n           -> op(x1, x2, x3, (std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k)));\n      });\n    })));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[604],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Clause1<(a, b, c),a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(7532 :: E),7535>, @_wildcard-x648_16: (hnd/ev :: ((E, V) -> V) -> V)<(7534 :: (E, V) -> V)>, x: (7528, 7529, 7530)){\n  (std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<7531,7535>) -> (7532 :: E) 7535){\n      (match (x) {\n        ((@skip std/core/types/Tuple3((x1: 7528) : a, (x2: 7529) : a, (x3: 7530) : a) : (a, b, c) ) as @pat: (7528, 7529, 7530))\n           -> op(x1, x2, x3, (std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k)));\n      });\n    })));\n}))","traced":{"any":[]}},
{"op":"Jump","target":1060}]},
{"label":"606([match_def@[mcore:[#966]#1631]#1632])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"607([k@[k@[#1633]#1635]#1638])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"608([k@[#1633]#1635])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"609([#1633])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-context\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"k\\\"81\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (@x: (hnd/resume-result<7600,7603>) -> 7601 7603) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"k\\\\\\\"81\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/resume-result\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: @x((std/core/hnd/Finalize<a,a>(x)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Finalize<a,a>(x)","traced":{"any":[]}},
{"op":"Push","target":608,"args":{"any":[1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Finalize<a,a>(x)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: @x((std/core/hnd/Finalize<a,a>(x)))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-context\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"k\\\"81\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (@x: (hnd/resume-result<7600,7603>) -> 7601 7603) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"k\\\\\\\"81\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/resume-result\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Jump","target":1064}]},
{"label":"610([mcore:[#966]#1631])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-context\"}}: \"std/core/hnd/resume-context\".\"std/core/hnd/Resume-context\"(({\"op\": \"Var\",\"id\": \"@\\\"k\\\"81\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-context\"}}: \"std/core/hnd/resume-context\".\"std/core/hnd/Resume-context\"(({\"op\": \"Var\",\"id\": \"@\\\"k\\\"81\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/resume-context","scrutinee":1,"clauses":[{"tag":"std/core/hnd/Resume-context","target":609,"args":{"any":[1]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3064]","target":606,"args":{"any":[]}}}]},
{"label":"611([switch case for Bool(true)#1642])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"did-resume\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"did-resume\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"612([#1649])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"613([k@[switch case for Bool(false)#1644]#1646])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"614([switch case for Bool(false)#1644])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"did-resume\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: k((std/core/hnd/Finalize<a,a>(res)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Finalize<a,a>(res)","traced":{"any":[]}},
{"op":"Push","target":613,"args":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Finalize<a,a>(res)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: k((std/core/hnd/Finalize<a,a>(res)))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"did-resume\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Jump","target":1064}]},
{"label":"615([switch default case#1651])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"616([switch default case#1643])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Switch","arg":2,"values":[false],"targets":[614],"default":615}]},
{"label":"617([mcore:[#972]#1641])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"did-resume\",\"type\": {\"op\": \"Bool\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/ref/(!)<(global :: H),bool,<(alloc :: H -> X)<(global :: H)>,(write :: H -> X)<(global :: H)>|(e :: E)>>(resumed)","traced":{"any":[]}},
{"op":"PrimOp","name":"getRef(Ref[Ptr]): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/ref/(!)<(global :: H),bool,<(alloc :: H -> X)<(global :: H)>,(write :: H -> X)<(global :: H)>|(e :: E)>>(resumed)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"did-resume\",\"type\": {\"op\": \"Bool\"}}","traced":{"any":[]}},
{"op":"Switch","arg":0,"values":[true],"targets":[611],"default":616}]},
{"label":"618([k@[mcore:[#982]#1652]#1656])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"619([mcore:[#982]#1652])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/set<bool,(global :: H)>(resumed, std/core/types/True)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/True","traced":{"any":[]}},
{"op":"Const","format":"bool","out":3,"value":true},
{"op":"PrimOp","name":"setRef(Ref[Ptr], Ptr): Unit","out":{"any":[2]},"in":{"any":[2,3]}},
{"op":"Debug","msg":"BGN: genExpr: k((std/core/hnd/Deep<a,a>(ret)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Deep<a,a>(ret)","traced":{"any":[]}},
{"op":"Push","target":618,"args":{"any":[1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Deep<a,a>(ret)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: k((std/core/hnd/Deep<a,a>(ret)))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/True","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/set<bool,(global :: H)>(resumed, std/core/types/True)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":1062}]},
{"label":"620([mcore:[#989]#1658])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/protect-check<a,(e :: E),a>(resumed, k, xres)","traced":{"any":[]}},
{"op":"Swap","a":2,"b":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/protect-check<a,(e :: E),a>(resumed, k, xres)","traced":{"any":[]}},
{"op":"Jump","target":617}]},
{"label":"621([method_apply@[mcore:[#995]#1659]#1664])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Jump","target":619}]},
{"label":"622([#1673])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Jump","target":620}]},
{"label":"623([k@[switch case for Bool(true)#1670]#1677])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"624([switch case for Bool(true)#1670])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-extend<a,a,(e :: E)>((fn<(e :: E)>(xres: 7818){\n  (std/core/hnd/protect-check<a,(e :: E),a>(resumed, k, xres));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[622],"args":{"any":[0,2]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-extend<a,a,(e :: E)>((fn<(e :: E)>(xres: 7818){\n  (std/core/hnd/protect-check<a,(e :: E),a>(resumed, k, xres));\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":214}]},
{"label":"625([k@[switch case for Bool(false)#1681]#1683])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"626([switch case for Bool(false)#1681])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/protect-check<a,(e :: E),a>(resumed, k, res)","traced":{"any":[]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/protect-check<a,(e :: E),a>(resumed, k, res)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":617}]},
{"label":"627([switch default case#1685])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"628([switch default case#1679])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"bool","out":3,"value":false},
{"op":"Switch","arg":3,"values":[false],"targets":[626],"default":627}]},
{"label":"629([k@[mcore:[#995]#1659]#1668])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"bool","out":3,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":3,"values":[true],"targets":[624],"default":628}]},
{"label":"630([mcore:[#995]#1659])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"resumed\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"ref\\\"\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/ref<bool,(global :: H)>(std/core/types/False)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/False","traced":{"any":[]}},
{"op":"Const","format":"bool","out":3,"value":false},
{"op":"PrimOp","name":"mkRef(Ptr): Ref[Ptr]","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"res\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: clause(x, (fn<(e :: E)>(ret: 7816){\n    val _ : ()\n          = (std/core/types/set<bool,(global :: H)>(resumed, std/core/types/True));\n    (k((std/core/hnd/Deep<a,a>(ret))));\n  }))","traced":{"any":[]}},
{"op":"New","out":4,"targets":[621],"args":{"any":[2,3]},"tags":["apply"]},
{"op":"Push","target":629,"args":{"any":[2,3]}},
{"op":"Copy","from":1,"to":2},
{"op":"Copy","from":4,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: clause(x, (fn<(e :: E)>(ret: 7816){\n    val _ : ()\n          = (std/core/types/set<bool,(global :: H)>(resumed, std/core/types/True));\n    (k((std/core/hnd/Deep<a,a>(ret))));\n  }))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"res\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/False","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/ref<bool,(global :: H)>(std/core/types/False)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"resumed\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"ref\\\"\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":2,"tag":"apply","args":{"any":[0,1]}}]},
{"label":"631([mcore:[#1003]#1686])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genExpr: op(r)","traced":{"any":[]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op(r)","traced":{"any":[]}},
{"op":"Invoke","receiver":2,"tag":"apply","args":{"any":[0]}}]},
{"label":"632([method_apply@[mcore:[#1006]#1687]#1693])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Jump","target":631}]},
{"label":"633([mcore:[#1006]#1687])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/protect<(),a,(e :: E),a>(std/core/types/Unit, (fn<(e :: E)>(@_wildcard-x730_55: (), r: (7891) -> (7892 :: E) 7894){\n    (op(r));\n  }), k)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/Unit","traced":{"any":[]}},
{"op":"Construct","out":2,"type":"Unit","tag":"unit","args":{"any":[]}},
{"op":"New","out":1,"targets":[632],"args":{"any":[1]},"tags":["apply"]},
{"op":"Swap","a":2,"b":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/Unit","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/protect<(),a,(e :: E),a>(std/core/types/Unit, (fn<(e :: E)>(@_wildcard-x730_55: (), r: (7891) -> (7892 :: E) 7894){\n    (op(r));\n  }), k)","traced":{"any":[]}},
{"op":"Jump","target":202}]},
{"label":"634([method_apply@[mcore:[#1008]#1696]#1699])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Jump","target":633}]},
{"label":"635([mcore:[#1008]#1696])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<7891,7894>) -> (7892 :: E) 7894){\n    (std/core/hnd/protect<(),a,(e :: E),a>(std/core/types/Unit, (fn<(e :: E)>(@_wildcard-x730_55: (), r: (7891) -> (7892 :: E) 7894){\n        (op(r));\n      }), k));\n  }))","traced":{"any":[]}},
{"op":"New","out":1,"targets":[634],"args":{"any":[3]},"tags":["apply"]},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<7891,7894>) -> (7892 :: E) 7894){\n    (std/core/hnd/protect<(),a,(e :: E),a>(std/core/types/Unit, (fn<(e :: E)>(@_wildcard-x730_55: (), r: (7891) -> (7892 :: E) 7894){\n        (op(r));\n      }), k));\n  }))","traced":{"any":[]}},
{"op":"Jump","target":574}]},
{"label":"636([method_apply@[mcore:[#1010]#1705]#1709])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":2,"b":3},
{"op":"Jump","target":635}]},
{"label":"637([mcore:[#1010]#1705])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Clause0<a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(7892 :: E),7894>, @_wildcard-x730_16: (hnd/ev :: ((E, V) -> V) -> V)<(7893 :: (E, V) -> V)>){\n  (std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<7891,7894>) -> (7892 :: E) 7894){\n      (std/core/hnd/protect<(),a,(e :: E),a>(std/core/types/Unit, (fn<(e :: E)>(@_wildcard-x730_55: (), r: (7891) -> (7892 :: E) 7894){\n          (op(r));\n        }), k));\n    })));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[636],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Clause0<a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(7892 :: E),7894>, @_wildcard-x730_16: (hnd/ev :: ((E, V) -> V) -> V)<(7893 :: (E, V) -> V)>){\n  (std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<7891,7894>) -> (7892 :: E) 7894){\n      (std/core/hnd/protect<(),a,(e :: E),a>(std/core/types/Unit, (fn<(e :: E)>(@_wildcard-x730_55: (), r: (7891) -> (7892 :: E) 7894){\n          (op(r));\n        }), k));\n    })));\n}))","traced":{"any":[]}},
{"op":"Jump","target":1059}]},
{"label":"638([mcore:[#1018]#1715])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/protect<a,a,(e :: E),a>(x, clause, k)","traced":{"any":[]}},
{"op":"Swap","a":2,"b":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/protect<a,a,(e :: E),a>(x, clause, k)","traced":{"any":[]}},
{"op":"Jump","target":202}]},
{"label":"639([method_apply@[mcore:[#1020]#1716]#1719])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Jump","target":638}]},
{"label":"640([mcore:[#1020]#1716])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<7973,7976>) -> (7974 :: E) 7976){\n    (std/core/hnd/protect<a,a,(e :: E),a>(x, clause, k));\n  }))","traced":{"any":[]}},
{"op":"New","out":1,"targets":[639],"args":{"any":[3,2]},"tags":["apply"]},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<7973,7976>) -> (7974 :: E) 7976){\n    (std/core/hnd/protect<a,a,(e :: E),a>(x, clause, k));\n  }))","traced":{"any":[]}},
{"op":"Jump","target":574}]},
{"label":"641([method_apply@[mcore:[#1022]#1725]#1730])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Const","format":"string","out":4,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"Jump","target":640}]},
{"label":"642([mcore:[#1022]#1725])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Clause1<a,a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(7974 :: E),7976>, @_wildcard-x681_16: (hnd/ev :: ((E, V) -> V) -> V)<(7975 :: (E, V) -> V)>, x: 7972){\n  (std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<7973,7976>) -> (7974 :: E) 7976){\n      (std/core/hnd/protect<a,a,(e :: E),a>(x, clause, k));\n    })));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[641],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Clause1<a,a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(7974 :: E),7976>, @_wildcard-x681_16: (hnd/ev :: ((E, V) -> V) -> V)<(7975 :: (E, V) -> V)>, x: 7972){\n  (std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<7973,7976>) -> (7974 :: E) 7976){\n      (std/core/hnd/protect<a,a,(e :: E),a>(x, clause, k));\n    })));\n}))","traced":{"any":[]}},
{"op":"Jump","target":1060}]},
{"label":"643([k@[mcore:[#1033]#1736]#1740])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"644([mcore:[#1033]#1736])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/set<bool,(global :: H)>(resumed, std/core/types/True)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/True","traced":{"any":[]}},
{"op":"Const","format":"bool","out":3,"value":true},
{"op":"PrimOp","name":"setRef(Ref[Ptr], Ptr): Unit","out":{"any":[2]},"in":{"any":[2,3]}},
{"op":"Debug","msg":"BGN: genExpr: k((std/core/hnd/Deep<a,a>(ret)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Deep<a,a>(ret)","traced":{"any":[]}},
{"op":"Push","target":643,"args":{"any":[1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Deep<a,a>(ret)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: k((std/core/hnd/Deep<a,a>(ret)))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/True","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/set<bool,(global :: H)>(resumed, std/core/types/True)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":1062}]},
{"label":"645([mcore:[#1040]#1742])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/protect-check<a,(e :: E),a>(resumed, k, xres)","traced":{"any":[]}},
{"op":"Swap","a":2,"b":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/protect-check<a,(e :: E),a>(resumed, k, xres)","traced":{"any":[]}},
{"op":"Jump","target":617}]},
{"label":"646([method_apply@[mcore:[#1046]#1743]#1748])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Jump","target":644}]},
{"label":"647([#1757])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Jump","target":645}]},
{"label":"648([k@[switch case for Bool(true)#1754]#1761])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"649([switch case for Bool(true)#1754])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-extend<a,a,(e :: E)>((fn<(e :: E)>(xres: 8122){\n  (std/core/hnd/protect-check<a,(e :: E),a>(resumed, k, xres));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[647],"args":{"any":[0,2]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-extend<a,a,(e :: E)>((fn<(e :: E)>(xres: 8122){\n  (std/core/hnd/protect-check<a,(e :: E),a>(resumed, k, xres));\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":214}]},
{"label":"650([k@[switch case for Bool(false)#1765]#1767])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"651([switch case for Bool(false)#1765])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/protect-check<a,(e :: E),a>(resumed, k, res)","traced":{"any":[]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/protect-check<a,(e :: E),a>(resumed, k, res)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":617}]},
{"label":"652([switch default case#1769])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"653([switch default case#1763])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"bool","out":3,"value":false},
{"op":"Switch","arg":3,"values":[false],"targets":[651],"default":652}]},
{"label":"654([k@[mcore:[#1046]#1743]#1752])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"bool","out":3,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":3,"values":[true],"targets":[649],"default":653}]},
{"label":"655([mcore:[#1046]#1743])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"resumed\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"ref\\\"\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/ref<bool,(global :: H)>(std/core/types/False)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/False","traced":{"any":[]}},
{"op":"Const","format":"bool","out":4,"value":false},
{"op":"PrimOp","name":"mkRef(Ptr): Ref[Ptr]","out":{"any":[4]},"in":{"any":[4]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"res\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: clause(x1, x2, (fn<(e :: E)>(ret: 8120){\n    val _ : ()\n          = (std/core/types/set<bool,(global :: H)>(resumed, std/core/types/True));\n    (k((std/core/hnd/Deep<a,a>(ret))));\n  }))","traced":{"any":[]}},
{"op":"New","out":5,"targets":[646],"args":{"any":[3,4]},"tags":["apply"]},
{"op":"Push","target":654,"args":{"any":[3,4]}},
{"op":"Copy","from":2,"to":3},
{"op":"Copy","from":5,"to":2},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: clause(x1, x2, (fn<(e :: E)>(ret: 8120){\n    val _ : ()\n          = (std/core/types/set<bool,(global :: H)>(resumed, std/core/types/True));\n    (k((std/core/hnd/Deep<a,a>(ret))));\n  }))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"res\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/False","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/ref<bool,(global :: H)>(std/core/types/False)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"resumed\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"ref\\\"\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":3,"tag":"apply","args":{"any":[0,1,2]}}]},
{"label":"656([mcore:[#1055]#1770])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/protect2<a,a,a,(e :: E),a>(x1, x2, clause, k)","traced":{"any":[]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":3,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/protect2<a,a,a,(e :: E),a>(x1, x2, clause, k)","traced":{"any":[]}},
{"op":"Jump","target":655}]},
{"label":"657([method_apply@[mcore:[#1057]#1771]#1774])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Jump","target":656}]},
{"label":"658([mcore:[#1057]#1771])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4,5]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<8214,8217>) -> (8215 :: E) 8217){\n    (std/core/hnd/protect2<a,a,a,(e :: E),a>(x1, x2, clause, k));\n  }))","traced":{"any":[]}},
{"op":"New","out":1,"targets":[657],"args":{"any":[4,2,3]},"tags":["apply"]},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<8214,8217>) -> (8215 :: E) 8217){\n    (std/core/hnd/protect2<a,a,a,(e :: E),a>(x1, x2, clause, k));\n  }))","traced":{"any":[]}},
{"op":"Jump","target":574}]},
{"label":"659([method_apply@[mcore:[#1059]#1780]#1786])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Const","format":"string","out":5,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[5]},"in":{"any":[5]}},
{"op":"Jump","target":658}]},
{"label":"660([mcore:[#1059]#1780])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Clause2<a,a,a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(8215 :: E),8217>, @_wildcard-x769_16: (hnd/ev :: ((E, V) -> V) -> V)<(8216 :: (E, V) -> V)>, x1: 8212, x2: 8213){\n  (std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<8214,8217>) -> (8215 :: E) 8217){\n      (std/core/hnd/protect2<a,a,a,(e :: E),a>(x1, x2, clause, k));\n    })));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[659],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Clause2<a,a,a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(8215 :: E),8217>, @_wildcard-x769_16: (hnd/ev :: ((E, V) -> V) -> V)<(8216 :: (E, V) -> V)>, x1: 8212, x2: 8213){\n  (std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<8214,8217>) -> (8215 :: E) 8217){\n      (std/core/hnd/protect2<a,a,a,(e :: E),a>(x1, x2, clause, k));\n    })));\n}))","traced":{"any":[]}},
{"op":"Jump","target":1061}]},
{"label":"661([match_def@[mcore:[#1070]#1792]#1793])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"662([k@[#1794]#1796])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"663([#1794])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"@pat-x805_23\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}),(x1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"82\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x1: 8291) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"82\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"83\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x2: 8292) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"83\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x3,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"84\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x3: 8293) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"84\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: op(x1, x2, x3, k@0)","traced":{"any":[]}},
{"op":"Swap","a":2,"b":4},
{"op":"Swap","a":0,"b":4},
{"op":"Swap","a":3,"b":4},
{"op":"Swap","a":1,"b":4},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op(x1, x2, x3, k@0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"@pat-x805_23\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}),(x1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"82\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x1: 8291) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"82\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"83\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x2: 8292) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"83\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x3,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"84\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x3: 8293) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"84\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Invoke","receiver":4,"tag":"apply","args":{"any":[0,1,2,3]}}]},
{"label":"664([mcore:[#1070]#1792])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@pat-x805_23\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}: \"std/core/types/tuple3\".\"std/core/types/Tuple3\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"82\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"83\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"84\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@pat-x805_23\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}: \"std/core/types/tuple3\".\"std/core/types/Tuple3\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"82\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"83\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"84\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/tuple3","scrutinee":2,"clauses":[{"tag":"std/core/types/Tuple3","target":663,"args":{"any":[2,3,4]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3065]","target":661,"args":{"any":[]}}}]},
{"label":"665([method_apply@[mcore:[#1073]#1798]#1802])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Jump","target":664}]},
{"label":"666([mcore:[#1073]#1798])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/protect<(a, b, c),a,(e :: E),a>(x, (fn<(e :: E)>(@pat-x805_23: (8291, 8292, 8293), k@0: (8294) -> (8295 :: E) 8297){\n    (match (@pat-x805_23) {\n      ((@skip std/core/types/Tuple3((x1: 8291) : a, (x2: 8292) : a, (x3: 8293) : a) : (a, b, c) ) as @pat: (8291, 8292, 8293))\n         -> op(x1, x2, x3, k@0);\n    });\n  }), k)","traced":{"any":[]}},
{"op":"New","out":1,"targets":[665],"args":{"any":[1]},"tags":["apply"]},
{"op":"Swap","a":2,"b":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/protect<(a, b, c),a,(e :: E),a>(x, (fn<(e :: E)>(@pat-x805_23: (8291, 8292, 8293), k@0: (8294) -> (8295 :: E) 8297){\n    (match (@pat-x805_23) {\n      ((@skip std/core/types/Tuple3((x1: 8291) : a, (x2: 8292) : a, (x3: 8293) : a) : (a, b, c) ) as @pat: (8291, 8292, 8293))\n         -> op(x1, x2, x3, k@0);\n    });\n  }), k)","traced":{"any":[]}},
{"op":"Jump","target":202}]},
{"label":"667([method_apply@[mcore:[#1075]#1805]#1808])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Jump","target":666}]},
{"label":"668([mcore:[#1075]#1805])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<8294,8297>) -> (8295 :: E) 8297){\n    (std/core/hnd/protect<(a, b, c),a,(e :: E),a>(x, (fn<(e :: E)>(@pat-x805_23: (8291, 8292, 8293), k@0: (8294) -> (8295 :: E) 8297){\n        (match (@pat-x805_23) {\n          ((@skip std/core/types/Tuple3((x1: 8291) : a, (x2: 8292) : a, (x3: 8293) : a) : (a, b, c) ) as @pat: (8291, 8292, 8293))\n             -> op(x1, x2, x3, k@0);\n        });\n      }), k));\n  }))","traced":{"any":[]}},
{"op":"New","out":1,"targets":[667],"args":{"any":[4,2]},"tags":["apply"]},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<8294,8297>) -> (8295 :: E) 8297){\n    (std/core/hnd/protect<(a, b, c),a,(e :: E),a>(x, (fn<(e :: E)>(@pat-x805_23: (8291, 8292, 8293), k@0: (8294) -> (8295 :: E) 8297){\n        (match (@pat-x805_23) {\n          ((@skip std/core/types/Tuple3((x1: 8291) : a, (x2: 8292) : a, (x3: 8293) : a) : (a, b, c) ) as @pat: (8291, 8292, 8293))\n             -> op(x1, x2, x3, k@0);\n        });\n      }), k));\n  }))","traced":{"any":[]}},
{"op":"Jump","target":574}]},
{"label":"669([method_apply@[mcore:[#1077]#1814]#1819])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Const","format":"string","out":4,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"Swap","a":3,"b":4},
{"op":"Jump","target":668}]},
{"label":"670([mcore:[#1077]#1814])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Clause1<(a, b, c),a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(8295 :: E),8297>, @_wildcard-x681_16: (hnd/ev :: ((E, V) -> V) -> V)<(8296 :: (E, V) -> V)>, x: (8291, 8292, 8293)){\n  (std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<8294,8297>) -> (8295 :: E) 8297){\n      (std/core/hnd/protect<(a, b, c),a,(e :: E),a>(x, (fn<(e :: E)>(@pat-x805_23: (8291, 8292, 8293), k@0: (8294) -> (8295 :: E) 8297){\n          (match (@pat-x805_23) {\n            ((@skip std/core/types/Tuple3((x1: 8291) : a, (x2: 8292) : a, (x3: 8293) : a) : (a, b, c) ) as @pat: (8291, 8292, 8293))\n               -> op(x1, x2, x3, k@0);\n          });\n        }), k));\n    })));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[669],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Clause1<(a, b, c),a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(8295 :: E),8297>, @_wildcard-x681_16: (hnd/ev :: ((E, V) -> V) -> V)<(8296 :: (E, V) -> V)>, x: (8291, 8292, 8293)){\n  (std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<8294,8297>) -> (8295 :: E) 8297){\n      (std/core/hnd/protect<(a, b, c),a,(e :: E),a>(x, (fn<(e :: E)>(@pat-x805_23: (8291, 8292, 8293), k@0: (8294) -> (8295 :: E) 8297){\n          (match (@pat-x805_23) {\n            ((@skip std/core/types/Tuple3((x1: 8291) : a, (x2: 8292) : a, (x3: 8293) : a) : (a, b, c) ) as @pat: (8291, 8292, 8293))\n               -> op(x1, x2, x3, k@0);\n          });\n        }), k));\n    })));\n}))","traced":{"any":[]}},
{"op":"Jump","target":1060}]},
{"label":"671([match_def@[mcore:[#1089]#1825]#1826])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"672([k@[#1827]#1829])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"673([#1827])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"@pat-x829_23\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple4\\\"\"}}),(x1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"85\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x1: 8379) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"85\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"86\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x2: 8380) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"86\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x3,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"87\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x3: 8381) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"87\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x4,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"field4\\\"88\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x4: 8382) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"field4\\\\\\\"88\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: op(x1, x2, x3, x4, k@0)","traced":{"any":[]}},
{"op":"Swap","a":3,"b":5},
{"op":"Swap","a":1,"b":5},
{"op":"Swap","a":2,"b":4},
{"op":"Swap","a":0,"b":4},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op(x1, x2, x3, x4, k@0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"@pat-x829_23\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple4\\\"\"}}),(x1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"85\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x1: 8379) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"85\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"86\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x2: 8380) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"86\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x3,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"87\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x3: 8381) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"87\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x4,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"field4\\\"88\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x4: 8382) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"field4\\\\\\\"88\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Invoke","receiver":5,"tag":"apply","args":{"any":[0,1,2,3,4]}}]},
{"label":"674([mcore:[#1089]#1825])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@pat-x829_23\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple4\\\"\"}}: \"std/core/types/tuple4\".\"std/core/types/Tuple4\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"85\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"86\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"87\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"field4\\\"88\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@pat-x829_23\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple4\\\"\"}}: \"std/core/types/tuple4\".\"std/core/types/Tuple4\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"85\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"86\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"87\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"field4\\\"88\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/tuple4","scrutinee":2,"clauses":[{"tag":"std/core/types/Tuple4","target":673,"args":{"any":[2,3,4,5]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3066]","target":671,"args":{"any":[]}}}]},
{"label":"675([method_apply@[mcore:[#1092]#1831]#1835])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Jump","target":674}]},
{"label":"676([mcore:[#1092]#1831])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/protect<(a, b, c, d),a,(e :: E),a>(x, (fn<(e :: E)>(@pat-x829_23: (8379, 8380, 8381, 8382), k@0: (8383) -> (8384 :: E) 8386){\n    (match (@pat-x829_23) {\n      ((@skip std/core/types/Tuple4((x1: 8379) : a, (x2: 8380) : a, (x3: 8381) : a, (x4: 8382) : a) : (a, b, c, d) ) as @pat: (8379, 8380, 8381, 8382))\n         -> op(x1, x2, x3, x4, k@0);\n    });\n  }), k)","traced":{"any":[]}},
{"op":"New","out":1,"targets":[675],"args":{"any":[1]},"tags":["apply"]},
{"op":"Swap","a":2,"b":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/protect<(a, b, c, d),a,(e :: E),a>(x, (fn<(e :: E)>(@pat-x829_23: (8379, 8380, 8381, 8382), k@0: (8383) -> (8384 :: E) 8386){\n    (match (@pat-x829_23) {\n      ((@skip std/core/types/Tuple4((x1: 8379) : a, (x2: 8380) : a, (x3: 8381) : a, (x4: 8382) : a) : (a, b, c, d) ) as @pat: (8379, 8380, 8381, 8382))\n         -> op(x1, x2, x3, x4, k@0);\n    });\n  }), k)","traced":{"any":[]}},
{"op":"Jump","target":202}]},
{"label":"677([method_apply@[mcore:[#1094]#1838]#1841])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Jump","target":676}]},
{"label":"678([mcore:[#1094]#1838])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<8383,8386>) -> (8384 :: E) 8386){\n    (std/core/hnd/protect<(a, b, c, d),a,(e :: E),a>(x, (fn<(e :: E)>(@pat-x829_23: (8379, 8380, 8381, 8382), k@0: (8383) -> (8384 :: E) 8386){\n        (match (@pat-x829_23) {\n          ((@skip std/core/types/Tuple4((x1: 8379) : a, (x2: 8380) : a, (x3: 8381) : a, (x4: 8382) : a) : (a, b, c, d) ) as @pat: (8379, 8380, 8381, 8382))\n             -> op(x1, x2, x3, x4, k@0);\n        });\n      }), k));\n  }))","traced":{"any":[]}},
{"op":"New","out":1,"targets":[677],"args":{"any":[4,2]},"tags":["apply"]},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<8383,8386>) -> (8384 :: E) 8386){\n    (std/core/hnd/protect<(a, b, c, d),a,(e :: E),a>(x, (fn<(e :: E)>(@pat-x829_23: (8379, 8380, 8381, 8382), k@0: (8383) -> (8384 :: E) 8386){\n        (match (@pat-x829_23) {\n          ((@skip std/core/types/Tuple4((x1: 8379) : a, (x2: 8380) : a, (x3: 8381) : a, (x4: 8382) : a) : (a, b, c, d) ) as @pat: (8379, 8380, 8381, 8382))\n             -> op(x1, x2, x3, x4, k@0);\n        });\n      }), k));\n  }))","traced":{"any":[]}},
{"op":"Jump","target":574}]},
{"label":"679([method_apply@[mcore:[#1096]#1847]#1852])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Const","format":"string","out":4,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"Swap","a":3,"b":4},
{"op":"Jump","target":678}]},
{"label":"680([mcore:[#1096]#1847])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Clause1<(a, b, c, d),a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(8384 :: E),8386>, @_wildcard-x681_16: (hnd/ev :: ((E, V) -> V) -> V)<(8385 :: (E, V) -> V)>, x: (8379, 8380, 8381, 8382)){\n  (std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<8383,8386>) -> (8384 :: E) 8386){\n      (std/core/hnd/protect<(a, b, c, d),a,(e :: E),a>(x, (fn<(e :: E)>(@pat-x829_23: (8379, 8380, 8381, 8382), k@0: (8383) -> (8384 :: E) 8386){\n          (match (@pat-x829_23) {\n            ((@skip std/core/types/Tuple4((x1: 8379) : a, (x2: 8380) : a, (x3: 8381) : a, (x4: 8382) : a) : (a, b, c, d) ) as @pat: (8379, 8380, 8381, 8382))\n               -> op(x1, x2, x3, x4, k@0);\n          });\n        }), k));\n    })));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[679],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Clause1<(a, b, c, d),a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(8384 :: E),8386>, @_wildcard-x681_16: (hnd/ev :: ((E, V) -> V) -> V)<(8385 :: (E, V) -> V)>, x: (8379, 8380, 8381, 8382)){\n  (std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<8383,8386>) -> (8384 :: E) 8386){\n      (std/core/hnd/protect<(a, b, c, d),a,(e :: E),a>(x, (fn<(e :: E)>(@pat-x829_23: (8379, 8380, 8381, 8382), k@0: (8383) -> (8384 :: E) 8386){\n          (match (@pat-x829_23) {\n            ((@skip std/core/types/Tuple4((x1: 8379) : a, (x2: 8380) : a, (x3: 8381) : a, (x4: 8382) : a) : (a, b, c, d) ) as @pat: (8379, 8380, 8381, 8382))\n               -> op(x1, x2, x3, x4, k@0);\n          });\n        }), k));\n    })));\n}))","traced":{"any":[]}},
{"op":"Jump","target":1060}]},
{"label":"681([mcore:[#1101]#1858])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: op()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op()","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[]}}]},
{"label":"682([method_apply@[mcore:[#1103]#1859]#1862])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Jump","target":681}]},
{"label":"683([mcore:[#1103]#1859])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-to-final<a,(e :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x743_43: ((hnd/resume-result :: (V, V) -> V)<8458,8461>) -> (8459 :: E) 8461){\n    (op());\n  }))","traced":{"any":[]}},
{"op":"New","out":1,"targets":[682],"args":{"any":[2]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-to-final<a,(e :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x743_43: ((hnd/resume-result :: (V, V) -> V)<8458,8461>) -> (8459 :: E) 8461){\n    (op());\n  }))","traced":{"any":[]}},
{"op":"Jump","target":219}]},
{"label":"684([method_apply@[mcore:[#1105]#1865]#1869])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Jump","target":683}]},
{"label":"685([mcore:[#1105]#1865])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Clause0<a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(8459 :: E),8461>, @_wildcard-x743_16: (hnd/ev :: ((E, V) -> V) -> V)<(8460 :: (E, V) -> V)>){\n  (std/core/hnd/yield-to-final<a,(e :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x743_43: ((hnd/resume-result :: (V, V) -> V)<8458,8461>) -> (8459 :: E) 8461){\n      (op());\n    })));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[684],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Clause0<a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(8459 :: E),8461>, @_wildcard-x743_16: (hnd/ev :: ((E, V) -> V) -> V)<(8460 :: (E, V) -> V)>){\n  (std/core/hnd/yield-to-final<a,(e :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x743_43: ((hnd/resume-result :: (V, V) -> V)<8458,8461>) -> (8459 :: E) 8461){\n      (op());\n    })));\n}))","traced":{"any":[]}},
{"op":"Jump","target":1059}]},
{"label":"686([mcore:[#1111]#1872])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genExpr: op(x)","traced":{"any":[]}},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op(x)","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"687([method_apply@[mcore:[#1113]#1873]#1876])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Jump","target":686}]},
{"label":"688([mcore:[#1113]#1873])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-to-final<a,(e :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x696_45: ((hnd/resume-result :: (V, V) -> V)<8529,8532>) -> (8530 :: E) 8532){\n    (op(x));\n  }))","traced":{"any":[]}},
{"op":"New","out":1,"targets":[687],"args":{"any":[3,2]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-to-final<a,(e :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x696_45: ((hnd/resume-result :: (V, V) -> V)<8529,8532>) -> (8530 :: E) 8532){\n    (op(x));\n  }))","traced":{"any":[]}},
{"op":"Jump","target":219}]},
{"label":"689([method_apply@[mcore:[#1115]#1879]#1884])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Jump","target":688}]},
{"label":"690([mcore:[#1115]#1879])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Clause1<a,a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(8530 :: E),8532>, @_wildcard-x696_16: (hnd/ev :: ((E, V) -> V) -> V)<(8531 :: (E, V) -> V)>, x: 8528){\n  (std/core/hnd/yield-to-final<a,(e :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x696_45: ((hnd/resume-result :: (V, V) -> V)<8529,8532>) -> (8530 :: E) 8532){\n      (op(x));\n    })));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[689],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Clause1<a,a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(8530 :: E),8532>, @_wildcard-x696_16: (hnd/ev :: ((E, V) -> V) -> V)<(8531 :: (E, V) -> V)>, x: 8528){\n  (std/core/hnd/yield-to-final<a,(e :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x696_45: ((hnd/resume-result :: (V, V) -> V)<8529,8532>) -> (8530 :: E) 8532){\n      (op(x));\n    })));\n}))","traced":{"any":[]}},
{"op":"Jump","target":1060}]},
{"label":"691([mcore:[#1122]#1887])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: op(x1, x2)","traced":{"any":[]}},
{"op":"Copy","from":2,"to":0},
{"op":"Copy","from":1,"to":2},
{"op":"Copy","from":3,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op(x1, x2)","traced":{"any":[]}},
{"op":"Invoke","receiver":2,"tag":"apply","args":{"any":[0,1]}}]},
{"label":"692([method_apply@[mcore:[#1124]#1888]#1891])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Jump","target":691}]},
{"label":"693([mcore:[#1124]#1888])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-to-final<a,(e :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x787_49: ((hnd/resume-result :: (V, V) -> V)<8611,8614>) -> (8612 :: E) 8614){\n    (op(x1, x2));\n  }))","traced":{"any":[]}},
{"op":"New","out":1,"targets":[692],"args":{"any":[4,2,3]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-to-final<a,(e :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x787_49: ((hnd/resume-result :: (V, V) -> V)<8611,8614>) -> (8612 :: E) 8614){\n    (op(x1, x2));\n  }))","traced":{"any":[]}},
{"op":"Jump","target":219}]},
{"label":"694([method_apply@[mcore:[#1126]#1894]#1900])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Jump","target":693}]},
{"label":"695([mcore:[#1126]#1894])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Clause2<a,a,a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(8612 :: E),8614>, @_wildcard-x787_16: (hnd/ev :: ((E, V) -> V) -> V)<(8613 :: (E, V) -> V)>, x1: 8609, x2: 8610){\n  (std/core/hnd/yield-to-final<a,(e :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x787_49: ((hnd/resume-result :: (V, V) -> V)<8611,8614>) -> (8612 :: E) 8614){\n      (op(x1, x2));\n    })));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[694],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Clause2<a,a,a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(8612 :: E),8614>, @_wildcard-x787_16: (hnd/ev :: ((E, V) -> V) -> V)<(8613 :: (E, V) -> V)>, x1: 8609, x2: 8610){\n  (std/core/hnd/yield-to-final<a,(e :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x787_49: ((hnd/resume-result :: (V, V) -> V)<8611,8614>) -> (8612 :: E) 8614){\n      (op(x1, x2));\n    })));\n}))","traced":{"any":[]}},
{"op":"Jump","target":1061}]},
{"label":"696([match_def@[mcore:[#1134]#1903]#1904])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"697([k@[#1905]#1907])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"698([#1905])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}),(x1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"89\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x1: 8687) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"89\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"90\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x2: 8688) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"90\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x3,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"91\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x3: 8689) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"91\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: op(x1, x2, x3)","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op(x1, x2, x3)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}),(x1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"89\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x1: 8687) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"89\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"90\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x2: 8688) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"90\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x3,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"91\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x3: 8689) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"91\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Invoke","receiver":3,"tag":"apply","args":{"any":[0,1,2]}}]},
{"label":"699([mcore:[#1134]#1903])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}: \"std/core/types/tuple3\".\"std/core/types/Tuple3\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"89\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"90\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"91\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}: \"std/core/types/tuple3\".\"std/core/types/Tuple3\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"89\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"90\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"91\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/tuple3","scrutinee":2,"clauses":[{"tag":"std/core/types/Tuple3","target":698,"args":{"any":[1,2,3]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3067]","target":696,"args":{"any":[]}}}]},
{"label":"700([method_apply@[mcore:[#1136]#1909]#1912])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Jump","target":699}]},
{"label":"701([mcore:[#1136]#1909])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-to-final<a,(e :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x696_45: ((hnd/resume-result :: (V, V) -> V)<8690,8693>) -> (8691 :: E) 8693){\n    (match (x) {\n      ((@skip std/core/types/Tuple3((x1: 8687) : a, (x2: 8688) : a, (x3: 8689) : a) : (a, b, c) ) as @pat: (8687, 8688, 8689))\n         -> op(x1, x2, x3);\n    });\n  }))","traced":{"any":[]}},
{"op":"New","out":1,"targets":[700],"args":{"any":[3,2]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-to-final<a,(e :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x696_45: ((hnd/resume-result :: (V, V) -> V)<8690,8693>) -> (8691 :: E) 8693){\n    (match (x) {\n      ((@skip std/core/types/Tuple3((x1: 8687) : a, (x2: 8688) : a, (x3: 8689) : a) : (a, b, c) ) as @pat: (8687, 8688, 8689))\n         -> op(x1, x2, x3);\n    });\n  }))","traced":{"any":[]}},
{"op":"Jump","target":219}]},
{"label":"702([method_apply@[mcore:[#1138]#1915]#1920])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Jump","target":701}]},
{"label":"703([mcore:[#1138]#1915])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Clause1<(a, b, c),a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(8691 :: E),8693>, @_wildcard-x696_16: (hnd/ev :: ((E, V) -> V) -> V)<(8692 :: (E, V) -> V)>, x: (8687, 8688, 8689)){\n  (std/core/hnd/yield-to-final<a,(e :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x696_45: ((hnd/resume-result :: (V, V) -> V)<8690,8693>) -> (8691 :: E) 8693){\n      (match (x) {\n        ((@skip std/core/types/Tuple3((x1: 8687) : a, (x2: 8688) : a, (x3: 8689) : a) : (a, b, c) ) as @pat: (8687, 8688, 8689))\n           -> op(x1, x2, x3);\n      });\n    })));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[702],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Clause1<(a, b, c),a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(8691 :: E),8693>, @_wildcard-x696_16: (hnd/ev :: ((E, V) -> V) -> V)<(8692 :: (E, V) -> V)>, x: (8687, 8688, 8689)){\n  (std/core/hnd/yield-to-final<a,(e :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x696_45: ((hnd/resume-result :: (V, V) -> V)<8690,8693>) -> (8691 :: E) 8693){\n      (match (x) {\n        ((@skip std/core/types/Tuple3((x1: 8687) : a, (x2: 8688) : a, (x3: 8689) : a) : (a, b, c) ) as @pat: (8687, 8688, 8689))\n           -> op(x1, x2, x3);\n      });\n    })));\n}))","traced":{"any":[]}},
{"op":"Jump","target":1060}]},
{"label":"704([match_def@[mcore:[#1147]#1923]#1924])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"705([k@[#1925]#1927])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"706([#1925])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple4\\\"\"}}),(x1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"92\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x1: 8774) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"92\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"93\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x2: 8775) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"93\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x3,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"94\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x3: 8776) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"94\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x4,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"field4\\\"95\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x4: 8777) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"field4\\\\\\\"95\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: op(x1, x2, x3, x4)","traced":{"any":[]}},
{"op":"Swap","a":3,"b":4},
{"op":"Swap","a":2,"b":4},
{"op":"Swap","a":1,"b":4},
{"op":"Swap","a":0,"b":4},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op(x1, x2, x3, x4)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple4\\\"\"}}),(x1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"92\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x1: 8774) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"92\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"93\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x2: 8775) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"93\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x3,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"94\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x3: 8776) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"94\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x4,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"field4\\\"95\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x4: 8777) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"field4\\\\\\\"95\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Invoke","receiver":4,"tag":"apply","args":{"any":[0,1,2,3]}}]},
{"label":"707([mcore:[#1147]#1923])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple4\\\"\"}}: \"std/core/types/tuple4\".\"std/core/types/Tuple4\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"92\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"93\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"94\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"field4\\\"95\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple4\\\"\"}}: \"std/core/types/tuple4\".\"std/core/types/Tuple4\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"92\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"93\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"94\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"field4\\\"95\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/tuple4","scrutinee":2,"clauses":[{"tag":"std/core/types/Tuple4","target":706,"args":{"any":[1,2,3,4]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3068]","target":704,"args":{"any":[]}}}]},
{"label":"708([method_apply@[mcore:[#1149]#1929]#1932])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Jump","target":707}]},
{"label":"709([mcore:[#1149]#1929])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-to-final<a,(e :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x696_45: ((hnd/resume-result :: (V, V) -> V)<8778,8781>) -> (8779 :: E) 8781){\n    (match (x) {\n      ((@skip std/core/types/Tuple4((x1: 8774) : a, (x2: 8775) : a, (x3: 8776) : a, (x4: 8777) : a) : (a, b, c, d) ) as @pat: (8774, 8775, 8776, 8777))\n         -> op(x1, x2, x3, x4);\n    });\n  }))","traced":{"any":[]}},
{"op":"New","out":1,"targets":[708],"args":{"any":[3,2]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-to-final<a,(e :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x696_45: ((hnd/resume-result :: (V, V) -> V)<8778,8781>) -> (8779 :: E) 8781){\n    (match (x) {\n      ((@skip std/core/types/Tuple4((x1: 8774) : a, (x2: 8775) : a, (x3: 8776) : a, (x4: 8777) : a) : (a, b, c, d) ) as @pat: (8774, 8775, 8776, 8777))\n         -> op(x1, x2, x3, x4);\n    });\n  }))","traced":{"any":[]}},
{"op":"Jump","target":219}]},
{"label":"710([method_apply@[mcore:[#1151]#1935]#1940])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Jump","target":709}]},
{"label":"711([mcore:[#1151]#1935])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Clause1<(a, b, c, d),a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(8779 :: E),8781>, @_wildcard-x696_16: (hnd/ev :: ((E, V) -> V) -> V)<(8780 :: (E, V) -> V)>, x: (8774, 8775, 8776, 8777)){\n  (std/core/hnd/yield-to-final<a,(e :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x696_45: ((hnd/resume-result :: (V, V) -> V)<8778,8781>) -> (8779 :: E) 8781){\n      (match (x) {\n        ((@skip std/core/types/Tuple4((x1: 8774) : a, (x2: 8775) : a, (x3: 8776) : a, (x4: 8777) : a) : (a, b, c, d) ) as @pat: (8774, 8775, 8776, 8777))\n           -> op(x1, x2, x3, x4);\n      });\n    })));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[710],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Clause1<(a, b, c, d),a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(8779 :: E),8781>, @_wildcard-x696_16: (hnd/ev :: ((E, V) -> V) -> V)<(8780 :: (E, V) -> V)>, x: (8774, 8775, 8776, 8777)){\n  (std/core/hnd/yield-to-final<a,(e :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x696_45: ((hnd/resume-result :: (V, V) -> V)<8778,8781>) -> (8779 :: E) 8781){\n      (match (x) {\n        ((@skip std/core/types/Tuple4((x1: 8774) : a, (x2: 8775) : a, (x3: 8776) : a, (x4: 8777) : a) : (a, b, c, d) ) as @pat: (8774, 8775, 8776, 8777))\n           -> op(x1, x2, x3, x4);\n      });\n    })));\n}))","traced":{"any":[]}},
{"op":"Jump","target":1060}]},
{"label":"712([match_def@[mcore:[#1157]#1943]#1944])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"713([k@[#1945]#1947])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"714([#1945])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}),(x1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"96\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x1: 8863) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"96\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"97\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x2: 8864) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"97\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x3,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"98\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x3: 8865) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"98\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: op(x1, x2, x3)","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op(x1, x2, x3)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}),(x1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"96\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x1: 8863) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"96\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"97\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x2: 8864) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"97\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x3,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"98\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x3: 8865) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"98\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Invoke","receiver":3,"tag":"apply","args":{"any":[0,1,2]}}]},
{"label":"715([mcore:[#1157]#1943])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}: \"std/core/types/tuple3\".\"std/core/types/Tuple3\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"96\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"97\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"98\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}: \"std/core/types/tuple3\".\"std/core/types/Tuple3\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"96\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"97\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"98\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/tuple3","scrutinee":2,"clauses":[{"tag":"std/core/types/Tuple3","target":714,"args":{"any":[1,2,3]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3069]","target":712,"args":{"any":[]}}}]},
{"label":"716([method_apply@[mcore:[#1159]#1949]#1954])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Jump","target":715}]},
{"label":"717([mcore:[#1159]#1949])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Clause1<(a, b, c),a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(@_wildcard-x691_14: (hnd/marker :: (E, V) -> V)<(8860 :: E),8861>, @_wildcard-x691_17: (hnd/ev :: ((E, V) -> V) -> V)<(8862 :: (E, V) -> V)>, x: (8863, 8864, 8865)){\n  (match (x) {\n    ((@skip std/core/types/Tuple3((x1: 8863) : a, (x2: 8864) : a, (x3: 8865) : a) : (a, b, c) ) as @pat: (8863, 8864, 8865))\n       -> op(x1, x2, x3);\n  });\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[716],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Clause1<(a, b, c),a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(@_wildcard-x691_14: (hnd/marker :: (E, V) -> V)<(8860 :: E),8861>, @_wildcard-x691_17: (hnd/ev :: ((E, V) -> V) -> V)<(8862 :: (E, V) -> V)>, x: (8863, 8864, 8865)){\n  (match (x) {\n    ((@skip std/core/types/Tuple3((x1: 8863) : a, (x2: 8864) : a, (x3: 8865) : a) : (a, b, c) ) as @pat: (8863, 8864, 8865))\n       -> op(x1, x2, x3);\n  });\n}))","traced":{"any":[]}},
{"op":"Jump","target":1060}]},
{"label":"718([match_def@[mcore:[#1166]#1957]#1958])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"719([k@[#1959]#1961])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"720([#1959])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple4\\\"\"}}),(x1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"99\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x1: 8950) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"99\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"100\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x2: 8951) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"100\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x3,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"101\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x3: 8952) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"101\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x4,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"field4\\\"102\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x4: 8953) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"field4\\\\\\\"102\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: op(x1, x2, x3, x4)","traced":{"any":[]}},
{"op":"Swap","a":3,"b":4},
{"op":"Swap","a":2,"b":4},
{"op":"Swap","a":1,"b":4},
{"op":"Swap","a":0,"b":4},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op(x1, x2, x3, x4)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple4\\\"\"}}),(x1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"99\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x1: 8950) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"99\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"100\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x2: 8951) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"100\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x3,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"101\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x3: 8952) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"101\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x4,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"field4\\\"102\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x4: 8953) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"field4\\\\\\\"102\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Invoke","receiver":4,"tag":"apply","args":{"any":[0,1,2,3]}}]},
{"label":"721([mcore:[#1166]#1957])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple4\\\"\"}}: \"std/core/types/tuple4\".\"std/core/types/Tuple4\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"99\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"100\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"101\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"field4\\\"102\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple4\\\"\"}}: \"std/core/types/tuple4\".\"std/core/types/Tuple4\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"99\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"100\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"101\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"field4\\\"102\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/tuple4","scrutinee":2,"clauses":[{"tag":"std/core/types/Tuple4","target":720,"args":{"any":[1,2,3,4]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3070]","target":718,"args":{"any":[]}}}]},
{"label":"722([method_apply@[mcore:[#1168]#1963]#1968])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Jump","target":721}]},
{"label":"723([mcore:[#1168]#1963])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Clause1<(a, b, c, d),a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(@_wildcard-x691_14: (hnd/marker :: (E, V) -> V)<(8947 :: E),8948>, @_wildcard-x691_17: (hnd/ev :: ((E, V) -> V) -> V)<(8949 :: (E, V) -> V)>, x: (8950, 8951, 8952, 8953)){\n  (match (x) {\n    ((@skip std/core/types/Tuple4((x1: 8950) : a, (x2: 8951) : a, (x3: 8952) : a, (x4: 8953) : a) : (a, b, c, d) ) as @pat: (8950, 8951, 8952, 8953))\n       -> op(x1, x2, x3, x4);\n  });\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[722],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Clause1<(a, b, c, d),a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(@_wildcard-x691_14: (hnd/marker :: (E, V) -> V)<(8947 :: E),8948>, @_wildcard-x691_17: (hnd/ev :: ((E, V) -> V) -> V)<(8949 :: (E, V) -> V)>, x: (8950, 8951, 8952, 8953)){\n  (match (x) {\n    ((@skip std/core/types/Tuple4((x1: 8950) : a, (x2: 8951) : a, (x3: 8952) : a, (x4: 8953) : a) : (a, b, c, d) ) as @pat: (8950, 8951, 8952, 8953))\n       -> op(x1, x2, x3, x4);\n  });\n}))","traced":{"any":[]}},
{"op":"Jump","target":1060}]},
{"label":"724([mcore:[#1169]#1971])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"swapCurrentEvv"}]},
{"label":"725([mcore:[#1177]#1976])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/under1x<a,a,(e :: E),(a :: (E, V) -> V)>(ev, cont, res)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/under1x<a,a,(e :: E),(a :: (E, V) -> V)>(ev, cont, res)","traced":{"any":[]}},
{"op":"Jump","target":739}]},
{"label":"726([mcore:[#1179]#1981])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"727([#1995])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Jump","target":725}]},
{"label":"728([k@[switch case for Bool(true)#1991]#2002])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"729([switch case for Bool(true)#1991])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@3,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (9064 :: E) 9063, res: a){\n  std/core/hnd/under1x<a,b,(e :: E),(b :: (E, V) -> V)>(ev, cont, res);\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[727],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (9064 :: E) 9063, res: a){\n  std/core/hnd/under1x<a,b,(e :: E),(b :: (E, V) -> V)>(ev, cont, res);\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@3,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":215}]},
{"label":"730([k@[switch case for Bool(false)#2006]#2011])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: y","traced":{"any":[]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: y","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"731([switch case for Bool(false)#2006])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0@0,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: val _@0 : ()\n      = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0);\ny","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_@0\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Push","target":730,"args":{"any":[1]}},
{"op":"Copy","from":2,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_@0\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: val _@0 : ()\n      = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0);\ny","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0@0,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":726}]},
{"label":"732([switch default case#2013])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"733([switch default case#2004])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Switch","arg":2,"values":[false],"targets":[731],"default":732}]},
{"label":"734([k@[k@[mcore:[#1180]#1980]#1987]#1989])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"bool","out":3,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":3,"values":[true],"targets":[729],"default":733}]},
{"label":"735([k@[mcore:[#1180]#1980]#1987])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: op(x)","traced":{"any":[]}},
{"op":"Push","target":734,"args":{"any":[1,0]}},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op(x)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":2,"tag":"apply","args":{"any":[0]}}]},
{"label":"736([match_def@[mcore:[#1180]#1980]#2014])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"737([k@[#2015]#2020])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"738([#2015])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<9065>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"103\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/marker<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"104\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2: 9065<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"105\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(w,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (w: hnd/evv<4237>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"106\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap<(total :: E),(e :: E),(_e :: E)>(w)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap<(total :: E),(e :: E),(_e :: E)>(w)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<9065>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"103\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/marker<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"104\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2: 9065<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"105\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(w,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (w: hnd/evv<4237>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"106\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Jump","target":724}]},
{"label":"739([mcore:[#1180]#1980])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (ev) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0: (hnd/htag :: ((E, V) -> V) -> V)<(9065 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@1: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@2: (9065 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (w: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat: ((hnd/ev :: ((E, V) -> V) -> V)<(9065 :: (E, V) -> V)>))\n     -> std/core/hnd/evv-swap<(total :: E),(e :: E),(_e1 :: E)>(w);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Push","target":735,"args":{"any":[0,1,2]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (ev) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0: (hnd/htag :: ((E, V) -> V) -> V)<(9065 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@1: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@2: (9065 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (w: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat: ((hnd/ev :: ((E, V) -> V) -> V)<(9065 :: (E, V) -> V)>))\n     -> std/core/hnd/evv-swap<(total :: E),(e :: E),(_e1 :: E)>(w);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/ev","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Ev","target":738,"args":{"any":[0,1,2,3]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3071]","target":736,"args":{"any":[]}}}]},
{"label":"740([mcore:[#1181]#2022])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"swapCurrentEvv"}]},
{"label":"741([mcore:[#1189]#2027])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/under1x<a,a,(e :: E),(a :: (E, V) -> V)>(ev, cont, res)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/under1x<a,a,(e :: E),(a :: (E, V) -> V)>(ev, cont, res)","traced":{"any":[]}},
{"op":"Jump","target":739}]},
{"label":"742([mcore:[#1191]#2031])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"743([#2046])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Jump","target":741}]},
{"label":"744([k@[switch case for Bool(true)#2042]#2053])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"745([switch case for Bool(true)#2042])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@3,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (9162 :: E) 9161, res: a){\n  std/core/hnd/under1x<a,b,(e :: E),(b :: (E, V) -> V)>(ev, cont, res);\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[743],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (9162 :: E) 9161, res: a){\n  std/core/hnd/under1x<a,b,(e :: E),(b :: (E, V) -> V)>(ev, cont, res);\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@3,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":215}]},
{"label":"746([k@[switch case for Bool(false)#2057]#2062])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: y","traced":{"any":[]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: y","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"747([switch case for Bool(false)#2057])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0@0,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: val _@0 : ()\n      = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0);\ny","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_@0\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Push","target":746,"args":{"any":[1]}},
{"op":"Copy","from":2,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_@0\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: val _@0 : ()\n      = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0);\ny","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0@0,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":742}]},
{"label":"748([switch default case#2064])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"749([switch default case#2055])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Switch","arg":2,"values":[false],"targets":[747],"default":748}]},
{"label":"750([k@[k@[mcore:[#1192]#2036]#2038]#2040])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"bool","out":3,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":3,"values":[true],"targets":[745],"default":749}]},
{"label":"751([k@[mcore:[#1192]#2036]#2038])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: op(x)","traced":{"any":[]}},
{"op":"Push","target":750,"args":{"any":[1,0]}},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op(x)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":2,"tag":"apply","args":{"any":[0]}}]},
{"label":"752([match_def@[mcore:[#1192]#2036]#2065])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"753([k@[#2066]#2071])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"754([#2066])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<9163>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"103\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/marker<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"104\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2: 9163<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"105\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(w,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (w: hnd/evv<4237>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"106\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap<(total :: E),(e :: E),(_e :: E)>(w)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap<(total :: E),(e :: E),(_e :: E)>(w)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<9163>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"103\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/marker<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"104\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2: 9163<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"105\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(w,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (w: hnd/evv<4237>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"106\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Jump","target":740}]},
{"label":"755([mcore:[#1192]#2036])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (ev) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0: (hnd/htag :: ((E, V) -> V) -> V)<(9163 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@1: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@2: (9163 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (w: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat: ((hnd/ev :: ((E, V) -> V) -> V)<(9163 :: (E, V) -> V)>))\n     -> std/core/hnd/evv-swap<(total :: E),(e :: E),(_e1 :: E)>(w);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Push","target":751,"args":{"any":[0,1,2]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (ev) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0: (hnd/htag :: ((E, V) -> V) -> V)<(9163 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@1: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@2: (9163 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (w: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat: ((hnd/ev :: ((E, V) -> V) -> V)<(9163 :: (E, V) -> V)>))\n     -> std/core/hnd/evv-swap<(total :: E),(e :: E),(_e1 :: E)>(w);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/ev","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Ev","target":754,"args":{"any":[0,1,2,3]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3072]","target":752,"args":{"any":[]}}}]},
{"label":"756([mcore:[#1193]#2073])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"swapCurrentEvv"}]},
{"label":"757([mcore:[#1195]#2078])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"758([mcore:[#1197]#2083])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"swapCurrentEvv"}]},
{"label":"759([mcore:[#1205]#2088])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/under1x<a,a,(e :: E),(a :: (E, V) -> V)>(ev, cont@0, res@0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/under1x<a,a,(e :: E),(a :: (E, V) -> V)>(ev, cont@0, res@0)","traced":{"any":[]}},
{"op":"Jump","target":739}]},
{"label":"760([mcore:[#1207]#2092])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"761([#2107])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Jump","target":759}]},
{"label":"762([k@[switch case for Bool(true)#2103]#2114])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"763([switch case for Bool(true)#2103])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@5,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont@0: (a) -> (9249 :: E) 9248, res@0: a){\n  std/core/hnd/under1x<a,b,(e :: E),(b :: (E, V) -> V)>(ev, cont@0, res@0);\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[761],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont@0: (a) -> (9249 :: E) 9248, res@0: a){\n  std/core/hnd/under1x<a,b,(e :: E),(b :: (E, V) -> V)>(ev, cont@0, res@0);\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@5,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":215}]},
{"label":"764([k@[switch case for Bool(false)#2118]#2123])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: y@0","traced":{"any":[]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: y@0","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"765([switch case for Bool(false)#2118])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0@1,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: val _@0 : ()\n      = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0);\ny@0","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_@0\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Push","target":764,"args":{"any":[1]}},
{"op":"Copy","from":2,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_@0\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: val _@0 : ()\n      = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0);\ny@0","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0@1,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":760}]},
{"label":"766([switch default case#2125])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"767([switch default case#2116])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Switch","arg":2,"values":[false],"targets":[765],"default":766}]},
{"label":"768([k@[k@[mcore:[#1208]#2097]#2099]#2101])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"bool","out":3,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":3,"values":[true],"targets":[763],"default":767}]},
{"label":"769([k@[mcore:[#1208]#2097]#2099])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"y@0\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: cont(res)","traced":{"any":[]}},
{"op":"Push","target":768,"args":{"any":[2,0]}},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: cont(res)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"y@0\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"770([match_def@[mcore:[#1208]#2097]#2126])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"771([k@[#2127]#2132])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"772([#2127])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@4,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0@0: hnd/htag<9250>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"103\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@1@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@1@0: hnd/marker<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"104\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@2@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2@0: 9250<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"105\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(w@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (w@0: hnd/evv<4237>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"106\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap<(total :: E),(e :: E),(_e :: E)>(w@0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap<(total :: E),(e :: E),(_e :: E)>(w@0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@4,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0@0: hnd/htag<9250>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"103\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@1@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@1@0: hnd/marker<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"104\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@2@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2@0: 9250<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"105\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(w@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (w@0: hnd/evv<4237>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"106\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Jump","target":758}]},
{"label":"773([mcore:[#1208]#2097])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w0@0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (ev) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0@0: (hnd/htag :: ((E, V) -> V) -> V)<(9250 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@1@0: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@2@0: (9250 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (w@0: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat@4: ((hnd/ev :: ((E, V) -> V) -> V)<(9250 :: (E, V) -> V)>))\n     -> std/core/hnd/evv-swap<(total :: E),(e :: E),(_e1 :: E)>(w@0);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Push","target":769,"args":{"any":[0,2,1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (ev) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0@0: (hnd/htag :: ((E, V) -> V) -> V)<(9250 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@1@0: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@2@0: (9250 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (w@0: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat@4: ((hnd/ev :: ((E, V) -> V) -> V)<(9250 :: (E, V) -> V)>))\n     -> std/core/hnd/evv-swap<(total :: E),(e :: E),(_e1 :: E)>(w@0);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w0@0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/ev","scrutinee":2,"clauses":[{"tag":"std/core/hnd/Ev","target":772,"args":{"any":[0,1,2,3]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3073]","target":770,"args":{"any":[]}}}]},
{"label":"774([#2149])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Jump","target":773}]},
{"label":"775([k@[switch case for Bool(true)#2145]#2156])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"776([switch case for Bool(true)#2145])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@3,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (9249 :: E) 9248, res: a){\n  val w0@0 : (hnd/evv :: E -> V)<(_e :: E)>;\n  val y@0 : b;\n  (match ((std/core/hnd/yielding())) {\n    ((std/core/types/True() : bool ) as @pat@5: bool)\n       -> std/core/hnd/yield-cont<b,(e :: E),b>((forall<b> fn<(e :: E)>(cont@0: (b) -> (9249 :: E) 9248, res@0: b){\n        std/core/hnd/under1x<b,c,(e :: E),(c :: (E, V) -> V)>(ev, cont@0, res@0);\n      }));\n    ((@skip std/core/types/False() : bool ) as @pat@0@1: bool)\n       -> val _@0 : ()\n                = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0);\n      y@0;\n  });\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[774],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (9249 :: E) 9248, res: a){\n  val w0@0 : (hnd/evv :: E -> V)<(_e :: E)>;\n  val y@0 : b;\n  (match ((std/core/hnd/yielding())) {\n    ((std/core/types/True() : bool ) as @pat@5: bool)\n       -> std/core/hnd/yield-cont<b,(e :: E),b>((forall<b> fn<(e :: E)>(cont@0: (b) -> (9249 :: E) 9248, res@0: b){\n        std/core/hnd/under1x<b,c,(e :: E),(c :: (E, V) -> V)>(ev, cont@0, res@0);\n      }));\n    ((@skip std/core/types/False() : bool ) as @pat@0@1: bool)\n       -> val _@0 : ()\n                = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0);\n      y@0;\n  });\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@3,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":215}]},
{"label":"777([switch case for Bool(false)#2160])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0@2,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0@2,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"778([switch default case#2161])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"779([switch default case#2158])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Switch","arg":1,"values":[false],"targets":[777],"default":778}]},
{"label":"780([#2143])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":2,"values":[true],"targets":[776],"default":779}]},
{"label":"781([k@[k@[mcore:[#1210]#2134]#2136]#2138])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Push","target":780,"args":{"any":[1,0]}},
{"op":"Copy","from":3,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":757}]},
{"label":"782([k@[mcore:[#1210]#2134]#2136])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: op()","traced":{"any":[]}},
{"op":"Push","target":781,"args":{"any":[1,0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":2,"tag":"apply","args":{"any":[]}}]},
{"label":"783([match_def@[mcore:[#1210]#2134]#2162])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"784([k@[#2163]#2168])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"785([#2163])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<9250>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"103\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/marker<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"104\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2: 9250<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"105\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(w,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (w: hnd/evv<4237>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"106\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap<(total :: E),(e :: E),(_e :: E)>(w)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap<(total :: E),(e :: E),(_e :: E)>(w)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<9250>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"103\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/marker<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"104\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2: 9250<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"105\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(w,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (w: hnd/evv<4237>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"106\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Jump","target":756}]},
{"label":"786([mcore:[#1210]#2134])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (ev) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0: (hnd/htag :: ((E, V) -> V) -> V)<(9250 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@1: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@2: (9250 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (w: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat: ((hnd/ev :: ((E, V) -> V) -> V)<(9250 :: (E, V) -> V)>))\n     -> std/core/hnd/evv-swap<(total :: E),(e :: E),(_e1 :: E)>(w);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Push","target":782,"args":{"any":[0,1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (ev) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0: (hnd/htag :: ((E, V) -> V) -> V)<(9250 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@1: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@2: (9250 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (w: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat: ((hnd/ev :: ((E, V) -> V) -> V)<(9250 :: (E, V) -> V)>))\n     -> std/core/hnd/evv-swap<(total :: E),(e :: E),(_e1 :: E)>(w);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/ev","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Ev","target":785,"args":{"any":[0,1,2,3]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3074]","target":783,"args":{"any":[]}}}]},
{"label":"787([mcore:[#1212]#2170])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"swapCurrentEvv"}]},
{"label":"788([mcore:[#1214]#2175])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"789([mcore:[#1216]#2180])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"swapCurrentEvv"}]},
{"label":"790([mcore:[#1224]#2185])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/under1x<a,a,(e :: E),(a :: (E, V) -> V)>(ev, cont@0, res@0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/under1x<a,a,(e :: E),(a :: (E, V) -> V)>(ev, cont@0, res@0)","traced":{"any":[]}},
{"op":"Jump","target":739}]},
{"label":"791([mcore:[#1226]#2189])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"792([#2204])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Jump","target":790}]},
{"label":"793([k@[switch case for Bool(true)#2200]#2211])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"794([switch case for Bool(true)#2200])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@5,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont@0: (a) -> (9302 :: E) 9305, res@0: a){\n  std/core/hnd/under1x<a,b,(e :: E),(b :: (E, V) -> V)>(ev, cont@0, res@0);\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[792],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont@0: (a) -> (9302 :: E) 9305, res@0: a){\n  std/core/hnd/under1x<a,b,(e :: E),(b :: (E, V) -> V)>(ev, cont@0, res@0);\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@5,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":215}]},
{"label":"795([k@[switch case for Bool(false)#2215]#2220])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: y@0","traced":{"any":[]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: y@0","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"796([switch case for Bool(false)#2215])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0@1,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: val _@0 : ()\n      = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0);\ny@0","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_@0\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Push","target":795,"args":{"any":[1]}},
{"op":"Copy","from":2,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_@0\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: val _@0 : ()\n      = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0);\ny@0","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0@1,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":791}]},
{"label":"797([switch default case#2222])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"798([switch default case#2213])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Switch","arg":2,"values":[false],"targets":[796],"default":797}]},
{"label":"799([k@[k@[mcore:[#1227]#2194]#2196]#2198])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"bool","out":3,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":3,"values":[true],"targets":[794],"default":798}]},
{"label":"800([k@[mcore:[#1227]#2194]#2196])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"y@0\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: cont(res)","traced":{"any":[]}},
{"op":"Push","target":799,"args":{"any":[2,0]}},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: cont(res)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"y@0\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"801([match_def@[mcore:[#1227]#2194]#2223])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"802([k@[#2224]#2229])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"803([#2224])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@4,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0@0: hnd/htag<9304>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"103\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@1@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@1@0: hnd/marker<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"104\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@2@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2@0: 9304<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"105\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(w@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (w@0: hnd/evv<4237>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"106\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap<(total :: E),(e :: E),(_e :: E)>(w@0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap<(total :: E),(e :: E),(_e :: E)>(w@0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@4,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0@0: hnd/htag<9304>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"103\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@1@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@1@0: hnd/marker<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"104\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@2@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2@0: 9304<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"105\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(w@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (w@0: hnd/evv<4237>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"106\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Jump","target":789}]},
{"label":"804([mcore:[#1227]#2194])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w0@0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (ev) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0@0: (hnd/htag :: ((E, V) -> V) -> V)<(9304 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@1@0: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@2@0: (9304 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (w@0: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat@4: ((hnd/ev :: ((E, V) -> V) -> V)<(9304 :: (E, V) -> V)>))\n     -> std/core/hnd/evv-swap<(total :: E),(e :: E),(_e1 :: E)>(w@0);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Push","target":800,"args":{"any":[0,2,1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (ev) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0@0: (hnd/htag :: ((E, V) -> V) -> V)<(9304 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@1@0: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@2@0: (9304 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (w@0: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat@4: ((hnd/ev :: ((E, V) -> V) -> V)<(9304 :: (E, V) -> V)>))\n     -> std/core/hnd/evv-swap<(total :: E),(e :: E),(_e1 :: E)>(w@0);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w0@0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/ev","scrutinee":2,"clauses":[{"tag":"std/core/hnd/Ev","target":803,"args":{"any":[0,1,2,3]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3075]","target":801,"args":{"any":[]}}}]},
{"label":"805([#2246])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Jump","target":804}]},
{"label":"806([k@[switch case for Bool(true)#2242]#2253])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"807([switch case for Bool(true)#2242])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@3,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (9302 :: E) 9305, res: a){\n  val w0@0 : (hnd/evv :: E -> V)<(_e :: E)>;\n  val y@0 : b;\n  (match ((std/core/hnd/yielding())) {\n    ((std/core/types/True() : bool ) as @pat@5: bool)\n       -> std/core/hnd/yield-cont<b,(e :: E),b>((forall<b> fn<(e :: E)>(cont@0: (b) -> (9302 :: E) 9305, res@0: b){\n        std/core/hnd/under1x<b,c,(e :: E),(c :: (E, V) -> V)>(ev, cont@0, res@0);\n      }));\n    ((@skip std/core/types/False() : bool ) as @pat@0@1: bool)\n       -> val _@0 : ()\n                = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0);\n      y@0;\n  });\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[805],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (9302 :: E) 9305, res: a){\n  val w0@0 : (hnd/evv :: E -> V)<(_e :: E)>;\n  val y@0 : b;\n  (match ((std/core/hnd/yielding())) {\n    ((std/core/types/True() : bool ) as @pat@5: bool)\n       -> std/core/hnd/yield-cont<b,(e :: E),b>((forall<b> fn<(e :: E)>(cont@0: (b) -> (9302 :: E) 9305, res@0: b){\n        std/core/hnd/under1x<b,c,(e :: E),(c :: (E, V) -> V)>(ev, cont@0, res@0);\n      }));\n    ((@skip std/core/types/False() : bool ) as @pat@0@1: bool)\n       -> val _@0 : ()\n                = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0);\n      y@0;\n  });\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@3,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":215}]},
{"label":"808([switch case for Bool(false)#2257])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0@2,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0@2,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"809([switch default case#2258])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"810([switch default case#2255])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Switch","arg":1,"values":[false],"targets":[808],"default":809}]},
{"label":"811([#2240])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":2,"values":[true],"targets":[807],"default":810}]},
{"label":"812([k@[k@[mcore:[#1229]#2231]#2233]#2235])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Push","target":811,"args":{"any":[1,0]}},
{"op":"Copy","from":3,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":788}]},
{"label":"813([k@[mcore:[#1229]#2231]#2233])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: op()","traced":{"any":[]}},
{"op":"Push","target":812,"args":{"any":[1,0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":2,"tag":"apply","args":{"any":[]}}]},
{"label":"814([match_def@[mcore:[#1229]#2231]#2259])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"815([k@[#2260]#2265])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"816([#2260])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<9304>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"103\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/marker<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"104\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2: 9304<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"105\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(w,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (w: hnd/evv<4237>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"106\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap<(total :: E),(e :: E),(_e :: E)>(w)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap<(total :: E),(e :: E),(_e :: E)>(w)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<9304>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"103\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/marker<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"104\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2: 9304<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"105\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(w,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (w: hnd/evv<4237>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"106\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Jump","target":787}]},
{"label":"817([mcore:[#1229]#2231])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (ev) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0: (hnd/htag :: ((E, V) -> V) -> V)<(9304 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@1: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@2: (9304 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (w: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat: ((hnd/ev :: ((E, V) -> V) -> V)<(9304 :: (E, V) -> V)>))\n     -> std/core/hnd/evv-swap<(total :: E),(e :: E),(_e1 :: E)>(w);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Push","target":813,"args":{"any":[1,3]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (ev) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0: (hnd/htag :: ((E, V) -> V) -> V)<(9304 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@1: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@2: (9304 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (w: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat: ((hnd/ev :: ((E, V) -> V) -> V)<(9304 :: (E, V) -> V)>))\n     -> std/core/hnd/evv-swap<(total :: E),(e :: E),(_e1 :: E)>(w);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/ev","scrutinee":1,"clauses":[{"tag":"std/core/hnd/Ev","target":816,"args":{"any":[0,1,2,3]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3076]","target":814,"args":{"any":[]}}}]},
{"label":"818([method_apply@[mcore:[#1231]#2267]#2271])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":2,"b":3},
{"op":"Jump","target":817}]},
{"label":"819([mcore:[#1231]#2267])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Clause0<a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(@_wildcard-x734_14: (hnd/marker :: (E, V) -> V)<(9302 :: E),9303>, ev: (hnd/ev :: ((E, V) -> V) -> V)<(9304 :: (E, V) -> V)>){\n  val w0 : ((hnd/evv :: E -> V)<(_e :: E)>);\n  val y : a;\n  val _ : ();\n  (match ((std/core/hnd/yielding())) {\n    ((std/core/types/True() : bool ) as @pat@3: bool)\n       -> std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (9302 :: E) 9305, res: a){\n        val w0@0 : (hnd/evv :: E -> V)<(_e :: E)>;\n        val y@0 : b;\n        (match ((std/core/hnd/yielding())) {\n          ((std/core/types/True() : bool ) as @pat@5: bool)\n             -> std/core/hnd/yield-cont<b,(e :: E),b>((forall<b> fn<(e :: E)>(cont@0: (b) -> (9302 :: E) 9305, res@0: b){\n              std/core/hnd/under1x<b,c,(e :: E),(c :: (E, V) -> V)>(ev, cont@0, res@0);\n            }));\n          ((@skip std/core/types/False() : bool ) as @pat@0@1: bool)\n             -> val _@0 : ()\n                      = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0);\n            y@0;\n        });\n      }));\n    ((@skip std/core/types/False() : bool ) as @pat@0@2: bool)\n       -> y;\n  });\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[818],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Clause0<a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(@_wildcard-x734_14: (hnd/marker :: (E, V) -> V)<(9302 :: E),9303>, ev: (hnd/ev :: ((E, V) -> V) -> V)<(9304 :: (E, V) -> V)>){\n  val w0 : ((hnd/evv :: E -> V)<(_e :: E)>);\n  val y : a;\n  val _ : ();\n  (match ((std/core/hnd/yielding())) {\n    ((std/core/types/True() : bool ) as @pat@3: bool)\n       -> std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (9302 :: E) 9305, res: a){\n        val w0@0 : (hnd/evv :: E -> V)<(_e :: E)>;\n        val y@0 : b;\n        (match ((std/core/hnd/yielding())) {\n          ((std/core/types/True() : bool ) as @pat@5: bool)\n             -> std/core/hnd/yield-cont<b,(e :: E),b>((forall<b> fn<(e :: E)>(cont@0: (b) -> (9302 :: E) 9305, res@0: b){\n              std/core/hnd/under1x<b,c,(e :: E),(c :: (E, V) -> V)>(ev, cont@0, res@0);\n            }));\n          ((@skip std/core/types/False() : bool ) as @pat@0@1: bool)\n             -> val _@0 : ()\n                      = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0);\n            y@0;\n        });\n      }));\n    ((@skip std/core/types/False() : bool ) as @pat@0@2: bool)\n       -> y;\n  });\n}))","traced":{"any":[]}},
{"op":"Jump","target":1059}]},
{"label":"820([mcore:[#1233]#2277])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"swapCurrentEvv"}]},
{"label":"821([mcore:[#1241]#2282])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/under1x<a,a,(e :: E),(a :: (E, V) -> V)>(ev, cont, res)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/under1x<a,a,(e :: E),(a :: (E, V) -> V)>(ev, cont, res)","traced":{"any":[]}},
{"op":"Jump","target":739}]},
{"label":"822([mcore:[#1243]#2286])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"823([#2301])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Jump","target":821}]},
{"label":"824([k@[switch case for Bool(true)#2297]#2308])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"825([switch case for Bool(true)#2297])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@3,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (9371 :: E) 9375, res: a){\n  std/core/hnd/under1x<a,b,(e :: E),(b :: (E, V) -> V)>(ev, cont, res);\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[823],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (9371 :: E) 9375, res: a){\n  std/core/hnd/under1x<a,b,(e :: E),(b :: (E, V) -> V)>(ev, cont, res);\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@3,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":215}]},
{"label":"826([k@[switch case for Bool(false)#2312]#2317])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: y","traced":{"any":[]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: y","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"827([switch case for Bool(false)#2312])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0@0,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: val _@0 : ()\n      = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0);\ny","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_@0\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Push","target":826,"args":{"any":[1]}},
{"op":"Copy","from":2,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_@0\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: val _@0 : ()\n      = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0);\ny","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0@0,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":822}]},
{"label":"828([switch default case#2319])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"829([switch default case#2310])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Switch","arg":2,"values":[false],"targets":[827],"default":828}]},
{"label":"830([k@[k@[mcore:[#1244]#2291]#2293]#2295])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"bool","out":3,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":3,"values":[true],"targets":[825],"default":829}]},
{"label":"831([k@[mcore:[#1244]#2291]#2293])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: op(x)","traced":{"any":[]}},
{"op":"Push","target":830,"args":{"any":[1,0]}},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op(x)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":2,"tag":"apply","args":{"any":[0]}}]},
{"label":"832([match_def@[mcore:[#1244]#2291]#2320])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"833([k@[#2321]#2326])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"834([#2321])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<9373>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"103\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/marker<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"104\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2: 9373<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"105\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(w,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (w: hnd/evv<4237>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"106\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap<(total :: E),(e :: E),(_e :: E)>(w)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap<(total :: E),(e :: E),(_e :: E)>(w)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<9373>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"103\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/marker<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"104\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2: 9373<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"105\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(w,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (w: hnd/evv<4237>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"106\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Jump","target":820}]},
{"label":"835([mcore:[#1244]#2291])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (ev) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0: (hnd/htag :: ((E, V) -> V) -> V)<(9373 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@1: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@2: (9373 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (w: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat: ((hnd/ev :: ((E, V) -> V) -> V)<(9373 :: (E, V) -> V)>))\n     -> std/core/hnd/evv-swap<(total :: E),(e :: E),(_e1 :: E)>(w);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Push","target":831,"args":{"any":[1,4,2]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (ev) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0: (hnd/htag :: ((E, V) -> V) -> V)<(9373 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@1: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@2: (9373 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (w: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat: ((hnd/ev :: ((E, V) -> V) -> V)<(9373 :: (E, V) -> V)>))\n     -> std/core/hnd/evv-swap<(total :: E),(e :: E),(_e1 :: E)>(w);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/ev","scrutinee":1,"clauses":[{"tag":"std/core/hnd/Ev","target":834,"args":{"any":[0,1,2,3]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3077]","target":832,"args":{"any":[]}}}]},
{"label":"836([method_apply@[mcore:[#1246]#2328]#2333])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Const","format":"string","out":4,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"Swap","a":3,"b":4},
{"op":"Jump","target":835}]},
{"label":"837([mcore:[#1246]#2328])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Clause1<a,a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(@_wildcard-x686_14: (hnd/marker :: (E, V) -> V)<(9371 :: E),9372>, ev: (hnd/ev :: ((E, V) -> V) -> V)<(9373 :: (E, V) -> V)>, x: 9374){\n  val w0 : ((hnd/evv :: E -> V)<(_e :: E)>);\n  val y : a;\n  (match ((std/core/hnd/yielding())) {\n    ((std/core/types/True() : bool ) as @pat@3: bool)\n       -> std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (9371 :: E) 9375, res: a){\n        std/core/hnd/under1x<a,b,(e :: E),(b :: (E, V) -> V)>(ev, cont, res);\n      }));\n    ((@skip std/core/types/False() : bool ) as @pat@0@0: bool)\n       -> val _@0 : ()\n                = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0);\n      y;\n  });\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[836],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Clause1<a,a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(@_wildcard-x686_14: (hnd/marker :: (E, V) -> V)<(9371 :: E),9372>, ev: (hnd/ev :: ((E, V) -> V) -> V)<(9373 :: (E, V) -> V)>, x: 9374){\n  val w0 : ((hnd/evv :: E -> V)<(_e :: E)>);\n  val y : a;\n  (match ((std/core/hnd/yielding())) {\n    ((std/core/types/True() : bool ) as @pat@3: bool)\n       -> std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (9371 :: E) 9375, res: a){\n        std/core/hnd/under1x<a,b,(e :: E),(b :: (E, V) -> V)>(ev, cont, res);\n      }));\n    ((@skip std/core/types/False() : bool ) as @pat@0@0: bool)\n       -> val _@0 : ()\n                = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0);\n      y;\n  });\n}))","traced":{"any":[]}},
{"op":"Jump","target":1060}]},
{"label":"838([mcore:[#1247]#2339])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"swapCurrentEvv"}]},
{"label":"839([mcore:[#1251]#2344])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"840([mcore:[#1253]#2349])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"swapCurrentEvv"}]},
{"label":"841([mcore:[#1261]#2354])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/under1x<a,a,(e :: E),(a :: (E, V) -> V)>(ev, cont@0, res@0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/under1x<a,a,(e :: E),(a :: (E, V) -> V)>(ev, cont@0, res@0)","traced":{"any":[]}},
{"op":"Jump","target":739}]},
{"label":"842([mcore:[#1263]#2358])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"843([#2373])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Jump","target":841}]},
{"label":"844([k@[switch case for Bool(true)#2369]#2380])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"845([switch case for Bool(true)#2369])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@5,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont@0: (a) -> (9475 :: E) 9474, res@0: a){\n  std/core/hnd/under1x<a,b,(e :: E),(b :: (E, V) -> V)>(ev, cont@0, res@0);\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[843],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont@0: (a) -> (9475 :: E) 9474, res@0: a){\n  std/core/hnd/under1x<a,b,(e :: E),(b :: (E, V) -> V)>(ev, cont@0, res@0);\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@5,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":215}]},
{"label":"846([k@[switch case for Bool(false)#2384]#2389])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: y","traced":{"any":[]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: y","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"847([switch case for Bool(false)#2384])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0@1,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: val _@0 : ()\n      = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0);\ny","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_@0\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Push","target":846,"args":{"any":[1]}},
{"op":"Copy","from":2,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_@0\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: val _@0 : ()\n      = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0);\ny","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0@1,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":842}]},
{"label":"848([switch default case#2391])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"849([switch default case#2382])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Switch","arg":2,"values":[false],"targets":[847],"default":848}]},
{"label":"850([k@[k@[mcore:[#1264]#2363]#2365]#2367])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"bool","out":3,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":3,"values":[true],"targets":[845],"default":849}]},
{"label":"851([k@[mcore:[#1264]#2363]#2365])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: cont(res)","traced":{"any":[]}},
{"op":"Push","target":850,"args":{"any":[2,0]}},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: cont(res)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"852([match_def@[mcore:[#1264]#2363]#2392])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"853([k@[#2393]#2398])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"854([#2393])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@4,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0@0: hnd/htag<9476>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"103\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@1@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@1@0: hnd/marker<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"104\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@2@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2@0: 9476<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"105\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(w@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (w@0: hnd/evv<4237>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"106\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap<(total :: E),(e :: E),(_e :: E)>(w@0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap<(total :: E),(e :: E),(_e :: E)>(w@0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@4,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0@0: hnd/htag<9476>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"103\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@1@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@1@0: hnd/marker<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"104\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@2@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2@0: 9476<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"105\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(w@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (w@0: hnd/evv<4237>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"106\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Jump","target":840}]},
{"label":"855([mcore:[#1264]#2363])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w0@0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (ev) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0@0: (hnd/htag :: ((E, V) -> V) -> V)<(9476 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@1@0: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@2@0: (9476 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (w@0: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat@4: ((hnd/ev :: ((E, V) -> V) -> V)<(9476 :: (E, V) -> V)>))\n     -> std/core/hnd/evv-swap<(total :: E),(e :: E),(_e1 :: E)>(w@0);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Push","target":851,"args":{"any":[0,2,1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (ev) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0@0: (hnd/htag :: ((E, V) -> V) -> V)<(9476 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@1@0: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@2@0: (9476 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (w@0: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat@4: ((hnd/ev :: ((E, V) -> V) -> V)<(9476 :: (E, V) -> V)>))\n     -> std/core/hnd/evv-swap<(total :: E),(e :: E),(_e1 :: E)>(w@0);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w0@0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/ev","scrutinee":2,"clauses":[{"tag":"std/core/hnd/Ev","target":854,"args":{"any":[0,1,2,3]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3078]","target":852,"args":{"any":[]}}}]},
{"label":"856([#2415])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Jump","target":855}]},
{"label":"857([k@[switch case for Bool(true)#2411]#2422])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"858([switch case for Bool(true)#2411])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@3,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (9475 :: E) 9474, res: a){\n  val w0@0 : (hnd/evv :: E -> V)<(_e :: E)>;\n  val y : b;\n  (match ((std/core/hnd/yielding())) {\n    ((std/core/types/True() : bool ) as @pat@5: bool)\n       -> std/core/hnd/yield-cont<b,(e :: E),b>((forall<b> fn<(e :: E)>(cont@0: (b) -> (9475 :: E) 9474, res@0: b){\n        std/core/hnd/under1x<b,c,(e :: E),(c :: (E, V) -> V)>(ev, cont@0, res@0);\n      }));\n    ((@skip std/core/types/False() : bool ) as @pat@0@1: bool)\n       -> val _@0 : ()\n                = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0);\n      y;\n  });\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[856],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (9475 :: E) 9474, res: a){\n  val w0@0 : (hnd/evv :: E -> V)<(_e :: E)>;\n  val y : b;\n  (match ((std/core/hnd/yielding())) {\n    ((std/core/types/True() : bool ) as @pat@5: bool)\n       -> std/core/hnd/yield-cont<b,(e :: E),b>((forall<b> fn<(e :: E)>(cont@0: (b) -> (9475 :: E) 9474, res@0: b){\n        std/core/hnd/under1x<b,c,(e :: E),(c :: (E, V) -> V)>(ev, cont@0, res@0);\n      }));\n    ((@skip std/core/types/False() : bool ) as @pat@0@1: bool)\n       -> val _@0 : ()\n                = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0);\n      y;\n  });\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@3,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":215}]},
{"label":"859([switch case for Bool(false)#2426])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0@2,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0@2,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"860([switch default case#2427])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"861([switch default case#2424])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Switch","arg":1,"values":[false],"targets":[859],"default":860}]},
{"label":"862([#2409])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":2,"values":[true],"targets":[858],"default":861}]},
{"label":"863([k@[k@[mcore:[#1266]#2400]#2402]#2404])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Push","target":862,"args":{"any":[1,0]}},
{"op":"Copy","from":3,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":839}]},
{"label":"864([k@[mcore:[#1266]#2400]#2402])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"z\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: op(x1, x2)","traced":{"any":[]}},
{"op":"Push","target":863,"args":{"any":[1,0]}},
{"op":"Copy","from":4,"to":1},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op(x1, x2)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"z\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":2,"tag":"apply","args":{"any":[0,1]}}]},
{"label":"865([match_def@[mcore:[#1266]#2400]#2428])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"866([k@[#2429]#2434])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"867([#2429])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<9476>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"103\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/marker<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"104\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2: 9476<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"105\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(w,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (w: hnd/evv<4237>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"106\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap<(total :: E),(e :: E),(_e :: E)>(w)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap<(total :: E),(e :: E),(_e :: E)>(w)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<9476>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"103\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/marker<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"104\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2: 9476<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"105\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(w,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (w: hnd/evv<4237>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"106\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Jump","target":838}]},
{"label":"868([mcore:[#1266]#2400])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (ev) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0: (hnd/htag :: ((E, V) -> V) -> V)<(9476 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@1: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@2: (9476 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (w: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat: ((hnd/ev :: ((E, V) -> V) -> V)<(9476 :: (E, V) -> V)>))\n     -> std/core/hnd/evv-swap<(total :: E),(e :: E),(_e1 :: E)>(w);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Push","target":864,"args":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (ev) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0: (hnd/htag :: ((E, V) -> V) -> V)<(9476 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@1: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@2: (9476 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (w: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat: ((hnd/ev :: ((E, V) -> V) -> V)<(9476 :: (E, V) -> V)>))\n     -> std/core/hnd/evv-swap<(total :: E),(e :: E),(_e1 :: E)>(w);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/ev","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Ev","target":867,"args":{"any":[0,1,2,3]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3079]","target":865,"args":{"any":[]}}}]},
{"label":"869([mcore:[#1273]#2436])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4,5]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/under2<a,a,a,(e :: E),(a :: (E, V) -> V)>(ev, op, x1, x2)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Copy","from":0,"to":4},
{"op":"Copy","from":1,"to":0},
{"op":"Copy","from":5,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/under2<a,a,a,(e :: E),(a :: (E, V) -> V)>(ev, op, x1, x2)","traced":{"any":[]}},
{"op":"Jump","target":868}]},
{"label":"870([method_apply@[mcore:[#1275]#2440]#2446])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Const","format":"string","out":5,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[5]},"in":{"any":[5]}},
{"op":"Swap","a":4,"b":5},
{"op":"Jump","target":869}]},
{"label":"871([mcore:[#1275]#2440])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Clause2<a,a,a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(9554 :: E),9555>, ev: (hnd/ev :: ((E, V) -> V) -> V)<(9556 :: (E, V) -> V)>, x1: 9557, x2: 9558){\n  (std/core/hnd/under2<a,a,a,(e :: E),(a :: (E, V) -> V)>(ev, op, x1, x2));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[870],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Clause2<a,a,a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(9554 :: E),9555>, ev: (hnd/ev :: ((E, V) -> V) -> V)<(9556 :: (E, V) -> V)>, x1: 9557, x2: 9558){\n  (std/core/hnd/under2<a,a,a,(e :: E),(a :: (E, V) -> V)>(ev, op, x1, x2));\n}))","traced":{"any":[]}},
{"op":"Jump","target":1061}]},
{"label":"872([match_def@[mcore:[#1281]#2452]#2453])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"873([k@[#2454]#2456])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"874([#2454])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"@pat-x808_20\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}),(x1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"103\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x1: 9635) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"103\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"104\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x2: 9636) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"104\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x3,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"105\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x3: 9637) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"105\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: op(x1, x2, x3)","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op(x1, x2, x3)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"@pat-x808_20\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}),(x1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"103\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x1: 9635) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"103\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"104\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x2: 9636) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"104\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x3,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"105\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x3: 9637) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"105\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Invoke","receiver":3,"tag":"apply","args":{"any":[0,1,2]}}]},
{"label":"875([mcore:[#1281]#2452])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@pat-x808_20\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}: \"std/core/types/tuple3\".\"std/core/types/Tuple3\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"103\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"104\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"105\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@pat-x808_20\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}: \"std/core/types/tuple3\".\"std/core/types/Tuple3\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"103\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"104\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"105\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/tuple3","scrutinee":1,"clauses":[{"tag":"std/core/types/Tuple3","target":874,"args":{"any":[1,2,3]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3080]","target":872,"args":{"any":[]}}}]},
{"label":"876([method_apply@[mcore:[#1283]#2458]#2461])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Jump","target":875}]},
{"label":"877([mcore:[#1283]#2458])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/clause-tail1<(e :: E),a,(a :: (E, V) -> V),(a, b, c),a>((fn<(e :: E)>(@pat-x808_20: (9635, 9636, 9637)){\n  (match (@pat-x808_20) {\n    ((@skip std/core/types/Tuple3((x1: 9635) : a, (x2: 9636) : a, (x3: 9637) : a) : (a, b, c) ) as @pat: (9635, 9636, 9637))\n       -> op(x1, x2, x3);\n  });\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[876],"args":{"any":[0]},"tags":["apply"]},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/clause-tail1<(e :: E),a,(a :: (E, V) -> V),(a, b, c),a>((fn<(e :: E)>(@pat-x808_20: (9635, 9636, 9637)){\n  (match (@pat-x808_20) {\n    ((@skip std/core/types/Tuple3((x1: 9635) : a, (x2: 9636) : a, (x3: 9637) : a) : (a, b, c) ) as @pat: (9635, 9636, 9637))\n       -> op(x1, x2, x3);\n  });\n}))","traced":{"any":[]}},
{"op":"Jump","target":837}]},
{"label":"878([match_def@[mcore:[#1290]#2467]#2468])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"879([k@[#2469]#2471])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"880([#2469])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"@pat-x832_20\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple4\\\"\"}}),(x1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"106\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x1: 9722) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"106\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"107\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x2: 9723) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"107\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x3,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"108\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x3: 9724) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"108\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x4,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"field4\\\"109\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x4: 9725) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"field4\\\\\\\"109\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: op(x1, x2, x3, x4)","traced":{"any":[]}},
{"op":"Swap","a":3,"b":4},
{"op":"Swap","a":2,"b":4},
{"op":"Swap","a":1,"b":4},
{"op":"Swap","a":0,"b":4},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op(x1, x2, x3, x4)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"@pat-x832_20\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple4\\\"\"}}),(x1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"106\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x1: 9722) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"106\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"107\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x2: 9723) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"107\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x3,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"108\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x3: 9724) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"108\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x4,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"field4\\\"109\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x4: 9725) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"field4\\\\\\\"109\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Invoke","receiver":4,"tag":"apply","args":{"any":[0,1,2,3]}}]},
{"label":"881([mcore:[#1290]#2467])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@pat-x832_20\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple4\\\"\"}}: \"std/core/types/tuple4\".\"std/core/types/Tuple4\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"106\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"107\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"108\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"field4\\\"109\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@pat-x832_20\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple4\\\"\"}}: \"std/core/types/tuple4\".\"std/core/types/Tuple4\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"106\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"107\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"108\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"field4\\\"109\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/tuple4","scrutinee":1,"clauses":[{"tag":"std/core/types/Tuple4","target":880,"args":{"any":[1,2,3,4]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3081]","target":878,"args":{"any":[]}}}]},
{"label":"882([method_apply@[mcore:[#1292]#2473]#2476])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Jump","target":881}]},
{"label":"883([mcore:[#1292]#2473])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/clause-tail1<(e :: E),a,(a :: (E, V) -> V),(a, b, c, d),a>((fn<(e :: E)>(@pat-x832_20: (9722, 9723, 9724, 9725)){\n  (match (@pat-x832_20) {\n    ((@skip std/core/types/Tuple4((x1: 9722) : a, (x2: 9723) : a, (x3: 9724) : a, (x4: 9725) : a) : (a, b, c, d) ) as @pat: (9722, 9723, 9724, 9725))\n       -> op(x1, x2, x3, x4);\n  });\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[882],"args":{"any":[0]},"tags":["apply"]},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/clause-tail1<(e :: E),a,(a :: (E, V) -> V),(a, b, c, d),a>((fn<(e :: E)>(@pat-x832_20: (9722, 9723, 9724, 9725)){\n  (match (@pat-x832_20) {\n    ((@skip std/core/types/Tuple4((x1: 9722) : a, (x2: 9723) : a, (x3: 9724) : a, (x4: 9725) : a) : (a, b, c, d) ) as @pat: (9722, 9723, 9724, 9725))\n       -> op(x1, x2, x3, x4);\n  });\n}))","traced":{"any":[]}},
{"op":"Jump","target":837}]},
{"label":"884([k@[mcore:[#1299]#2482]#2484])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Swap","a":0,"b":1},
{"op":"Jump","target":909}]},
{"label":"885([mcore:[#1299]#2482])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/finally-prompt<a,(e :: E)>(fin, (cont(x)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: cont(x)","traced":{"any":[]}},
{"op":"Push","target":884,"args":{"any":[2]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: cont(x)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/finally-prompt<a,(e :: E)>(fin, (cont(x)))","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"886([mcore:[#1306]#2487])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/unsafe-reyield<a,(e :: E)>(yld)","traced":{"any":[]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/unsafe-reyield<a,(e :: E)>(yld)","traced":{"any":[]}},
{"op":"Jump","target":252}]},
{"label":"887([k@[switch case for Bool(true)#2489]#2492])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"888([#2498])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Jump","target":885}]},
{"label":"889([k@[switch case for Bool(true)#2494]#2502])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"890([switch case for Bool(true)#2494])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@1@0,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (9857 :: E) 9856, x: a){\n  std/core/hnd/finally-prompt<b,(e :: E)>(fin, (cont(x)));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[888],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (9857 :: E) 9856, x: a){\n  std/core/hnd/finally-prompt<b,(e :: E)>(fin, (cont(x)));\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@1@0,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":215}]},
{"label":"891([k@[#2510]#2513])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"892([#2518])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Jump","target":886}]},
{"label":"893([k@[switch case for Bool(true)#2515]#2522])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"894([switch case for Bool(true)#2515])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@3,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-extend<_a,a,(e :: E)>((fn<(e :: E)>(@_wildcard-x537_43: _9825){\n  (std/core/hnd/unsafe-reyield<a,(e :: E)>(yld));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[892],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-extend<_a,a,(e :: E)>((fn<(e :: E)>(@_wildcard-x537_43: _9825){\n  (std/core/hnd/unsafe-reyield<a,(e :: E)>(yld));\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@3,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":214}]},
{"label":"895([k@[switch case for Bool(false)#2526]#2528])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"896([switch case for Bool(false)#2526])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@4,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/unsafe-reyield<a,(e :: E)>(yld)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/unsafe-reyield<a,(e :: E)>(yld)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@4,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":252}]},
{"label":"897([switch default case#2530])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"898([switch default case#2524])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Const","format":"bool","out":1,"value":false},
{"op":"Switch","arg":1,"values":[false],"targets":[896],"default":897}]},
{"label":"899([#2510])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: match ((std/core/hnd/yielding())) {\n  ((std/core/types/True() : bool ) as @pat@3: bool)\n     -> std/core/hnd/yield-extend<_a,a,(e :: E)>((fn<(e :: E)>(@_wildcard-x537_43: _9825){\n      (std/core/hnd/unsafe-reyield<a,(e :: E)>(yld));\n    }));\n  ((@skip std/core/types/False() : bool ) as @pat@4: bool)\n     -> std/core/hnd/unsafe-reyield<a,(e :: E)>(yld);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match ((std/core/hnd/yielding())) {\n  ((std/core/types/True() : bool ) as @pat@3: bool)\n     -> std/core/hnd/yield-extend<_a,a,(e :: E)>((fn<(e :: E)>(@_wildcard-x537_43: _9825){\n      (std/core/hnd/unsafe-reyield<a,(e :: E)>(yld));\n    }));\n  ((@skip std/core/types/False() : bool ) as @pat@4: bool)\n     -> std/core/hnd/unsafe-reyield<a,(e :: E)>(yld);\n}","traced":{"any":[]}},
{"op":"Switch","arg":1,"values":[true],"targets":[894],"default":898}]},
{"label":"900([k@[switch case for Bool(false)#2506]#2508])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_@0\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: fin()","traced":{"any":[]}},
{"op":"Push","target":899,"args":{"any":[0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: fin()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_@0\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[]}}]},
{"label":"901([switch case for Bool(false)#2506])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@2,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: val yld : hnd/yield-info;\nval _@0 : ();\nmatch ((std/core/hnd/yielding())) {\n  ((std/core/types/True() : bool ) as @pat@3: bool)\n     -> std/core/hnd/yield-extend<_a,a,(e :: E)>((fn<(e :: E)>(@_wildcard-x537_43: _9825){\n      (std/core/hnd/unsafe-reyield<a,(e :: E)>(yld));\n    }));\n  ((@skip std/core/types/False() : bool ) as @pat@4: bool)\n     -> std/core/hnd/unsafe-reyield<a,(e :: E)>(yld);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"yld\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yield-info\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-capture<(e :: E)>()","traced":{"any":[]}},
{"op":"Push","target":900,"args":{"any":[0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-capture<(e :: E)>()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"yld\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yield-info\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: val yld : hnd/yield-info;\nval _@0 : ();\nmatch ((std/core/hnd/yielding())) {\n  ((std/core/types/True() : bool ) as @pat@3: bool)\n     -> std/core/hnd/yield-extend<_a,a,(e :: E)>((fn<(e :: E)>(@_wildcard-x537_43: _9825){\n      (std/core/hnd/unsafe-reyield<a,(e :: E)>(yld));\n    }));\n  ((@skip std/core/types/False() : bool ) as @pat@4: bool)\n     -> std/core/hnd/unsafe-reyield<a,(e :: E)>(yld);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@2,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":253}]},
{"label":"902([switch default case#2531])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"903([switch default case#2504])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Const","format":"bool","out":1,"value":false},
{"op":"Switch","arg":1,"values":[false],"targets":[901],"default":902}]},
{"label":"904([switch case for Bool(true)#2489])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"b@10067\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match ((std/core/hnd/yielding-non-final())) {\n  ((std/core/types/True() : bool ) as @pat@1@0: bool)\n     -> std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (9857 :: E) 9856, x: a){\n      std/core/hnd/finally-prompt<b,(e :: E)>(fin, (cont(x)));\n    }));\n  ((@skip std/core/types/False() : bool ) as @pat@2: bool)\n     -> val yld : hnd/yield-info;\n        val _@0 : ();\n    (match ((std/core/hnd/yielding())) {\n      ((std/core/types/True() : bool ) as @pat@3: bool)\n         -> std/core/hnd/yield-extend<_a,a,(e :: E)>((fn<(e :: E)>(@_wildcard-x537_43: _9825){\n          (std/core/hnd/unsafe-reyield<a,(e :: E)>(yld));\n        }));\n      ((@skip std/core/types/False() : bool ) as @pat@4: bool)\n         -> std/core/hnd/unsafe-reyield<a,(e :: E)>(yld);\n    });\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match ((std/core/hnd/yielding-non-final())) {\n  ((std/core/types/True() : bool ) as @pat@1@0: bool)\n     -> std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (9857 :: E) 9856, x: a){\n      std/core/hnd/finally-prompt<b,(e :: E)>(fin, (cont(x)));\n    }));\n  ((@skip std/core/types/False() : bool ) as @pat@2: bool)\n     -> val yld : hnd/yield-info;\n        val _@0 : ();\n    (match ((std/core/hnd/yielding())) {\n      ((std/core/types/True() : bool ) as @pat@3: bool)\n         -> std/core/hnd/yield-extend<_a,a,(e :: E)>((fn<(e :: E)>(@_wildcard-x537_43: _9825){\n          (std/core/hnd/unsafe-reyield<a,(e :: E)>(yld));\n        }));\n      ((@skip std/core/types/False() : bool ) as @pat@4: bool)\n         -> std/core/hnd/unsafe-reyield<a,(e :: E)>(yld);\n    });\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"b@10067\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Switch","arg":1,"values":[true],"targets":[890],"default":903}]},
{"label":"905([k@[switch case for Bool(false)#2533]#2535])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: res","traced":{"any":[]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: res","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"906([switch case for Bool(false)#2533])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"b@10067\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: val _ : ()\n      = fin();\nres","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: fin()","traced":{"any":[]}},
{"op":"Push","target":905,"args":{"any":[1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: fin()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: val _ : ()\n      = fin();\nres","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"b@10067\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Invoke","receiver":0,"tag":"apply","args":{"any":[]}}]},
{"label":"907([switch default case#2537])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"908([switch default case#2532])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Switch","arg":2,"values":[false],"targets":[906],"default":907}]},
{"label":"909([mcore:[#1311]#2486])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"b@10067\",\"type\": {\"op\": \"Bool\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yielding()","traced":{"any":[]}},
{"op":"Const","format":"bool","out":2,"value":false},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yielding()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"b@10067\",\"type\": {\"op\": \"Bool\"}}","traced":{"any":[]}},
{"op":"Switch","arg":0,"values":[true],"targets":[904],"default":908}]},
{"label":"910([k@[mcore:[#1316]#2538]#2540])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Swap","a":0,"b":1},
{"op":"Jump","target":909}]},
{"label":"911([mcore:[#1316]#2538])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/finally-prompt<a,(e :: E)>(fin, (action()))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: action()","traced":{"any":[]}},
{"op":"Push","target":910,"args":{"any":[0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: action()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/finally-prompt<a,(e :: E)>(fin, (action()))","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[]}}]},
{"label":"912([k@[mcore:[#1335]#2542]#2544])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Swap","a":0,"b":1},
{"op":"Jump","target":935}]},
{"label":"913([mcore:[#1335]#2542])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/initially-prompt<a,(e :: E)>(init, (cont(x)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: cont(x)","traced":{"any":[]}},
{"op":"Push","target":912,"args":{"any":[2]}},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: cont(x)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/initially-prompt<a,(e :: E)>(init, (cont(x)))","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"914([k@[k@[mcore:[#1342]#2547]#2555]#2557])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Swap","a":0,"b":1},
{"op":"Jump","target":935}]},
{"label":"915([k@[mcore:[#1342]#2547]#2555])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/initially-prompt<a,(e :: E)>(init, (cont(x)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: cont(x)","traced":{"any":[]}},
{"op":"Push","target":914,"args":{"any":[2]}},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: cont(x)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/initially-prompt<a,(e :: E)>(init, (cont(x)))","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"916([switch case for Bool(true)#2559])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"infixEq(Int, Int): Int\",\"args\": [{\"op\": \"Var\",\"id\": \"cnt\",\"type\": {\"op\": \"Int\"}}, {\"op\": \"Literal\",\"type\": {\"op\": \"Int\"},\"value\": 0}],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/Unit","traced":{"any":[]}},
{"op":"Construct","out":0,"type":"Unit","tag":"unit","args":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/Unit","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"infixEq(Int, Int): Int\",\"args\": [{\"op\": \"Var\",\"id\": \"cnt\",\"type\": {\"op\": \"Int\"}}, {\"op\": \"Literal\",\"type\": {\"op\": \"Int\"},\"value\": 0}],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"917([#2571])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"918([#2576])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Jump","target":913}]},
{"label":"919([k@[switch case for Bool(true)#2573]#2580])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/Unit","traced":{"any":[]}},
{"op":"Construct","out":0,"type":"Unit","tag":"unit","args":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/Unit","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"920([switch case for Bool(true)#2573])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@2,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: val _@0 : a\n      = std/core/hnd/yield-extend<_a,a,(e :: E)>((fn<(e :: E)>(@_wildcard-x580_35: _10005){\n        (std/core/hnd/initially-prompt<a,(e :: E)>(init, (cont(x))));\n      }));\nstd/core/types/Unit","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_@0\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-extend<_a,a,(e :: E)>((fn<(e :: E)>(@_wildcard-x580_35: _10005){\n  (std/core/hnd/initially-prompt<a,(e :: E)>(init, (cont(x))));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[918],"args":{"any":[0,1,2]},"tags":["apply"]},
{"op":"Push","target":919,"args":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-extend<_a,a,(e :: E)>((fn<(e :: E)>(@_wildcard-x580_35: _10005){\n  (std/core/hnd/initially-prompt<a,(e :: E)>(init, (cont(x))));\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_@0\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: val _@0 : a\n      = std/core/hnd/yield-extend<_a,a,(e :: E)>((fn<(e :: E)>(@_wildcard-x580_35: _10005){\n        (std/core/hnd/initially-prompt<a,(e :: E)>(init, (cont(x))));\n      }));\nstd/core/types/Unit","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@2,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":214}]},
{"label":"921([switch case for Bool(false)#2585])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@3,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/Unit","traced":{"any":[]}},
{"op":"Construct","out":0,"type":"Unit","tag":"unit","args":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/Unit","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@3,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"922([switch default case#2588])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"923([switch default case#2583])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Switch","arg":0,"values":[false],"targets":[921],"default":922}]},
{"label":"924([k@[switch case for Bool(false)#2566]#2568])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: match ((std/core/hnd/yielding())) {\n  ((std/core/types/True() : bool ) as @pat@2: bool)\n     -> val _@0 : a\n              = std/core/hnd/yield-extend<_a,a,(e :: E)>((fn<(e :: E)>(@_wildcard-x580_35: _10005){\n                (std/core/hnd/initially-prompt<a,(e :: E)>(init, (cont(x))));\n              }));\n    std/core/types/Unit;\n  ((@skip std/core/types/False() : bool ) as @pat@3: bool)\n     -> std/core/types/Unit;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match ((std/core/hnd/yielding())) {\n  ((std/core/types/True() : bool ) as @pat@2: bool)\n     -> val _@0 : a\n              = std/core/hnd/yield-extend<_a,a,(e :: E)>((fn<(e :: E)>(@_wildcard-x580_35: _10005){\n                (std/core/hnd/initially-prompt<a,(e :: E)>(init, (cont(x))));\n              }));\n    std/core/types/Unit;\n  ((@skip std/core/types/False() : bool ) as @pat@3: bool)\n     -> std/core/types/Unit;\n}","traced":{"any":[]}},
{"op":"Switch","arg":3,"values":[true],"targets":[920],"default":923}]},
{"label":"925([switch case for Bool(false)#2566])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@1,{\"op\": \"Primitive\",\"name\": \"infixEq(Int, Int): Int\",\"args\": [{\"op\": \"Var\",\"id\": \"cnt\",\"type\": {\"op\": \"Int\"}}, {\"op\": \"Literal\",\"type\": {\"op\": \"Int\"},\"value\": 0}],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: val r : ()\n      = init(cnt);\nmatch ((std/core/hnd/yielding())) {\n  ((std/core/types/True() : bool ) as @pat@2: bool)\n     -> val _@0 : a\n              = std/core/hnd/yield-extend<_a,a,(e :: E)>((fn<(e :: E)>(@_wildcard-x580_35: _10005){\n                (std/core/hnd/initially-prompt<a,(e :: E)>(init, (cont(x))));\n              }));\n    std/core/types/Unit;\n  ((@skip std/core/types/False() : bool ) as @pat@3: bool)\n     -> std/core/types/Unit;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: init(cnt)","traced":{"any":[]}},
{"op":"Push","target":924,"args":{"any":[1,2,3]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: init(cnt)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: val r : ()\n      = init(cnt);\nmatch ((std/core/hnd/yielding())) {\n  ((std/core/types/True() : bool ) as @pat@2: bool)\n     -> val _@0 : a\n              = std/core/hnd/yield-extend<_a,a,(e :: E)>((fn<(e :: E)>(@_wildcard-x580_35: _10005){\n                (std/core/hnd/initially-prompt<a,(e :: E)>(init, (cont(x))));\n              }));\n    std/core/types/Unit;\n  ((@skip std/core/types/False() : bool ) as @pat@3: bool)\n     -> std/core/types/Unit;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@1,{\"op\": \"Primitive\",\"name\": \"infixEq(Int, Int): Int\",\"args\": [{\"op\": \"Var\",\"id\": \"cnt\",\"type\": {\"op\": \"Int\"}}, {\"op\": \"Literal\",\"type\": {\"op\": \"Int\"},\"value\": 0}],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Invoke","receiver":2,"tag":"apply","args":{"any":[0]}}]},
{"label":"926([switch default case#2589])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"927([switch default case#2562])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Const","format":"int","out":4,"value":0},
{"op":"PrimOp","name":"infixEq(Int, Int): Int","out":{"any":[4]},"in":{"any":[0,4]}},
{"op":"Switch","arg":4,"values":[false],"targets":[925],"default":926}]},
{"label":"928([mcore:[#1342]#2547])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"cnt\",\"type\": {\"op\": \"Int\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/ref/(!)<(global :: H),int,<(alloc :: H -> X)<(global :: H)>,(write :: H -> X)<(global :: H)>|(e :: E)>>(count)","traced":{"any":[]}},
{"op":"PrimOp","name":"getRef(Ref[Ptr]): Ptr","out":{"any":[4]},"in":{"any":[2]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/set<int,(global :: H)>(count, (std/core/hnd/add(cnt, 1)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/add(cnt, 1)","traced":{"any":[]}},
{"op":"Const","format":"int","out":5,"value":1},
{"op":"PrimOp","name":"infixAdd(Int, Int): Int","out":{"any":[5]},"in":{"any":[4,5]}},
{"op":"PrimOp","name":"setRef(Ref[Ptr], Ptr): Unit","out":{"any":[2]},"in":{"any":[2,5]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_@1\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match ((std/core/hnd/eq(cnt, 0))) {\n  ((std/core/types/True() : bool ) as @pat@0: bool)\n     -> std/core/types/Unit;\n  ((@skip std/core/types/False() : bool ) as @pat@1: bool)\n     -> val r : ()\n              = init(cnt);\n    (match ((std/core/hnd/yielding())) {\n      ((std/core/types/True() : bool ) as @pat@2: bool)\n         -> val _@0 : a\n                  = std/core/hnd/yield-extend<_a,a,(e :: E)>((fn<(e :: E)>(@_wildcard-x580_35: _10005){\n                    (std/core/hnd/initially-prompt<a,(e :: E)>(init, (cont(x))));\n                  }));\n        std/core/types/Unit;\n      ((@skip std/core/types/False() : bool ) as @pat@3: bool)\n         -> std/core/types/Unit;\n    });\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"int","out":2,"value":0},
{"op":"PrimOp","name":"infixEq(Int, Int): Int","out":{"any":[2]},"in":{"any":[4,2]}},
{"op":"Push","target":915,"args":{"any":[0,3,1]}},
{"op":"Swap","a":0,"b":4},
{"op":"Swap","a":1,"b":4},
{"op":"Swap","a":3,"b":4},
{"op":"Swap","a":2,"b":4},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match ((std/core/hnd/eq(cnt, 0))) {\n  ((std/core/types/True() : bool ) as @pat@0: bool)\n     -> std/core/types/Unit;\n  ((@skip std/core/types/False() : bool ) as @pat@1: bool)\n     -> val r : ()\n              = init(cnt);\n    (match ((std/core/hnd/yielding())) {\n      ((std/core/types/True() : bool ) as @pat@2: bool)\n         -> val _@0 : a\n                  = std/core/hnd/yield-extend<_a,a,(e :: E)>((fn<(e :: E)>(@_wildcard-x580_35: _10005){\n                    (std/core/hnd/initially-prompt<a,(e :: E)>(init, (cont(x))));\n                  }));\n        std/core/types/Unit;\n      ((@skip std/core/types/False() : bool ) as @pat@3: bool)\n         -> std/core/types/Unit;\n    });\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_@1\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/add(cnt, 1)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/set<int,(global :: H)>(count, (std/core/hnd/add(cnt, 1)))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/ref/(!)<(global :: H),int,<(alloc :: H -> X)<(global :: H)>,(write :: H -> X)<(global :: H)>|(e :: E)>>(count)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"cnt\",\"type\": {\"op\": \"Int\"}}","traced":{"any":[]}},
{"op":"Switch","arg":4,"values":[true],"targets":[916],"default":927}]},
{"label":"929([#2597])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Jump","target":928}]},
{"label":"930([k@[switch case for Bool(true)#2591]#2601])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"931([switch case for Bool(true)#2591])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: val count : (ref :: (H, V) -> V)<(global :: H),int>\n      = std/core/types/ref<int,(global :: H)>(0);\nstd/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (10059 :: E) 10058, x: a){\n  val cnt : int;\n  val _ : ();\n  val _@1 : ();\n  std/core/hnd/initially-prompt<b,(e :: E)>(init, (cont(x)));\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"count\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"ref\\\"\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/ref<int,(global :: H)>(0)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: 0","traced":{"any":[]}},
{"op":"Const","format":"int","out":1,"value":0},
{"op":"PrimOp","name":"mkRef(Ptr): Ref[Ptr]","out":{"any":[1]},"in":{"any":[1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (10059 :: E) 10058, x: a){\n  val cnt : int;\n  val _ : ();\n  val _@1 : ();\n  std/core/hnd/initially-prompt<b,(e :: E)>(init, (cont(x)));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[929],"args":{"any":[1,0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (10059 :: E) 10058, x: a){\n  val cnt : int;\n  val _ : ();\n  val _@1 : ();\n  std/core/hnd/initially-prompt<b,(e :: E)>(init, (cont(x)));\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: 0","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/ref<int,(global :: H)>(0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"count\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"ref\\\"\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: val count : (ref :: (H, V) -> V)<(global :: H),int>\n      = std/core/types/ref<int,(global :: H)>(0);\nstd/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (10059 :: E) 10058, x: a){\n  val cnt : int;\n  val _ : ();\n  val _@1 : ();\n  std/core/hnd/initially-prompt<b,(e :: E)>(init, (cont(x)));\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":215}]},
{"label":"932([switch case for Bool(false)#2605])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@4,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@4,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"933([switch default case#2606])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"934([switch default case#2603])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Switch","arg":1,"values":[false],"targets":[932],"default":933}]},
{"label":"935([mcore:[#1344]#2546])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"bool","out":2,"value":false},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":2,"values":[true],"targets":[931],"default":934}]},
{"label":"936([k@[mcore:[#1352]#2607]#2609])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Swap","a":0,"b":1},
{"op":"Jump","target":935}]},
{"label":"937([mcore:[#1352]#2607])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/initially-prompt<a,(e :: E)>(init, (action()))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: action()","traced":{"any":[]}},
{"op":"Push","target":936,"args":{"any":[2]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: action()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/initially-prompt<a,(e :: E)>(init, (action()))","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[]}}]},
{"label":"938([#2620])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Jump","target":937}]},
{"label":"939([k@[switch case for Bool(true)#2617]#2624])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"940([switch case for Bool(true)#2617])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-extend<(),a,(e :: E)>((fn<(e :: E)>(@_wildcard-x568_40: ()){\n  (std/core/hnd/initially-prompt<a,(e :: E)>(init, (action())));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[938],"args":{"any":[0,1]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-extend<(),a,(e :: E)>((fn<(e :: E)>(@_wildcard-x568_40: ()){\n  (std/core/hnd/initially-prompt<a,(e :: E)>(init, (action())));\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":214}]},
{"label":"941([#2633])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"942([k@[switch case for Bool(false)#2628]#2630])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Swap","a":0,"b":1},
{"op":"Jump","target":935}]},
{"label":"943([switch case for Bool(false)#2628])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/initially-prompt<a,(e :: E)>(init, (action()))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: action()","traced":{"any":[]}},
{"op":"Push","target":942,"args":{"any":[1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: action()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/initially-prompt<a,(e :: E)>(init, (action()))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Invoke","receiver":0,"tag":"apply","args":{"any":[]}}]},
{"label":"944([switch default case#2635])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"945([switch default case#2626])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"bool","out":2,"value":false},
{"op":"Switch","arg":2,"values":[false],"targets":[943],"default":944}]},
{"label":"946([k@[mcore:[#1358]#2611]#2615])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":2,"values":[true],"targets":[940],"default":945}]},
{"label":"947([mcore:[#1358]#2611])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: init(0)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: 0","traced":{"any":[]}},
{"op":"Const","format":"int","out":2,"value":0},
{"op":"Push","target":946,"args":{"any":[1,0]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: 0","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: init(0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"948([k@[mcore:[#1368]#2636]#2638])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Swap","a":0,"b":1},
{"op":"Jump","target":956}]},
{"label":"949([mcore:[#1368]#2636])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_@0\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/local-set<a,(div :: X),(h :: H)>(loc, v)","traced":{"any":[]}},
{"op":"PrimOp","name":"setRef(Ref[Ptr], Ptr): Unit","out":{"any":[3]},"in":{"any":[2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/prompt-local-var<a,a,(total :: E),(h :: H)>(loc, (cont(x)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: cont(x)","traced":{"any":[]}},
{"op":"Push","target":948,"args":{"any":[2]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: cont(x)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/prompt-local-var<a,a,(total :: E),(h :: H)>(loc, (cont(x)))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/local-set<a,(div :: X),(h :: H)>(loc, v)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_@0\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"950([#2646])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Jump","target":949}]},
{"label":"951([k@[switch case for Bool(true)#2642]#2650])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"952([switch case for Bool(true)#2642])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"b@10035\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: val v : a\n      = std/core/types/local-get<a,(h :: H),(div :: X)>(loc);\nstd/core/hnd/yield-cont<a,<(div :: X),(local :: H -> X)<(h :: H)>>,a>((forall<a> fn<<(div :: X),(local :: H -> X)<(h :: H)>>>(cont: (a) -> <(div :: X),(local :: H -> X)<(10233 :: H)>> 10231, x: a){\n  val _@0 : ()\n        = std/core/types/local-set<b,(div :: X),(h :: H)>(loc, v);\n  std/core/hnd/prompt-local-var<b,b,(total :: E),(h :: H)>(loc, (cont(x)));\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"v\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/local-get<a,(h :: H),(div :: X)>(loc)","traced":{"any":[]}},
{"op":"PrimOp","name":"getRef(Ref[Ptr]): Ptr","out":{"any":[0]},"in":{"any":[1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,<(div :: X),(local :: H -> X)<(h :: H)>>,a>((forall<a> fn<<(div :: X),(local :: H -> X)<(h :: H)>>>(cont: (a) -> <(div :: X),(local :: H -> X)<(10233 :: H)>> 10231, x: a){\n  val _@0 : ()\n        = std/core/types/local-set<b,(div :: X),(h :: H)>(loc, v);\n  std/core/hnd/prompt-local-var<b,b,(total :: E),(h :: H)>(loc, (cont(x)));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[950],"args":{"any":[1,0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,<(div :: X),(local :: H -> X)<(h :: H)>>,a>((forall<a> fn<<(div :: X),(local :: H -> X)<(h :: H)>>>(cont: (a) -> <(div :: X),(local :: H -> X)<(10233 :: H)>> 10231, x: a){\n  val _@0 : ()\n        = std/core/types/local-set<b,(div :: X),(h :: H)>(loc, v);\n  std/core/hnd/prompt-local-var<b,b,(total :: E),(h :: H)>(loc, (cont(x)));\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/local-get<a,(h :: H),(div :: X)>(loc)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"v\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: val v : a\n      = std/core/types/local-get<a,(h :: H),(div :: X)>(loc);\nstd/core/hnd/yield-cont<a,<(div :: X),(local :: H -> X)<(h :: H)>>,a>((forall<a> fn<<(div :: X),(local :: H -> X)<(h :: H)>>>(cont: (a) -> <(div :: X),(local :: H -> X)<(10233 :: H)>> 10231, x: a){\n  val _@0 : ()\n        = std/core/types/local-set<b,(div :: X),(h :: H)>(loc, v);\n  std/core/hnd/prompt-local-var<b,b,(total :: E),(h :: H)>(loc, (cont(x)));\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"b@10035\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Jump","target":215}]},
{"label":"953([switch case for Bool(false)#2653])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"b@10035\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"b@10035\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"954([switch default case#2654])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"955([switch default case#2652])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Switch","arg":1,"values":[false],"targets":[953],"default":954}]},
{"label":"956([mcore:[#1370]#2640])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"b@10035\",\"type\": {\"op\": \"Bool\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yielding()","traced":{"any":[]}},
{"op":"Const","format":"bool","out":2,"value":false},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yielding()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"b@10035\",\"type\": {\"op\": \"Bool\"}}","traced":{"any":[]}},
{"op":"Switch","arg":0,"values":[true],"targets":[952],"default":955}]},
{"label":"957([k@[mcore:[#1377]#2655]#2657])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/prompt-local-var<a,a,(h :: H)>(loc, res)","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/prompt-local-var<a,a,(h :: H)>(loc, res)","traced":{"any":[]}},
{"op":"Jump","target":956}]},
{"label":"958([mcore:[#1377]#2655])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"loc\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"local-var\\\"\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/local-new<a,<(div :: X)|(e :: E)>,(h :: H)>(init)","traced":{"any":[]}},
{"op":"PrimOp","name":"mkRef(Ptr): Ref[Ptr]","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"res\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: action(loc)","traced":{"any":[]}},
{"op":"Push","target":957,"args":{"any":[0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: action(loc)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"res\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/local-new<a,<(div :: X)|(e :: E)>,(h :: H)>(init)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"loc\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"local-var\\\"\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"959([mcore:[#1381]#2658])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@prompt-local-var-prim-vm<a,a,(e :: E),(h :: H)>(init, action)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@prompt-local-var-prim-vm<a,a,(e :: E),(h :: H)>(init, action)","traced":{"any":[]}},
{"op":"Jump","target":201}]},
{"label":"960([k@[mcore:[#1387]#2659]#2661])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"Jump","target":978}]},
{"label":"961([mcore:[#1387]#2659])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/try-finalize-prompt<a,(e :: E)>((cont(x)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: cont(x)","traced":{"any":[]}},
{"op":"Push","target":960,"args":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: cont(x)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/try-finalize-prompt<a,(e :: E)>((cont(x)))","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"962([mcore:[#1389]#2667])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"std/core/types/Left"}]},
{"label":"963([mcore:[#1393]#2672])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"std/core/types/Right"}]},
{"label":"964([#2682])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Jump","target":961}]},
{"label":"965([k@[switch case for Bool(true)#2678]#2689])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"966([switch case for Bool(true)#2678])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),(either :: (V, V) -> V)<hnd/yield-info,a>>((forall<a> fn<(e :: E)>(cont: (a) -> (10462 :: E) 10461, x: a){\n  std/core/hnd/try-finalize-prompt<b,(e :: E)>((cont(x)));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[964],"args":{"any":[]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),(either :: (V, V) -> V)<hnd/yield-info,a>>((forall<a> fn<(e :: E)>(cont: (a) -> (10462 :: E) 10461, x: a){\n  std/core/hnd/try-finalize-prompt<b,(e :: E)>((cont(x)));\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":215}]},
{"label":"967([k@[switch case for Bool(false)#2693]#2696])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"968([#2706])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"969([k@[switch case for Bool(true)#2698]#2700])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"Jump","target":962}]},
{"label":"970([switch case for Bool(true)#2698])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"b@10068\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/Left<hnd/yield-info,a>((std/core/hnd/yield-capture<(e :: E)>()))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-capture<(e :: E)>()","traced":{"any":[]}},
{"op":"Push","target":969,"args":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-capture<(e :: E)>()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/Left<hnd/yield-info,a>((std/core/hnd/yield-capture<(e :: E)>()))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"b@10068\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Jump","target":253}]},
{"label":"971([k@[switch case for Bool(false)#2709]#2714])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"972([switch case for Bool(false)#2709])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0@0,{\"op\": \"Var\",\"id\": \"b@10068\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/Right<hnd/yield-info,a>(res)","traced":{"any":[]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/Right<hnd/yield-info,a>(res)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0@0,{\"op\": \"Var\",\"id\": \"b@10068\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Jump","target":963}]},
{"label":"973([switch default case#2716])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"974([switch default case#2708])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Swap","a":0,"b":1},
{"op":"Switch","arg":1,"values":[false],"targets":[972],"default":973}]},
{"label":"975([switch case for Bool(false)#2693])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: val b@10068 : bool\n      = std/core/hnd/yielding();\nmatch (b@10068) {\n  ((std/core/types/True() : bool ) as @pat@1: bool)\n     -> std/core/types/Left<hnd/yield-info,a>((std/core/hnd/yield-capture<(e :: E)>()));\n  ((@skip std/core/types/False() : bool ) as @pat@0@0: bool)\n     -> std/core/types/Right<hnd/yield-info,a>(res);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"b@10068\",\"type\": {\"op\": \"Bool\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yielding()","traced":{"any":[]}},
{"op":"Const","format":"bool","out":1,"value":false},
{"op":"Debug","msg":"BGN: genExpr: match (b@10068) {\n  ((std/core/types/True() : bool ) as @pat@1: bool)\n     -> std/core/types/Left<hnd/yield-info,a>((std/core/hnd/yield-capture<(e :: E)>()));\n  ((@skip std/core/types/False() : bool ) as @pat@0@0: bool)\n     -> std/core/types/Right<hnd/yield-info,a>(res);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (b@10068) {\n  ((std/core/types/True() : bool ) as @pat@1: bool)\n     -> std/core/types/Left<hnd/yield-info,a>((std/core/hnd/yield-capture<(e :: E)>()));\n  ((@skip std/core/types/False() : bool ) as @pat@0@0: bool)\n     -> std/core/types/Right<hnd/yield-info,a>(res);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yielding()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"b@10068\",\"type\": {\"op\": \"Bool\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: val b@10068 : bool\n      = std/core/hnd/yielding();\nmatch (b@10068) {\n  ((std/core/types/True() : bool ) as @pat@1: bool)\n     -> std/core/types/Left<hnd/yield-info,a>((std/core/hnd/yield-capture<(e :: E)>()));\n  ((@skip std/core/types/False() : bool ) as @pat@0@0: bool)\n     -> std/core/types/Right<hnd/yield-info,a>(res);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Switch","arg":0,"values":[true],"targets":[970],"default":974}]},
{"label":"976([switch default case#2717])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"977([switch default case#2691])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Const","format":"bool","out":1,"value":false},
{"op":"Switch","arg":1,"values":[false],"targets":[975],"default":976}]},
{"label":"978([mcore:[#1396]#2666])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"bool","out":1,"value":false},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":1,"values":[true],"targets":[966],"default":977}]},
{"label":"979([mcore:[#1397]#2718])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"swapCurrentEvv"}]},
{"label":"980([mcore:[#1402]#2723])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"981([mcore:[#1404]#2728])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"swapCurrentEvv"}]},
{"label":"982([mcore:[#1412]#2733])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/under1x<a,a,(e :: E),(a :: (E, V) -> V)>(ev, cont@0, res@0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/under1x<a,a,(e :: E),(a :: (E, V) -> V)>(ev, cont@0, res@0)","traced":{"any":[]}},
{"op":"Jump","target":739}]},
{"label":"983([mcore:[#1414]#2737])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"984([#2752])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Jump","target":982}]},
{"label":"985([k@[switch case for Bool(true)#2748]#2759])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"986([switch case for Bool(true)#2748])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@5,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont@0: (a) -> (10557 :: E) 10556, res@0: a){\n  std/core/hnd/under1x<a,b,(e :: E),(b :: (E, V) -> V)>(ev, cont@0, res@0);\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[984],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont@0: (a) -> (10557 :: E) 10556, res@0: a){\n  std/core/hnd/under1x<a,b,(e :: E),(b :: (E, V) -> V)>(ev, cont@0, res@0);\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@5,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":215}]},
{"label":"987([k@[switch case for Bool(false)#2763]#2768])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: y","traced":{"any":[]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: y","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"988([switch case for Bool(false)#2763])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0@1,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: val _@0 : ()\n      = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0);\ny","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_@0\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Push","target":987,"args":{"any":[1]}},
{"op":"Copy","from":2,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_@0\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: val _@0 : ()\n      = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0);\ny","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0@1,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":983}]},
{"label":"989([switch default case#2770])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"990([switch default case#2761])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Switch","arg":2,"values":[false],"targets":[988],"default":989}]},
{"label":"991([k@[k@[mcore:[#1415]#2742]#2744]#2746])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"bool","out":3,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":3,"values":[true],"targets":[986],"default":990}]},
{"label":"992([k@[mcore:[#1415]#2742]#2744])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: cont(res)","traced":{"any":[]}},
{"op":"Push","target":991,"args":{"any":[2,0]}},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: cont(res)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"993([match_def@[mcore:[#1415]#2742]#2771])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"994([k@[#2772]#2777])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"995([#2772])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@4,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"110\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0@0: hnd/htag<10558>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"110\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@1@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"111\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@1@0: hnd/marker<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"111\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@2@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"112\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2@0: 10558<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"112\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(w@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"113\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (w@0: hnd/evv<4237>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"113\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap<(total :: E),(e :: E),(_e :: E)>(w@0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap<(total :: E),(e :: E),(_e :: E)>(w@0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@4,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"110\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0@0: hnd/htag<10558>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"110\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@1@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"111\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@1@0: hnd/marker<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"111\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@2@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"112\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2@0: 10558<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"112\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(w@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"113\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (w@0: hnd/evv<4237>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"113\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Jump","target":981}]},
{"label":"996([mcore:[#1415]#2742])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w0@0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (ev) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0@0: (hnd/htag :: ((E, V) -> V) -> V)<(10558 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@1@0: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@2@0: (10558 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (w@0: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat@4: ((hnd/ev :: ((E, V) -> V) -> V)<(10558 :: (E, V) -> V)>))\n     -> std/core/hnd/evv-swap<(total :: E),(e :: E),(_e1 :: E)>(w@0);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"110\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"111\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"112\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"113\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Push","target":992,"args":{"any":[0,2,1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"110\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"111\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"112\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"113\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (ev) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0@0: (hnd/htag :: ((E, V) -> V) -> V)<(10558 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@1@0: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@2@0: (10558 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (w@0: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat@4: ((hnd/ev :: ((E, V) -> V) -> V)<(10558 :: (E, V) -> V)>))\n     -> std/core/hnd/evv-swap<(total :: E),(e :: E),(_e1 :: E)>(w@0);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w0@0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/ev","scrutinee":2,"clauses":[{"tag":"std/core/hnd/Ev","target":995,"args":{"any":[0,1,2,3]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3082]","target":993,"args":{"any":[]}}}]},
{"label":"997([#2794])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Jump","target":996}]},
{"label":"998([k@[switch case for Bool(true)#2790]#2801])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"999([switch case for Bool(true)#2790])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@3,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (10557 :: E) 10556, res: a){\n  val w0@0 : (hnd/evv :: E -> V)<(_e :: E)>;\n  val y : b;\n  (match ((std/core/hnd/yielding())) {\n    ((std/core/types/True() : bool ) as @pat@5: bool)\n       -> std/core/hnd/yield-cont<b,(e :: E),b>((forall<b> fn<(e :: E)>(cont@0: (b) -> (10557 :: E) 10556, res@0: b){\n        std/core/hnd/under1x<b,c,(e :: E),(c :: (E, V) -> V)>(ev, cont@0, res@0);\n      }));\n    ((@skip std/core/types/False() : bool ) as @pat@0@1: bool)\n       -> val _@0 : ()\n                = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0);\n      y;\n  });\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[997],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (10557 :: E) 10556, res: a){\n  val w0@0 : (hnd/evv :: E -> V)<(_e :: E)>;\n  val y : b;\n  (match ((std/core/hnd/yielding())) {\n    ((std/core/types/True() : bool ) as @pat@5: bool)\n       -> std/core/hnd/yield-cont<b,(e :: E),b>((forall<b> fn<(e :: E)>(cont@0: (b) -> (10557 :: E) 10556, res@0: b){\n        std/core/hnd/under1x<b,c,(e :: E),(c :: (E, V) -> V)>(ev, cont@0, res@0);\n      }));\n    ((@skip std/core/types/False() : bool ) as @pat@0@1: bool)\n       -> val _@0 : ()\n                = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0);\n      y;\n  });\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@3,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":215}]},
{"label":"1000([switch case for Bool(false)#2805])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0@2,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0@2,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1001([switch default case#2806])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1002([switch default case#2803])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Switch","arg":1,"values":[false],"targets":[1000],"default":1001}]},
{"label":"1003([#2788])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":2,"values":[true],"targets":[999],"default":1002}]},
{"label":"1004([k@[k@[mcore:[#1417]#2779]#2781]#2783])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Push","target":1003,"args":{"any":[1,0]}},
{"op":"Copy","from":3,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":980}]},
{"label":"1005([k@[mcore:[#1417]#2779]#2781])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"z\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: op(x1, x2, x3)","traced":{"any":[]}},
{"op":"Push","target":1004,"args":{"any":[1,0]}},
{"op":"Copy","from":4,"to":1},
{"op":"Copy","from":3,"to":0},
{"op":"Copy","from":2,"to":3},
{"op":"Copy","from":5,"to":2},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op(x1, x2, x3)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"z\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":3,"tag":"apply","args":{"any":[0,1,2]}}]},
{"label":"1006([match_def@[mcore:[#1417]#2779]#2807])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1007([k@[#2808]#2813])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1008([#2808])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"110\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<10558>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"110\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"111\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/marker<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"111\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"112\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2: 10558<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"112\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(w,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"113\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (w: hnd/evv<4237>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"113\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap<(total :: E),(e :: E),(_e :: E)>(w)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap<(total :: E),(e :: E),(_e :: E)>(w)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"110\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<10558>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"110\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"111\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/marker<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"111\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"112\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2: 10558<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"112\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(w,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"113\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (w: hnd/evv<4237>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"113\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Jump","target":979}]},
{"label":"1009([mcore:[#1417]#2779])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4,5]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (ev) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0: (hnd/htag :: ((E, V) -> V) -> V)<(10558 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@1: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@2: (10558 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (w: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat: ((hnd/ev :: ((E, V) -> V) -> V)<(10558 :: (E, V) -> V)>))\n     -> std/core/hnd/evv-swap<(total :: E),(e :: E),(_e1 :: E)>(w);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"110\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"111\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"112\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"113\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Push","target":1005,"args":{"any":[0,1,2,3,4]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"110\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"111\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"112\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"113\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (ev) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0: (hnd/htag :: ((E, V) -> V) -> V)<(10558 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@1: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@2: (10558 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (w: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat: ((hnd/ev :: ((E, V) -> V) -> V)<(10558 :: (E, V) -> V)>))\n     -> std/core/hnd/evv-swap<(total :: E),(e :: E),(_e1 :: E)>(w);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/ev","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Ev","target":1008,"args":{"any":[0,1,2,3]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3083]","target":1006,"args":{"any":[]}}}]},
{"label":"1010([mcore:[#1418]#2815])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"swapCurrentEvv"}]},
{"label":"1011([mcore:[#1424]#2820])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"1012([mcore:[#1426]#2825])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"swapCurrentEvv"}]},
{"label":"1013([mcore:[#1434]#2830])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/under1x<a,a,(e :: E),(a :: (E, V) -> V)>(ev, cont@0, res@0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/under1x<a,a,(e :: E),(a :: (E, V) -> V)>(ev, cont@0, res@0)","traced":{"any":[]}},
{"op":"Jump","target":739}]},
{"label":"1014([mcore:[#1436]#2834])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"1015([#2849])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Jump","target":1013}]},
{"label":"1016([k@[switch case for Bool(true)#2845]#2856])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1017([switch case for Bool(true)#2845])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@5,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont@0: (a) -> (10670 :: E) 10669, res@0: a){\n  std/core/hnd/under1x<a,b,(e :: E),(b :: (E, V) -> V)>(ev, cont@0, res@0);\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[1015],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont@0: (a) -> (10670 :: E) 10669, res@0: a){\n  std/core/hnd/under1x<a,b,(e :: E),(b :: (E, V) -> V)>(ev, cont@0, res@0);\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@5,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":215}]},
{"label":"1018([k@[switch case for Bool(false)#2860]#2865])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: y","traced":{"any":[]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: y","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1019([switch case for Bool(false)#2860])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0@1,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: val _@0 : ()\n      = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0);\ny","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_@0\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Push","target":1018,"args":{"any":[1]}},
{"op":"Copy","from":2,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_@0\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: val _@0 : ()\n      = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0);\ny","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0@1,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":1014}]},
{"label":"1020([switch default case#2867])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1021([switch default case#2858])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Switch","arg":2,"values":[false],"targets":[1019],"default":1020}]},
{"label":"1022([k@[k@[mcore:[#1437]#2839]#2841]#2843])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"bool","out":3,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":3,"values":[true],"targets":[1017],"default":1021}]},
{"label":"1023([k@[mcore:[#1437]#2839]#2841])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: cont(res)","traced":{"any":[]}},
{"op":"Push","target":1022,"args":{"any":[2,0]}},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: cont(res)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"1024([match_def@[mcore:[#1437]#2839]#2868])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1025([k@[#2869]#2874])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1026([#2869])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@4,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"110\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0@0: hnd/htag<10671>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"110\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@1@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"111\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@1@0: hnd/marker<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"111\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@2@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"112\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2@0: 10671<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"112\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(w@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"113\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (w@0: hnd/evv<4237>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"113\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap<(total :: E),(e :: E),(_e :: E)>(w@0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap<(total :: E),(e :: E),(_e :: E)>(w@0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@4,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"110\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0@0: hnd/htag<10671>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"110\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@1@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"111\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@1@0: hnd/marker<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"111\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@2@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"112\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2@0: 10671<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"112\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(w@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"113\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (w@0: hnd/evv<4237>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"113\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Jump","target":1012}]},
{"label":"1027([mcore:[#1437]#2839])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w0@0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (ev) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0@0: (hnd/htag :: ((E, V) -> V) -> V)<(10671 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@1@0: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@2@0: (10671 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (w@0: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat@4: ((hnd/ev :: ((E, V) -> V) -> V)<(10671 :: (E, V) -> V)>))\n     -> std/core/hnd/evv-swap<(total :: E),(e :: E),(_e1 :: E)>(w@0);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"110\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"111\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"112\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"113\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Push","target":1023,"args":{"any":[0,2,1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"110\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"111\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"112\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"113\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (ev) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0@0: (hnd/htag :: ((E, V) -> V) -> V)<(10671 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@1@0: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@2@0: (10671 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (w@0: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat@4: ((hnd/ev :: ((E, V) -> V) -> V)<(10671 :: (E, V) -> V)>))\n     -> std/core/hnd/evv-swap<(total :: E),(e :: E),(_e1 :: E)>(w@0);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w0@0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/ev","scrutinee":2,"clauses":[{"tag":"std/core/hnd/Ev","target":1026,"args":{"any":[0,1,2,3]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3084]","target":1024,"args":{"any":[]}}}]},
{"label":"1028([#2891])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Jump","target":1027}]},
{"label":"1029([k@[switch case for Bool(true)#2887]#2898])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1030([switch case for Bool(true)#2887])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@3,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (10670 :: E) 10669, res: a){\n  val w0@0 : (hnd/evv :: E -> V)<(_e :: E)>;\n  val y : b;\n  (match ((std/core/hnd/yielding())) {\n    ((std/core/types/True() : bool ) as @pat@5: bool)\n       -> std/core/hnd/yield-cont<b,(e :: E),b>((forall<b> fn<(e :: E)>(cont@0: (b) -> (10670 :: E) 10669, res@0: b){\n        std/core/hnd/under1x<b,c,(e :: E),(c :: (E, V) -> V)>(ev, cont@0, res@0);\n      }));\n    ((@skip std/core/types/False() : bool ) as @pat@0@1: bool)\n       -> val _@0 : ()\n                = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0);\n      y;\n  });\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[1028],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (10670 :: E) 10669, res: a){\n  val w0@0 : (hnd/evv :: E -> V)<(_e :: E)>;\n  val y : b;\n  (match ((std/core/hnd/yielding())) {\n    ((std/core/types/True() : bool ) as @pat@5: bool)\n       -> std/core/hnd/yield-cont<b,(e :: E),b>((forall<b> fn<(e :: E)>(cont@0: (b) -> (10670 :: E) 10669, res@0: b){\n        std/core/hnd/under1x<b,c,(e :: E),(c :: (E, V) -> V)>(ev, cont@0, res@0);\n      }));\n    ((@skip std/core/types/False() : bool ) as @pat@0@1: bool)\n       -> val _@0 : ()\n                = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0);\n      y;\n  });\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@3,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":215}]},
{"label":"1031([switch case for Bool(false)#2902])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0@2,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0@2,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1032([switch default case#2903])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1033([switch default case#2900])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Switch","arg":1,"values":[false],"targets":[1031],"default":1032}]},
{"label":"1034([#2885])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":2,"values":[true],"targets":[1030],"default":1033}]},
{"label":"1035([k@[k@[mcore:[#1439]#2876]#2878]#2880])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Push","target":1034,"args":{"any":[1,0]}},
{"op":"Copy","from":3,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":1011}]},
{"label":"1036([k@[mcore:[#1439]#2876]#2878])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"z\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: op(x1, x2, x3, x4)","traced":{"any":[]}},
{"op":"Push","target":1035,"args":{"any":[1,0]}},
{"op":"Copy","from":4,"to":1},
{"op":"Copy","from":3,"to":0},
{"op":"Copy","from":2,"to":4},
{"op":"Copy","from":6,"to":3},
{"op":"Copy","from":5,"to":2},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op(x1, x2, x3, x4)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"z\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":4,"tag":"apply","args":{"any":[0,1,2,3]}}]},
{"label":"1037([match_def@[mcore:[#1439]#2876]#2904])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1038([k@[#2905]#2910])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1039([#2905])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"110\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<10671>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"110\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"111\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/marker<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"111\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"112\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2: 10671<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"112\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(w,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"113\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (w: hnd/evv<4237>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"113\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap<(total :: E),(e :: E),(_e :: E)>(w)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap<(total :: E),(e :: E),(_e :: E)>(w)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"110\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<10671>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"110\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"111\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/marker<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"111\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"112\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2: 10671<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"112\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(w,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"113\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (w: hnd/evv<4237>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"113\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Jump","target":1010}]},
{"label":"1040([mcore:[#1439]#2876])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4,5,6]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (ev) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0: (hnd/htag :: ((E, V) -> V) -> V)<(10671 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@1: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@2: (10671 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (w: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat: ((hnd/ev :: ((E, V) -> V) -> V)<(10671 :: (E, V) -> V)>))\n     -> std/core/hnd/evv-swap<(total :: E),(e :: E),(_e1 :: E)>(w);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"110\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"111\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"112\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"113\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Push","target":1036,"args":{"any":[0,1,2,3,4,5]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"110\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"111\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"112\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"113\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (ev) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0: (hnd/htag :: ((E, V) -> V) -> V)<(10671 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@1: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@2: (10671 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (w: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat: ((hnd/ev :: ((E, V) -> V) -> V)<(10671 :: (E, V) -> V)>))\n     -> std/core/hnd/evv-swap<(total :: E),(e :: E),(_e1 :: E)>(w);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/ev","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Ev","target":1039,"args":{"any":[0,1,2,3]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3085]","target":1037,"args":{"any":[]}}}]},
{"label":"1041([k@[mcore:[#1443]#2912]#2914])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"Jump","target":978}]},
{"label":"1042([mcore:[#1443]#2912])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/try-finalize-prompt<a,(e :: E)>((action()))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: action()","traced":{"any":[]}},
{"op":"Push","target":1041,"args":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: action()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/try-finalize-prompt<a,(e :: E)>((action()))","traced":{"any":[]}},
{"op":"Invoke","receiver":0,"tag":"apply","args":{"any":[]}}]},
{"label":"1043([k@[switch case for Bool(true)#2921]#2923])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1044([switch case for Bool(true)#2921])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-extend<a,a,(e :: E)>(extend)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-extend<a,a,(e :: E)>(extend)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":214}]},
{"label":"1045([k@[switch case for Bool(false)#2927]#2929])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1046([switch case for Bool(false)#2927])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: next(x)","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: next(x)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:false\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"1047([switch default case#2931])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1048([switch default case#2925])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Switch","arg":2,"values":[false],"targets":[1046],"default":1047}]},
{"label":"1049([mcore:[#1448]#2919])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"bool","out":3,"value":false},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":3,"values":[true],"targets":[1044],"default":1048}]},
{"label":"1050([match_def@[mcore:[#1452]#2932]#2933])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1051([k@[#2934]#2936])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1052([match_def@[#2934]#2938])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1053([k@[match_std/core/hnd/Ev@[#2934]#2939]#2941])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1054([match_std/core/hnd/Ev@[#2934]#2939])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@3,{\"op\": \"Var\",\"id\": \"@pat-x142_37\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@4,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"114\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@4: hnd/htag<10801>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"114\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(m2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"115\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (m2: hnd/marker<10770,10771>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"115\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@5,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"116\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@5: 10801<10770,10771>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"116\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@6,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"117\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (@pat@6: hnd/evv<10770>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"117\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/eq-marker<a,a,(e :: E),(e :: E)>(m1, m2)","traced":{"any":[]}},
{"op":"Copy","from":2,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/eq-marker<a,a,(e :: E),(e :: E)>(m1, m2)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@3,{\"op\": \"Var\",\"id\": \"@pat-x142_37\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@4,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"114\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@4: hnd/htag<10801>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"114\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(m2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"115\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (m2: hnd/marker<10770,10771>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"115\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@5,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"116\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@5: 10801<10770,10771>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"116\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@6,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"117\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (@pat@6: hnd/evv<10770>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"117\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Jump","target":250}]},
{"label":"1055([#2934])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"@pat-x142_18\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"110\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<10801>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"110\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(m1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"111\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (m1: hnd/marker<10760,10761>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"111\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"112\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@1: 10801<10760,10761>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"112\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"113\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (@pat@2: hnd/evv<10760>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"113\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (@pat-x142_37) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@4: (hnd/htag :: ((E, V) -> V) -> V)<(10801 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (m2: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@5: (10801 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (@pat@6: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat@3: ((hnd/ev :: ((E, V) -> V) -> V)<(10801 :: (E, V) -> V)>))\n     -> std/core/hnd/eq-marker<b,a,(e1 :: E),(e :: E)>(m1, m2);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@pat-x142_37\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"114\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"115\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"116\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"117\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@pat-x142_37\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"114\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"115\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"116\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"117\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (@pat-x142_37) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@4: (hnd/htag :: ((E, V) -> V) -> V)<(10801 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (m2: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@5: (10801 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (@pat@6: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat@3: ((hnd/ev :: ((E, V) -> V) -> V)<(10801 :: (E, V) -> V)>))\n     -> std/core/hnd/eq-marker<b,a,(e1 :: E),(e :: E)>(m1, m2);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"@pat-x142_18\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"110\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<10801>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"110\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(m1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"111\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (m1: hnd/marker<10760,10761>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"111\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"112\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@1: 10801<10760,10761>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"112\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"113\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (@pat@2: hnd/evv<10760>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"113\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/ev","scrutinee":1,"clauses":[{"tag":"std/core/hnd/Ev","target":1054,"args":{"any":[1,2,3,4]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3086]","target":1052,"args":{"any":[]}}}]},
{"label":"1056([mcore:[#1452]#2932])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@pat-x142_18\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"110\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"111\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"112\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"113\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@pat-x142_18\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"110\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"111\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"112\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"113\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/ev","scrutinee":1,"clauses":[{"tag":"std/core/hnd/Ev","target":1055,"args":{"any":[1,2,3,4]}}],"default":{"tag":"78908082-ae1d-46de-8469-34ed662d1ede#[Missing Tag#3087]","target":1050,"args":{"any":[]}}}]},
{"label":"1057([mcore:[#1453]#116])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Construct","out":0,"type":"std/core/hnd/htag","tag":"std/core/hnd/Htag","args":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1058([mcore:[#1454]#133])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Construct","out":0,"type":"std/core/hnd/ev","tag":"std/core/hnd/Ev","args":{"any":[0,1,2,3]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1059([mcore:[#1455]#150])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Construct","out":0,"type":"std/core/hnd/clause0","tag":"std/core/hnd/Clause0","args":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1060([mcore:[#1456]#167])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Construct","out":0,"type":"std/core/hnd/clause1","tag":"std/core/hnd/Clause1","args":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1061([mcore:[#1457]#184])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Construct","out":0,"type":"std/core/hnd/clause2","tag":"std/core/hnd/Clause2","args":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1062([mcore:[#1458]#572])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Construct","out":0,"type":"std/core/hnd/resume-result","tag":"std/core/hnd/Deep","args":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1063([mcore:[#1459]#585])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Construct","out":0,"type":"std/core/hnd/resume-result","tag":"std/core/hnd/Shallow","args":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1064([mcore:[#1460]#1640])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Construct","out":0,"type":"std/core/hnd/resume-result","tag":"std/core/hnd/Finalize","args":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1065([mcore:[#1461]#222])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Construct","out":0,"type":"std/core/hnd/resume-context","tag":"std/core/hnd/Resume-context","args":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1066([mcore:[#1462]#2952])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Construct","out":0,"type":"std/core/hnd/yld","tag":"std/core/hnd/Yield","args":{"any":[0,1]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1067([k@[#2967]#2977])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[1,0]}},
{"op":"Const","format":"string","out":0,"value":"Name(std/core/hnd/Pure)"},
{"op":"Debug","msg":"BGN: genConstr","traced":{"any":[]}},
{"op":"Construct","out":1,"type":"std/core/hnd/yld","tag":"std/core/hnd/Pure","args":{"any":[]}},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[0,1]}},
{"op":"Const","format":"string","out":0,"value":"std/core/hnd/Pure"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[0,1]}},
{"op":"Const","format":"string","out":0,"value":"Name(std/core/hnd/YieldingFinal)"},
{"op":"Debug","msg":"BGN: genConstr","traced":{"any":[]}},
{"op":"Construct","out":1,"type":"std/core/hnd/yld","tag":"std/core/hnd/YieldingFinal","args":{"any":[]}},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[0,1]}},
{"op":"Const","format":"string","out":0,"value":"std/core/hnd/YieldingFinal"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[0,1]}},
{"op":"Const","format":"string","out":0,"value":"Name(std/core/hnd/Yielding)"},
{"op":"Debug","msg":"BGN: genConstr","traced":{"any":[]}},
{"op":"Construct","out":1,"type":"std/core/hnd/yld","tag":"std/core/hnd/Yielding","args":{"any":[]}},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[0,1]}},
{"op":"Const","format":"string","out":0,"value":"std/core/hnd/Yielding"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[0,1]}},
{"op":"Const","format":"string","out":0,"value":"ThisLib_e513256f-3f36-4d3d-a4da-7d0867666823"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[0,2]}},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genConstr","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genConstr","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genConstr","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1068([#2967])",
"frameDescriptor":{"regs_any":16},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[1,0]}},
{"op":"Const","format":"string","out":0,"value":"[#372]"},
{"op":"Const","format":"path","out":1,"value":"$0/./std_core_undiv.rpyeffect"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[0,1]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/undiv)"},
{"op":"Push","target":1067,"args":{"any":[0,2]}},
{"op":"LoadLib","path":1}]},
{"label":"1069([mcore:[static initializers#1805]#2954])",
"frameDescriptor":{"regs_any":16},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"Copy","from":0,"to":2},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[1]},"in":{"any":[1,2]}},
{"op":"Const","format":"string","out":1,"value":"[#371]"},
{"op":"Const","format":"path","out":2,"value":"$0/./std_core_types.rpyeffect"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[1]},"in":{"any":[1,2]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/types)"},
{"op":"Push","target":1068,"args":{"any":[1,0]}},
{"op":"LoadLib","path":2}]},
{"label":"1070([k@[main entrypoint#2]#3003])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Const","format":"string","out":0,"value":"Undefined: is a library"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1071([main entrypoint#2])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[]}},
{"op":"Copy","from":-1,"to":0},
{"op":"Push","target":1070,"args":{"any":[]}},
{"op":"Jump","target":1069}]}],
"symbols":[{"name":"getCurrentEvv","position":0},
{"name":"setCurrentEvv","position":1},
{"name":"swapCurrentEvv","position":2},
{"name":"evvSwapCreate1","position":6},
{"name":"evvSwapCreate0","position":9},
{"name":"evvSwapDelete","position":16},
{"name":"evvDelete","position":23},
{"name":"evvInsert","position":31},
{"name":"evvIndex","position":37},
{"name":"elt","position":40},
{"name":"std/core/hnd/htag/tagname","position":43},
{"name":"std/core/hnd/htag/@copy","position":52},
{"name":"std/core/hnd/ev/htag","position":55},
{"name":"std/core/hnd/ev/@copy","position":64},
{"name":"std/core/hnd/clause0/clause","position":67},
{"name":"std/core/hnd/clause0/@copy","position":76},
{"name":"std/core/hnd/clause1/clause","position":79},
{"name":"std/core/hnd/clause1/@copy","position":88},
{"name":"std/core/hnd/clause2/clause","position":91},
{"name":"std/core/hnd/clause2/@copy","position":100},
{"name":"std/core/hnd/is-deep","position":103},
{"name":"std/core/hnd/is-shallow","position":106},
{"name":"std/core/hnd/is-finalize","position":109},
{"name":"std/core/hnd/resume-context/k","position":112},
{"name":"std/core/hnd/resume-context/@copy","position":121},
{"name":"std/core/hnd/is-pure","position":124},
{"name":"std/core/hnd/is-yieldingFinal","position":127},
{"name":"std/core/hnd/is-yielding","position":130},
{"name":"std/core/hnd/is-yield","position":133},
{"name":"std/core/hnd/@evv-index","position":136},
{"name":"std/core/hnd/@evv-is-affine","position":137},
{"name":"std/core/hnd/@reset-vm","position":141},
{"name":"std/core/hnd/@mask-builtin","position":142},
{"name":"std/core/hnd/@new-htag","position":143},
{"name":"std/core/hnd/@open-none0","position":149},
{"name":"std/core/hnd/@open-none1","position":155},
{"name":"std/core/hnd/@open-none2","position":161},
{"name":"std/core/hnd/@open-none3","position":167},
{"name":"std/core/hnd/@open-none4","position":173},
{"name":"std/core/hnd/@perform0","position":181},
{"name":"std/core/hnd/@perform1","position":189},
{"name":"std/core/hnd/@perform2","position":197},
{"name":"std/core/hnd/@prompt-local-var-prim-vm","position":201},
{"name":"std/core/hnd/protect","position":202},
{"name":"std/core/hnd/@yield-to-prim-vm","position":206},
{"name":"std/core/hnd/evv-get","position":208},
{"name":"std/core/hnd/evv-insert","position":210},
{"name":"std/core/hnd/fresh-marker","position":211},
{"name":"std/core/hnd/evv-eq","position":212},
{"name":"std/core/hnd/guard","position":213},
{"name":"std/core/hnd/yield-extend","position":214},
{"name":"std/core/hnd/yield-cont","position":215},
{"name":"std/core/hnd/yield-prompt","position":218},
{"name":"std/core/hnd/yield-to-final","position":219},
{"name":"std/core/hnd/evv-swap-delete","position":221},
{"name":"std/core/hnd/fresh-marker-named","position":222},
{"name":"std/core/hnd/evv-swap-create","position":223},
{"name":"std/core/hnd/xperform1","position":231},
{"name":"std/core/hnd/yield-to-prim","position":232},
{"name":"std/core/hnd/clause-tail-noop0","position":235},
{"name":"std/core/hnd/clause-tail-noop1","position":238},
{"name":"std/core/hnd/clause-tail-noop2","position":241},
{"name":"std/core/hnd/evv-swap-with","position":246},
{"name":"std/core/hnd/clause-value","position":249},
{"name":"std/core/hnd/eq-marker","position":250},
{"name":"std/core/hnd/evv-show","position":251},
{"name":"std/core/hnd/unsafe-reyield","position":252},
{"name":"std/core/hnd/yield-capture","position":253},
{"name":"std/core/hnd/get","position":254},
{"name":"std/core/hnd/resume","position":259},
{"name":"std/core/hnd/resume-final","position":260},
{"name":"std/core/hnd/resume-shallow","position":265},
{"name":"std/core/hnd/htag/show","position":268},
{"name":"std/core/hnd/yield-bind","position":275},
{"name":"std/core/hnd/prompt","position":352},
{"name":"std/core/hnd/@hhandle-vm","position":360},
{"name":"std/core/hnd/@hhandle","position":370},
{"name":"std/core/hnd/mask-at1","position":382},
{"name":"std/core/hnd/@mask-at","position":394},
{"name":"std/core/hnd/@named-handle","position":399},
{"name":"std/core/hnd/open-at1","position":412},
{"name":"std/core/hnd/@open-at0","position":425},
{"name":"std/core/hnd/@open-at1","position":438},
{"name":"std/core/hnd/@open-at2","position":451},
{"name":"std/core/hnd/@open-at3","position":464},
{"name":"std/core/hnd/@open-at4","position":477},
{"name":"std/core/hnd/open1","position":489},
{"name":"std/core/hnd/@open0","position":501},
{"name":"std/core/hnd/@open1","position":513},
{"name":"std/core/hnd/@open2","position":525},
{"name":"std/core/hnd/@open3","position":537},
{"name":"std/core/hnd/@open4","position":549},
{"name":"std/core/hnd/@perform3","position":559},
{"name":"std/core/hnd/@perform4","position":569},
{"name":"std/core/hnd/yield-to","position":574},
{"name":"std/core/hnd/@yield-to-vm","position":578},
{"name":"std/core/hnd/clause-control-raw0","position":584},
{"name":"std/core/hnd/clause-control-raw1","position":590},
{"name":"std/core/hnd/clause-control-raw2","position":596},
{"name":"std/core/hnd/clause-control-raw3","position":605},
{"name":"std/core/hnd/finalize","position":610},
{"name":"std/core/hnd/protect-check","position":617},
{"name":"std/core/hnd/@protect-vm","position":630},
{"name":"std/core/hnd/clause-control0","position":637},
{"name":"std/core/hnd/clause-control1","position":642},
{"name":"std/core/hnd/protect2","position":655},
{"name":"std/core/hnd/clause-control2","position":660},
{"name":"std/core/hnd/clause-control3","position":670},
{"name":"std/core/hnd/clause-control4","position":680},
{"name":"std/core/hnd/clause-never0","position":685},
{"name":"std/core/hnd/clause-never1","position":690},
{"name":"std/core/hnd/clause-never2","position":695},
{"name":"std/core/hnd/clause-never3","position":703},
{"name":"std/core/hnd/clause-never4","position":711},
{"name":"std/core/hnd/clause-tail-noop3","position":717},
{"name":"std/core/hnd/clause-tail-noop4","position":723},
{"name":"std/core/hnd/under1x","position":739},
{"name":"std/core/hnd/under1","position":755},
{"name":"std/core/hnd/under0","position":786},
{"name":"std/core/hnd/clause-tail0","position":819},
{"name":"std/core/hnd/clause-tail1","position":837},
{"name":"std/core/hnd/under2","position":868},
{"name":"std/core/hnd/clause-tail2","position":871},
{"name":"std/core/hnd/clause-tail3","position":877},
{"name":"std/core/hnd/clause-tail4","position":883},
{"name":"std/core/hnd/finally-prompt","position":909},
{"name":"std/core/hnd/finally","position":911},
{"name":"std/core/hnd/initially-prompt","position":935},
{"name":"std/core/hnd/initially","position":947},
{"name":"std/core/hnd/prompt-local-var","position":956},
{"name":"std/core/hnd/local-var-vm","position":958},
{"name":"std/core/hnd/local-var","position":959},
{"name":"std/core/hnd/try-finalize-prompt","position":978},
{"name":"std/core/hnd/under3","position":1009},
{"name":"std/core/hnd/under4","position":1040},
{"name":"std/core/hnd/unsafe-try-finalize","position":1042},
{"name":"std/core/hnd/yield-bind2","position":1049},
{"name":"std/core/hnd/ev/(==)","position":1056},
{"name":"std/core/hnd/Htag","position":1057},
{"name":"std/core/hnd/Ev","position":1058},
{"name":"std/core/hnd/Clause0","position":1059},
{"name":"std/core/hnd/Clause1","position":1060},
{"name":"std/core/hnd/Clause2","position":1061},
{"name":"std/core/hnd/Deep","position":1062},
{"name":"std/core/hnd/Shallow","position":1063},
{"name":"std/core/hnd/Finalize","position":1064},
{"name":"std/core/hnd/Resume-context","position":1065},
{"name":"std/core/hnd/Yield","position":1066},
{"name":"$static-init","position":1069},
{"name":"$entrypoint","position":1071}],
"frameSize":{"regs_any":16}}