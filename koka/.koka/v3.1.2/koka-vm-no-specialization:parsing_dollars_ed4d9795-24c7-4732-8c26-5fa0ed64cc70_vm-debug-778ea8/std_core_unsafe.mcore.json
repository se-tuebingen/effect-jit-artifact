{"metadata": {"generated by": "Koka","koka version": "3.1.2","program name": "std/core/unsafe"},"includes": [],"definitions": [{"name": {"op": "Var","id": "import$std/core/types","type": {"op": "Ptr"}},"value": {"op": "LoadLib","path": {"op": "Literal","type": {"op": "String"},"format": "path","value": "$0/./std_core_types.rpyeffect"}}}, {"name": {"op": "Var","id": "std/core/unsafe/pretend-no-ndet","type": {"op": "Function","params": [{"op": "Function","params": [],"return": {"op": "Top"},"purity": "Effectful"}],"return": {"op": "Top"},"purity": "Effectful"}},"value": {"op": "DebugWrap","inner": {"op": "DebugWrap","inner": {"op": "DebugWrap","inner": {"op": "Abs","params": [{"op": "Var","id": "action","type": {"op": "Function","params": [],"return": {"op": "Top"},"purity": "Effectful"}}],"body": {"op": "DebugWrap","inner": {"op": "App","fn": {"op": "DebugWrap","inner": {"op": "Var","id": "action","type": {"op": "Function","params": [],"return": {"op": "Top"},"purity": "Effectful"}},"annotation": "genExpr: action"},"args": []},"annotation": "genExpr: action()"}},"annotation": "genPure: pure lambda in core code"},"annotation": "genExpr: forall<a,(e :: E)> fn<(e :: E)>(action: () -> <(ndet :: X)|(e :: E)> a){\n  action();\n}"},"annotation": "Def of {\"op\": \"Var\",\"id\": \"std/core/unsafe/pretend-no-ndet\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Function\",\"params\": [],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}"},"export_as": ["std/core/unsafe/pretend-no-ndet"]}, {"name": {"op": "Var","id": "std/core/unsafe/unsafe-total","type": {"op": "Function","params": [{"op": "Function","params": [],"return": {"op": "Top"},"purity": "Effectful"}],"return": {"op": "Top"},"purity": "Effectful"}},"value": {"op": "DebugWrap","inner": {"op": "DebugWrap","inner": {"op": "DebugWrap","inner": {"op": "Abs","params": [{"op": "Var","id": "action","type": {"op": "Function","params": [],"return": {"op": "Top"},"purity": "Effectful"}}],"body": {"op": "DebugWrap","inner": {"op": "App","fn": {"op": "DebugWrap","inner": {"op": "Var","id": "action","type": {"op": "Function","params": [],"return": {"op": "Top"},"purity": "Effectful"}},"annotation": "genExpr: action"},"args": []},"annotation": "genExpr: action()"}},"annotation": "genPure: pure lambda in core code"},"annotation": "genExpr: forall<a,(e :: E)> fn(action: () -> (e :: E) a){\n  action();\n}"},"annotation": "Def of {\"op\": \"Var\",\"id\": \"std/core/unsafe/unsafe-total\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Function\",\"params\": [],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}"},"export_as": ["std/core/unsafe/unsafe-total"]}],"main": {"op": "Primitive","name": "!undefined:is a library","args": [],"returns": [{"op": "Var","id": "primitive_result","type": {"op": "Unit"}}],"rest": {"op": "Var","id": "primitive_result","type": {"op": "Unit"}}}}