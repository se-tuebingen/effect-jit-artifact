{"blocks":[{"label":"0([switch case for Int(0)#3])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Copy","from":1,"to":0},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1([switch default case#4])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"int","out":3,"value":1},
{"op":"PrimOp","name":"infixSub(Int, Int): Int","out":{"any":[0]},"in":{"any":[0,3]}},
{"op":"PrimOp","name":"unsafeIndex(Array[Ptr], Int): Ptr","out":{"any":[3]},"in":{"any":[2,0]}},
{"op":"Construct","out":1,"type":"std/core/types/list","tag":"std/core/types/Cons","args":{"any":[3,1]}},
{"op":"Swap","a":2,"b":0},
{"op":"Jump","target":2}]},
{"label":"2(Name(vectorToList))",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Swap","a":2,"b":0},
{"op":"Switch","arg":0,"values":[0],"targets":[0],"default":1}]},
{"label":"3([mcore:[#64]#10])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/int)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"std/core/int/ssize_t"}]},
{"label":"4([mcore:[#72]#15])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/exn)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"CallLib","lib":2,"symbol":"std/core/exn/throw"}]},
{"label":"5([mcore:[#75]#21])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"std/core/types/@Optional"}]},
{"label":"6([switch case for Bool(true)#33])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"@x0\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/vector/unsafe-idx<a>(v, idx)","traced":{"any":[]}},
{"op":"PrimOp","name":"unsafeIndex(Array[Ptr], Int): Ptr","out":{"any":[0]},"in":{"any":[2,1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/vector/unsafe-idx<a>(v, idx)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"@x0\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"7([#53])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"8([k@[switch case for Bool(false)#36]#47])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/exn)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Swap","a":0,"b":1},
{"op":"Jump","target":4}]},
{"label":"9([switch case for Bool(false)#36])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"@x0\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/exn/throw<a>(\"index out of bounds\", (std/core/types/@Optional<exception-info>(std/core/exn/ExnRange)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: \"index out of bounds\"","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"index out of bounds"},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/@Optional<exception-info>(std/core/exn/ExnRange)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/exn/ExnRange","traced":{"any":[]}},
{"op":"Const","format":"string","out":1,"value":"std/core/exn/ExnRange"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Push","target":8,"args":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Copy","from":2,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/exn/ExnRange","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/@Optional<exception-info>(std/core/exn/ExnRange)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: \"index out of bounds\"","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/exn/throw<a>(\"index out of bounds\", (std/core/types/@Optional<exception-info>(std/core/exn/ExnRange)))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"@x0\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Jump","target":5}]},
{"label":"10([switch default case#55])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"11([switch default case#35])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Switch","arg":0,"values":[false],"targets":[9],"default":10}]},
{"label":"12([k@[mcore:[#80]#26]#31])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/vector/ssize_t/(<)(idx, (std/core/vector/lengthz<a>(v)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/vector/lengthz<a>(v)","traced":{"any":[]}},
{"op":"PrimOp","name":"length(Array[Ptr]): Int","out":{"any":[2]},"in":{"any":[1]}},
{"op":"PrimOp","name":"(#1 < #2)","out":{"any":[2]},"in":{"any":[0,2]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/vector/lengthz<a>(v)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/vector/ssize_t/(<)(idx, (std/core/vector/lengthz<a>(v)))","traced":{"any":[]}},
{"op":"Switch","arg":0,"values":[true],"targets":[6],"default":11}]},
{"label":"13([mcore:[#80]#26])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"idx\",\"type\": {\"op\": \"Int\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/int/ssize_t(index)","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/int)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Push","target":12,"args":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Copy","from":2,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/int/ssize_t(index)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"idx\",\"type\": {\"op\": \"Int\"}}","traced":{"any":[]}},
{"op":"Jump","target":3}]},
{"label":"14([mcore:[#81]#56])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/int)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"std/core/int/ssize_t"}]},
{"label":"15([mcore:[#87]#61])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"std/core/types/Just"}]},
{"label":"16([k@[switch case for Bool(true)#73]#79])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"17([switch case for Bool(true)#73])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"@x1\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/Just<a>((std/core/vector/unsafe-idx<a>(v, idx)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/vector/unsafe-idx<a>(v, idx)","traced":{"any":[]}},
{"op":"PrimOp","name":"unsafeIndex(Array[Ptr], Int): Ptr","out":{"any":[0]},"in":{"any":[2,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/vector/unsafe-idx<a>(v, idx)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/Just<a>((std/core/vector/unsafe-idx<a>(v, idx)))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"@x1\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Jump","target":15}]},
{"label":"18([switch case for Bool(false)#82])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"@x1\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/Nothing<a>","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"std/core/types/Nothing"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/Nothing<a>","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"@x1\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"19([switch default case#87])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"20([switch default case#81])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Switch","arg":0,"values":[false],"targets":[18],"default":19}]},
{"label":"21([k@[mcore:[#93]#66]#71])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/vector/ssize_t/(<)(idx, (std/core/vector/lengthz<a>(v)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/vector/lengthz<a>(v)","traced":{"any":[]}},
{"op":"PrimOp","name":"length(Array[Ptr]): Int","out":{"any":[2]},"in":{"any":[1]}},
{"op":"PrimOp","name":"(#1 < #2)","out":{"any":[2]},"in":{"any":[0,2]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/vector/lengthz<a>(v)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/vector/ssize_t/(<)(idx, (std/core/vector/lengthz<a>(v)))","traced":{"any":[]}},
{"op":"Switch","arg":0,"values":[true],"targets":[17],"default":20}]},
{"label":"22([mcore:[#93]#66])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"idx\",\"type\": {\"op\": \"Int\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/int/ssize_t(index)","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/int)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Push","target":21,"args":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Copy","from":2,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/int/ssize_t(index)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"idx\",\"type\": {\"op\": \"Int\"}}","traced":{"any":[]}},
{"op":"Jump","target":14}]},
{"label":"23([mcore:[#94]#88])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"(#1 + 1)","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"24([mcore:[#95]#89])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/int/ssize_t/int((std/core/vector/lengthz<a>(v)))","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Undefined:  std/core/int/#ssize_t/int"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/int/ssize_t/int((std/core/vector/lengthz<a>(v)))","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"25([k@[k@[mcore:[#98]#92]#94]#98])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"26([k@[mcore:[#98]#92]#94])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"length(Array[Ptr]): Int","out":{"any":[2]},"in":{"any":[1]}},
{"op":"Swap","a":0,"b":1},
{"op":"Jump","target":2}]},
{"label":"27([#100])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"28([#101])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"tail\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/Nil<a>","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"std/core/types/Nil"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/Nil<a>","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"tail\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"29([match_def@[mcore:[#98]#92]#99])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"tail\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}: \"std/core/types/@optional\".\"std/core/types/@None\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"tail\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}: \"std/core/types/@optional\".\"std/core/types/@None\"(())","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/@optional","scrutinee":0,"clauses":[{"tag":"std/core/types/@None","target":28,"args":{"any":[]}}],"default":{"tag":"b1077101-edfb-4ff4-993d-5e625d653347#[Missing Tag#358]","target":27,"args":{"any":[]}}}]},
{"label":"30([#106])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"tail\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}),(@uniq-tail@340,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"value\\\"2\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@uniq-tail@340: list<353>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"value\\\\\\\"2\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"tail\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}),(@uniq-tail@340,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"value\\\"2\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@uniq-tail@340: list<353>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"value\\\\\\\"2\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"31([mcore:[#98]#92])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/vector/@extern-vlist<a>(v, (match (tail) {\n    ((std/core/types/@Optional((@uniq-tail@340: (list :: V -> V)<353>) : (list :: V -> V)<a>) : ? ((list :: V -> V)<a>) ) as @pat: ? ((list :: V -> V)<353>))\n       -> @uniq-tail@340;\n    ((@skip std/core/types/@None() : ? ((list :: V -> V)<a>) ) as @pat@0: ? ((list :: V -> V)<353>))\n       -> std/core/types/Nil<a>;\n  }))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (tail) {\n  ((std/core/types/@Optional((@uniq-tail@340: (list :: V -> V)<353>) : (list :: V -> V)<a>) : ? ((list :: V -> V)<a>) ) as @pat: ? ((list :: V -> V)<353>))\n     -> @uniq-tail@340;\n  ((@skip std/core/types/@None() : ? ((list :: V -> V)<a>) ) as @pat@0: ? ((list :: V -> V)<353>))\n     -> std/core/types/Nil<a>;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"tail\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}: \"std/core/types/@optional\".\"std/core/types/@Optional\"(({\"op\": \"Var\",\"id\": \"@\\\"value\\\"2\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Push","target":26,"args":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"tail\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}: \"std/core/types/@optional\".\"std/core/types/@Optional\"(({\"op\": \"Var\",\"id\": \"@\\\"value\\\"2\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (tail) {\n  ((std/core/types/@Optional((@uniq-tail@340: (list :: V -> V)<353>) : (list :: V -> V)<a>) : ? ((list :: V -> V)<a>) ) as @pat: ? ((list :: V -> V)<353>))\n     -> @uniq-tail@340;\n  ((@skip std/core/types/@None() : ? ((list :: V -> V)<a>) ) as @pat@0: ? ((list :: V -> V)<353>))\n     -> std/core/types/Nil<a>;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/vector/@extern-vlist<a>(v, (match (tail) {\n    ((std/core/types/@Optional((@uniq-tail@340: (list :: V -> V)<353>) : (list :: V -> V)<a>) : ? ((list :: V -> V)<a>) ) as @pat: ? ((list :: V -> V)<353>))\n       -> @uniq-tail@340;\n    ((@skip std/core/types/@None() : ? ((list :: V -> V)<a>) ) as @pat@0: ? ((list :: V -> V)<353>))\n       -> std/core/types/Nil<a>;\n  }))","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/@optional","scrutinee":0,"clauses":[{"tag":"std/core/types/@Optional","target":30,"args":{"any":[1]}}],"default":{"tag":"b1077101-edfb-4ff4-993d-5e625d653347#[Missing Tag#359]","target":29,"args":{"any":[]}}}]},
{"label":"32([mcore:[#99]#107])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/vector/@extern-unvlist<a>(xs)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Undefined:  std/core/vector/@extern-unvlist"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/vector/@extern-unvlist<a>(xs)","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"33([mcore:[#100]#110])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/vector/@extern-vector-alloc<a,(e :: E)>(n, init)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Undefined:  std/core/vector/@extern-vector-alloc"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/vector/@extern-vector-alloc<a,(e :: E)>(n, init)","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"34([mcore:[#101]#113])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/vector/@extern-vector-alloc-total<a>(n, f)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Undefined:  std/core/vector/@extern-vector-alloc-total"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/vector/@extern-vector-alloc-total<a>(n, f)","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"35([mcore:[#102]#116])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"(#1 - 1)","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"36([mcore:[#103]#117])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"(#1 == 0)","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"37([mcore:[#113]#118])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"std/core/types/Just"}]},
{"label":"38([#129])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"39([match_def@[#131]#132])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"40([#138])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"41([match_std/core/types/Just@[#131]#133])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"@x3\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"maybe\\\"\"}}),(x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"value\\\"4\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x: 484) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"value\\\\\\\"4\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/Just<a>(x)","traced":{"any":[]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/Just<a>(x)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"@x3\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"maybe\\\"\"}}),(x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"value\\\"4\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x: 484) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"value\\\\\\\"4\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Jump","target":37}]},
{"label":"42([#131])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@x3\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"maybe\\\"\"}}: \"std/core/types/maybe\".\"std/core/types/Just\"(({\"op\": \"Var\",\"id\": \"@\\\"value\\\"4\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@x3\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"maybe\\\"\"}}: \"std/core/types/maybe\".\"std/core/types/Just\"(({\"op\": \"Var\",\"id\": \"@\\\"value\\\"4\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/maybe","scrutinee":0,"clauses":[{"tag":"std/core/types/Just","target":41,"args":{"any":[0]}}],"default":{"tag":"b1077101-edfb-4ff4-993d-5e625d653347#[Missing Tag#360]","target":39,"args":{"any":[]}}}]},
{"label":"43([k@[k@[#140]#142]#147])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"44([k@[#140]#142])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/vector/@lift-for-whilez@868<a,(e :: E)>(action, n, i@0@10000)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/vector/@lift-for-whilez@868<a,(e :: E)>(action, n, i@0@10000)","traced":{"any":[]}},
{"op":"Jump","target":51}]},
{"label":"45([#140])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"@x3\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"maybe\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: val i@0@10000 : ssize_t\n      = std/core/vector/ssize_t/incr(i);\nstd/core/vector/@lift-for-whilez@868<a,(e :: E)>(action, n, i@0@10000)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"i@0@10000\",\"type\": {\"op\": \"Int\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/vector/ssize_t/incr(i)","traced":{"any":[]}},
{"op":"Push","target":44,"args":{"any":[1,3]}},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/vector/ssize_t/incr(i)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"i@0@10000\",\"type\": {\"op\": \"Int\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: val i@0@10000 : ssize_t\n      = std/core/vector/ssize_t/incr(i);\nstd/core/vector/@lift-for-whilez@868<a,(e :: E)>(action, n, i@0@10000)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"@x3\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"maybe\\\"\"}})]","traced":{"any":[]}},
{"op":"Jump","target":23}]},
{"label":"46([k@[switch case for Bool(true)#125]#127])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@x3\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"maybe\\\"\"}}: \"std/core/types/maybe\".\"std/core/types/Nothing\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@x3\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"maybe\\\"\"}}: \"std/core/types/maybe\".\"std/core/types/Nothing\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/maybe","scrutinee":0,"clauses":[{"tag":"std/core/types/Nothing","target":45,"args":{"any":[]}}],"default":{"tag":"b1077101-edfb-4ff4-993d-5e625d653347#[Missing Tag#361]","target":42,"args":{"any":[]}}}]},
{"label":"47([switch case for Bool(true)#125])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"(#1 < #2)\",\"args\": [{\"op\": \"Var\",\"id\": \"i\",\"type\": {\"op\": \"Int\"}}, {\"op\": \"Var\",\"id\": \"n\",\"type\": {\"op\": \"Int\"}}],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match ((action(i))) {\n  ((std/core/types/Nothing() : (maybe :: V -> V)<a> ) as @pat@0: ((maybe :: V -> V)<484>))\n     -> val i@0@10000 : ssize_t\n              = std/core/vector/ssize_t/incr(i);\n    std/core/vector/@lift-for-whilez@868<a,(e :: E)>(action, n, i@0@10000);\n  ((@skip std/core/types/Just((x: 484) : a) : (maybe :: V -> V)<a> ) as @pat@1: ((maybe :: V -> V)<484>))\n     -> std/core/types/Just<a>(x);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: action(i)","traced":{"any":[]}},
{"op":"Push","target":46,"args":{"any":[0,1,2]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: action(i)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match ((action(i))) {\n  ((std/core/types/Nothing() : (maybe :: V -> V)<a> ) as @pat@0: ((maybe :: V -> V)<484>))\n     -> val i@0@10000 : ssize_t\n              = std/core/vector/ssize_t/incr(i);\n    std/core/vector/@lift-for-whilez@868<a,(e :: E)>(action, n, i@0@10000);\n  ((@skip std/core/types/Just((x: 484) : a) : (maybe :: V -> V)<a> ) as @pat@1: ((maybe :: V -> V)<484>))\n     -> std/core/types/Just<a>(x);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"(#1 < #2)\",\"args\": [{\"op\": \"Var\",\"id\": \"i\",\"type\": {\"op\": \"Int\"}}, {\"op\": \"Var\",\"id\": \"n\",\"type\": {\"op\": \"Int\"}}],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"48([switch case for Bool(false)#151])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@2,{\"op\": \"Primitive\",\"name\": \"(#1 < #2)\",\"args\": [{\"op\": \"Var\",\"id\": \"i\",\"type\": {\"op\": \"Int\"}}, {\"op\": \"Var\",\"id\": \"n\",\"type\": {\"op\": \"Int\"}}],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/Nothing<a>","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"std/core/types/Nothing"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/Nothing<a>","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@2,{\"op\": \"Primitive\",\"name\": \"(#1 < #2)\",\"args\": [{\"op\": \"Var\",\"id\": \"i\",\"type\": {\"op\": \"Int\"}}, {\"op\": \"Var\",\"id\": \"n\",\"type\": {\"op\": \"Int\"}}],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"49([switch default case#156])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"50([switch default case#149])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"PrimOp","name":"(#1 < #2)","out":{"any":[0]},"in":{"any":[1,2]}},
{"op":"Switch","arg":0,"values":[false],"targets":[48],"default":49}]},
{"label":"51([mcore:[#118]#123])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"PrimOp","name":"(#1 < #2)","out":{"any":[3]},"in":{"any":[2,1]}},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":3,"values":[true],"targets":[47],"default":50}]},
{"label":"52([mcore:[#123]#157])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"i\",\"type\": {\"op\": \"Int\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/int/ssize_t(0)","traced":{"any":[]}},
{"op":"Const","format":"int","out":2,"value":0},
{"op":"Debug","msg":"BGN: genExpr: std/core/vector/@lift-for-whilez@868<a,(e :: E)>(action, n, i)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/vector/@lift-for-whilez@868<a,(e :: E)>(action, n, i)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/int/ssize_t(0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"i\",\"type\": {\"op\": \"Int\"}}","traced":{"any":[]}},
{"op":"Jump","target":51}]},
{"label":"53([k@[#168]#170])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"54([#168])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/vector/@lift-forz@869<(e :: E)>(action, n, i@0@10001)","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/vector/@lift-forz@869<(e :: E)>(action, n, i@0@10001)","traced":{"any":[]}},
{"op":"Jump","target":60}]},
{"label":"55([k@[switch case for Bool(true)#164]#166])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"i@0@10001\",\"type\": {\"op\": \"Int\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/vector/ssize_t/incr(i)","traced":{"any":[]}},
{"op":"Push","target":54,"args":{"any":[1,3]}},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/vector/ssize_t/incr(i)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"i@0@10001\",\"type\": {\"op\": \"Int\"}}","traced":{"any":[]}},
{"op":"Jump","target":23}]},
{"label":"56([switch case for Bool(true)#164])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"(#1 < #2)\",\"args\": [{\"op\": \"Var\",\"id\": \"i\",\"type\": {\"op\": \"Int\"}}, {\"op\": \"Var\",\"id\": \"n\",\"type\": {\"op\": \"Int\"}}],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: val _ : ();\nval i@0@10001 : ssize_t;\nstd/core/vector/@lift-forz@869<(e :: E)>(action, n, i@0@10001)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: action(i)","traced":{"any":[]}},
{"op":"Push","target":55,"args":{"any":[0,1,2]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: action(i)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: val _ : ();\nval i@0@10001 : ssize_t;\nstd/core/vector/@lift-forz@869<(e :: E)>(action, n, i@0@10001)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"(#1 < #2)\",\"args\": [{\"op\": \"Var\",\"id\": \"i\",\"type\": {\"op\": \"Int\"}}, {\"op\": \"Var\",\"id\": \"n\",\"type\": {\"op\": \"Int\"}}],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"57([switch case for Bool(false)#174])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"(#1 < #2)\",\"args\": [{\"op\": \"Var\",\"id\": \"i\",\"type\": {\"op\": \"Int\"}}, {\"op\": \"Var\",\"id\": \"n\",\"type\": {\"op\": \"Int\"}}],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/Unit","traced":{"any":[]}},
{"op":"Construct","out":0,"type":"Unit","tag":"unit","args":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/Unit","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"(#1 < #2)\",\"args\": [{\"op\": \"Var\",\"id\": \"i\",\"type\": {\"op\": \"Int\"}}, {\"op\": \"Var\",\"id\": \"n\",\"type\": {\"op\": \"Int\"}}],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"58([switch default case#177])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"59([switch default case#172])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"PrimOp","name":"(#1 < #2)","out":{"any":[0]},"in":{"any":[1,2]}},
{"op":"Switch","arg":0,"values":[false],"targets":[57],"default":58}]},
{"label":"60([mcore:[#134]#162])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"PrimOp","name":"(#1 < #2)","out":{"any":[3]},"in":{"any":[2,1]}},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":3,"values":[true],"targets":[56],"default":59}]},
{"label":"61([mcore:[#139]#178])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"i\",\"type\": {\"op\": \"Int\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/int/ssize_t(0)","traced":{"any":[]}},
{"op":"Const","format":"int","out":2,"value":0},
{"op":"Debug","msg":"BGN: genExpr: std/core/vector/@lift-forz@869<(e :: E)>(action, n, i)","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/vector/@lift-forz@869<(e :: E)>(action, n, i)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/int/ssize_t(0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"i\",\"type\": {\"op\": \"Int\"}}","traced":{"any":[]}},
{"op":"Jump","target":60}]},
{"label":"62([mcore:[#147]#180])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genExpr: f(i@0, (std/core/vector/unsafe-idx<a>(v, i@0)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/vector/unsafe-idx<a>(v, i@0)","traced":{"any":[]}},
{"op":"PrimOp","name":"unsafeIndex(Array[Ptr], Int): Ptr","out":{"any":[2]},"in":{"any":[2,0]}},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/vector/unsafe-idx<a>(v, i@0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f(i@0, (std/core/vector/unsafe-idx<a>(v, i@0)))","traced":{"any":[]}},
{"op":"Invoke","receiver":2,"tag":"apply","args":{"any":[0,1]}}]},
{"label":"63([method_apply@[mcore:[#151]#182]#186])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Jump","target":62}]},
{"label":"64([mcore:[#151]#182])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"n@10002\",\"type\": {\"op\": \"Int\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/vector/lengthz<a>(v)","traced":{"any":[]}},
{"op":"PrimOp","name":"length(Array[Ptr]): Int","out":{"any":[2]},"in":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"i\",\"type\": {\"op\": \"Int\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/int/ssize_t(0)","traced":{"any":[]}},
{"op":"Const","format":"int","out":3,"value":0},
{"op":"Debug","msg":"BGN: genExpr: std/core/vector/@lift-forz@869<(e :: E)>((fn<(e :: E)>(i@0: ssize_t){\n    (f(i@0, (std/core/vector/unsafe-idx<a>(v, i@0))));\n  }), n@10002, i)","traced":{"any":[]}},
{"op":"New","out":0,"targets":[63],"args":{"any":[1,0]},"tags":["apply"]},
{"op":"Copy","from":2,"to":1},
{"op":"Copy","from":3,"to":2},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/vector/@lift-forz@869<(e :: E)>((fn<(e :: E)>(i@0: ssize_t){\n    (f(i@0, (std/core/vector/unsafe-idx<a>(v, i@0))));\n  }), n@10002, i)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/int/ssize_t(0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"i\",\"type\": {\"op\": \"Int\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/vector/lengthz<a>(v)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"n@10002\",\"type\": {\"op\": \"Int\"}}","traced":{"any":[]}},
{"op":"Jump","target":60}]},
{"label":"65([mcore:[#158]#189])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"x@10015\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/vector/unsafe-idx<a>(v, i@0)","traced":{"any":[]}},
{"op":"PrimOp","name":"unsafeIndex(Array[Ptr], Int): Ptr","out":{"any":[0]},"in":{"any":[2,0]}},
{"op":"Debug","msg":"BGN: genExpr: f(x@10015)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f(x@10015)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/vector/unsafe-idx<a>(v, i@0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"x@10015\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"66([method_apply@[mcore:[#162]#190]#194])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Jump","target":65}]},
{"label":"67([mcore:[#162]#190])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"n@10002\",\"type\": {\"op\": \"Int\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/vector/lengthz<a>(v)","traced":{"any":[]}},
{"op":"PrimOp","name":"length(Array[Ptr]): Int","out":{"any":[2]},"in":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"i\",\"type\": {\"op\": \"Int\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/int/ssize_t(0)","traced":{"any":[]}},
{"op":"Const","format":"int","out":3,"value":0},
{"op":"Debug","msg":"BGN: genExpr: std/core/vector/@lift-forz@869<(e :: E)>((fn<(e :: E)>(i@0: ssize_t){\n    val x@10015 : a\n          = (std/core/vector/unsafe-idx<a>(v, i@0));\n    (f(x@10015));\n  }), n@10002, i)","traced":{"any":[]}},
{"op":"New","out":0,"targets":[66],"args":{"any":[1,0]},"tags":["apply"]},
{"op":"Copy","from":2,"to":1},
{"op":"Copy","from":3,"to":2},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/vector/@lift-forz@869<(e :: E)>((fn<(e :: E)>(i@0: ssize_t){\n    val x@10015 : a\n          = (std/core/vector/unsafe-idx<a>(v, i@0));\n    (f(x@10015));\n  }), n@10002, i)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/int/ssize_t(0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"i\",\"type\": {\"op\": \"Int\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/vector/lengthz<a>(v)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"n@10002\",\"type\": {\"op\": \"Int\"}}","traced":{"any":[]}},
{"op":"Jump","target":60}]},
{"label":"68([mcore:[#170]#197])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"x@10017\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/vector/unsafe-idx<a>(v, i@0)","traced":{"any":[]}},
{"op":"PrimOp","name":"unsafeIndex(Array[Ptr], Int): Ptr","out":{"any":[0]},"in":{"any":[2,0]}},
{"op":"Debug","msg":"BGN: genExpr: f((std/core/int/ssize_t/int(i@0)), x@10017)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/int/ssize_t/int(i@0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"Undefined:  std/core/int/#ssize_t/int"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/int/ssize_t/int(i@0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f((std/core/int/ssize_t/int(i@0)), x@10017)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/vector/unsafe-idx<a>(v, i@0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"x@10017\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":2,"tag":"apply","args":{"any":[0,1]}}]},
{"label":"69([method_apply@[mcore:[#174]#201]#205])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Jump","target":68}]},
{"label":"70([mcore:[#174]#201])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"n@10002\",\"type\": {\"op\": \"Int\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/vector/lengthz<a>(v)","traced":{"any":[]}},
{"op":"PrimOp","name":"length(Array[Ptr]): Int","out":{"any":[2]},"in":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"i\",\"type\": {\"op\": \"Int\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/int/ssize_t(0)","traced":{"any":[]}},
{"op":"Const","format":"int","out":3,"value":0},
{"op":"Debug","msg":"BGN: genExpr: std/core/vector/@lift-forz@869<(e :: E)>((fn<(e :: E)>(i@0: ssize_t){\n    val x@10017 : a\n          = (std/core/vector/unsafe-idx<a>(v, i@0));\n    (f((std/core/int/ssize_t/int(i@0)), x@10017));\n  }), n@10002, i)","traced":{"any":[]}},
{"op":"New","out":0,"targets":[69],"args":{"any":[1,0]},"tags":["apply"]},
{"op":"Copy","from":2,"to":1},
{"op":"Copy","from":3,"to":2},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/vector/@lift-forz@869<(e :: E)>((fn<(e :: E)>(i@0: ssize_t){\n    val x@10017 : a\n          = (std/core/vector/unsafe-idx<a>(v, i@0));\n    (f((std/core/int/ssize_t/int(i@0)), x@10017));\n  }), n@10002, i)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/int/ssize_t(0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"i\",\"type\": {\"op\": \"Int\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/vector/lengthz<a>(v)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"n@10002\",\"type\": {\"op\": \"Int\"}}","traced":{"any":[]}},
{"op":"Jump","target":60}]},
{"label":"71([mcore:[#181]#208])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genExpr: f((std/core/vector/unsafe-idx<a>(v, i@0)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/vector/unsafe-idx<a>(v, i@0)","traced":{"any":[]}},
{"op":"PrimOp","name":"unsafeIndex(Array[Ptr], Int): Ptr","out":{"any":[0]},"in":{"any":[2,0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/vector/unsafe-idx<a>(v, i@0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f((std/core/vector/unsafe-idx<a>(v, i@0)))","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"72([method_apply@[mcore:[#185]#210]#214])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Jump","target":71}]},
{"label":"73([mcore:[#185]#210])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"n@10004\",\"type\": {\"op\": \"Int\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/vector/lengthz<a>(v)","traced":{"any":[]}},
{"op":"PrimOp","name":"length(Array[Ptr]): Int","out":{"any":[2]},"in":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"i\",\"type\": {\"op\": \"Int\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/int/ssize_t(0)","traced":{"any":[]}},
{"op":"Const","format":"int","out":3,"value":0},
{"op":"Debug","msg":"BGN: genExpr: std/core/vector/@lift-for-whilez@868<a,(e :: E)>((fn<(e :: E)>(i@0: ssize_t){\n    (f((std/core/vector/unsafe-idx<a>(v, i@0))));\n  }), n@10004, i)","traced":{"any":[]}},
{"op":"New","out":0,"targets":[72],"args":{"any":[1,0]},"tags":["apply"]},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/vector/@lift-for-whilez@868<a,(e :: E)>((fn<(e :: E)>(i@0: ssize_t){\n    (f((std/core/vector/unsafe-idx<a>(v, i@0))));\n  }), n@10004, i)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/int/ssize_t(0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"i\",\"type\": {\"op\": \"Int\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/vector/lengthz<a>(v)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"n@10004\",\"type\": {\"op\": \"Int\"}}","traced":{"any":[]}},
{"op":"Jump","target":51}]},
{"label":"74([mcore:[#190]#220])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/vector/vlist<a>(v, (std/core/types/@None<(list :: V -> V)<a>>))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/@None<(list :: V -> V)<a>>","traced":{"any":[]}},
{"op":"Const","format":"string","out":1,"value":"std/core/types/@None"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/@None<(list :: V -> V)<a>>","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/vector/vlist<a>(v, (std/core/types/@None<(list :: V -> V)<a>>))","traced":{"any":[]}},
{"op":"Jump","target":31}]},
{"label":"75([mcore:[#195]#225])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"x@10019\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/vector/unsafe-idx<a>(v, i@0)","traced":{"any":[]}},
{"op":"PrimOp","name":"unsafeIndex(Array[Ptr], Int): Ptr","out":{"any":[0]},"in":{"any":[1,0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/vector/unsafe-assign<a>(w, i@0, (f(x@10019)))","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Undefined:  std/core/vector/unsafe-assign"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/vector/unsafe-assign<a>(w, i@0, (f(x@10019)))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/vector/unsafe-idx<a>(v, i@0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"x@10019\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"76([method_apply@[mcore:[#199]#228]#234])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Jump","target":75}]},
{"label":"77([k@[mcore:[#199]#228]#238])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Return","args":{"any":[0]}}]},
{"label":"78([mcore:[#199]#228])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"vector\\\"\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/vector/unsafe-vector<a>((std/core/int/ssize_t((std/core/int/ssize_t/int((std/core/vector/lengthz<a>(v)))))))","traced":{"any":[]}},
{"op":"Const","format":"string","out":1,"value":"Undefined:  std/core/vector/unsafe-vector"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[1]},"in":{"any":[1]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"n@10002\",\"type\": {\"op\": \"Int\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/vector/lengthz<a>(v)","traced":{"any":[]}},
{"op":"PrimOp","name":"length(Array[Ptr]): Int","out":{"any":[2]},"in":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"i\",\"type\": {\"op\": \"Int\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/int/ssize_t(0)","traced":{"any":[]}},
{"op":"Const","format":"int","out":3,"value":0},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/vector/@lift-forz@869<(e :: E)>((fn<(e :: E)>(i@0: ssize_t){\n    val x@10019 : a\n          = (std/core/vector/unsafe-idx<a>(v, i@0));\n    (std/core/vector/unsafe-assign<a>(w, i@0, (f(x@10019))));\n  }), n@10002, i)","traced":{"any":[]}},
{"op":"New","out":0,"targets":[76],"args":{"any":[0]},"tags":["apply"]},
{"op":"Push","target":77,"args":{"any":[1]}},
{"op":"Copy","from":2,"to":1},
{"op":"Copy","from":3,"to":2},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/vector/@lift-forz@869<(e :: E)>((fn<(e :: E)>(i@0: ssize_t){\n    val x@10019 : a\n          = (std/core/vector/unsafe-idx<a>(v, i@0));\n    (std/core/vector/unsafe-assign<a>(w, i@0, (f(x@10019))));\n  }), n@10002, i)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/int/ssize_t(0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"i\",\"type\": {\"op\": \"Int\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/vector/lengthz<a>(v)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"n@10002\",\"type\": {\"op\": \"Int\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/vector/unsafe-vector<a>((std/core/int/ssize_t((std/core/int/ssize_t/int((std/core/vector/lengthz<a>(v)))))))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"vector\\\"\"}}","traced":{"any":[]}},
{"op":"Jump","target":60}]},
{"label":"79([mcore:[#201]#239])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/int)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"std/core/int/ssize_t"}]},
{"label":"80([k@[mcore:[#206]#244]#249])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Jump","target":33}]},
{"label":"81([mcore:[#206]#244])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/vector/vector-alloc<a,(total :: E)>((std/core/int/ssize_t(n)), default)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/int/ssize_t(n)","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/int)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Push","target":80,"args":{"any":[1]}},
{"op":"Copy","from":2,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/int/ssize_t(n)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/vector/vector-alloc<a,(total :: E)>((std/core/int/ssize_t(n)), default)","traced":{"any":[]}},
{"op":"Jump","target":79}]},
{"label":"82([mcore:[#207]#251])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/int)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"std/core/int/ssize_t"}]},
{"label":"83([mcore:[#211]#256])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/vector/unsafe-assign<a>(v, i@0, (f((std/core/int/ssize_t/int(i@0)))))","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Undefined:  std/core/vector/unsafe-assign"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/vector/unsafe-assign<a>(v, i@0, (f((std/core/int/ssize_t/int(i@0)))))","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"84([method_apply@[k@[mcore:[#215]#259]#264]#270])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Jump","target":83}]},
{"label":"85([k@[k@[mcore:[#215]#259]#264]#274])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Return","args":{"any":[0]}}]},
{"label":"86([k@[mcore:[#215]#259]#264])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"v\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"vector\\\"\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/vector/unsafe-vector<a>(len)","traced":{"any":[]}},
{"op":"Const","format":"string","out":1,"value":"Undefined:  std/core/vector/unsafe-vector"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[1]},"in":{"any":[1]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"i\",\"type\": {\"op\": \"Int\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/int/ssize_t(0)","traced":{"any":[]}},
{"op":"Const","format":"int","out":2,"value":0},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/vector/@lift-forz@869<(e :: E)>((fn<(e :: E)>(i@0: ssize_t){\n    (std/core/vector/unsafe-assign<a>(v, i@0, (f((std/core/int/ssize_t/int(i@0))))));\n  }), len, i)","traced":{"any":[]}},
{"op":"New","out":3,"targets":[84],"args":{"any":[]},"tags":["apply"]},
{"op":"Push","target":85,"args":{"any":[1]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/vector/@lift-forz@869<(e :: E)>((fn<(e :: E)>(i@0: ssize_t){\n    (std/core/vector/unsafe-assign<a>(v, i@0, (f((std/core/int/ssize_t/int(i@0))))));\n  }), len, i)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/int/ssize_t(0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"i\",\"type\": {\"op\": \"Int\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/vector/unsafe-vector<a>(len)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"v\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"vector\\\"\"}}","traced":{"any":[]}},
{"op":"Jump","target":60}]},
{"label":"87([mcore:[#215]#259])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"len\",\"type\": {\"op\": \"Int\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/int/ssize_t(n)","traced":{"any":[]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/int)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"Push","target":86,"args":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/int/ssize_t(n)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"len\",\"type\": {\"op\": \"Int\"}}","traced":{"any":[]}},
{"op":"Jump","target":82}]},
{"label":"88([mcore:[#217]#275])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/int)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"std/core/int/ssize_t"}]},
{"label":"89([mcore:[#223]#280])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: f((std/core/int/ssize_t/int(i)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/int/ssize_t/int(i)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Undefined:  std/core/int/#ssize_t/int"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/int/ssize_t/int(i)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f((std/core/int/ssize_t/int(i)))","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"90([method_apply@[k@[mcore:[#225]#284]#289]#293])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Jump","target":89}]},
{"label":"91([k@[mcore:[#225]#284]#289])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"New","out":1,"targets":[90],"args":{"any":[1]},"tags":["apply"]},
{"op":"Jump","target":34}]},
{"label":"92([mcore:[#225]#284])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/vector/vector-alloc-total<a>((std/core/int/ssize_t(n)), (fn(i: ssize_t){\n    (f((std/core/int/ssize_t/int(i))));\n  }))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/int/ssize_t(n)","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/int)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Push","target":91,"args":{"any":[1]}},
{"op":"Copy","from":2,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/int/ssize_t(n)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/vector/vector-alloc-total<a>((std/core/int/ssize_t(n)), (fn(i: ssize_t){\n    (f((std/core/int/ssize_t/int(i))));\n  }))","traced":{"any":[]}},
{"op":"Jump","target":88}]},
{"label":"93([mcore:[#228]#296])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/vector/unvlist<a>(xs)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/vector/unvlist<a>(xs)","traced":{"any":[]}},
{"op":"Jump","target":32}]},
{"label":"94([k@[k@[k@[#317]#327]#337]#347])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[1,0]}},
{"op":"Const","format":"string","out":0,"value":"ThisLib_3f84d1ae-2c2a-413f-8da0-4d488480ec52"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[0,2]}},
{"op":"Copy","from":2,"to":0},
{"op":"Return","args":{"any":[0]}}]},
{"label":"95([k@[k@[#317]#327]#337])",
"frameDescriptor":{"regs_any":16},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[1,0]}},
{"op":"Const","format":"string","out":0,"value":"[#63]"},
{"op":"Const","format":"path","out":1,"value":"$0/./std_core_int.rpyeffect"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[0,1]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/int)"},
{"op":"Push","target":94,"args":{"any":[0,2]}},
{"op":"LoadLib","path":1}]},
{"label":"96([k@[#317]#327])",
"frameDescriptor":{"regs_any":16},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[1,0]}},
{"op":"Const","format":"string","out":0,"value":"[#62]"},
{"op":"Const","format":"path","out":1,"value":"$0/./std_core_exn.rpyeffect"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[0,1]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/exn)"},
{"op":"Push","target":95,"args":{"any":[0,2]}},
{"op":"LoadLib","path":1}]},
{"label":"97([#317])",
"frameDescriptor":{"regs_any":16},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[1,0]}},
{"op":"Const","format":"string","out":0,"value":"[#61]"},
{"op":"Const","format":"path","out":1,"value":"$0/./std_core_hnd.rpyeffect"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[0,1]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"Push","target":96,"args":{"any":[0,2]}},
{"op":"LoadLib","path":1}]},
{"label":"98([k@[mcore:[static initializers#251]#297]#307])",
"frameDescriptor":{"regs_any":16},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[1,0]}},
{"op":"Const","format":"string","out":0,"value":"[#60]"},
{"op":"Const","format":"path","out":1,"value":"$0/./std_core_undiv.rpyeffect"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[0,1]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/undiv)"},
{"op":"Push","target":97,"args":{"any":[0,2]}},
{"op":"LoadLib","path":1}]},
{"label":"99([mcore:[static initializers#251]#297])",
"frameDescriptor":{"regs_any":16},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Const","format":"string","out":1,"value":"[#59]"},
{"op":"Const","format":"path","out":2,"value":"$0/./std_core_types.rpyeffect"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[1]},"in":{"any":[1,2]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/types)"},
{"op":"Push","target":98,"args":{"any":[1,0]}},
{"op":"LoadLib","path":2}]},
{"label":"100([k@[main entrypoint#2]#355])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Const","format":"string","out":0,"value":"Undefined: is a library"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"101([main entrypoint#2])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[]}},
{"op":"Copy","from":-1,"to":0},
{"op":"Push","target":100,"args":{"any":[]}},
{"op":"Jump","target":99}]}],
"symbols":[{"name":"std/core/vector/@index","position":13},
{"name":"std/core/vector/at","position":22},
{"name":"std/core/vector/ssize_t/incr","position":23},
{"name":"std/core/vector/length","position":24},
{"name":"std/core/vector/vlist","position":31},
{"name":"std/core/vector/unvlist","position":32},
{"name":"std/core/vector/vector-alloc","position":33},
{"name":"std/core/vector/vector-alloc-total","position":34},
{"name":"std/core/vector/ssize_t/decr","position":35},
{"name":"std/core/vector/ssize_t/is-zero","position":36},
{"name":"std/core/vector/@lift-for-whilez@868","position":51},
{"name":"std/core/vector/for-whilez","position":52},
{"name":"std/core/vector/@lift-forz@869","position":60},
{"name":"std/core/vector/forz","position":61},
{"name":"std/core/vector/foreach-indexedz","position":64},
{"name":"std/core/vector/foreach","position":67},
{"name":"std/core/vector/foreach-indexed","position":70},
{"name":"std/core/vector/foreach-while","position":73},
{"name":"std/core/vector/list","position":74},
{"name":"std/core/vector/map","position":78},
{"name":"std/core/vector/vector","position":81},
{"name":"std/core/vector/vector-init","position":87},
{"name":"std/core/vector/vector-init-total","position":92},
{"name":"std/core/vector/list/vector","position":93},
{"name":"$static-init","position":99},
{"name":"$entrypoint","position":101}],
"frameSize":{"regs_any":16}}