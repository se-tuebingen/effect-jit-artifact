{"blocks":[{"label":"0([#6])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1([#7])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: 1","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: 1","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"2([match_def@[match_def@[mcore:[#57]#3]#4]#5])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Gt\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Gt\"(())","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/order","scrutinee":0,"clauses":[{"tag":"std/core/types/Gt","target":1,"args":{"any":[]}}],"default":{"tag":"3829b15d-85fe-4727-ab5c-2d005a0117cd#[Missing Tag#290]","target":0,"args":{"any":[]}}}]},
{"label":"3([#10])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: 0","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: 0","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"4([match_def@[mcore:[#57]#3]#4])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Eq\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Eq\"(())","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/order","scrutinee":0,"clauses":[{"tag":"std/core/types/Eq","target":3,"args":{"any":[]}}],"default":{"tag":"3829b15d-85fe-4727-ab5c-2d005a0117cd#[Missing Tag#291]","target":2,"args":{"any":[]}}}]},
{"label":"5([match_std/core/types/Lt@[mcore:[#57]#3]#13])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: -1","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":-1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: -1","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"6([mcore:[#57]#3])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Lt\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Lt\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/order","scrutinee":0,"clauses":[{"tag":"std/core/types/Lt","target":5,"args":{"any":[]}}],"default":{"tag":"3829b15d-85fe-4727-ab5c-2d005a0117cd#[Missing Tag#292]","target":4,"args":{"any":[]}}}]},
{"label":"7([match_def@[#18]#19])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"8([match_std/core/types/Gt2@[#18]#20])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@4,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order2\\\"\"}}),(@pat@5,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"lt\\\"3\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@5: 56) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"lt\\\\\\\"3\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@6,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"gt\\\"4\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@6: 56) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"gt\\\\\\\"4\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: 1","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: 1","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@4,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order2\\\"\"}}),(@pat@5,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"lt\\\"3\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@5: 56) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"lt\\\\\\\"3\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@6,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"gt\\\"4\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@6: 56) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"gt\\\\\\\"4\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"9([#18])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order2\\\"\"}}: \"std/core/types/order2\".\"std/core/types/Gt2\"(({\"op\": \"Var\",\"id\": \"@\\\"lt\\\"3\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"gt\\\"4\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order2\\\"\"}}: \"std/core/types/order2\".\"std/core/types/Gt2\"(({\"op\": \"Var\",\"id\": \"@\\\"lt\\\"3\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"gt\\\"4\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/order2","scrutinee":0,"clauses":[{"tag":"std/core/types/Gt2","target":8,"args":{"any":[0,1]}}],"default":{"tag":"3829b15d-85fe-4727-ab5c-2d005a0117cd#[Missing Tag#293]","target":7,"args":{"any":[]}}}]},
{"label":"10([#23])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@2,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order2\\\"\"}}),(@pat@3,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"eq\\\"2\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@3: 56) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"eq\\\\\\\"2\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: 0","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: 0","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@2,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order2\\\"\"}}),(@pat@3,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"eq\\\"2\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@3: 56) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"eq\\\\\\\"2\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"11([match_def@[mcore:[#58]#16]#17])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order2\\\"\"}}: \"std/core/types/order2\".\"std/core/types/Eq2\"(({\"op\": \"Var\",\"id\": \"@\\\"eq\\\"2\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order2\\\"\"}}: \"std/core/types/order2\".\"std/core/types/Eq2\"(({\"op\": \"Var\",\"id\": \"@\\\"eq\\\"2\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/order2","scrutinee":0,"clauses":[{"tag":"std/core/types/Eq2","target":10,"args":{"any":[1]}}],"default":{"tag":"3829b15d-85fe-4727-ab5c-2d005a0117cd#[Missing Tag#294]","target":9,"args":{"any":[]}}}]},
{"label":"12([#26])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order2\\\"\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"lt\\\"0\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@0: 56) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"lt\\\\\\\"0\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"gt\\\"1\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@1: 56) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"gt\\\\\\\"1\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: -1","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":-1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: -1","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order2\\\"\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"lt\\\"0\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@0: 56) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"lt\\\\\\\"0\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"gt\\\"1\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@1: 56) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"gt\\\\\\\"1\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"13([mcore:[#58]#16])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order2\\\"\"}}: \"std/core/types/order2\".\"std/core/types/Lt2\"(({\"op\": \"Var\",\"id\": \"@\\\"lt\\\"0\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"gt\\\"1\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order2\\\"\"}}: \"std/core/types/order2\".\"std/core/types/Lt2\"(({\"op\": \"Var\",\"id\": \"@\\\"lt\\\"0\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"gt\\\"1\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/order2","scrutinee":0,"clauses":[{"tag":"std/core/types/Lt2","target":12,"args":{"any":[1,2]}}],"default":{"tag":"3829b15d-85fe-4727-ab5c-2d005a0117cd#[Missing Tag#295]","target":11,"args":{"any":[]}}}]},
{"label":"14([mcore:[#62]#29])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"std/core/types/Eq2"}]},
{"label":"15([mcore:[#65]#34])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"CallLib","lib":2,"symbol":"std/core/types/Lt2"}]},
{"label":"16([mcore:[#69]#40])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"CallLib","lib":2,"symbol":"std/core/types/Gt2"}]},
{"label":"17([match_def@[#50]#51])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"18([k@[match_std/core/types/Gt@[#50]#52]#57])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"19([match_std/core/types/Gt@[#50]#52])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"@x5\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/Gt2<a>(y, x)","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/Gt2<a>(y, x)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"@x5\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Jump","target":16}]},
{"label":"20([#50])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@x5\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Gt\"(())","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@x5\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Gt\"(())","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/order","scrutinee":2,"clauses":[{"tag":"std/core/types/Gt","target":19,"args":{"any":[]}}],"default":{"tag":"3829b15d-85fe-4727-ab5c-2d005a0117cd#[Missing Tag#296]","target":17,"args":{"any":[]}}}]},
{"label":"21([k@[#59]#64])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"22([#59])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"@x5\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/Lt2<a>(x, y)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/Lt2<a>(x, y)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"@x5\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Jump","target":15}]},
{"label":"23([match_def@[k@[mcore:[#73]#46]#48]#49])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@x5\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Lt\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@x5\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Lt\"(())","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/order","scrutinee":0,"clauses":[{"tag":"std/core/types/Lt","target":22,"args":{"any":[]}}],"default":{"tag":"3829b15d-85fe-4727-ab5c-2d005a0117cd#[Missing Tag#297]","target":20,"args":{"any":[]}}}]},
{"label":"24([k@[#66]#71])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"25([#66])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"@x5\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/Eq2<a>(x)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/Eq2<a>(x)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"@x5\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Jump","target":14}]},
{"label":"26([k@[mcore:[#73]#46]#48])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@x5\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Eq\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@x5\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Eq\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/order","scrutinee":0,"clauses":[{"tag":"std/core/types/Eq","target":25,"args":{"any":[]}}],"default":{"tag":"3829b15d-85fe-4727-ab5c-2d005a0117cd#[Missing Tag#298]","target":23,"args":{"any":[]}}}]},
{"label":"27([mcore:[#73]#46])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: cmp(x, y)","traced":{"any":[]}},
{"op":"Push","target":26,"args":{"any":[0,1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: cmp(x, y)","traced":{"any":[]}},
{"op":"Invoke","receiver":2,"tag":"apply","args":{"any":[0,1]}}]},
{"label":"28([k@[k@[mcore:[#76]#73]#75]#78])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"infixNeq(Int, Int): Boolean","out":{"any":[0]},"in":{"any":[1,0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"29([match_def@[#81]#82])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"30([match_std/core/types/Gt@[#81]#83])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@1@0,{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: 1","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: 1","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@1@0,{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"31([#81])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Gt\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Gt\"(())","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/order","scrutinee":0,"clauses":[{"tag":"std/core/types/Gt","target":30,"args":{"any":[]}}],"default":{"tag":"3829b15d-85fe-4727-ab5c-2d005a0117cd#[Missing Tag#299]","target":29,"args":{"any":[]}}}]},
{"label":"32([#86])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@0@0,{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: 0","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: 0","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0@0,{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"33([match_def@[k@[mcore:[#76]#73]#75]#80])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Eq\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Eq\"(())","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/order","scrutinee":0,"clauses":[{"tag":"std/core/types/Eq","target":32,"args":{"any":[]}}],"default":{"tag":"3829b15d-85fe-4727-ab5c-2d005a0117cd#[Missing Tag#300]","target":31,"args":{"any":[]}}}]},
{"label":"34([#89])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@2,{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: -1","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":-1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: -1","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@2,{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"35([k@[mcore:[#76]#73]#75])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: match (y) {\n  ((std/core/types/Lt() : order ) as @pat@2: order)\n     -> -1;\n  ((std/core/types/Eq() : order ) as @pat@0@0: order)\n     -> 0;\n  ((@skip std/core/types/Gt() : order ) as @pat@1@0: order)\n     -> 1;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Lt\"(())","traced":{"any":[]}},
{"op":"Push","target":28,"args":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Lt\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (y) {\n  ((std/core/types/Lt() : order ) as @pat@2: order)\n     -> -1;\n  ((std/core/types/Eq() : order ) as @pat@0@0: order)\n     -> 0;\n  ((@skip std/core/types/Gt() : order ) as @pat@1@0: order)\n     -> 1;\n}","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/order","scrutinee":0,"clauses":[{"tag":"std/core/types/Lt","target":34,"args":{"any":[]}}],"default":{"tag":"3829b15d-85fe-4727-ab5c-2d005a0117cd#[Missing Tag#301]","target":33,"args":{"any":[]}}}]},
{"label":"36([match_def@[#93]#94])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"37([match_std/core/types/Gt@[#93]#95])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: 1","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: 1","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"38([#93])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Gt\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Gt\"(())","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/order","scrutinee":0,"clauses":[{"tag":"std/core/types/Gt","target":37,"args":{"any":[]}}],"default":{"tag":"3829b15d-85fe-4727-ab5c-2d005a0117cd#[Missing Tag#302]","target":36,"args":{"any":[]}}}]},
{"label":"39([#98])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: 0","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: 0","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"40([match_def@[mcore:[#76]#73]#92])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Eq\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Eq\"(())","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/order","scrutinee":0,"clauses":[{"tag":"std/core/types/Eq","target":39,"args":{"any":[]}}],"default":{"tag":"3829b15d-85fe-4727-ab5c-2d005a0117cd#[Missing Tag#303]","target":38,"args":{"any":[]}}}]},
{"label":"41([#101])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: -1","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":-1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: -1","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"42([mcore:[#76]#73])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/int/(!=)((match (x) {\n    ((std/core/types/Lt() : order ) as @pat: order)\n       -> -1;\n    ((std/core/types/Eq() : order ) as @pat@0: order)\n       -> 0;\n    ((@skip std/core/types/Gt() : order ) as @pat@1: order)\n       -> 1;\n  }), (match (y) {\n    ((std/core/types/Lt() : order ) as @pat@2: order)\n       -> -1;\n    ((std/core/types/Eq() : order ) as @pat@0@0: order)\n       -> 0;\n    ((@skip std/core/types/Gt() : order ) as @pat@1@0: order)\n       -> 1;\n  }))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (x) {\n  ((std/core/types/Lt() : order ) as @pat: order)\n     -> -1;\n  ((std/core/types/Eq() : order ) as @pat@0: order)\n     -> 0;\n  ((@skip std/core/types/Gt() : order ) as @pat@1: order)\n     -> 1;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Lt\"(())","traced":{"any":[]}},
{"op":"Push","target":35,"args":{"any":[1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Lt\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (x) {\n  ((std/core/types/Lt() : order ) as @pat: order)\n     -> -1;\n  ((std/core/types/Eq() : order ) as @pat@0: order)\n     -> 0;\n  ((@skip std/core/types/Gt() : order ) as @pat@1: order)\n     -> 1;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/int/(!=)((match (x) {\n    ((std/core/types/Lt() : order ) as @pat: order)\n       -> -1;\n    ((std/core/types/Eq() : order ) as @pat@0: order)\n       -> 0;\n    ((@skip std/core/types/Gt() : order ) as @pat@1: order)\n       -> 1;\n  }), (match (y) {\n    ((std/core/types/Lt() : order ) as @pat@2: order)\n       -> -1;\n    ((std/core/types/Eq() : order ) as @pat@0@0: order)\n       -> 0;\n    ((@skip std/core/types/Gt() : order ) as @pat@1@0: order)\n       -> 1;\n  }))","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/order","scrutinee":0,"clauses":[{"tag":"std/core/types/Lt","target":41,"args":{"any":[]}}],"default":{"tag":"3829b15d-85fe-4727-ab5c-2d005a0117cd#[Missing Tag#304]","target":40,"args":{"any":[]}}}]},
{"label":"43([k@[k@[mcore:[#79]#104]#106]#109])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"infixLt(Int, Int): Boolean","out":{"any":[0]},"in":{"any":[1,0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"44([match_def@[#112]#113])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"45([match_std/core/types/Gt@[#112]#114])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@1@0,{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: 1","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: 1","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@1@0,{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"46([#112])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Gt\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Gt\"(())","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/order","scrutinee":0,"clauses":[{"tag":"std/core/types/Gt","target":45,"args":{"any":[]}}],"default":{"tag":"3829b15d-85fe-4727-ab5c-2d005a0117cd#[Missing Tag#305]","target":44,"args":{"any":[]}}}]},
{"label":"47([#117])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@0@0,{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: 0","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: 0","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0@0,{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"48([match_def@[k@[mcore:[#79]#104]#106]#111])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Eq\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Eq\"(())","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/order","scrutinee":0,"clauses":[{"tag":"std/core/types/Eq","target":47,"args":{"any":[]}}],"default":{"tag":"3829b15d-85fe-4727-ab5c-2d005a0117cd#[Missing Tag#306]","target":46,"args":{"any":[]}}}]},
{"label":"49([#120])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@2,{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: -1","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":-1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: -1","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@2,{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"50([k@[mcore:[#79]#104]#106])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: match (y) {\n  ((std/core/types/Lt() : order ) as @pat@2: order)\n     -> -1;\n  ((std/core/types/Eq() : order ) as @pat@0@0: order)\n     -> 0;\n  ((@skip std/core/types/Gt() : order ) as @pat@1@0: order)\n     -> 1;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Lt\"(())","traced":{"any":[]}},
{"op":"Push","target":43,"args":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Lt\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (y) {\n  ((std/core/types/Lt() : order ) as @pat@2: order)\n     -> -1;\n  ((std/core/types/Eq() : order ) as @pat@0@0: order)\n     -> 0;\n  ((@skip std/core/types/Gt() : order ) as @pat@1@0: order)\n     -> 1;\n}","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/order","scrutinee":0,"clauses":[{"tag":"std/core/types/Lt","target":49,"args":{"any":[]}}],"default":{"tag":"3829b15d-85fe-4727-ab5c-2d005a0117cd#[Missing Tag#307]","target":48,"args":{"any":[]}}}]},
{"label":"51([match_def@[#124]#125])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"52([match_std/core/types/Gt@[#124]#126])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: 1","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: 1","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"53([#124])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Gt\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Gt\"(())","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/order","scrutinee":0,"clauses":[{"tag":"std/core/types/Gt","target":52,"args":{"any":[]}}],"default":{"tag":"3829b15d-85fe-4727-ab5c-2d005a0117cd#[Missing Tag#308]","target":51,"args":{"any":[]}}}]},
{"label":"54([#129])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: 0","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: 0","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"55([match_def@[mcore:[#79]#104]#123])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Eq\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Eq\"(())","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/order","scrutinee":0,"clauses":[{"tag":"std/core/types/Eq","target":54,"args":{"any":[]}}],"default":{"tag":"3829b15d-85fe-4727-ab5c-2d005a0117cd#[Missing Tag#309]","target":53,"args":{"any":[]}}}]},
{"label":"56([#132])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: -1","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":-1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: -1","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"57([mcore:[#79]#104])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/int/(<)((match (x) {\n    ((std/core/types/Lt() : order ) as @pat: order)\n       -> -1;\n    ((std/core/types/Eq() : order ) as @pat@0: order)\n       -> 0;\n    ((@skip std/core/types/Gt() : order ) as @pat@1: order)\n       -> 1;\n  }), (match (y) {\n    ((std/core/types/Lt() : order ) as @pat@2: order)\n       -> -1;\n    ((std/core/types/Eq() : order ) as @pat@0@0: order)\n       -> 0;\n    ((@skip std/core/types/Gt() : order ) as @pat@1@0: order)\n       -> 1;\n  }))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (x) {\n  ((std/core/types/Lt() : order ) as @pat: order)\n     -> -1;\n  ((std/core/types/Eq() : order ) as @pat@0: order)\n     -> 0;\n  ((@skip std/core/types/Gt() : order ) as @pat@1: order)\n     -> 1;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Lt\"(())","traced":{"any":[]}},
{"op":"Push","target":50,"args":{"any":[1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Lt\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (x) {\n  ((std/core/types/Lt() : order ) as @pat: order)\n     -> -1;\n  ((std/core/types/Eq() : order ) as @pat@0: order)\n     -> 0;\n  ((@skip std/core/types/Gt() : order ) as @pat@1: order)\n     -> 1;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/int/(<)((match (x) {\n    ((std/core/types/Lt() : order ) as @pat: order)\n       -> -1;\n    ((std/core/types/Eq() : order ) as @pat@0: order)\n       -> 0;\n    ((@skip std/core/types/Gt() : order ) as @pat@1: order)\n       -> 1;\n  }), (match (y) {\n    ((std/core/types/Lt() : order ) as @pat@2: order)\n       -> -1;\n    ((std/core/types/Eq() : order ) as @pat@0@0: order)\n       -> 0;\n    ((@skip std/core/types/Gt() : order ) as @pat@1@0: order)\n       -> 1;\n  }))","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/order","scrutinee":0,"clauses":[{"tag":"std/core/types/Lt","target":56,"args":{"any":[]}}],"default":{"tag":"3829b15d-85fe-4727-ab5c-2d005a0117cd#[Missing Tag#310]","target":55,"args":{"any":[]}}}]},
{"label":"58([k@[k@[mcore:[#82]#135]#137]#140])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"infixLte(Int, Int): Boolean","out":{"any":[0]},"in":{"any":[1,0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"59([match_def@[#143]#144])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"60([match_std/core/types/Gt@[#143]#145])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@1@0,{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: 1","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: 1","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@1@0,{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"61([#143])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Gt\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Gt\"(())","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/order","scrutinee":0,"clauses":[{"tag":"std/core/types/Gt","target":60,"args":{"any":[]}}],"default":{"tag":"3829b15d-85fe-4727-ab5c-2d005a0117cd#[Missing Tag#311]","target":59,"args":{"any":[]}}}]},
{"label":"62([#148])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@0@0,{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: 0","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: 0","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0@0,{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"63([match_def@[k@[mcore:[#82]#135]#137]#142])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Eq\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Eq\"(())","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/order","scrutinee":0,"clauses":[{"tag":"std/core/types/Eq","target":62,"args":{"any":[]}}],"default":{"tag":"3829b15d-85fe-4727-ab5c-2d005a0117cd#[Missing Tag#312]","target":61,"args":{"any":[]}}}]},
{"label":"64([#151])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@2,{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: -1","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":-1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: -1","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@2,{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"65([k@[mcore:[#82]#135]#137])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: match (y) {\n  ((std/core/types/Lt() : order ) as @pat@2: order)\n     -> -1;\n  ((std/core/types/Eq() : order ) as @pat@0@0: order)\n     -> 0;\n  ((@skip std/core/types/Gt() : order ) as @pat@1@0: order)\n     -> 1;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Lt\"(())","traced":{"any":[]}},
{"op":"Push","target":58,"args":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Lt\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (y) {\n  ((std/core/types/Lt() : order ) as @pat@2: order)\n     -> -1;\n  ((std/core/types/Eq() : order ) as @pat@0@0: order)\n     -> 0;\n  ((@skip std/core/types/Gt() : order ) as @pat@1@0: order)\n     -> 1;\n}","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/order","scrutinee":0,"clauses":[{"tag":"std/core/types/Lt","target":64,"args":{"any":[]}}],"default":{"tag":"3829b15d-85fe-4727-ab5c-2d005a0117cd#[Missing Tag#313]","target":63,"args":{"any":[]}}}]},
{"label":"66([match_def@[#155]#156])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"67([match_std/core/types/Gt@[#155]#157])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: 1","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: 1","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"68([#155])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Gt\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Gt\"(())","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/order","scrutinee":0,"clauses":[{"tag":"std/core/types/Gt","target":67,"args":{"any":[]}}],"default":{"tag":"3829b15d-85fe-4727-ab5c-2d005a0117cd#[Missing Tag#314]","target":66,"args":{"any":[]}}}]},
{"label":"69([#160])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: 0","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: 0","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"70([match_def@[mcore:[#82]#135]#154])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Eq\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Eq\"(())","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/order","scrutinee":0,"clauses":[{"tag":"std/core/types/Eq","target":69,"args":{"any":[]}}],"default":{"tag":"3829b15d-85fe-4727-ab5c-2d005a0117cd#[Missing Tag#315]","target":68,"args":{"any":[]}}}]},
{"label":"71([#163])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: -1","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":-1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: -1","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"72([mcore:[#82]#135])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/int/(<=)((match (x) {\n    ((std/core/types/Lt() : order ) as @pat: order)\n       -> -1;\n    ((std/core/types/Eq() : order ) as @pat@0: order)\n       -> 0;\n    ((@skip std/core/types/Gt() : order ) as @pat@1: order)\n       -> 1;\n  }), (match (y) {\n    ((std/core/types/Lt() : order ) as @pat@2: order)\n       -> -1;\n    ((std/core/types/Eq() : order ) as @pat@0@0: order)\n       -> 0;\n    ((@skip std/core/types/Gt() : order ) as @pat@1@0: order)\n       -> 1;\n  }))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (x) {\n  ((std/core/types/Lt() : order ) as @pat: order)\n     -> -1;\n  ((std/core/types/Eq() : order ) as @pat@0: order)\n     -> 0;\n  ((@skip std/core/types/Gt() : order ) as @pat@1: order)\n     -> 1;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Lt\"(())","traced":{"any":[]}},
{"op":"Push","target":65,"args":{"any":[1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Lt\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (x) {\n  ((std/core/types/Lt() : order ) as @pat: order)\n     -> -1;\n  ((std/core/types/Eq() : order ) as @pat@0: order)\n     -> 0;\n  ((@skip std/core/types/Gt() : order ) as @pat@1: order)\n     -> 1;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/int/(<=)((match (x) {\n    ((std/core/types/Lt() : order ) as @pat: order)\n       -> -1;\n    ((std/core/types/Eq() : order ) as @pat@0: order)\n       -> 0;\n    ((@skip std/core/types/Gt() : order ) as @pat@1: order)\n       -> 1;\n  }), (match (y) {\n    ((std/core/types/Lt() : order ) as @pat@2: order)\n       -> -1;\n    ((std/core/types/Eq() : order ) as @pat@0@0: order)\n       -> 0;\n    ((@skip std/core/types/Gt() : order ) as @pat@1@0: order)\n       -> 1;\n  }))","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/order","scrutinee":0,"clauses":[{"tag":"std/core/types/Lt","target":71,"args":{"any":[]}}],"default":{"tag":"3829b15d-85fe-4727-ab5c-2d005a0117cd#[Missing Tag#316]","target":70,"args":{"any":[]}}}]},
{"label":"73([k@[k@[mcore:[#85]#166]#168]#171])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"infixEq(Int, Int): Boolean","out":{"any":[0]},"in":{"any":[1,0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"74([match_def@[#174]#175])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"75([match_std/core/types/Gt@[#174]#176])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@1@0,{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: 1","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: 1","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@1@0,{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"76([#174])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Gt\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Gt\"(())","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/order","scrutinee":0,"clauses":[{"tag":"std/core/types/Gt","target":75,"args":{"any":[]}}],"default":{"tag":"3829b15d-85fe-4727-ab5c-2d005a0117cd#[Missing Tag#317]","target":74,"args":{"any":[]}}}]},
{"label":"77([#179])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@0@0,{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: 0","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: 0","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0@0,{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"78([match_def@[k@[mcore:[#85]#166]#168]#173])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Eq\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Eq\"(())","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/order","scrutinee":0,"clauses":[{"tag":"std/core/types/Eq","target":77,"args":{"any":[]}}],"default":{"tag":"3829b15d-85fe-4727-ab5c-2d005a0117cd#[Missing Tag#318]","target":76,"args":{"any":[]}}}]},
{"label":"79([#182])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@2,{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: -1","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":-1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: -1","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@2,{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"80([k@[mcore:[#85]#166]#168])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: match (y) {\n  ((std/core/types/Lt() : order ) as @pat@2: order)\n     -> -1;\n  ((std/core/types/Eq() : order ) as @pat@0@0: order)\n     -> 0;\n  ((@skip std/core/types/Gt() : order ) as @pat@1@0: order)\n     -> 1;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Lt\"(())","traced":{"any":[]}},
{"op":"Push","target":73,"args":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Lt\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (y) {\n  ((std/core/types/Lt() : order ) as @pat@2: order)\n     -> -1;\n  ((std/core/types/Eq() : order ) as @pat@0@0: order)\n     -> 0;\n  ((@skip std/core/types/Gt() : order ) as @pat@1@0: order)\n     -> 1;\n}","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/order","scrutinee":0,"clauses":[{"tag":"std/core/types/Lt","target":79,"args":{"any":[]}}],"default":{"tag":"3829b15d-85fe-4727-ab5c-2d005a0117cd#[Missing Tag#319]","target":78,"args":{"any":[]}}}]},
{"label":"81([match_def@[#186]#187])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"82([match_std/core/types/Gt@[#186]#188])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: 1","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: 1","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"83([#186])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Gt\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Gt\"(())","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/order","scrutinee":0,"clauses":[{"tag":"std/core/types/Gt","target":82,"args":{"any":[]}}],"default":{"tag":"3829b15d-85fe-4727-ab5c-2d005a0117cd#[Missing Tag#320]","target":81,"args":{"any":[]}}}]},
{"label":"84([#191])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: 0","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: 0","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"85([match_def@[mcore:[#85]#166]#185])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Eq\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Eq\"(())","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/order","scrutinee":0,"clauses":[{"tag":"std/core/types/Eq","target":84,"args":{"any":[]}}],"default":{"tag":"3829b15d-85fe-4727-ab5c-2d005a0117cd#[Missing Tag#321]","target":83,"args":{"any":[]}}}]},
{"label":"86([#194])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: -1","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":-1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: -1","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"87([mcore:[#85]#166])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/int/(==)((match (x) {\n    ((std/core/types/Lt() : order ) as @pat: order)\n       -> -1;\n    ((std/core/types/Eq() : order ) as @pat@0: order)\n       -> 0;\n    ((@skip std/core/types/Gt() : order ) as @pat@1: order)\n       -> 1;\n  }), (match (y) {\n    ((std/core/types/Lt() : order ) as @pat@2: order)\n       -> -1;\n    ((std/core/types/Eq() : order ) as @pat@0@0: order)\n       -> 0;\n    ((@skip std/core/types/Gt() : order ) as @pat@1@0: order)\n       -> 1;\n  }))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (x) {\n  ((std/core/types/Lt() : order ) as @pat: order)\n     -> -1;\n  ((std/core/types/Eq() : order ) as @pat@0: order)\n     -> 0;\n  ((@skip std/core/types/Gt() : order ) as @pat@1: order)\n     -> 1;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Lt\"(())","traced":{"any":[]}},
{"op":"Push","target":80,"args":{"any":[1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Lt\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (x) {\n  ((std/core/types/Lt() : order ) as @pat: order)\n     -> -1;\n  ((std/core/types/Eq() : order ) as @pat@0: order)\n     -> 0;\n  ((@skip std/core/types/Gt() : order ) as @pat@1: order)\n     -> 1;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/int/(==)((match (x) {\n    ((std/core/types/Lt() : order ) as @pat: order)\n       -> -1;\n    ((std/core/types/Eq() : order ) as @pat@0: order)\n       -> 0;\n    ((@skip std/core/types/Gt() : order ) as @pat@1: order)\n       -> 1;\n  }), (match (y) {\n    ((std/core/types/Lt() : order ) as @pat@2: order)\n       -> -1;\n    ((std/core/types/Eq() : order ) as @pat@0@0: order)\n       -> 0;\n    ((@skip std/core/types/Gt() : order ) as @pat@1@0: order)\n       -> 1;\n  }))","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/order","scrutinee":0,"clauses":[{"tag":"std/core/types/Lt","target":86,"args":{"any":[]}}],"default":{"tag":"3829b15d-85fe-4727-ab5c-2d005a0117cd#[Missing Tag#322]","target":85,"args":{"any":[]}}}]},
{"label":"88([k@[k@[mcore:[#88]#197]#199]#202])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"infixGt(Int, Int): Boolean","out":{"any":[0]},"in":{"any":[1,0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"89([match_def@[#205]#206])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"90([match_std/core/types/Gt@[#205]#207])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@1@0,{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: 1","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: 1","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@1@0,{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"91([#205])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Gt\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Gt\"(())","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/order","scrutinee":0,"clauses":[{"tag":"std/core/types/Gt","target":90,"args":{"any":[]}}],"default":{"tag":"3829b15d-85fe-4727-ab5c-2d005a0117cd#[Missing Tag#323]","target":89,"args":{"any":[]}}}]},
{"label":"92([#210])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@0@0,{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: 0","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: 0","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0@0,{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"93([match_def@[k@[mcore:[#88]#197]#199]#204])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Eq\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Eq\"(())","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/order","scrutinee":0,"clauses":[{"tag":"std/core/types/Eq","target":92,"args":{"any":[]}}],"default":{"tag":"3829b15d-85fe-4727-ab5c-2d005a0117cd#[Missing Tag#324]","target":91,"args":{"any":[]}}}]},
{"label":"94([#213])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@2,{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: -1","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":-1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: -1","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@2,{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"95([k@[mcore:[#88]#197]#199])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: match (y) {\n  ((std/core/types/Lt() : order ) as @pat@2: order)\n     -> -1;\n  ((std/core/types/Eq() : order ) as @pat@0@0: order)\n     -> 0;\n  ((@skip std/core/types/Gt() : order ) as @pat@1@0: order)\n     -> 1;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Lt\"(())","traced":{"any":[]}},
{"op":"Push","target":88,"args":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Lt\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (y) {\n  ((std/core/types/Lt() : order ) as @pat@2: order)\n     -> -1;\n  ((std/core/types/Eq() : order ) as @pat@0@0: order)\n     -> 0;\n  ((@skip std/core/types/Gt() : order ) as @pat@1@0: order)\n     -> 1;\n}","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/order","scrutinee":0,"clauses":[{"tag":"std/core/types/Lt","target":94,"args":{"any":[]}}],"default":{"tag":"3829b15d-85fe-4727-ab5c-2d005a0117cd#[Missing Tag#325]","target":93,"args":{"any":[]}}}]},
{"label":"96([match_def@[#217]#218])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"97([match_std/core/types/Gt@[#217]#219])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: 1","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: 1","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"98([#217])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Gt\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Gt\"(())","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/order","scrutinee":0,"clauses":[{"tag":"std/core/types/Gt","target":97,"args":{"any":[]}}],"default":{"tag":"3829b15d-85fe-4727-ab5c-2d005a0117cd#[Missing Tag#326]","target":96,"args":{"any":[]}}}]},
{"label":"99([#222])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: 0","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: 0","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"100([match_def@[mcore:[#88]#197]#216])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Eq\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Eq\"(())","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/order","scrutinee":0,"clauses":[{"tag":"std/core/types/Eq","target":99,"args":{"any":[]}}],"default":{"tag":"3829b15d-85fe-4727-ab5c-2d005a0117cd#[Missing Tag#327]","target":98,"args":{"any":[]}}}]},
{"label":"101([#225])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: -1","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":-1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: -1","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"102([mcore:[#88]#197])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/int/(>)((match (x) {\n    ((std/core/types/Lt() : order ) as @pat: order)\n       -> -1;\n    ((std/core/types/Eq() : order ) as @pat@0: order)\n       -> 0;\n    ((@skip std/core/types/Gt() : order ) as @pat@1: order)\n       -> 1;\n  }), (match (y) {\n    ((std/core/types/Lt() : order ) as @pat@2: order)\n       -> -1;\n    ((std/core/types/Eq() : order ) as @pat@0@0: order)\n       -> 0;\n    ((@skip std/core/types/Gt() : order ) as @pat@1@0: order)\n       -> 1;\n  }))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (x) {\n  ((std/core/types/Lt() : order ) as @pat: order)\n     -> -1;\n  ((std/core/types/Eq() : order ) as @pat@0: order)\n     -> 0;\n  ((@skip std/core/types/Gt() : order ) as @pat@1: order)\n     -> 1;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Lt\"(())","traced":{"any":[]}},
{"op":"Push","target":95,"args":{"any":[1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Lt\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (x) {\n  ((std/core/types/Lt() : order ) as @pat: order)\n     -> -1;\n  ((std/core/types/Eq() : order ) as @pat@0: order)\n     -> 0;\n  ((@skip std/core/types/Gt() : order ) as @pat@1: order)\n     -> 1;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/int/(>)((match (x) {\n    ((std/core/types/Lt() : order ) as @pat: order)\n       -> -1;\n    ((std/core/types/Eq() : order ) as @pat@0: order)\n       -> 0;\n    ((@skip std/core/types/Gt() : order ) as @pat@1: order)\n       -> 1;\n  }), (match (y) {\n    ((std/core/types/Lt() : order ) as @pat@2: order)\n       -> -1;\n    ((std/core/types/Eq() : order ) as @pat@0@0: order)\n       -> 0;\n    ((@skip std/core/types/Gt() : order ) as @pat@1@0: order)\n       -> 1;\n  }))","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/order","scrutinee":0,"clauses":[{"tag":"std/core/types/Lt","target":101,"args":{"any":[]}}],"default":{"tag":"3829b15d-85fe-4727-ab5c-2d005a0117cd#[Missing Tag#328]","target":100,"args":{"any":[]}}}]},
{"label":"103([k@[k@[mcore:[#91]#228]#230]#233])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"infixGte(Int, Int): Boolean","out":{"any":[0]},"in":{"any":[1,0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"104([match_def@[#236]#237])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"105([match_std/core/types/Gt@[#236]#238])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@1@0,{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: 1","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: 1","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@1@0,{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"106([#236])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Gt\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Gt\"(())","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/order","scrutinee":0,"clauses":[{"tag":"std/core/types/Gt","target":105,"args":{"any":[]}}],"default":{"tag":"3829b15d-85fe-4727-ab5c-2d005a0117cd#[Missing Tag#329]","target":104,"args":{"any":[]}}}]},
{"label":"107([#241])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@0@0,{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: 0","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: 0","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0@0,{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"108([match_def@[k@[mcore:[#91]#228]#230]#235])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Eq\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Eq\"(())","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/order","scrutinee":0,"clauses":[{"tag":"std/core/types/Eq","target":107,"args":{"any":[]}}],"default":{"tag":"3829b15d-85fe-4727-ab5c-2d005a0117cd#[Missing Tag#330]","target":106,"args":{"any":[]}}}]},
{"label":"109([#244])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@2,{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: -1","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":-1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: -1","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@2,{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"110([k@[mcore:[#91]#228]#230])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: match (y) {\n  ((std/core/types/Lt() : order ) as @pat@2: order)\n     -> -1;\n  ((std/core/types/Eq() : order ) as @pat@0@0: order)\n     -> 0;\n  ((@skip std/core/types/Gt() : order ) as @pat@1@0: order)\n     -> 1;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Lt\"(())","traced":{"any":[]}},
{"op":"Push","target":103,"args":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Lt\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (y) {\n  ((std/core/types/Lt() : order ) as @pat@2: order)\n     -> -1;\n  ((std/core/types/Eq() : order ) as @pat@0@0: order)\n     -> 0;\n  ((@skip std/core/types/Gt() : order ) as @pat@1@0: order)\n     -> 1;\n}","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/order","scrutinee":0,"clauses":[{"tag":"std/core/types/Lt","target":109,"args":{"any":[]}}],"default":{"tag":"3829b15d-85fe-4727-ab5c-2d005a0117cd#[Missing Tag#331]","target":108,"args":{"any":[]}}}]},
{"label":"111([match_def@[#248]#249])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"112([match_std/core/types/Gt@[#248]#250])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: 1","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: 1","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"113([#248])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Gt\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Gt\"(())","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/order","scrutinee":0,"clauses":[{"tag":"std/core/types/Gt","target":112,"args":{"any":[]}}],"default":{"tag":"3829b15d-85fe-4727-ab5c-2d005a0117cd#[Missing Tag#332]","target":111,"args":{"any":[]}}}]},
{"label":"114([#253])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: 0","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: 0","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"115([match_def@[mcore:[#91]#228]#247])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Eq\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Eq\"(())","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/order","scrutinee":0,"clauses":[{"tag":"std/core/types/Eq","target":114,"args":{"any":[]}}],"default":{"tag":"3829b15d-85fe-4727-ab5c-2d005a0117cd#[Missing Tag#333]","target":113,"args":{"any":[]}}}]},
{"label":"116([#256])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: -1","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":-1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: -1","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"117([mcore:[#91]#228])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/int/(>=)((match (x) {\n    ((std/core/types/Lt() : order ) as @pat: order)\n       -> -1;\n    ((std/core/types/Eq() : order ) as @pat@0: order)\n       -> 0;\n    ((@skip std/core/types/Gt() : order ) as @pat@1: order)\n       -> 1;\n  }), (match (y) {\n    ((std/core/types/Lt() : order ) as @pat@2: order)\n       -> -1;\n    ((std/core/types/Eq() : order ) as @pat@0@0: order)\n       -> 0;\n    ((@skip std/core/types/Gt() : order ) as @pat@1@0: order)\n       -> 1;\n  }))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (x) {\n  ((std/core/types/Lt() : order ) as @pat: order)\n     -> -1;\n  ((std/core/types/Eq() : order ) as @pat@0: order)\n     -> 0;\n  ((@skip std/core/types/Gt() : order ) as @pat@1: order)\n     -> 1;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Lt\"(())","traced":{"any":[]}},
{"op":"Push","target":110,"args":{"any":[1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Lt\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (x) {\n  ((std/core/types/Lt() : order ) as @pat: order)\n     -> -1;\n  ((std/core/types/Eq() : order ) as @pat@0: order)\n     -> 0;\n  ((@skip std/core/types/Gt() : order ) as @pat@1: order)\n     -> 1;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/int/(>=)((match (x) {\n    ((std/core/types/Lt() : order ) as @pat: order)\n       -> -1;\n    ((std/core/types/Eq() : order ) as @pat@0: order)\n       -> 0;\n    ((@skip std/core/types/Gt() : order ) as @pat@1: order)\n       -> 1;\n  }), (match (y) {\n    ((std/core/types/Lt() : order ) as @pat@2: order)\n       -> -1;\n    ((std/core/types/Eq() : order ) as @pat@0@0: order)\n       -> 0;\n    ((@skip std/core/types/Gt() : order ) as @pat@1@0: order)\n       -> 1;\n  }))","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/order","scrutinee":0,"clauses":[{"tag":"std/core/types/Lt","target":116,"args":{"any":[]}}],"default":{"tag":"3829b15d-85fe-4727-ab5c-2d005a0117cd#[Missing Tag#334]","target":115,"args":{"any":[]}}}]},
{"label":"118([#279])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[1,0]}},
{"op":"Const","format":"string","out":0,"value":"ThisLib_901507df-bccc-4912-99df-0946282aa79b"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[0,2]}},
{"op":"Copy","from":2,"to":0},
{"op":"Return","args":{"any":[0]}}]},
{"label":"119([k@[mcore:[static initializers#93]#259]#269])",
"frameDescriptor":{"regs_any":16},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[1,0]}},
{"op":"Const","format":"string","out":0,"value":"[#56]"},
{"op":"Const","format":"path","out":1,"value":"$0/./std_core_int.rpyeffect"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[0,1]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/int)"},
{"op":"Push","target":118,"args":{"any":[0,2]}},
{"op":"LoadLib","path":1}]},
{"label":"120([mcore:[static initializers#93]#259])",
"frameDescriptor":{"regs_any":16},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Const","format":"string","out":1,"value":"[#55]"},
{"op":"Const","format":"path","out":2,"value":"$0/./std_core_types.rpyeffect"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[1]},"in":{"any":[1,2]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/types)"},
{"op":"Push","target":119,"args":{"any":[1,0]}},
{"op":"LoadLib","path":2}]},
{"label":"121([k@[main entrypoint#2]#287])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Const","format":"string","out":0,"value":"Undefined: is a library"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"122([main entrypoint#2])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[]}},
{"op":"Copy","from":-1,"to":0},
{"op":"Push","target":121,"args":{"any":[]}},
{"op":"Jump","target":120}]}],
"symbols":[{"name":"std/core/order/int","position":6},
{"name":"std/core/order/order2/int","position":13},
{"name":"std/core/order/order2","position":27},
{"name":"std/core/order/(!=)","position":42},
{"name":"std/core/order/(<)","position":57},
{"name":"std/core/order/(<=)","position":72},
{"name":"std/core/order/(==)","position":87},
{"name":"std/core/order/(>)","position":102},
{"name":"std/core/order/(>=)","position":117},
{"name":"$static-init","position":120},
{"name":"$entrypoint","position":122}],
"frameSize":{"regs_any":16}}