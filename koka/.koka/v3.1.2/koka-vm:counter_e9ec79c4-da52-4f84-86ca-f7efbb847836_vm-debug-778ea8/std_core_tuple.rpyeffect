{"blocks":[{"label":"0([mcore:[#80]#3])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Const","format":"string","out":0,"value":"()"},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1([mcore:[#81]#5])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"CallLib","lib":2,"symbol":"std/core/types/Tuple2"}]},
{"label":"2([k@[k@[k@[k@[mcore:[#89]#11]#13]#16]#19]#22])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Swap","a":0,"b":1},
{"op":"Jump","target":1}]},
{"label":"3([k@[k@[k@[mcore:[#89]#11]#13]#16]#19])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Push","target":2,"args":{"any":[2]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"4([#27])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"5([#28])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"t\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple2\\\"\"}}),(@pat@0@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"2\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@0@0: 241) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"2\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@x@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"3\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@x@0: 241) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"3\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"t\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple2\\\"\"}}),(@pat@0@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"2\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@0@0: 241) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"2\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@x@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"3\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@x@0: 241) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"3\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"6([k@[k@[mcore:[#89]#11]#13]#16])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: f((match (t) {\n  ((@skip std/core/types/Tuple2((@pat@0@0: 241) : a, (@x@0: 241) : a) : (a, a) ) as @pat@1: (241, 241))\n     -> @x@0;\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (t) {\n  ((@skip std/core/types/Tuple2((@pat@0@0: 241) : a, (@x@0: 241) : a) : (a, a) ) as @pat@1: (241, 241))\n     -> @x@0;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"t\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple2\\\"\"}}: \"std/core/types/tuple2\".\"std/core/types/Tuple2\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"2\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"3\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Push","target":3,"args":{"any":[1,0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"t\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple2\\\"\"}}: \"std/core/types/tuple2\".\"std/core/types/Tuple2\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"2\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"3\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (t) {\n  ((@skip std/core/types/Tuple2((@pat@0@0: 241) : a, (@x@0: 241) : a) : (a, a) ) as @pat@1: (241, 241))\n     -> @x@0;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f((match (t) {\n  ((@skip std/core/types/Tuple2((@pat@0@0: 241) : a, (@x@0: 241) : a) : (a, a) ) as @pat@1: (241, 241))\n     -> @x@0;\n}))","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/tuple2","scrutinee":2,"clauses":[{"tag":"std/core/types/Tuple2","target":5,"args":{"any":[0,1]}}],"default":{"tag":"e6c6f4aa-c162-4182-8a95-b3ec67052e72#[Missing Tag#407]","target":4,"args":{"any":[]}}}]},
{"label":"7([k@[mcore:[#89]#11]#13])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Push","target":6,"args":{"any":[1,2]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"8([match_def@[mcore:[#89]#11]#29])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"9([#30])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"t\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple2\\\"\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"0\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@x: 241) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"0\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"1\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@0: 241) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"1\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"t\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple2\\\"\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"0\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@x: 241) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"0\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"1\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@0: 241) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"1\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"10([mcore:[#89]#11])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/Tuple2<a,a>((f((match (t) {\n    ((@skip std/core/types/Tuple2((@x: 241) : a, (@pat@0: 241) : a) : (a, a) ) as @pat: (241, 241))\n       -> @x;\n  }))), (f((match (t) {\n    ((@skip std/core/types/Tuple2((@pat@0@0: 241) : a, (@x@0: 241) : a) : (a, a) ) as @pat@1: (241, 241))\n       -> @x@0;\n  }))))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: f((match (t) {\n  ((@skip std/core/types/Tuple2((@x: 241) : a, (@pat@0: 241) : a) : (a, a) ) as @pat: (241, 241))\n     -> @x;\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (t) {\n  ((@skip std/core/types/Tuple2((@x: 241) : a, (@pat@0: 241) : a) : (a, a) ) as @pat: (241, 241))\n     -> @x;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"t\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple2\\\"\"}}: \"std/core/types/tuple2\".\"std/core/types/Tuple2\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"0\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"1\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Push","target":7,"args":{"any":[1,0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"t\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple2\\\"\"}}: \"std/core/types/tuple2\".\"std/core/types/Tuple2\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"0\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"1\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (t) {\n  ((@skip std/core/types/Tuple2((@x: 241) : a, (@pat@0: 241) : a) : (a, a) ) as @pat: (241, 241))\n     -> @x;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f((match (t) {\n  ((@skip std/core/types/Tuple2((@x: 241) : a, (@pat@0: 241) : a) : (a, a) ) as @pat: (241, 241))\n     -> @x;\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/Tuple2<a,a>((f((match (t) {\n    ((@skip std/core/types/Tuple2((@x: 241) : a, (@pat@0: 241) : a) : (a, a) ) as @pat: (241, 241))\n       -> @x;\n  }))), (f((match (t) {\n    ((@skip std/core/types/Tuple2((@pat@0@0: 241) : a, (@x@0: 241) : a) : (a, a) ) as @pat@1: (241, 241))\n       -> @x@0;\n  }))))","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/tuple2","scrutinee":0,"clauses":[{"tag":"std/core/types/Tuple2","target":9,"args":{"any":[0,1]}}],"default":{"tag":"e6c6f4aa-c162-4182-8a95-b3ec67052e72#[Missing Tag#408]","target":8,"args":{"any":[]}}}]},
{"label":"11([mcore:[#90]#31])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"CallLib","lib":3,"symbol":"std/core/types/Tuple3"}]},
{"label":"12([k@[k@[#49]#52]#55])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Jump","target":11}]},
{"label":"13([k@[#49]#52])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Push","target":12,"args":{"any":[2,3]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"14([match_def@[#49]#60])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"15([match_std/core/types/Tuple3@[#49]#61])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@3,{\"op\": \"Var\",\"id\": \"t\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}),(@pat@0@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"10\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@0@1: 388) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"10\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"11\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@1@1: 388) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"11\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@x@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"12\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@x@1: 388) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"12\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@3,{\"op\": \"Var\",\"id\": \"t\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}),(@pat@0@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"10\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@0@1: 388) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"10\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"11\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@1@1: 388) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"11\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@x@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"12\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@x@1: 388) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"12\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"16([#49])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: f((match (t) {\n  ((@skip std/core/types/Tuple3((@pat@0@1: 388) : a, (@pat@1@1: 388) : a, (@x@1: 388) : a) : (a, a, a) ) as @pat@3: (388, 388, 388))\n     -> @x@1;\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (t) {\n  ((@skip std/core/types/Tuple3((@pat@0@1: 388) : a, (@pat@1@1: 388) : a, (@x@1: 388) : a) : (a, a, a) ) as @pat@3: (388, 388, 388))\n     -> @x@1;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"t\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}: \"std/core/types/tuple3\".\"std/core/types/Tuple3\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"10\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"11\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"12\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Push","target":13,"args":{"any":[1,3,0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"t\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}: \"std/core/types/tuple3\".\"std/core/types/Tuple3\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"10\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"11\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"12\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (t) {\n  ((@skip std/core/types/Tuple3((@pat@0@1: 388) : a, (@pat@1@1: 388) : a, (@x@1: 388) : a) : (a, a, a) ) as @pat@3: (388, 388, 388))\n     -> @x@1;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f((match (t) {\n  ((@skip std/core/types/Tuple3((@pat@0@1: 388) : a, (@pat@1@1: 388) : a, (@x@1: 388) : a) : (a, a, a) ) as @pat@3: (388, 388, 388))\n     -> @x@1;\n}))","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/tuple3","scrutinee":2,"clauses":[{"tag":"std/core/types/Tuple3","target":15,"args":{"any":[0,1,2]}}],"default":{"tag":"e6c6f4aa-c162-4182-8a95-b3ec67052e72#[Missing Tag#409]","target":14,"args":{"any":[]}}}]},
{"label":"17([k@[k@[k@[mcore:[#101]#38]#40]#43]#46])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Push","target":16,"args":{"any":[1,2,3]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"18([#62])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"19([#63])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@2,{\"op\": \"Var\",\"id\": \"t\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}),(@pat@0@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"7\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@0@0: 388) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"7\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@x@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"8\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@x@0: 388) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"8\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"9\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@1@0: 388) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"9\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@2,{\"op\": \"Var\",\"id\": \"t\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}),(@pat@0@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"7\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@0@0: 388) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"7\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@x@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"8\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@x@0: 388) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"8\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"9\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@1@0: 388) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"9\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"20([k@[k@[mcore:[#101]#38]#40]#43])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: f((match (t) {\n  ((@skip std/core/types/Tuple3((@pat@0@0: 388) : a, (@x@0: 388) : a, (@pat@1@0: 388) : a) : (a, a, a) ) as @pat@2: (388, 388, 388))\n     -> @x@0;\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (t) {\n  ((@skip std/core/types/Tuple3((@pat@0@0: 388) : a, (@x@0: 388) : a, (@pat@1@0: 388) : a) : (a, a, a) ) as @pat@2: (388, 388, 388))\n     -> @x@0;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"t\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}: \"std/core/types/tuple3\".\"std/core/types/Tuple3\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"7\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"8\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"9\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Push","target":17,"args":{"any":[1,2,0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"t\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}: \"std/core/types/tuple3\".\"std/core/types/Tuple3\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"7\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"8\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"9\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (t) {\n  ((@skip std/core/types/Tuple3((@pat@0@0: 388) : a, (@x@0: 388) : a, (@pat@1@0: 388) : a) : (a, a, a) ) as @pat@2: (388, 388, 388))\n     -> @x@0;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f((match (t) {\n  ((@skip std/core/types/Tuple3((@pat@0@0: 388) : a, (@x@0: 388) : a, (@pat@1@0: 388) : a) : (a, a, a) ) as @pat@2: (388, 388, 388))\n     -> @x@0;\n}))","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/tuple3","scrutinee":2,"clauses":[{"tag":"std/core/types/Tuple3","target":19,"args":{"any":[0,1,2]}}],"default":{"tag":"e6c6f4aa-c162-4182-8a95-b3ec67052e72#[Missing Tag#410]","target":18,"args":{"any":[]}}}]},
{"label":"21([k@[mcore:[#101]#38]#40])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Push","target":20,"args":{"any":[1,2]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"22([match_def@[mcore:[#101]#38]#64])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"23([#65])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"t\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"4\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@x: 388) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"4\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"5\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@0: 388) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"5\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"6\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@1: 388) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"6\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"t\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"4\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@x: 388) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"4\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"5\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@0: 388) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"5\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"6\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@1: 388) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"6\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"24([mcore:[#101]#38])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/Tuple3<a,a,a>((f((match (t) {\n    ((@skip std/core/types/Tuple3((@x: 388) : a, (@pat@0: 388) : a, (@pat@1: 388) : a) : (a, a, a) ) as @pat: (388, 388, 388))\n       -> @x;\n  }))), (f((match (t) {\n    ((@skip std/core/types/Tuple3((@pat@0@0: 388) : a, (@x@0: 388) : a, (@pat@1@0: 388) : a) : (a, a, a) ) as @pat@2: (388, 388, 388))\n       -> @x@0;\n  }))), (f((match (t) {\n    ((@skip std/core/types/Tuple3((@pat@0@1: 388) : a, (@pat@1@1: 388) : a, (@x@1: 388) : a) : (a, a, a) ) as @pat@3: (388, 388, 388))\n       -> @x@1;\n  }))))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: f((match (t) {\n  ((@skip std/core/types/Tuple3((@x: 388) : a, (@pat@0: 388) : a, (@pat@1: 388) : a) : (a, a, a) ) as @pat: (388, 388, 388))\n     -> @x;\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (t) {\n  ((@skip std/core/types/Tuple3((@x: 388) : a, (@pat@0: 388) : a, (@pat@1: 388) : a) : (a, a, a) ) as @pat: (388, 388, 388))\n     -> @x;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"t\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}: \"std/core/types/tuple3\".\"std/core/types/Tuple3\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"4\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"5\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"6\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Push","target":21,"args":{"any":[1,0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"t\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}: \"std/core/types/tuple3\".\"std/core/types/Tuple3\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"4\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"5\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"6\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (t) {\n  ((@skip std/core/types/Tuple3((@x: 388) : a, (@pat@0: 388) : a, (@pat@1: 388) : a) : (a, a, a) ) as @pat: (388, 388, 388))\n     -> @x;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f((match (t) {\n  ((@skip std/core/types/Tuple3((@x: 388) : a, (@pat@0: 388) : a, (@pat@1: 388) : a) : (a, a, a) ) as @pat: (388, 388, 388))\n     -> @x;\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/Tuple3<a,a,a>((f((match (t) {\n    ((@skip std/core/types/Tuple3((@x: 388) : a, (@pat@0: 388) : a, (@pat@1: 388) : a) : (a, a, a) ) as @pat: (388, 388, 388))\n       -> @x;\n  }))), (f((match (t) {\n    ((@skip std/core/types/Tuple3((@pat@0@0: 388) : a, (@x@0: 388) : a, (@pat@1@0: 388) : a) : (a, a, a) ) as @pat@2: (388, 388, 388))\n       -> @x@0;\n  }))), (f((match (t) {\n    ((@skip std/core/types/Tuple3((@pat@0@1: 388) : a, (@pat@1@1: 388) : a, (@x@1: 388) : a) : (a, a, a) ) as @pat@3: (388, 388, 388))\n       -> @x@1;\n  }))))","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/tuple3","scrutinee":0,"clauses":[{"tag":"std/core/types/Tuple3","target":23,"args":{"any":[0,1,2]}}],"default":{"tag":"e6c6f4aa-c162-4182-8a95-b3ec67052e72#[Missing Tag#411]","target":22,"args":{"any":[]}}}]},
{"label":"25([mcore:[#102]#66])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4]}},
{"op":"Const","format":"string","out":4,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"CallLib","lib":4,"symbol":"std/core/types/Tuple4"}]},
{"label":"26([k@[k@[k@[k@[#85]#88]#91]#94]#97])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Const","format":"string","out":4,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Jump","target":25}]},
{"label":"27([k@[k@[k@[#85]#88]#91]#94])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Push","target":26,"args":{"any":[2,3,4]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"28([match_def@[k@[k@[#85]#88]#91]#102])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"29([#103])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@5,{\"op\": \"Var\",\"id\": \"t\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple4\\\"\"}}),(@pat@0@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"25\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@0@2: 575) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"25\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"26\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@1@2: 575) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"26\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@2@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"27\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2@2: 575) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"27\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@x@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"field4\\\"28\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@x@2: 575) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"field4\\\\\\\"28\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@5,{\"op\": \"Var\",\"id\": \"t\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple4\\\"\"}}),(@pat@0@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"25\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@0@2: 575) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"25\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"26\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@1@2: 575) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"26\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@2@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"27\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2@2: 575) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"27\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@x@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"field4\\\"28\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@x@2: 575) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"field4\\\\\\\"28\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"30([k@[k@[#85]#88]#91])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: f((match (t) {\n  ((@skip std/core/types/Tuple4((@pat@0@2: 575) : a, (@pat@1@2: 575) : a, (@pat@2@2: 575) : a, (@x@2: 575) : a) : (a, a, a, a) ) as @pat@5: (575, 575, 575, 575))\n     -> @x@2;\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (t) {\n  ((@skip std/core/types/Tuple4((@pat@0@2: 575) : a, (@pat@1@2: 575) : a, (@pat@2@2: 575) : a, (@x@2: 575) : a) : (a, a, a, a) ) as @pat@5: (575, 575, 575, 575))\n     -> @x@2;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"t\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple4\\\"\"}}: \"std/core/types/tuple4\".\"std/core/types/Tuple4\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"25\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"26\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"27\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"field4\\\"28\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Push","target":27,"args":{"any":[1,3,4,0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"t\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple4\\\"\"}}: \"std/core/types/tuple4\".\"std/core/types/Tuple4\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"25\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"26\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"27\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"field4\\\"28\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (t) {\n  ((@skip std/core/types/Tuple4((@pat@0@2: 575) : a, (@pat@1@2: 575) : a, (@pat@2@2: 575) : a, (@x@2: 575) : a) : (a, a, a, a) ) as @pat@5: (575, 575, 575, 575))\n     -> @x@2;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f((match (t) {\n  ((@skip std/core/types/Tuple4((@pat@0@2: 575) : a, (@pat@1@2: 575) : a, (@pat@2@2: 575) : a, (@x@2: 575) : a) : (a, a, a, a) ) as @pat@5: (575, 575, 575, 575))\n     -> @x@2;\n}))","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/tuple4","scrutinee":2,"clauses":[{"tag":"std/core/types/Tuple4","target":29,"args":{"any":[0,1,2,3]}}],"default":{"tag":"e6c6f4aa-c162-4182-8a95-b3ec67052e72#[Missing Tag#412]","target":28,"args":{"any":[]}}}]},
{"label":"31([k@[#85]#88])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Push","target":30,"args":{"any":[1,2,3,4]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"32([match_def@[#85]#104])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"33([match_std/core/types/Tuple4@[#85]#105])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@4,{\"op\": \"Var\",\"id\": \"t\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple4\\\"\"}}),(@pat@0@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"21\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@0@1: 575) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"21\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"22\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@1@1: 575) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"22\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@x@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"23\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@x@1: 575) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"23\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@2@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"field4\\\"24\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2@1: 575) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"field4\\\\\\\"24\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@4,{\"op\": \"Var\",\"id\": \"t\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple4\\\"\"}}),(@pat@0@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"21\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@0@1: 575) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"21\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"22\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@1@1: 575) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"22\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@x@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"23\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@x@1: 575) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"23\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@2@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"field4\\\"24\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2@1: 575) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"field4\\\\\\\"24\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"34([#85])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: f((match (t) {\n  ((@skip std/core/types/Tuple4((@pat@0@1: 575) : a, (@pat@1@1: 575) : a, (@x@1: 575) : a, (@pat@2@1: 575) : a) : (a, a, a, a) ) as @pat@4: (575, 575, 575, 575))\n     -> @x@1;\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (t) {\n  ((@skip std/core/types/Tuple4((@pat@0@1: 575) : a, (@pat@1@1: 575) : a, (@x@1: 575) : a, (@pat@2@1: 575) : a) : (a, a, a, a) ) as @pat@4: (575, 575, 575, 575))\n     -> @x@1;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"t\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple4\\\"\"}}: \"std/core/types/tuple4\".\"std/core/types/Tuple4\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"21\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"22\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"23\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"field4\\\"24\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Push","target":31,"args":{"any":[1,2,3,0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"t\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple4\\\"\"}}: \"std/core/types/tuple4\".\"std/core/types/Tuple4\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"21\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"22\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"23\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"field4\\\"24\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (t) {\n  ((@skip std/core/types/Tuple4((@pat@0@1: 575) : a, (@pat@1@1: 575) : a, (@x@1: 575) : a, (@pat@2@1: 575) : a) : (a, a, a, a) ) as @pat@4: (575, 575, 575, 575))\n     -> @x@1;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f((match (t) {\n  ((@skip std/core/types/Tuple4((@pat@0@1: 575) : a, (@pat@1@1: 575) : a, (@x@1: 575) : a, (@pat@2@1: 575) : a) : (a, a, a, a) ) as @pat@4: (575, 575, 575, 575))\n     -> @x@1;\n}))","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/tuple4","scrutinee":2,"clauses":[{"tag":"std/core/types/Tuple4","target":33,"args":{"any":[0,1,2,3]}}],"default":{"tag":"e6c6f4aa-c162-4182-8a95-b3ec67052e72#[Missing Tag#413]","target":32,"args":{"any":[]}}}]},
{"label":"35([k@[k@[k@[mcore:[#116]#74]#76]#79]#82])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Push","target":34,"args":{"any":[1,2,3]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"36([#106])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"37([#107])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@3,{\"op\": \"Var\",\"id\": \"t\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple4\\\"\"}}),(@pat@0@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"17\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@0@0: 575) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"17\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@x@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"18\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@x@0: 575) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"18\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"19\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@1@0: 575) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"19\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@2@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"field4\\\"20\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2@0: 575) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"field4\\\\\\\"20\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@3,{\"op\": \"Var\",\"id\": \"t\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple4\\\"\"}}),(@pat@0@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"17\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@0@0: 575) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"17\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@x@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"18\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@x@0: 575) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"18\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"19\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@1@0: 575) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"19\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@2@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"field4\\\"20\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2@0: 575) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"field4\\\\\\\"20\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"38([k@[k@[mcore:[#116]#74]#76]#79])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: f((match (t) {\n  ((@skip std/core/types/Tuple4((@pat@0@0: 575) : a, (@x@0: 575) : a, (@pat@1@0: 575) : a, (@pat@2@0: 575) : a) : (a, a, a, a) ) as @pat@3: (575, 575, 575, 575))\n     -> @x@0;\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (t) {\n  ((@skip std/core/types/Tuple4((@pat@0@0: 575) : a, (@x@0: 575) : a, (@pat@1@0: 575) : a, (@pat@2@0: 575) : a) : (a, a, a, a) ) as @pat@3: (575, 575, 575, 575))\n     -> @x@0;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"t\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple4\\\"\"}}: \"std/core/types/tuple4\".\"std/core/types/Tuple4\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"17\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"18\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"19\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"field4\\\"20\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Push","target":35,"args":{"any":[1,2,0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"t\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple4\\\"\"}}: \"std/core/types/tuple4\".\"std/core/types/Tuple4\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"17\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"18\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"19\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"field4\\\"20\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (t) {\n  ((@skip std/core/types/Tuple4((@pat@0@0: 575) : a, (@x@0: 575) : a, (@pat@1@0: 575) : a, (@pat@2@0: 575) : a) : (a, a, a, a) ) as @pat@3: (575, 575, 575, 575))\n     -> @x@0;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f((match (t) {\n  ((@skip std/core/types/Tuple4((@pat@0@0: 575) : a, (@x@0: 575) : a, (@pat@1@0: 575) : a, (@pat@2@0: 575) : a) : (a, a, a, a) ) as @pat@3: (575, 575, 575, 575))\n     -> @x@0;\n}))","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/tuple4","scrutinee":2,"clauses":[{"tag":"std/core/types/Tuple4","target":37,"args":{"any":[0,1,2,3]}}],"default":{"tag":"e6c6f4aa-c162-4182-8a95-b3ec67052e72#[Missing Tag#414]","target":36,"args":{"any":[]}}}]},
{"label":"39([k@[mcore:[#116]#74]#76])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Push","target":38,"args":{"any":[1,2]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"40([match_def@[mcore:[#116]#74]#108])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"41([#109])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"t\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple4\\\"\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"13\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@x: 575) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"13\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"14\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@0: 575) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"14\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"15\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@1: 575) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"15\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"field4\\\"16\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2: 575) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"field4\\\\\\\"16\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"t\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple4\\\"\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"13\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@x: 575) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"13\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"14\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@0: 575) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"14\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"15\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@1: 575) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"15\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"field4\\\"16\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2: 575) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"field4\\\\\\\"16\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"42([mcore:[#116]#74])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/Tuple4<a,a,a,a>((f((match (t) {\n    ((@skip std/core/types/Tuple4((@x: 575) : a, (@pat@0: 575) : a, (@pat@1: 575) : a, (@pat@2: 575) : a) : (a, a, a, a) ) as @pat: (575, 575, 575, 575))\n       -> @x;\n  }))), (f((match (t) {\n    ((@skip std/core/types/Tuple4((@pat@0@0: 575) : a, (@x@0: 575) : a, (@pat@1@0: 575) : a, (@pat@2@0: 575) : a) : (a, a, a, a) ) as @pat@3: (575, 575, 575, 575))\n       -> @x@0;\n  }))), (f((match (t) {\n    ((@skip std/core/types/Tuple4((@pat@0@1: 575) : a, (@pat@1@1: 575) : a, (@x@1: 575) : a, (@pat@2@1: 575) : a) : (a, a, a, a) ) as @pat@4: (575, 575, 575, 575))\n       -> @x@1;\n  }))), (f((match (t) {\n    ((@skip std/core/types/Tuple4((@pat@0@2: 575) : a, (@pat@1@2: 575) : a, (@pat@2@2: 575) : a, (@x@2: 575) : a) : (a, a, a, a) ) as @pat@5: (575, 575, 575, 575))\n       -> @x@2;\n  }))))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: f((match (t) {\n  ((@skip std/core/types/Tuple4((@x: 575) : a, (@pat@0: 575) : a, (@pat@1: 575) : a, (@pat@2: 575) : a) : (a, a, a, a) ) as @pat: (575, 575, 575, 575))\n     -> @x;\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (t) {\n  ((@skip std/core/types/Tuple4((@x: 575) : a, (@pat@0: 575) : a, (@pat@1: 575) : a, (@pat@2: 575) : a) : (a, a, a, a) ) as @pat: (575, 575, 575, 575))\n     -> @x;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"t\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple4\\\"\"}}: \"std/core/types/tuple4\".\"std/core/types/Tuple4\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"13\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"14\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"15\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"field4\\\"16\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Push","target":39,"args":{"any":[1,0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"t\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple4\\\"\"}}: \"std/core/types/tuple4\".\"std/core/types/Tuple4\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"13\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"14\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"15\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"field4\\\"16\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (t) {\n  ((@skip std/core/types/Tuple4((@x: 575) : a, (@pat@0: 575) : a, (@pat@1: 575) : a, (@pat@2: 575) : a) : (a, a, a, a) ) as @pat: (575, 575, 575, 575))\n     -> @x;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f((match (t) {\n  ((@skip std/core/types/Tuple4((@x: 575) : a, (@pat@0: 575) : a, (@pat@1: 575) : a, (@pat@2: 575) : a) : (a, a, a, a) ) as @pat: (575, 575, 575, 575))\n     -> @x;\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/Tuple4<a,a,a,a>((f((match (t) {\n    ((@skip std/core/types/Tuple4((@x: 575) : a, (@pat@0: 575) : a, (@pat@1: 575) : a, (@pat@2: 575) : a) : (a, a, a, a) ) as @pat: (575, 575, 575, 575))\n       -> @x;\n  }))), (f((match (t) {\n    ((@skip std/core/types/Tuple4((@pat@0@0: 575) : a, (@x@0: 575) : a, (@pat@1@0: 575) : a, (@pat@2@0: 575) : a) : (a, a, a, a) ) as @pat@3: (575, 575, 575, 575))\n       -> @x@0;\n  }))), (f((match (t) {\n    ((@skip std/core/types/Tuple4((@pat@0@1: 575) : a, (@pat@1@1: 575) : a, (@x@1: 575) : a, (@pat@2@1: 575) : a) : (a, a, a, a) ) as @pat@4: (575, 575, 575, 575))\n       -> @x@1;\n  }))), (f((match (t) {\n    ((@skip std/core/types/Tuple4((@pat@0@2: 575) : a, (@pat@1@2: 575) : a, (@pat@2@2: 575) : a, (@x@2: 575) : a) : (a, a, a, a) ) as @pat@5: (575, 575, 575, 575))\n       -> @x@2;\n  }))))","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/tuple4","scrutinee":0,"clauses":[{"tag":"std/core/types/Tuple4","target":41,"args":{"any":[0,1,2,3]}}],"default":{"tag":"e6c6f4aa-c162-4182-8a95-b3ec67052e72#[Missing Tag#415]","target":40,"args":{"any":[]}}}]},
{"label":"43([mcore:[#117]#110])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"CallLib","lib":2,"symbol":"std/core/types/(++)"}]},
{"label":"44([mcore:[#120]#116])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"CallLib","lib":2,"symbol":"std/core/types/(++)"}]},
{"label":"45([mcore:[#125]#122])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"CallLib","lib":2,"symbol":"std/core/types/(++)"}]},
{"label":"46([mcore:[#128]#128])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"CallLib","lib":2,"symbol":"std/core/types/(++)"}]},
{"label":"47([k@[k@[k@[#149]#157]#163]#169])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Swap","a":0,"b":1},
{"op":"Jump","target":43}]},
{"label":"48([k@[k@[#149]#157]#163])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Push","target":47,"args":{"any":[1]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Copy","from":3,"to":2},
{"op":"Jump","target":44}]},
{"label":"49([k@[#149]#157])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Const","format":"string","out":4,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"Push","target":48,"args":{"any":[1,2]}},
{"op":"Copy","from":4,"to":2},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":3,"to":0},
{"op":"Jump","target":45}]},
{"label":"50([#149])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: \")\"","traced":{"any":[]}},
{"op":"Const","format":"string","out":4,"value":")"},
{"op":"Const","format":"string","out":5,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[5]},"in":{"any":[5]}},
{"op":"Push","target":49,"args":{"any":[1,2,3]}},
{"op":"Copy","from":5,"to":2},
{"op":"Copy","from":4,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: \")\"","traced":{"any":[]}},
{"op":"Jump","target":46}]},
{"label":"51([k@[k@[k@[mcore:[#137]#134]#138]#141]#146])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Push","target":50,"args":{"any":[2,3,4]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"52([#174])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"53([#175])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple2\\\"\"}}),(@pat@0@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"31\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@0@0: 746) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"31\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@x@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"32\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@x@0: 747) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"32\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple2\\\"\"}}),(@pat@0@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"31\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@0@0: 746) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"31\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@x@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"32\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@x@0: 747) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"32\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"54([k@[k@[mcore:[#137]#134]#138]#141])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/(++)(\",\", (std/core/types/(++)((?snd/show((match (x) {\n      ((@skip std/core/types/Tuple2((@pat@0@0: 746) : a, (@x@0: 747) : a) : (a, b) ) as @pat@1: (746, 747))\n         -> @x@0;\n    }))), \")\")))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: \",\"","traced":{"any":[]}},
{"op":"Const","format":"string","out":4,"value":","},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/(++)((?snd/show((match (x) {\n    ((@skip std/core/types/Tuple2((@pat@0@0: 746) : a, (@x@0: 747) : a) : (a, b) ) as @pat@1: (746, 747))\n       -> @x@0;\n  }))), \")\")","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: ?snd/show((match (x) {\n  ((@skip std/core/types/Tuple2((@pat@0@0: 746) : a, (@x@0: 747) : a) : (a, b) ) as @pat@1: (746, 747))\n     -> @x@0;\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (x) {\n  ((@skip std/core/types/Tuple2((@pat@0@0: 746) : a, (@x@0: 747) : a) : (a, b) ) as @pat@1: (746, 747))\n     -> @x@0;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple2\\\"\"}}: \"std/core/types/tuple2\".\"std/core/types/Tuple2\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"31\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"32\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Push","target":51,"args":{"any":[1,3,0,4]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple2\\\"\"}}: \"std/core/types/tuple2\".\"std/core/types/Tuple2\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"31\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"32\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (x) {\n  ((@skip std/core/types/Tuple2((@pat@0@0: 746) : a, (@x@0: 747) : a) : (a, b) ) as @pat@1: (746, 747))\n     -> @x@0;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: ?snd/show((match (x) {\n  ((@skip std/core/types/Tuple2((@pat@0@0: 746) : a, (@x@0: 747) : a) : (a, b) ) as @pat@1: (746, 747))\n     -> @x@0;\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/(++)((?snd/show((match (x) {\n    ((@skip std/core/types/Tuple2((@pat@0@0: 746) : a, (@x@0: 747) : a) : (a, b) ) as @pat@1: (746, 747))\n       -> @x@0;\n  }))), \")\")","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: \",\"","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/(++)(\",\", (std/core/types/(++)((?snd/show((match (x) {\n      ((@skip std/core/types/Tuple2((@pat@0@0: 746) : a, (@x@0: 747) : a) : (a, b) ) as @pat@1: (746, 747))\n         -> @x@0;\n    }))), \")\")))","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/tuple2","scrutinee":2,"clauses":[{"tag":"std/core/types/Tuple2","target":53,"args":{"any":[0,1]}}],"default":{"tag":"e6c6f4aa-c162-4182-8a95-b3ec67052e72#[Missing Tag#416]","target":52,"args":{"any":[]}}}]},
{"label":"55([k@[mcore:[#137]#134]#138])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Push","target":54,"args":{"any":[2,3,4]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"56([match_def@[mcore:[#137]#134]#176])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"57([#177])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple2\\\"\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"29\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@x: 746) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"29\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"30\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@0: 747) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"30\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple2\\\"\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"29\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@x: 746) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"29\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"30\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@0: 747) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"30\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"58([mcore:[#137]#134])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/(++)(\"(\", (std/core/types/(++)((?fst/show((match (x) {\n      ((@skip std/core/types/Tuple2((@x: 746) : a, (@pat@0: 747) : a) : (a, b) ) as @pat: (746, 747))\n         -> @x;\n    }))), (std/core/types/(++)(\",\", (std/core/types/(++)((?snd/show((match (x) {\n          ((@skip std/core/types/Tuple2((@pat@0@0: 746) : a, (@x@0: 747) : a) : (a, b) ) as @pat@1: (746, 747))\n             -> @x@0;\n        }))), \")\")))))))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: \"(\"","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"("},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/(++)((?fst/show((match (x) {\n    ((@skip std/core/types/Tuple2((@x: 746) : a, (@pat@0: 747) : a) : (a, b) ) as @pat: (746, 747))\n       -> @x;\n  }))), (std/core/types/(++)(\",\", (std/core/types/(++)((?snd/show((match (x) {\n        ((@skip std/core/types/Tuple2((@pat@0@0: 746) : a, (@x@0: 747) : a) : (a, b) ) as @pat@1: (746, 747))\n           -> @x@0;\n      }))), \")\")))))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: ?fst/show((match (x) {\n  ((@skip std/core/types/Tuple2((@x: 746) : a, (@pat@0: 747) : a) : (a, b) ) as @pat: (746, 747))\n     -> @x;\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (x) {\n  ((@skip std/core/types/Tuple2((@x: 746) : a, (@pat@0: 747) : a) : (a, b) ) as @pat: (746, 747))\n     -> @x;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple2\\\"\"}}: \"std/core/types/tuple2\".\"std/core/types/Tuple2\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"29\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"30\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Push","target":55,"args":{"any":[1,2,0,3]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple2\\\"\"}}: \"std/core/types/tuple2\".\"std/core/types/Tuple2\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"29\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"30\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (x) {\n  ((@skip std/core/types/Tuple2((@x: 746) : a, (@pat@0: 747) : a) : (a, b) ) as @pat: (746, 747))\n     -> @x;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: ?fst/show((match (x) {\n  ((@skip std/core/types/Tuple2((@x: 746) : a, (@pat@0: 747) : a) : (a, b) ) as @pat: (746, 747))\n     -> @x;\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/(++)((?fst/show((match (x) {\n    ((@skip std/core/types/Tuple2((@x: 746) : a, (@pat@0: 747) : a) : (a, b) ) as @pat: (746, 747))\n       -> @x;\n  }))), (std/core/types/(++)(\",\", (std/core/types/(++)((?snd/show((match (x) {\n        ((@skip std/core/types/Tuple2((@pat@0@0: 746) : a, (@x@0: 747) : a) : (a, b) ) as @pat@1: (746, 747))\n           -> @x@0;\n      }))), \")\")))))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: \"(\"","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/(++)(\"(\", (std/core/types/(++)((?fst/show((match (x) {\n      ((@skip std/core/types/Tuple2((@x: 746) : a, (@pat@0: 747) : a) : (a, b) ) as @pat: (746, 747))\n         -> @x;\n    }))), (std/core/types/(++)(\",\", (std/core/types/(++)((?snd/show((match (x) {\n          ((@skip std/core/types/Tuple2((@pat@0@0: 746) : a, (@x@0: 747) : a) : (a, b) ) as @pat@1: (746, 747))\n             -> @x@0;\n        }))), \")\")))))))","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/tuple2","scrutinee":0,"clauses":[{"tag":"std/core/types/Tuple2","target":57,"args":{"any":[0,1]}}],"default":{"tag":"e6c6f4aa-c162-4182-8a95-b3ec67052e72#[Missing Tag#417]","target":56,"args":{"any":[]}}}]},
{"label":"59([mcore:[#138]#178])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"CallLib","lib":2,"symbol":"std/core/types/(++)"}]},
{"label":"60([mcore:[#141]#184])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"CallLib","lib":2,"symbol":"std/core/types/(++)"}]},
{"label":"61([mcore:[#146]#190])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"CallLib","lib":2,"symbol":"std/core/types/(++)"}]},
{"label":"62([mcore:[#149]#196])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"CallLib","lib":2,"symbol":"std/core/types/(++)"}]},
{"label":"63([mcore:[#154]#202])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"CallLib","lib":2,"symbol":"std/core/types/(++)"}]},
{"label":"64([mcore:[#157]#208])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"CallLib","lib":2,"symbol":"std/core/types/(++)"}]},
{"label":"65([k@[k@[#257]#263]#269])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Swap","a":0,"b":1},
{"op":"Jump","target":59}]},
{"label":"66([k@[#257]#263])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Push","target":65,"args":{"any":[1]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Copy","from":3,"to":2},
{"op":"Jump","target":60}]},
{"label":"67([#257])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Const","format":"string","out":4,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"Push","target":66,"args":{"any":[1,2]}},
{"op":"Copy","from":4,"to":2},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":3,"to":0},
{"op":"Jump","target":61}]},
{"label":"68([k@[k@[k@[k@[#229]#234]#237]#245]#251])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Const","format":"string","out":5,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[5]},"in":{"any":[5]}},
{"op":"Push","target":67,"args":{"any":[1,2,3]}},
{"op":"Copy","from":5,"to":2},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":4,"to":0},
{"op":"Jump","target":62}]},
{"label":"69([k@[k@[k@[#229]#234]#237]#245])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Const","format":"string","out":6,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[6]},"in":{"any":[6]}},
{"op":"Push","target":68,"args":{"any":[1,2,3,4]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":6,"to":2},
{"op":"Copy","from":5,"to":0},
{"op":"Jump","target":63}]},
{"label":"70([k@[k@[#229]#234]#237])",
"frameDescriptor":{"regs_any":8},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: \")\"","traced":{"any":[]}},
{"op":"Const","format":"string","out":6,"value":")"},
{"op":"Const","format":"string","out":7,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[7]},"in":{"any":[7]}},
{"op":"Push","target":69,"args":{"any":[1,2,3,4,5]}},
{"op":"Copy","from":7,"to":2},
{"op":"Copy","from":6,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: \")\"","traced":{"any":[]}},
{"op":"Jump","target":64}]},
{"label":"71([k@[#229]#234])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Push","target":70,"args":{"any":[2,3,4,5,6]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"72([match_def@[#229]#274])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"73([match_std/core/types/Tuple3@[#229]#275])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@3,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}),(@pat@0@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"39\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@0@1: 987) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"39\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"40\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@1@1: 988) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"40\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@x@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"41\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@x@1: 989) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"41\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@3,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}),(@pat@0@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"39\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@0@1: 987) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"39\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"40\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@1@1: 988) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"40\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@x@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"41\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@x@1: 989) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"41\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"74([#229])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/(++)(\",\", (std/core/types/(++)((?thd/show((match (x) {\n      ((@skip std/core/types/Tuple3((@pat@0@1: 987) : a, (@pat@1@1: 988) : a, (@x@1: 989) : a) : (a, b, c) ) as @pat@3: (987, 988, 989))\n         -> @x@1;\n    }))), \")\")))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: \",\"","traced":{"any":[]}},
{"op":"Const","format":"string","out":6,"value":","},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/(++)((?thd/show((match (x) {\n    ((@skip std/core/types/Tuple3((@pat@0@1: 987) : a, (@pat@1@1: 988) : a, (@x@1: 989) : a) : (a, b, c) ) as @pat@3: (987, 988, 989))\n       -> @x@1;\n  }))), \")\")","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: ?thd/show((match (x) {\n  ((@skip std/core/types/Tuple3((@pat@0@1: 987) : a, (@pat@1@1: 988) : a, (@x@1: 989) : a) : (a, b, c) ) as @pat@3: (987, 988, 989))\n     -> @x@1;\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (x) {\n  ((@skip std/core/types/Tuple3((@pat@0@1: 987) : a, (@pat@1@1: 988) : a, (@x@1: 989) : a) : (a, b, c) ) as @pat@3: (987, 988, 989))\n     -> @x@1;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}: \"std/core/types/tuple3\".\"std/core/types/Tuple3\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"39\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"40\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"41\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Push","target":71,"args":{"any":[1,3,4,5,0,6]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}: \"std/core/types/tuple3\".\"std/core/types/Tuple3\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"39\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"40\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"41\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (x) {\n  ((@skip std/core/types/Tuple3((@pat@0@1: 987) : a, (@pat@1@1: 988) : a, (@x@1: 989) : a) : (a, b, c) ) as @pat@3: (987, 988, 989))\n     -> @x@1;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: ?thd/show((match (x) {\n  ((@skip std/core/types/Tuple3((@pat@0@1: 987) : a, (@pat@1@1: 988) : a, (@x@1: 989) : a) : (a, b, c) ) as @pat@3: (987, 988, 989))\n     -> @x@1;\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/(++)((?thd/show((match (x) {\n    ((@skip std/core/types/Tuple3((@pat@0@1: 987) : a, (@pat@1@1: 988) : a, (@x@1: 989) : a) : (a, b, c) ) as @pat@3: (987, 988, 989))\n       -> @x@1;\n  }))), \")\")","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: \",\"","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/(++)(\",\", (std/core/types/(++)((?thd/show((match (x) {\n      ((@skip std/core/types/Tuple3((@pat@0@1: 987) : a, (@pat@1@1: 988) : a, (@x@1: 989) : a) : (a, b, c) ) as @pat@3: (987, 988, 989))\n         -> @x@1;\n    }))), \")\")))","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/tuple3","scrutinee":2,"clauses":[{"tag":"std/core/types/Tuple3","target":73,"args":{"any":[0,1,2]}}],"default":{"tag":"e6c6f4aa-c162-4182-8a95-b3ec67052e72#[Missing Tag#418]","target":72,"args":{"any":[]}}}]},
{"label":"75([k@[k@[k@[mcore:[#168]#214]#218]#221]#226])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Push","target":74,"args":{"any":[2,3,4,5,6]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"76([#276])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"77([#277])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@2,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}),(@pat@0@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"36\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@0@0: 987) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"36\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@x@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"37\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@x@0: 988) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"37\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"38\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@1@0: 989) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"38\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@2,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}),(@pat@0@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"36\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@0@0: 987) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"36\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@x@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"37\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@x@0: 988) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"37\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"38\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@1@0: 989) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"38\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"78([k@[k@[mcore:[#168]#214]#218]#221])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/(++)(\",\", (std/core/types/(++)((?snd/show((match (x) {\n      ((@skip std/core/types/Tuple3((@pat@0@0: 987) : a, (@x@0: 988) : a, (@pat@1@0: 989) : a) : (a, b, c) ) as @pat@2: (987, 988, 989))\n         -> @x@0;\n    }))), (std/core/types/(++)(\",\", (std/core/types/(++)((?thd/show((match (x) {\n          ((@skip std/core/types/Tuple3((@pat@0@1: 987) : a, (@pat@1@1: 988) : a, (@x@1: 989) : a) : (a, b, c) ) as @pat@3: (987, 988, 989))\n             -> @x@1;\n        }))), \")\")))))))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: \",\"","traced":{"any":[]}},
{"op":"Const","format":"string","out":5,"value":","},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/(++)((?snd/show((match (x) {\n    ((@skip std/core/types/Tuple3((@pat@0@0: 987) : a, (@x@0: 988) : a, (@pat@1@0: 989) : a) : (a, b, c) ) as @pat@2: (987, 988, 989))\n       -> @x@0;\n  }))), (std/core/types/(++)(\",\", (std/core/types/(++)((?thd/show((match (x) {\n        ((@skip std/core/types/Tuple3((@pat@0@1: 987) : a, (@pat@1@1: 988) : a, (@x@1: 989) : a) : (a, b, c) ) as @pat@3: (987, 988, 989))\n           -> @x@1;\n      }))), \")\")))))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: ?snd/show((match (x) {\n  ((@skip std/core/types/Tuple3((@pat@0@0: 987) : a, (@x@0: 988) : a, (@pat@1@0: 989) : a) : (a, b, c) ) as @pat@2: (987, 988, 989))\n     -> @x@0;\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (x) {\n  ((@skip std/core/types/Tuple3((@pat@0@0: 987) : a, (@x@0: 988) : a, (@pat@1@0: 989) : a) : (a, b, c) ) as @pat@2: (987, 988, 989))\n     -> @x@0;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}: \"std/core/types/tuple3\".\"std/core/types/Tuple3\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"36\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"37\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"38\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Push","target":75,"args":{"any":[1,2,3,4,0,5]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}: \"std/core/types/tuple3\".\"std/core/types/Tuple3\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"36\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"37\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"38\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (x) {\n  ((@skip std/core/types/Tuple3((@pat@0@0: 987) : a, (@x@0: 988) : a, (@pat@1@0: 989) : a) : (a, b, c) ) as @pat@2: (987, 988, 989))\n     -> @x@0;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: ?snd/show((match (x) {\n  ((@skip std/core/types/Tuple3((@pat@0@0: 987) : a, (@x@0: 988) : a, (@pat@1@0: 989) : a) : (a, b, c) ) as @pat@2: (987, 988, 989))\n     -> @x@0;\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/(++)((?snd/show((match (x) {\n    ((@skip std/core/types/Tuple3((@pat@0@0: 987) : a, (@x@0: 988) : a, (@pat@1@0: 989) : a) : (a, b, c) ) as @pat@2: (987, 988, 989))\n       -> @x@0;\n  }))), (std/core/types/(++)(\",\", (std/core/types/(++)((?thd/show((match (x) {\n        ((@skip std/core/types/Tuple3((@pat@0@1: 987) : a, (@pat@1@1: 988) : a, (@x@1: 989) : a) : (a, b, c) ) as @pat@3: (987, 988, 989))\n           -> @x@1;\n      }))), \")\")))))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: \",\"","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/(++)(\",\", (std/core/types/(++)((?snd/show((match (x) {\n      ((@skip std/core/types/Tuple3((@pat@0@0: 987) : a, (@x@0: 988) : a, (@pat@1@0: 989) : a) : (a, b, c) ) as @pat@2: (987, 988, 989))\n         -> @x@0;\n    }))), (std/core/types/(++)(\",\", (std/core/types/(++)((?thd/show((match (x) {\n          ((@skip std/core/types/Tuple3((@pat@0@1: 987) : a, (@pat@1@1: 988) : a, (@x@1: 989) : a) : (a, b, c) ) as @pat@3: (987, 988, 989))\n             -> @x@1;\n        }))), \")\")))))))","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/tuple3","scrutinee":3,"clauses":[{"tag":"std/core/types/Tuple3","target":77,"args":{"any":[0,1,2]}}],"default":{"tag":"e6c6f4aa-c162-4182-8a95-b3ec67052e72#[Missing Tag#419]","target":76,"args":{"any":[]}}}]},
{"label":"79([k@[mcore:[#168]#214]#218])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Push","target":78,"args":{"any":[2,3,4,5]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"80([match_def@[mcore:[#168]#214]#278])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"81([#279])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"33\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@x: 987) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"33\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"34\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@0: 988) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"34\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"35\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@1: 989) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"35\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"33\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@x: 987) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"33\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"34\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@0: 988) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"34\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"35\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@1: 989) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"35\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"82([mcore:[#168]#214])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/(++)(\"(\", (std/core/types/(++)((?fst/show((match (x) {\n      ((@skip std/core/types/Tuple3((@x: 987) : a, (@pat@0: 988) : a, (@pat@1: 989) : a) : (a, b, c) ) as @pat: (987, 988, 989))\n         -> @x;\n    }))), (std/core/types/(++)(\",\", (std/core/types/(++)((?snd/show((match (x) {\n          ((@skip std/core/types/Tuple3((@pat@0@0: 987) : a, (@x@0: 988) : a, (@pat@1@0: 989) : a) : (a, b, c) ) as @pat@2: (987, 988, 989))\n             -> @x@0;\n        }))), (std/core/types/(++)(\",\", (std/core/types/(++)((?thd/show((match (x) {\n              ((@skip std/core/types/Tuple3((@pat@0@1: 987) : a, (@pat@1@1: 988) : a, (@x@1: 989) : a) : (a, b, c) ) as @pat@3: (987, 988, 989))\n                 -> @x@1;\n            }))), \")\")))))))))))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: \"(\"","traced":{"any":[]}},
{"op":"Const","format":"string","out":4,"value":"("},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/(++)((?fst/show((match (x) {\n    ((@skip std/core/types/Tuple3((@x: 987) : a, (@pat@0: 988) : a, (@pat@1: 989) : a) : (a, b, c) ) as @pat: (987, 988, 989))\n       -> @x;\n  }))), (std/core/types/(++)(\",\", (std/core/types/(++)((?snd/show((match (x) {\n        ((@skip std/core/types/Tuple3((@pat@0@0: 987) : a, (@x@0: 988) : a, (@pat@1@0: 989) : a) : (a, b, c) ) as @pat@2: (987, 988, 989))\n           -> @x@0;\n      }))), (std/core/types/(++)(\",\", (std/core/types/(++)((?thd/show((match (x) {\n            ((@skip std/core/types/Tuple3((@pat@0@1: 987) : a, (@pat@1@1: 988) : a, (@x@1: 989) : a) : (a, b, c) ) as @pat@3: (987, 988, 989))\n               -> @x@1;\n          }))), \")\")))))))))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: ?fst/show((match (x) {\n  ((@skip std/core/types/Tuple3((@x: 987) : a, (@pat@0: 988) : a, (@pat@1: 989) : a) : (a, b, c) ) as @pat: (987, 988, 989))\n     -> @x;\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (x) {\n  ((@skip std/core/types/Tuple3((@x: 987) : a, (@pat@0: 988) : a, (@pat@1: 989) : a) : (a, b, c) ) as @pat: (987, 988, 989))\n     -> @x;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}: \"std/core/types/tuple3\".\"std/core/types/Tuple3\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"33\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"34\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"35\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Push","target":79,"args":{"any":[1,2,3,0,4]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}: \"std/core/types/tuple3\".\"std/core/types/Tuple3\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"33\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"34\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"35\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (x) {\n  ((@skip std/core/types/Tuple3((@x: 987) : a, (@pat@0: 988) : a, (@pat@1: 989) : a) : (a, b, c) ) as @pat: (987, 988, 989))\n     -> @x;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: ?fst/show((match (x) {\n  ((@skip std/core/types/Tuple3((@x: 987) : a, (@pat@0: 988) : a, (@pat@1: 989) : a) : (a, b, c) ) as @pat: (987, 988, 989))\n     -> @x;\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/(++)((?fst/show((match (x) {\n    ((@skip std/core/types/Tuple3((@x: 987) : a, (@pat@0: 988) : a, (@pat@1: 989) : a) : (a, b, c) ) as @pat: (987, 988, 989))\n       -> @x;\n  }))), (std/core/types/(++)(\",\", (std/core/types/(++)((?snd/show((match (x) {\n        ((@skip std/core/types/Tuple3((@pat@0@0: 987) : a, (@x@0: 988) : a, (@pat@1@0: 989) : a) : (a, b, c) ) as @pat@2: (987, 988, 989))\n           -> @x@0;\n      }))), (std/core/types/(++)(\",\", (std/core/types/(++)((?thd/show((match (x) {\n            ((@skip std/core/types/Tuple3((@pat@0@1: 987) : a, (@pat@1@1: 988) : a, (@x@1: 989) : a) : (a, b, c) ) as @pat@3: (987, 988, 989))\n               -> @x@1;\n          }))), \")\")))))))))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: \"(\"","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/(++)(\"(\", (std/core/types/(++)((?fst/show((match (x) {\n      ((@skip std/core/types/Tuple3((@x: 987) : a, (@pat@0: 988) : a, (@pat@1: 989) : a) : (a, b, c) ) as @pat: (987, 988, 989))\n         -> @x;\n    }))), (std/core/types/(++)(\",\", (std/core/types/(++)((?snd/show((match (x) {\n          ((@skip std/core/types/Tuple3((@pat@0@0: 987) : a, (@x@0: 988) : a, (@pat@1@0: 989) : a) : (a, b, c) ) as @pat@2: (987, 988, 989))\n             -> @x@0;\n        }))), (std/core/types/(++)(\",\", (std/core/types/(++)((?thd/show((match (x) {\n              ((@skip std/core/types/Tuple3((@pat@0@1: 987) : a, (@pat@1@1: 988) : a, (@x@1: 989) : a) : (a, b, c) ) as @pat@3: (987, 988, 989))\n                 -> @x@1;\n            }))), \")\")))))))))))","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/tuple3","scrutinee":0,"clauses":[{"tag":"std/core/types/Tuple3","target":81,"args":{"any":[0,1,2]}}],"default":{"tag":"e6c6f4aa-c162-4182-8a95-b3ec67052e72#[Missing Tag#420]","target":80,"args":{"any":[]}}}]},
{"label":"83([mcore:[#173]#280])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/tuple/tuple2/show<a,a,(e :: E)>(x, showfst, showsnd)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/tuple/tuple2/show<a,a,(e :: E)>(x, showfst, showsnd)","traced":{"any":[]}},
{"op":"Jump","target":58}]},
{"label":"84([match_def@[mcore:[#180]#284]#285])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"85([k@[#286]#288])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"86([match_def@[#286]#290])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"87([k@[#293]#295])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"88([k@[switch case for Bool(true)#297]#299])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"89([switch case for Bool(true)#297])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"@x46\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: ?snd/(==)(y1, y2)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: ?snd/(==)(y1, y2)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"@x46\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Invoke","receiver":2,"tag":"apply","args":{"any":[0,1]}}]},
{"label":"90([switch default case#301])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@2,{\"op\": \"Var\",\"id\": \"@x46\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/False","traced":{"any":[]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/False","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@2,{\"op\": \"Var\",\"id\": \"@x46\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"91([#293])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":3,"values":[true],"targets":[89],"default":90}]},
{"label":"92([match_std/core/types/Tuple2@[#286]#291])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"@pat-x29_39\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple2\\\"\"}}),(x2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"44\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x2: 1129) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"44\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(y2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"45\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (y2: 1130) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"45\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match ((?fst/(==)(x1, x2))) {\n  ((std/core/types/True() : bool ) as @pat@1: bool)\n     -> ?snd/(==)(y1, y2);\n  (@pat@2: bool)\n     -> std/core/types/False;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: ?fst/(==)(x1, x2)","traced":{"any":[]}},
{"op":"Push","target":91,"args":{"any":[1,5,3]}},
{"op":"Copy","from":4,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: ?fst/(==)(x1, x2)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match ((?fst/(==)(x1, x2))) {\n  ((std/core/types/True() : bool ) as @pat@1: bool)\n     -> ?snd/(==)(y1, y2);\n  (@pat@2: bool)\n     -> std/core/types/False;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"@pat-x29_39\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple2\\\"\"}}),(x2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"44\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x2: 1129) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"44\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(y2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"45\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (y2: 1130) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"45\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Invoke","receiver":2,"tag":"apply","args":{"any":[0,1]}}]},
{"label":"93([#286])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"@pat-x29_22\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple2\\\"\"}}),(x1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"42\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x1: 1129) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"42\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(y1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"43\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (y1: 1130) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"43\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (@pat-x29_39) {\n  ((@skip std/core/types/Tuple2((x2: 1129) : a, (y2: 1130) : a) : (a, b) ) as @pat@0: (1129, 1130))\n     -> (match ((?fst/(==)(x1, x2))) {\n      ((std/core/types/True() : bool ) as @pat@1: bool)\n         -> ?snd/(==)(y1, y2);\n      (@pat@2: bool)\n         -> std/core/types/False;\n    });\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@pat-x29_39\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple2\\\"\"}}: \"std/core/types/tuple2\".\"std/core/types/Tuple2\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"44\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"45\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Swap","a":1,"b":4},
{"op":"Swap","a":3,"b":4},
{"op":"Swap","a":0,"b":4},
{"op":"Swap","a":2,"b":4},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@pat-x29_39\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple2\\\"\"}}: \"std/core/types/tuple2\".\"std/core/types/Tuple2\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"44\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"45\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (@pat-x29_39) {\n  ((@skip std/core/types/Tuple2((x2: 1129) : a, (y2: 1130) : a) : (a, b) ) as @pat@0: (1129, 1130))\n     -> (match ((?fst/(==)(x1, x2))) {\n      ((std/core/types/True() : bool ) as @pat@1: bool)\n         -> ?snd/(==)(y1, y2);\n      (@pat@2: bool)\n         -> std/core/types/False;\n    });\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"@pat-x29_22\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple2\\\"\"}}),(x1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"42\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x1: 1129) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"42\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(y1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"43\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (y1: 1130) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"43\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/tuple2","scrutinee":4,"clauses":[{"tag":"std/core/types/Tuple2","target":92,"args":{"any":[4,5]}}],"default":{"tag":"e6c6f4aa-c162-4182-8a95-b3ec67052e72#[Missing Tag#421]","target":86,"args":{"any":[]}}}]},
{"label":"94([mcore:[#180]#284])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@pat-x29_22\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple2\\\"\"}}: \"std/core/types/tuple2\".\"std/core/types/Tuple2\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"42\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"43\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":3,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@pat-x29_22\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple2\\\"\"}}: \"std/core/types/tuple2\".\"std/core/types/Tuple2\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"42\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"43\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/tuple2","scrutinee":3,"clauses":[{"tag":"std/core/types/Tuple2","target":93,"args":{"any":[3,4]}}],"default":{"tag":"e6c6f4aa-c162-4182-8a95-b3ec67052e72#[Missing Tag#422]","target":84,"args":{"any":[]}}}]},
{"label":"95([match_def@[mcore:[#190]#304]#305])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"96([k@[#306]#308])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"97([match_def@[#306]#310])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"98([k@[#313]#315])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"99([#321])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"100([k@[switch case for Bool(true)#323]#325])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"101([switch case for Bool(true)#323])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@2,{\"op\": \"Var\",\"id\": \"@x54\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: ?thd/(==)(z1, z2)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: ?thd/(==)(z1, z2)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@2,{\"op\": \"Var\",\"id\": \"@x54\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Invoke","receiver":2,"tag":"apply","args":{"any":[0,1]}}]},
{"label":"102([switch default case#327])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@3,{\"op\": \"Var\",\"id\": \"@x54\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/False","traced":{"any":[]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/False","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@3,{\"op\": \"Var\",\"id\": \"@x54\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"103([k@[switch case for Bool(true)#317]#319])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":3,"values":[true],"targets":[101],"default":102}]},
{"label":"104([switch case for Bool(true)#317])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4,5]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"@x53\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match ((?snd/(==)(y1, y2))) {\n  ((std/core/types/True() : bool ) as @pat@2: bool)\n     -> ?thd/(==)(z1, z2);\n  (@pat@3: bool)\n     -> std/core/types/False;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: ?snd/(==)(y1, y2)","traced":{"any":[]}},
{"op":"Push","target":103,"args":{"any":[2,3,5]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: ?snd/(==)(y1, y2)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match ((?snd/(==)(y1, y2))) {\n  ((std/core/types/True() : bool ) as @pat@2: bool)\n     -> ?thd/(==)(z1, z2);\n  (@pat@3: bool)\n     -> std/core/types/False;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"@x53\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Invoke","receiver":4,"tag":"apply","args":{"any":[0,1]}}]},
{"label":"105([switch default case#330])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4,5]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@4,{\"op\": \"Var\",\"id\": \"@x53\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/False","traced":{"any":[]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/False","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@4,{\"op\": \"Var\",\"id\": \"@x53\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"106([#313])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Swap","a":4,"b":5},
{"op":"Swap","a":3,"b":5},
{"op":"Swap","a":2,"b":5},
{"op":"Swap","a":1,"b":5},
{"op":"Swap","a":0,"b":5},
{"op":"Swap","a":6,"b":5},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":6,"values":[true],"targets":[104],"default":105}]},
{"label":"107([match_std/core/types/Tuple3@[#306]#311])",
"frameDescriptor":{"regs_any":9},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"@pat-x33_44\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}),(x2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"50\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x2: 1216) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"50\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(y2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"51\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (y2: 1217) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"51\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(z2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"52\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (z2: 1218) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"52\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match ((?fst/(==)(x1, x2))) {\n  ((std/core/types/True() : bool ) as @pat@1: bool)\n     -> (match ((?snd/(==)(y1, y2))) {\n      ((std/core/types/True() : bool ) as @pat@2: bool)\n         -> ?thd/(==)(z1, z2);\n      (@pat@3: bool)\n         -> std/core/types/False;\n    });\n  (@pat@4: bool)\n     -> std/core/types/False;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: ?fst/(==)(x1, x2)","traced":{"any":[]}},
{"op":"Push","target":106,"args":{"any":[1,7,2,8,4,5]}},
{"op":"Copy","from":6,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: ?fst/(==)(x1, x2)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match ((?fst/(==)(x1, x2))) {\n  ((std/core/types/True() : bool ) as @pat@1: bool)\n     -> (match ((?snd/(==)(y1, y2))) {\n      ((std/core/types/True() : bool ) as @pat@2: bool)\n         -> ?thd/(==)(z1, z2);\n      (@pat@3: bool)\n         -> std/core/types/False;\n    });\n  (@pat@4: bool)\n     -> std/core/types/False;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"@pat-x33_44\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}),(x2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"50\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x2: 1216) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"50\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(y2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"51\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (y2: 1217) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"51\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(z2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"52\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (z2: 1218) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"52\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Invoke","receiver":3,"tag":"apply","args":{"any":[0,1]}}]},
{"label":"108([#306])",
"frameDescriptor":{"regs_any":9},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"@pat-x33_22\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}),(x1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"47\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x1: 1216) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"47\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(y1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"48\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (y1: 1217) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"48\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(z1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"49\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (z1: 1218) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"49\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (@pat-x33_44) {\n  ((@skip std/core/types/Tuple3((x2: 1216) : a, (y2: 1217) : a, (z2: 1218) : a) : (a, b, c) ) as @pat@0: (1216, 1217, 1218))\n     -> (match ((?fst/(==)(x1, x2))) {\n      ((std/core/types/True() : bool ) as @pat@1: bool)\n         -> (match ((?snd/(==)(y1, y2))) {\n          ((std/core/types/True() : bool ) as @pat@2: bool)\n             -> ?thd/(==)(z1, z2);\n          (@pat@3: bool)\n             -> std/core/types/False;\n        });\n      (@pat@4: bool)\n         -> std/core/types/False;\n    });\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@pat-x33_44\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}: \"std/core/types/tuple3\".\"std/core/types/Tuple3\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"50\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"51\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"52\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Swap","a":1,"b":5},
{"op":"Swap","a":4,"b":5},
{"op":"Swap","a":0,"b":5},
{"op":"Swap","a":3,"b":5},
{"op":"Swap","a":6,"b":5},
{"op":"Swap","a":2,"b":5},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@pat-x33_44\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}: \"std/core/types/tuple3\".\"std/core/types/Tuple3\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"50\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"51\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"52\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (@pat-x33_44) {\n  ((@skip std/core/types/Tuple3((x2: 1216) : a, (y2: 1217) : a, (z2: 1218) : a) : (a, b, c) ) as @pat@0: (1216, 1217, 1218))\n     -> (match ((?fst/(==)(x1, x2))) {\n      ((std/core/types/True() : bool ) as @pat@1: bool)\n         -> (match ((?snd/(==)(y1, y2))) {\n          ((std/core/types/True() : bool ) as @pat@2: bool)\n             -> ?thd/(==)(z1, z2);\n          (@pat@3: bool)\n             -> std/core/types/False;\n        });\n      (@pat@4: bool)\n         -> std/core/types/False;\n    });\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"@pat-x33_22\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}),(x1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"47\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x1: 1216) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"47\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(y1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"48\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (y1: 1217) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"48\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(z1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"49\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (z1: 1218) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"49\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/tuple3","scrutinee":6,"clauses":[{"tag":"std/core/types/Tuple3","target":107,"args":{"any":[6,7,8]}}],"default":{"tag":"e6c6f4aa-c162-4182-8a95-b3ec67052e72#[Missing Tag#423]","target":97,"args":{"any":[]}}}]},
{"label":"109([mcore:[#190]#304])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@pat-x33_22\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}: \"std/core/types/tuple3\".\"std/core/types/Tuple3\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"47\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"48\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"49\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Swap","a":2,"b":4},
{"op":"Swap","a":0,"b":4},
{"op":"Swap","a":3,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@pat-x33_22\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}: \"std/core/types/tuple3\".\"std/core/types/Tuple3\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"47\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"48\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"49\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/tuple3","scrutinee":4,"clauses":[{"tag":"std/core/types/Tuple3","target":108,"args":{"any":[4,5,6]}}],"default":{"tag":"e6c6f4aa-c162-4182-8a95-b3ec67052e72#[Missing Tag#424]","target":95,"args":{"any":[]}}}]},
{"label":"110([match_def@[mcore:[#197]#333]#334])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"111([k@[#335]#337])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"112([match_def@[#335]#339])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"113([k@[#342]#344])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"114([match_def@[#342]#346])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(lg,{\"op\": \"Var\",\"id\": \"@x59\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(lg,{\"op\": \"Var\",\"id\": \"@x59\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"115([k@[match_std/core/types/Eq@[#342]#347]#349])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"116([match_std/core/types/Eq@[#342]#347])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"@x59\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: ?snd/cmp(y1, y2)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: ?snd/cmp(y1, y2)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"@x59\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Invoke","receiver":2,"tag":"apply","args":{"any":[0,1]}}]},
{"label":"117([#342])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@x59\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Eq\"(())","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@x59\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Eq\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/order","scrutinee":3,"clauses":[{"tag":"std/core/types/Eq","target":116,"args":{"any":[]}}],"default":{"tag":"e6c6f4aa-c162-4182-8a95-b3ec67052e72#[Missing Tag#425]","target":114,"args":{"any":[]}}}]},
{"label":"118([match_std/core/types/Tuple2@[#335]#340])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"@pat-x38_38\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple2\\\"\"}}),(x2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"57\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x2: 1270) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"57\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(y2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"58\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (y2: 1271) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"58\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match ((?fst/cmp(x1, x2))) {\n  ((std/core/types/Eq() : order ) as @pat@1: order)\n     -> ?snd/cmp(y1, y2);\n  (lg: order)\n     -> lg;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: ?fst/cmp(x1, x2)","traced":{"any":[]}},
{"op":"Push","target":117,"args":{"any":[1,5,3]}},
{"op":"Copy","from":4,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: ?fst/cmp(x1, x2)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match ((?fst/cmp(x1, x2))) {\n  ((std/core/types/Eq() : order ) as @pat@1: order)\n     -> ?snd/cmp(y1, y2);\n  (lg: order)\n     -> lg;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"@pat-x38_38\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple2\\\"\"}}),(x2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"57\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x2: 1270) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"57\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(y2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"58\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (y2: 1271) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"58\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Invoke","receiver":2,"tag":"apply","args":{"any":[0,1]}}]},
{"label":"119([#335])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"@pat-x38_21\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple2\\\"\"}}),(x1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"55\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x1: 1270) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"55\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(y1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"56\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (y1: 1271) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"56\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (@pat-x38_38) {\n  ((@skip std/core/types/Tuple2((x2: 1270) : a, (y2: 1271) : a) : (a, b) ) as @pat@0: (1270, 1271))\n     -> (match ((?fst/cmp(x1, x2))) {\n      ((std/core/types/Eq() : order ) as @pat@1: order)\n         -> ?snd/cmp(y1, y2);\n      (lg: order)\n         -> lg;\n    });\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@pat-x38_38\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple2\\\"\"}}: \"std/core/types/tuple2\".\"std/core/types/Tuple2\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"57\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"58\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Swap","a":1,"b":4},
{"op":"Swap","a":3,"b":4},
{"op":"Swap","a":0,"b":4},
{"op":"Swap","a":2,"b":4},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@pat-x38_38\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple2\\\"\"}}: \"std/core/types/tuple2\".\"std/core/types/Tuple2\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"57\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"58\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (@pat-x38_38) {\n  ((@skip std/core/types/Tuple2((x2: 1270) : a, (y2: 1271) : a) : (a, b) ) as @pat@0: (1270, 1271))\n     -> (match ((?fst/cmp(x1, x2))) {\n      ((std/core/types/Eq() : order ) as @pat@1: order)\n         -> ?snd/cmp(y1, y2);\n      (lg: order)\n         -> lg;\n    });\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"@pat-x38_21\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple2\\\"\"}}),(x1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"55\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x1: 1270) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"55\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(y1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"56\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (y1: 1271) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"56\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/tuple2","scrutinee":4,"clauses":[{"tag":"std/core/types/Tuple2","target":118,"args":{"any":[4,5]}}],"default":{"tag":"e6c6f4aa-c162-4182-8a95-b3ec67052e72#[Missing Tag#426]","target":112,"args":{"any":[]}}}]},
{"label":"120([mcore:[#197]#333])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@pat-x38_21\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple2\\\"\"}}: \"std/core/types/tuple2\".\"std/core/types/Tuple2\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"55\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"56\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":3,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@pat-x38_21\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple2\\\"\"}}: \"std/core/types/tuple2\".\"std/core/types/Tuple2\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"55\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"56\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/tuple2","scrutinee":3,"clauses":[{"tag":"std/core/types/Tuple2","target":119,"args":{"any":[3,4]}}],"default":{"tag":"e6c6f4aa-c162-4182-8a95-b3ec67052e72#[Missing Tag#427]","target":110,"args":{"any":[]}}}]},
{"label":"121([match_def@[mcore:[#207]#351]#352])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"122([k@[#353]#355])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"123([match_def@[#353]#357])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"124([k@[#360]#362])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"125([match_def@[#360]#364])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(lg@0,{\"op\": \"Var\",\"id\": \"@x66\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Copy","from":6,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(lg@0,{\"op\": \"Var\",\"id\": \"@x66\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"126([#369])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"127([#371])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(lg,{\"op\": \"Var\",\"id\": \"@x67\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(lg,{\"op\": \"Var\",\"id\": \"@x67\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"128([k@[#372]#374])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"129([#372])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@2,{\"op\": \"Var\",\"id\": \"@x67\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: ?thd/cmp(z1, z2)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: ?thd/cmp(z1, z2)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@2,{\"op\": \"Var\",\"id\": \"@x67\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Invoke","receiver":2,"tag":"apply","args":{"any":[0,1]}}]},
{"label":"130([k@[match_std/core/types/Eq@[#360]#365]#367])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@x67\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Eq\"(())","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@x67\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Eq\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/order","scrutinee":3,"clauses":[{"tag":"std/core/types/Eq","target":129,"args":{"any":[]}}],"default":{"tag":"e6c6f4aa-c162-4182-8a95-b3ec67052e72#[Missing Tag#428]","target":127,"args":{"any":[]}}}]},
{"label":"131([match_std/core/types/Eq@[#360]#365])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"@x66\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match ((?snd/cmp(y1, y2))) {\n  ((std/core/types/Eq() : order ) as @pat@2: order)\n     -> ?thd/cmp(z1, z2);\n  (lg: order)\n     -> lg;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: ?snd/cmp(y1, y2)","traced":{"any":[]}},
{"op":"Push","target":130,"args":{"any":[2,3,5]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: ?snd/cmp(y1, y2)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match ((?snd/cmp(y1, y2))) {\n  ((std/core/types/Eq() : order ) as @pat@2: order)\n     -> ?thd/cmp(z1, z2);\n  (lg: order)\n     -> lg;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"@x66\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}})]","traced":{"any":[]}},
{"op":"Invoke","receiver":4,"tag":"apply","args":{"any":[0,1]}}]},
{"label":"132([#360])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@x66\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Eq\"(())","traced":{"any":[]}},
{"op":"Swap","a":4,"b":5},
{"op":"Swap","a":3,"b":5},
{"op":"Swap","a":2,"b":5},
{"op":"Swap","a":1,"b":5},
{"op":"Swap","a":0,"b":5},
{"op":"Swap","a":6,"b":5},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@x66\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"order\\\"\"}}: \"std/core/types/order\".\"std/core/types/Eq\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/order","scrutinee":6,"clauses":[{"tag":"std/core/types/Eq","target":131,"args":{"any":[]}}],"default":{"tag":"e6c6f4aa-c162-4182-8a95-b3ec67052e72#[Missing Tag#429]","target":125,"args":{"any":[]}}}]},
{"label":"133([match_std/core/types/Tuple3@[#353]#358])",
"frameDescriptor":{"regs_any":9},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"@pat-x44_48\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}),(x2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"63\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x2: 1320) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"63\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(y2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"64\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (y2: 1321) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"64\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(z2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"65\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (z2: 1322) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"65\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match ((?fst/cmp(x1, x2))) {\n  ((std/core/types/Eq() : order ) as @pat@1: order)\n     -> (match ((?snd/cmp(y1, y2))) {\n      ((std/core/types/Eq() : order ) as @pat@2: order)\n         -> ?thd/cmp(z1, z2);\n      (lg: order)\n         -> lg;\n    });\n  (lg@0: order)\n     -> lg@0;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: ?fst/cmp(x1, x2)","traced":{"any":[]}},
{"op":"Push","target":132,"args":{"any":[1,7,2,8,4,5]}},
{"op":"Copy","from":6,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: ?fst/cmp(x1, x2)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match ((?fst/cmp(x1, x2))) {\n  ((std/core/types/Eq() : order ) as @pat@1: order)\n     -> (match ((?snd/cmp(y1, y2))) {\n      ((std/core/types/Eq() : order ) as @pat@2: order)\n         -> ?thd/cmp(z1, z2);\n      (lg: order)\n         -> lg;\n    });\n  (lg@0: order)\n     -> lg@0;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"@pat-x44_48\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}),(x2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"63\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x2: 1320) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"63\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(y2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"64\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (y2: 1321) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"64\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(z2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"65\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (z2: 1322) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"65\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Invoke","receiver":3,"tag":"apply","args":{"any":[0,1]}}]},
{"label":"134([#353])",
"frameDescriptor":{"regs_any":9},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"@pat-x44_26\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}),(x1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"60\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x1: 1320) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"60\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(y1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"61\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (y1: 1321) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"61\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(z1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"62\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (z1: 1322) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"62\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (@pat-x44_48) {\n  ((@skip std/core/types/Tuple3((x2: 1320) : a, (y2: 1321) : a, (z2: 1322) : a) : (a, b, c) ) as @pat@0: (1320, 1321, 1322))\n     -> (match ((?fst/cmp(x1, x2))) {\n      ((std/core/types/Eq() : order ) as @pat@1: order)\n         -> (match ((?snd/cmp(y1, y2))) {\n          ((std/core/types/Eq() : order ) as @pat@2: order)\n             -> ?thd/cmp(z1, z2);\n          (lg: order)\n             -> lg;\n        });\n      (lg@0: order)\n         -> lg@0;\n    });\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@pat-x44_48\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}: \"std/core/types/tuple3\".\"std/core/types/Tuple3\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"63\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"64\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"65\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Swap","a":1,"b":5},
{"op":"Swap","a":4,"b":5},
{"op":"Swap","a":0,"b":5},
{"op":"Swap","a":3,"b":5},
{"op":"Swap","a":6,"b":5},
{"op":"Swap","a":2,"b":5},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@pat-x44_48\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}: \"std/core/types/tuple3\".\"std/core/types/Tuple3\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"63\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"64\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"65\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (@pat-x44_48) {\n  ((@skip std/core/types/Tuple3((x2: 1320) : a, (y2: 1321) : a, (z2: 1322) : a) : (a, b, c) ) as @pat@0: (1320, 1321, 1322))\n     -> (match ((?fst/cmp(x1, x2))) {\n      ((std/core/types/Eq() : order ) as @pat@1: order)\n         -> (match ((?snd/cmp(y1, y2))) {\n          ((std/core/types/Eq() : order ) as @pat@2: order)\n             -> ?thd/cmp(z1, z2);\n          (lg: order)\n             -> lg;\n        });\n      (lg@0: order)\n         -> lg@0;\n    });\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"@pat-x44_26\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}),(x1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"60\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x1: 1320) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"60\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(y1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"61\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (y1: 1321) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"61\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(z1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"62\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (z1: 1322) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"62\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/tuple3","scrutinee":6,"clauses":[{"tag":"std/core/types/Tuple3","target":133,"args":{"any":[6,7,8]}}],"default":{"tag":"e6c6f4aa-c162-4182-8a95-b3ec67052e72#[Missing Tag#430]","target":123,"args":{"any":[]}}}]},
{"label":"135([mcore:[#207]#351])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@pat-x44_26\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}: \"std/core/types/tuple3\".\"std/core/types/Tuple3\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"60\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"61\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"62\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Swap","a":2,"b":4},
{"op":"Swap","a":0,"b":4},
{"op":"Swap","a":3,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@pat-x44_26\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}: \"std/core/types/tuple3\".\"std/core/types/Tuple3\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"60\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"61\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"62\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/tuple3","scrutinee":4,"clauses":[{"tag":"std/core/types/Tuple3","target":134,"args":{"any":[4,5,6]}}],"default":{"tag":"e6c6f4aa-c162-4182-8a95-b3ec67052e72#[Missing Tag#431]","target":121,"args":{"any":[]}}}]},
{"label":"136([#396])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[1,0]}},
{"op":"Const","format":"string","out":0,"value":"ThisLib_42eeeeea-ffd5-4acb-94dc-f5a86151e39e"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[0,2]}},
{"op":"Copy","from":2,"to":0},
{"op":"Return","args":{"any":[0]}}]},
{"label":"137([k@[mcore:[static initializers#209]#376]#386])",
"frameDescriptor":{"regs_any":16},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[1,0]}},
{"op":"Const","format":"string","out":0,"value":"[#79]"},
{"op":"Const","format":"path","out":1,"value":"$0/./std_core_hnd.rpyeffect"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[0,1]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"Push","target":136,"args":{"any":[0,2]}},
{"op":"LoadLib","path":1}]},
{"label":"138([mcore:[static initializers#209]#376])",
"frameDescriptor":{"regs_any":16},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Const","format":"string","out":1,"value":"[#78]"},
{"op":"Const","format":"path","out":2,"value":"$0/./std_core_types.rpyeffect"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[1]},"in":{"any":[1,2]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/types)"},
{"op":"Push","target":137,"args":{"any":[1,0]}},
{"op":"LoadLib","path":2}]},
{"label":"139([k@[main entrypoint#2]#404])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Const","format":"string","out":0,"value":"Undefined: is a library"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"140([main entrypoint#2])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[]}},
{"op":"Copy","from":-1,"to":0},
{"op":"Push","target":139,"args":{"any":[]}},
{"op":"Jump","target":138}]}],
"symbols":[{"name":"std/core/tuple/unit/show","position":0},
{"name":"std/core/tuple/tuple2/map","position":10},
{"name":"std/core/tuple/tuple3/map","position":24},
{"name":"std/core/tuple/tuple4/map","position":42},
{"name":"std/core/tuple/tuple2/show","position":58},
{"name":"std/core/tuple/tuple3/show","position":82},
{"name":"std/core/tuple/show-tuple","position":83},
{"name":"std/core/tuple/tuple2/(==)","position":94},
{"name":"std/core/tuple/tuple3/(==)","position":109},
{"name":"std/core/tuple/tuple2/cmp","position":120},
{"name":"std/core/tuple/tuple3/cmp","position":135},
{"name":"$static-init","position":138},
{"name":"$entrypoint","position":140}],
"frameSize":{"regs_any":16}}