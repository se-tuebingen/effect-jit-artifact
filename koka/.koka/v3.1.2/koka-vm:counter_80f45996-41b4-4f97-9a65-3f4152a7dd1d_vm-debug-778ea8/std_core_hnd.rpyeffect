{"blocks":[{"label":"0(Name(getCurrentEvv))",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"current-evv"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"PrimOp","name":"getRef(Ref[Ptr]): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1(Name(setCurrentEvv))",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Const","format":"string","out":1,"value":"current-evv"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"PrimOp","name":"setRef(Ref[Ptr], Ptr): Unit","out":{"any":[0]},"in":{"any":[1,0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"2(Name(swapCurrentEvv))",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Const","format":"string","out":1,"value":"current-evv"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"PrimOp","name":"getRef(Ref[Ptr]): Ptr","out":{"any":[2]},"in":{"any":[1]}},
{"op":"PrimOp","name":"setRef(Ref[Ptr], Ptr): Unit","out":{"any":[0]},"in":{"any":[1,0]}},
{"op":"Copy","from":2,"to":0},
{"op":"Return","args":{"any":[0]}}]},
{"label":"3([k@[k@[k@Name(evvSwapCreate1)#21]#23]#26])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Return","args":{"any":[0]}}]},
{"label":"4([k@[k@Name(evvSwapCreate1)#21]#23])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Construct","out":0,"type":"evv","tag":"cons","args":{"any":[0,2]}},
{"op":"Push","target":3,"args":{"any":[1]}},
{"op":"Jump","target":1}]},
{"label":"5([k@Name(evvSwapCreate1)#21])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Push","target":4,"args":{"any":[0,2]}},
{"op":"Jump","target":37}]},
{"label":"6(Name(evvSwapCreate1))",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Construct","out":1,"type":"evv","tag":"nil","args":{"any":[]}},
{"op":"Push","target":5,"args":{"any":[0,1]}},
{"op":"Jump","target":0}]},
{"label":"7([k@[k@Name(evvSwapCreate0)#28]#31])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Return","args":{"any":[0]}}]},
{"label":"8([k@Name(evvSwapCreate0)#28])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Construct","out":1,"type":"evv","tag":"nil","args":{"any":[]}},
{"op":"Push","target":7,"args":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Jump","target":1}]},
{"label":"9(Name(evvSwapCreate0))",
"frameDescriptor":{"regs_any":0},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[]}},
{"op":"Push","target":8,"args":{"any":[]}},
{"op":"Jump","target":0}]},
{"label":"10([k@[k@[k@Name(evvSwapDelete)#35]#37]#39])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Return","args":{"any":[0]}}]},
{"label":"11([k@[k@Name(evvSwapDelete)#35]#37])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Push","target":10,"args":{"any":[1]}},
{"op":"Jump","target":1}]},
{"label":"12([k@Name(evvSwapDelete)#35])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Push","target":11,"args":{"any":[0]}},
{"op":"Swap","a":0,"b":1},
{"op":"Jump","target":20}]},
{"label":"13(Name(evvSwapDelete))",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PrimOp","name":"infixAdd(Int, Int): Int","out":{"any":[0]},"in":{"any":[0,1]}},
{"op":"Push","target":12,"args":{"any":[0]}},
{"op":"Jump","target":0}]},
{"label":"14(Name(evHtag))",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Proj","out":0,"type":"std/core/hnd/ev","scrutinee":0,"tag":"std/core/hnd/Ev","field":0},
{"op":"Proj","out":0,"type":"std/core/hnd/htag","scrutinee":0,"tag":"std/core/hnd/Htag","field":0},
{"op":"Return","args":{"any":[0]}}]},
{"label":"15([match_def@Name(evvDelete)#43])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Const","format":"string","out":0,"value":"Out of bounds index into evidence vector"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"16([switch case for Int(0)#48])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Copy","from":2,"to":0},
{"op":"Return","args":{"any":[0]}}]},
{"label":"17([k@[switch default case#49]#55])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Construct","out":0,"type":"evv","tag":"cons","args":{"any":[1,0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"18([switch default case#49])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"int","out":3,"value":1},
{"op":"PrimOp","name":"infixSub(Int, Int): Int","out":{"any":[1]},"in":{"any":[1,3]}},
{"op":"Push","target":17,"args":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Copy","from":2,"to":1},
{"op":"Jump","target":20}]},
{"label":"19([match_cons@Name(evvDelete)#47])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Swap","a":0,"b":1},
{"op":"Switch","arg":1,"values":[0],"targets":[16],"default":18}]},
{"label":"20(Name(evvDelete))",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Match","type":"evv","scrutinee":1,"clauses":[{"tag":"cons","target":19,"args":{"any":[1,2]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3000]","target":15,"args":{"any":[]}}}]},
{"label":"21([match_def@Name(evvInsert)#58])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Construct","out":0,"type":"evv","tag":"cons","args":{"any":[0,1]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"22([k@[switch case for Bool(true)#69]#71])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Construct","out":0,"type":"evv","tag":"cons","args":{"any":[1,0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"23([switch case for Bool(true)#69])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Push","target":22,"args":{"any":[2]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":3,"to":0},
{"op":"Jump","target":28}]},
{"label":"24([switch default case#74])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Construct","out":0,"type":"evv","tag":"cons","args":{"any":[0,1]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"25([#65])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"infixGt(String, String): Boolean","out":{"any":[0]},"in":{"any":[5,0]}},
{"op":"Swap","a":3,"b":4},
{"op":"Swap","a":2,"b":4},
{"op":"Swap","a":1,"b":4},
{"op":"Swap","a":0,"b":4},
{"op":"Switch","arg":4,"values":[true],"targets":[23],"default":24}]},
{"label":"26([k@[match_cons@Name(evvInsert)#60]#62])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Push","target":25,"args":{"any":[1,2,3,4,0]}},
{"op":"Copy","from":3,"to":0},
{"op":"Jump","target":14}]},
{"label":"27([match_cons@Name(evvInsert)#60])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Push","target":26,"args":{"any":[0,1,2,3]}},
{"op":"Jump","target":14}]},
{"label":"28(Name(evvInsert))",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Swap","a":0,"b":1},
{"op":"Match","type":"evv","scrutinee":1,"clauses":[{"tag":"cons","target":27,"args":{"any":[2,3]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3001]","target":21,"args":{"any":[]}}}]},
{"label":"29([match_def@Name(evvIndex)#76])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Const","format":"string","out":0,"value":"Undefined: no evidence for htag"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"30([switch case for Bool(true)#88])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"31([switch default case#89])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"int","out":3,"value":1},
{"op":"PrimOp","name":"infixAdd(Int, Int): Int","out":{"any":[0]},"in":{"any":[0,3]}},
{"op":"Swap","a":2,"b":0},
{"op":"Jump","target":34}]},
{"label":"32([k@[match_cons@Name(evvIndex)#80]#84])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"infixEq(String, String): Boolean","out":{"any":[0]},"in":{"any":[4,0]}},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Switch","arg":3,"values":[true],"targets":[30],"default":31}]},
{"label":"33([match_cons@Name(evvIndex)#80])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Proj","out":4,"type":"std/core/hnd/htag","scrutinee":1,"tag":"std/core/hnd/Htag","field":0},
{"op":"Push","target":32,"args":{"any":[0,1,3,4]}},
{"op":"Copy","from":2,"to":0},
{"op":"Jump","target":14}]},
{"label":"34(Name(evvIndex))",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Swap","a":2,"b":0},
{"op":"Match","type":"evv","scrutinee":2,"clauses":[{"tag":"cons","target":33,"args":{"any":[2,3]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3002]","target":29,"args":{"any":[]}}}]},
{"label":"35([switch case for Int(0)#94])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Proj","out":0,"type":"evv","scrutinee":0,"tag":"cons","field":0},
{"op":"Return","args":{"any":[0]}}]},
{"label":"36([switch default case#96])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Proj","out":0,"type":"evv","scrutinee":0,"tag":"cons","field":1},
{"op":"Const","format":"int","out":2,"value":1},
{"op":"PrimOp","name":"infixSub(Int, Int): Int","out":{"any":[1]},"in":{"any":[1,2]}},
{"op":"Jump","target":37}]},
{"label":"37(Name(elt))",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Switch","arg":1,"values":[0],"targets":[35],"default":36}]},
{"label":"38([match_def@[mcore:[#373]#103]#104])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"39([#105])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"htag\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"tagname\\\"0\",\"type\": {\"op\": \"String\"}},\"annotation\": \"genTest: normal: (@x: string) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"tagname\\\\\\\"0\\\",\\\"type\\\": {\\\"op\\\": \\\"String\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"htag\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"tagname\\\"0\",\"type\": {\"op\": \"String\"}},\"annotation\": \"genTest: normal: (@x: string) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"tagname\\\\\\\"0\\\",\\\"type\\\": {\\\"op\\\": \\\"String\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"40([mcore:[#373]#103])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"htag\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}: \"std/core/hnd/htag\".\"std/core/hnd/Htag\"(({\"op\": \"Var\",\"id\": \"@\\\"tagname\\\"0\",\"type\": {\"op\": \"String\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"htag\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}: \"std/core/hnd/htag\".\"std/core/hnd/Htag\"(({\"op\": \"Var\",\"id\": \"@\\\"tagname\\\"0\",\"type\": {\"op\": \"String\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/htag","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Htag","target":39,"args":{"any":[0]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3003]","target":38,"args":{"any":[]}}}]},
{"label":"41([k@[mcore:[#376]#106]#108])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Jump","target":1054}]},
{"label":"42([#112])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"43([k@[#113]#115])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"44([match_def@[#113]#117])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"45([match_std/core/hnd/Htag@[#113]#118])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"tagname\\\"2\",\"type\": {\"op\": \"String\"}},\"annotation\": \"genTest: normal: (@x: string) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"tagname\\\\\\\"2\\\",\\\"type\\\": {\\\"op\\\": \\\"String\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"tagname\\\"2\",\"type\": {\"op\": \"String\"}},\"annotation\": \"genTest: normal: (@x: string) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"tagname\\\\\\\"2\\\",\\\"type\\\": {\\\"op\\\": \\\"String\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"46([#113])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"tagname\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (@this) {\n  ((@skip std/core/hnd/Htag((@x: string) : string) : (hnd/htag :: ((E, V) -> V) -> V)<(a :: (E, V) -> V)> ) as @pat@1: ((hnd/htag :: ((E, V) -> V) -> V)<(2026 :: (E, V) -> V)>))\n     -> @x;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}: \"std/core/hnd/htag\".\"std/core/hnd/Htag\"(({\"op\": \"Var\",\"id\": \"@\\\"tagname\\\"2\",\"type\": {\"op\": \"String\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}: \"std/core/hnd/htag\".\"std/core/hnd/Htag\"(({\"op\": \"Var\",\"id\": \"@\\\"tagname\\\"2\",\"type\": {\"op\": \"String\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (@this) {\n  ((@skip std/core/hnd/Htag((@x: string) : string) : (hnd/htag :: ((E, V) -> V) -> V)<(a :: (E, V) -> V)> ) as @pat@1: ((hnd/htag :: ((E, V) -> V) -> V)<(2026 :: (E, V) -> V)>))\n     -> @x;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"tagname\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}})]","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/htag","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Htag","target":45,"args":{"any":[0]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3004]","target":44,"args":{"any":[]}}}]},
{"label":"47([match_def@[mcore:[#376]#106]#111])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"tagname\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}: \"std/core/types/@optional\".\"std/core/types/@None\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"tagname\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}: \"std/core/types/@optional\".\"std/core/types/@None\"(())","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/@optional","scrutinee":1,"clauses":[{"tag":"std/core/types/@None","target":46,"args":{"any":[]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3005]","target":42,"args":{"any":[]}}}]},
{"label":"48([#119])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"tagname\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}),(@uniq-tagname@2014,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"value\\\"1\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@uniq-tagname@2014: string) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"value\\\\\\\"1\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"tagname\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}),(@uniq-tagname@2014,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"value\\\"1\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@uniq-tagname@2014: string) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"value\\\\\\\"1\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"49([mcore:[#376]#106])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Htag<(a :: (E, V) -> V)>((match (tagname) {\n  ((std/core/types/@Optional((@uniq-tagname@2014: string) : string) : ? string ) as @pat: ? string)\n     -> @uniq-tagname@2014;\n  ((@skip std/core/types/@None() : ? string ) as @pat@0: ? string)\n     -> (match (@this) {\n      ((@skip std/core/hnd/Htag((@x: string) : string) : (hnd/htag :: ((E, V) -> V) -> V)<(a :: (E, V) -> V)> ) as @pat@1: ((hnd/htag :: ((E, V) -> V) -> V)<(2026 :: (E, V) -> V)>))\n         -> @x;\n    });\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (tagname) {\n  ((std/core/types/@Optional((@uniq-tagname@2014: string) : string) : ? string ) as @pat: ? string)\n     -> @uniq-tagname@2014;\n  ((@skip std/core/types/@None() : ? string ) as @pat@0: ? string)\n     -> (match (@this) {\n      ((@skip std/core/hnd/Htag((@x: string) : string) : (hnd/htag :: ((E, V) -> V) -> V)<(a :: (E, V) -> V)> ) as @pat@1: ((hnd/htag :: ((E, V) -> V) -> V)<(2026 :: (E, V) -> V)>))\n         -> @x;\n    });\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"tagname\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}: \"std/core/types/@optional\".\"std/core/types/@Optional\"(({\"op\": \"Var\",\"id\": \"@\\\"value\\\"1\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Push","target":41,"args":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"tagname\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}: \"std/core/types/@optional\".\"std/core/types/@Optional\"(({\"op\": \"Var\",\"id\": \"@\\\"value\\\"1\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (tagname) {\n  ((std/core/types/@Optional((@uniq-tagname@2014: string) : string) : ? string ) as @pat: ? string)\n     -> @uniq-tagname@2014;\n  ((@skip std/core/types/@None() : ? string ) as @pat@0: ? string)\n     -> (match (@this) {\n      ((@skip std/core/hnd/Htag((@x: string) : string) : (hnd/htag :: ((E, V) -> V) -> V)<(a :: (E, V) -> V)> ) as @pat@1: ((hnd/htag :: ((E, V) -> V) -> V)<(2026 :: (E, V) -> V)>))\n         -> @x;\n    });\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Htag<(a :: (E, V) -> V)>((match (tagname) {\n  ((std/core/types/@Optional((@uniq-tagname@2014: string) : string) : ? string ) as @pat: ? string)\n     -> @uniq-tagname@2014;\n  ((@skip std/core/types/@None() : ? string ) as @pat@0: ? string)\n     -> (match (@this) {\n      ((@skip std/core/hnd/Htag((@x: string) : string) : (hnd/htag :: ((E, V) -> V) -> V)<(a :: (E, V) -> V)> ) as @pat@1: ((hnd/htag :: ((E, V) -> V) -> V)<(2026 :: (E, V) -> V)>))\n         -> @x;\n    });\n}))","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/@optional","scrutinee":1,"clauses":[{"tag":"std/core/types/@Optional","target":48,"args":{"any":[2]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3006]","target":47,"args":{"any":[]}}}]},
{"label":"50([match_def@[mcore:[#377]#120]#121])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"51([#122])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"3\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@x: hnd/htag<2048>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"3\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"4\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/marker<2034,2035>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"4\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"5\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@1: 2048<2034,2035>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"5\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"6\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (@pat@2: hnd/evv<2034>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"6\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"3\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@x: hnd/htag<2048>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"3\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"4\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/marker<2034,2035>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"4\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"5\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@1: 2048<2034,2035>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"5\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"6\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (@pat@2: hnd/evv<2034>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"6\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"52([mcore:[#377]#120])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"3\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"4\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"5\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"6\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"3\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"4\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"5\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"6\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/ev","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Ev","target":51,"args":{"any":[0,1,2,3]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3007]","target":50,"args":{"any":[]}}}]},
{"label":"53([k@[mcore:[#383]#123]#125])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Swap","a":3,"b":1},
{"op":"Jump","target":1055}]},
{"label":"54([#129])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"55([k@[#130]#132])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"56([match_def@[#130]#134])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"57([match_std/core/hnd/Ev@[#130]#135])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"8\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@x: hnd/htag<2090>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"8\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@0@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"9\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@0@0: hnd/marker<2034,2035>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"9\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@1@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"10\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@1@0: 2090<2034,2035>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"10\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"11\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (@pat@2: hnd/evv<2034>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"11\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"8\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@x: hnd/htag<2090>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"8\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@0@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"9\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@0@0: hnd/marker<2034,2035>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"9\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@1@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"10\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@1@0: 2090<2034,2035>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"10\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"11\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (@pat@2: hnd/evv<2034>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"11\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"58([#130])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"htag\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (@this) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@x: (hnd/htag :: ((E, V) -> V) -> V)<(2090 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@0@0: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@1@0: (2090 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (@pat@2: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat@1: ((hnd/ev :: ((E, V) -> V) -> V)<(2090 :: (E, V) -> V)>))\n     -> @x;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"8\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"9\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"10\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"11\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"8\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"9\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"10\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"11\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (@this) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@x: (hnd/htag :: ((E, V) -> V) -> V)<(2090 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@0@0: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@1@0: (2090 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (@pat@2: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat@1: ((hnd/ev :: ((E, V) -> V) -> V)<(2090 :: (E, V) -> V)>))\n     -> @x;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"htag\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}})]","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/ev","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Ev","target":57,"args":{"any":[0,1,2,3]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3008]","target":56,"args":{"any":[]}}}]},
{"label":"59([match_def@[mcore:[#383]#123]#128])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"htag\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}: \"std/core/types/@optional\".\"std/core/types/@None\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"htag\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}: \"std/core/types/@optional\".\"std/core/types/@None\"(())","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/@optional","scrutinee":1,"clauses":[{"tag":"std/core/types/@None","target":58,"args":{"any":[]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3009]","target":54,"args":{"any":[]}}}]},
{"label":"60([#136])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"htag\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}),(@uniq-htag@2065,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"value\\\"7\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@uniq-htag@2065: hnd/htag<2090>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"value\\\\\\\"7\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"htag\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}),(@uniq-htag@2065,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"value\\\"7\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@uniq-htag@2065: hnd/htag<2090>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"value\\\\\\\"7\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"61([mcore:[#383]#123])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Ev<(a :: (E, V) -> V),(e :: E),a>((match (htag) {\n    ((std/core/types/@Optional((@uniq-htag@2065: (hnd/htag :: ((E, V) -> V) -> V)<(2090 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(a :: (E, V) -> V)>) : ? ((hnd/htag :: ((E, V) -> V) -> V)<(a :: (E, V) -> V)>) ) as @pat: ? ((hnd/htag :: ((E, V) -> V) -> V)<(2090 :: (E, V) -> V)>))\n       -> @uniq-htag@2065;\n    ((@skip std/core/types/@None() : ? ((hnd/htag :: ((E, V) -> V) -> V)<(a :: (E, V) -> V)>) ) as @pat@0: ? ((hnd/htag :: ((E, V) -> V) -> V)<(2090 :: (E, V) -> V)>))\n       -> (match (@this) {\n        ((@skip std/core/hnd/Ev<(e :: E),a>((@x: (hnd/htag :: ((E, V) -> V) -> V)<(2090 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@0@0: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@1@0: (2090 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (@pat@2: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat@1: ((hnd/ev :: ((E, V) -> V) -> V)<(2090 :: (E, V) -> V)>))\n           -> @x;\n      });\n  }), marker, hnd, hevv)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (htag) {\n  ((std/core/types/@Optional((@uniq-htag@2065: (hnd/htag :: ((E, V) -> V) -> V)<(2090 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(a :: (E, V) -> V)>) : ? ((hnd/htag :: ((E, V) -> V) -> V)<(a :: (E, V) -> V)>) ) as @pat: ? ((hnd/htag :: ((E, V) -> V) -> V)<(2090 :: (E, V) -> V)>))\n     -> @uniq-htag@2065;\n  ((@skip std/core/types/@None() : ? ((hnd/htag :: ((E, V) -> V) -> V)<(a :: (E, V) -> V)>) ) as @pat@0: ? ((hnd/htag :: ((E, V) -> V) -> V)<(2090 :: (E, V) -> V)>))\n     -> (match (@this) {\n      ((@skip std/core/hnd/Ev<(e :: E),a>((@x: (hnd/htag :: ((E, V) -> V) -> V)<(2090 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@0@0: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@1@0: (2090 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (@pat@2: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat@1: ((hnd/ev :: ((E, V) -> V) -> V)<(2090 :: (E, V) -> V)>))\n         -> @x;\n    });\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"htag\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}: \"std/core/types/@optional\".\"std/core/types/@Optional\"(({\"op\": \"Var\",\"id\": \"@\\\"value\\\"7\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Push","target":53,"args":{"any":[4,3,2]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"htag\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}: \"std/core/types/@optional\".\"std/core/types/@Optional\"(({\"op\": \"Var\",\"id\": \"@\\\"value\\\"7\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (htag) {\n  ((std/core/types/@Optional((@uniq-htag@2065: (hnd/htag :: ((E, V) -> V) -> V)<(2090 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(a :: (E, V) -> V)>) : ? ((hnd/htag :: ((E, V) -> V) -> V)<(a :: (E, V) -> V)>) ) as @pat: ? ((hnd/htag :: ((E, V) -> V) -> V)<(2090 :: (E, V) -> V)>))\n     -> @uniq-htag@2065;\n  ((@skip std/core/types/@None() : ? ((hnd/htag :: ((E, V) -> V) -> V)<(a :: (E, V) -> V)>) ) as @pat@0: ? ((hnd/htag :: ((E, V) -> V) -> V)<(2090 :: (E, V) -> V)>))\n     -> (match (@this) {\n      ((@skip std/core/hnd/Ev<(e :: E),a>((@x: (hnd/htag :: ((E, V) -> V) -> V)<(2090 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@0@0: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@1@0: (2090 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (@pat@2: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat@1: ((hnd/ev :: ((E, V) -> V) -> V)<(2090 :: (E, V) -> V)>))\n         -> @x;\n    });\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Ev<(a :: (E, V) -> V),(e :: E),a>((match (htag) {\n    ((std/core/types/@Optional((@uniq-htag@2065: (hnd/htag :: ((E, V) -> V) -> V)<(2090 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(a :: (E, V) -> V)>) : ? ((hnd/htag :: ((E, V) -> V) -> V)<(a :: (E, V) -> V)>) ) as @pat: ? ((hnd/htag :: ((E, V) -> V) -> V)<(2090 :: (E, V) -> V)>))\n       -> @uniq-htag@2065;\n    ((@skip std/core/types/@None() : ? ((hnd/htag :: ((E, V) -> V) -> V)<(a :: (E, V) -> V)>) ) as @pat@0: ? ((hnd/htag :: ((E, V) -> V) -> V)<(2090 :: (E, V) -> V)>))\n       -> (match (@this) {\n        ((@skip std/core/hnd/Ev<(e :: E),a>((@x: (hnd/htag :: ((E, V) -> V) -> V)<(2090 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@0@0: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@1@0: (2090 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (@pat@2: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat@1: ((hnd/ev :: ((E, V) -> V) -> V)<(2090 :: (E, V) -> V)>))\n           -> @x;\n      });\n  }), marker, hnd, hevv)","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/@optional","scrutinee":1,"clauses":[{"tag":"std/core/types/@Optional","target":60,"args":{"any":[2]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3010]","target":59,"args":{"any":[]}}}]},
{"label":"62([match_def@[mcore:[#384]#137]#138])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"63([#139])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"clause0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"12\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (@x: (hnd/marker<2128,2129>, hnd/ev<2127>) -> 2128 2126) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"12\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"clause0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"12\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (@x: (hnd/marker<2128,2129>, hnd/ev<2127>) -> 2128 2126) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"12\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"64([mcore:[#384]#137])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"clause0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}: \"std/core/hnd/clause0\".\"std/core/hnd/Clause0\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"12\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"clause0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}: \"std/core/hnd/clause0\".\"std/core/hnd/Clause0\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"12\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/clause0","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Clause0","target":63,"args":{"any":[0]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3011]","target":62,"args":{"any":[]}}}]},
{"label":"65([k@[mcore:[#387]#140]#142])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Jump","target":1056}]},
{"label":"66([#146])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"67([k@[#147]#149])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"68([match_def@[#147]#151])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"69([match_std/core/hnd/Clause0@[#147]#152])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"14\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (@x: (hnd/marker<2194,2195>, hnd/ev<2193>) -> 2194 2192) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"14\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"14\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (@x: (hnd/marker<2194,2195>, hnd/ev<2193>) -> 2194 2192) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"14\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"70([#147])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"clause\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (@this) {\n  ((@skip std/core/hnd/Clause0((@x: ((hnd/marker :: (E, V) -> V)<(2194 :: E),2195>, (hnd/ev :: ((E, V) -> V) -> V)<(2193 :: (E, V) -> V)>) -> (2194 :: E) 2192) : ((hnd/marker :: (E, V) -> V)<(e :: E),c>, (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>) -> (e :: E) a) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<a,(b :: (E, V) -> V),(e :: E),c> ) as @pat@1: ((hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<2192,(2193 :: (E, V) -> V),(2194 :: E),2195>))\n     -> @x;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}: \"std/core/hnd/clause0\".\"std/core/hnd/Clause0\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"14\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}: \"std/core/hnd/clause0\".\"std/core/hnd/Clause0\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"14\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (@this) {\n  ((@skip std/core/hnd/Clause0((@x: ((hnd/marker :: (E, V) -> V)<(2194 :: E),2195>, (hnd/ev :: ((E, V) -> V) -> V)<(2193 :: (E, V) -> V)>) -> (2194 :: E) 2192) : ((hnd/marker :: (E, V) -> V)<(e :: E),c>, (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>) -> (e :: E) a) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<a,(b :: (E, V) -> V),(e :: E),c> ) as @pat@1: ((hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<2192,(2193 :: (E, V) -> V),(2194 :: E),2195>))\n     -> @x;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"clause\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}})]","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/clause0","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Clause0","target":69,"args":{"any":[0]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3012]","target":68,"args":{"any":[]}}}]},
{"label":"71([match_def@[mcore:[#387]#140]#145])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"clause\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}: \"std/core/types/@optional\".\"std/core/types/@None\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"clause\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}: \"std/core/types/@optional\".\"std/core/types/@None\"(())","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/@optional","scrutinee":1,"clauses":[{"tag":"std/core/types/@None","target":70,"args":{"any":[]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3013]","target":66,"args":{"any":[]}}}]},
{"label":"72([#153])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"clause\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}),(@uniq-clause@2165,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"value\\\"13\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@uniq-clause@2165: (hnd/marker<2194,2195>, hnd/ev<2193>) -> 2194 2192) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"value\\\\\\\"13\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"clause\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}),(@uniq-clause@2165,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"value\\\"13\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@uniq-clause@2165: (hnd/marker<2194,2195>, hnd/ev<2193>) -> 2194 2192) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"value\\\\\\\"13\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"73([mcore:[#387]#140])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Clause0<a,(a :: (E, V) -> V),(e :: E),a>((match (clause) {\n  ((std/core/types/@Optional((@uniq-clause@2165: ((hnd/marker :: (E, V) -> V)<(2194 :: E),2195>, (hnd/ev :: ((E, V) -> V) -> V)<(2193 :: (E, V) -> V)>) -> (2194 :: E) 2192) : ((hnd/marker :: (E, V) -> V)<(e :: E),c>, (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>) -> (e :: E) a) : ? (((hnd/marker :: (E, V) -> V)<(e :: E),c>, (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>) -> (e :: E) a) ) as @pat: ? (((hnd/marker :: (E, V) -> V)<(2194 :: E),2195>, (hnd/ev :: ((E, V) -> V) -> V)<(2193 :: (E, V) -> V)>) -> (2194 :: E) 2192))\n     -> @uniq-clause@2165;\n  ((@skip std/core/types/@None() : ? (((hnd/marker :: (E, V) -> V)<(e :: E),c>, (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>) -> (e :: E) a) ) as @pat@0: ? (((hnd/marker :: (E, V) -> V)<(2194 :: E),2195>, (hnd/ev :: ((E, V) -> V) -> V)<(2193 :: (E, V) -> V)>) -> (2194 :: E) 2192))\n     -> (match (@this) {\n      ((@skip std/core/hnd/Clause0((@x: ((hnd/marker :: (E, V) -> V)<(2194 :: E),2195>, (hnd/ev :: ((E, V) -> V) -> V)<(2193 :: (E, V) -> V)>) -> (2194 :: E) 2192) : ((hnd/marker :: (E, V) -> V)<(e :: E),c>, (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>) -> (e :: E) a) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<a,(b :: (E, V) -> V),(e :: E),c> ) as @pat@1: ((hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<2192,(2193 :: (E, V) -> V),(2194 :: E),2195>))\n         -> @x;\n    });\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (clause) {\n  ((std/core/types/@Optional((@uniq-clause@2165: ((hnd/marker :: (E, V) -> V)<(2194 :: E),2195>, (hnd/ev :: ((E, V) -> V) -> V)<(2193 :: (E, V) -> V)>) -> (2194 :: E) 2192) : ((hnd/marker :: (E, V) -> V)<(e :: E),c>, (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>) -> (e :: E) a) : ? (((hnd/marker :: (E, V) -> V)<(e :: E),c>, (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>) -> (e :: E) a) ) as @pat: ? (((hnd/marker :: (E, V) -> V)<(2194 :: E),2195>, (hnd/ev :: ((E, V) -> V) -> V)<(2193 :: (E, V) -> V)>) -> (2194 :: E) 2192))\n     -> @uniq-clause@2165;\n  ((@skip std/core/types/@None() : ? (((hnd/marker :: (E, V) -> V)<(e :: E),c>, (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>) -> (e :: E) a) ) as @pat@0: ? (((hnd/marker :: (E, V) -> V)<(2194 :: E),2195>, (hnd/ev :: ((E, V) -> V) -> V)<(2193 :: (E, V) -> V)>) -> (2194 :: E) 2192))\n     -> (match (@this) {\n      ((@skip std/core/hnd/Clause0((@x: ((hnd/marker :: (E, V) -> V)<(2194 :: E),2195>, (hnd/ev :: ((E, V) -> V) -> V)<(2193 :: (E, V) -> V)>) -> (2194 :: E) 2192) : ((hnd/marker :: (E, V) -> V)<(e :: E),c>, (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>) -> (e :: E) a) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<a,(b :: (E, V) -> V),(e :: E),c> ) as @pat@1: ((hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<2192,(2193 :: (E, V) -> V),(2194 :: E),2195>))\n         -> @x;\n    });\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"clause\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}: \"std/core/types/@optional\".\"std/core/types/@Optional\"(({\"op\": \"Var\",\"id\": \"@\\\"value\\\"13\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Push","target":65,"args":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"clause\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}: \"std/core/types/@optional\".\"std/core/types/@Optional\"(({\"op\": \"Var\",\"id\": \"@\\\"value\\\"13\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (clause) {\n  ((std/core/types/@Optional((@uniq-clause@2165: ((hnd/marker :: (E, V) -> V)<(2194 :: E),2195>, (hnd/ev :: ((E, V) -> V) -> V)<(2193 :: (E, V) -> V)>) -> (2194 :: E) 2192) : ((hnd/marker :: (E, V) -> V)<(e :: E),c>, (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>) -> (e :: E) a) : ? (((hnd/marker :: (E, V) -> V)<(e :: E),c>, (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>) -> (e :: E) a) ) as @pat: ? (((hnd/marker :: (E, V) -> V)<(2194 :: E),2195>, (hnd/ev :: ((E, V) -> V) -> V)<(2193 :: (E, V) -> V)>) -> (2194 :: E) 2192))\n     -> @uniq-clause@2165;\n  ((@skip std/core/types/@None() : ? (((hnd/marker :: (E, V) -> V)<(e :: E),c>, (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>) -> (e :: E) a) ) as @pat@0: ? (((hnd/marker :: (E, V) -> V)<(2194 :: E),2195>, (hnd/ev :: ((E, V) -> V) -> V)<(2193 :: (E, V) -> V)>) -> (2194 :: E) 2192))\n     -> (match (@this) {\n      ((@skip std/core/hnd/Clause0((@x: ((hnd/marker :: (E, V) -> V)<(2194 :: E),2195>, (hnd/ev :: ((E, V) -> V) -> V)<(2193 :: (E, V) -> V)>) -> (2194 :: E) 2192) : ((hnd/marker :: (E, V) -> V)<(e :: E),c>, (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>) -> (e :: E) a) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<a,(b :: (E, V) -> V),(e :: E),c> ) as @pat@1: ((hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<2192,(2193 :: (E, V) -> V),(2194 :: E),2195>))\n         -> @x;\n    });\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Clause0<a,(a :: (E, V) -> V),(e :: E),a>((match (clause) {\n  ((std/core/types/@Optional((@uniq-clause@2165: ((hnd/marker :: (E, V) -> V)<(2194 :: E),2195>, (hnd/ev :: ((E, V) -> V) -> V)<(2193 :: (E, V) -> V)>) -> (2194 :: E) 2192) : ((hnd/marker :: (E, V) -> V)<(e :: E),c>, (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>) -> (e :: E) a) : ? (((hnd/marker :: (E, V) -> V)<(e :: E),c>, (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>) -> (e :: E) a) ) as @pat: ? (((hnd/marker :: (E, V) -> V)<(2194 :: E),2195>, (hnd/ev :: ((E, V) -> V) -> V)<(2193 :: (E, V) -> V)>) -> (2194 :: E) 2192))\n     -> @uniq-clause@2165;\n  ((@skip std/core/types/@None() : ? (((hnd/marker :: (E, V) -> V)<(e :: E),c>, (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>) -> (e :: E) a) ) as @pat@0: ? (((hnd/marker :: (E, V) -> V)<(2194 :: E),2195>, (hnd/ev :: ((E, V) -> V) -> V)<(2193 :: (E, V) -> V)>) -> (2194 :: E) 2192))\n     -> (match (@this) {\n      ((@skip std/core/hnd/Clause0((@x: ((hnd/marker :: (E, V) -> V)<(2194 :: E),2195>, (hnd/ev :: ((E, V) -> V) -> V)<(2193 :: (E, V) -> V)>) -> (2194 :: E) 2192) : ((hnd/marker :: (E, V) -> V)<(e :: E),c>, (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>) -> (e :: E) a) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<a,(b :: (E, V) -> V),(e :: E),c> ) as @pat@1: ((hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<2192,(2193 :: (E, V) -> V),(2194 :: E),2195>))\n         -> @x;\n    });\n}))","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/@optional","scrutinee":1,"clauses":[{"tag":"std/core/types/@Optional","target":72,"args":{"any":[2]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3014]","target":71,"args":{"any":[]}}}]},
{"label":"74([match_def@[mcore:[#388]#154]#155])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"75([#156])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"clause1\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"15\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (@x: (hnd/marker<2239,2240>, hnd/ev<2238>, 2236) -> 2239 2237) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"15\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}, {\\\"op\\\": \\\"Top\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"clause1\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"15\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (@x: (hnd/marker<2239,2240>, hnd/ev<2238>, 2236) -> 2239 2237) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"15\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}, {\\\"op\\\": \\\"Top\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"76([mcore:[#388]#154])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"clause1\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}: \"std/core/hnd/clause1\".\"std/core/hnd/Clause1\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"15\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"clause1\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}: \"std/core/hnd/clause1\".\"std/core/hnd/Clause1\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"15\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/clause1","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Clause1","target":75,"args":{"any":[0]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3015]","target":74,"args":{"any":[]}}}]},
{"label":"77([k@[mcore:[#391]#157]#159])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Jump","target":1057}]},
{"label":"78([#163])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"79([k@[#164]#166])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"80([match_def@[#164]#168])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"81([match_std/core/hnd/Clause1@[#164]#169])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"17\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (@x: (hnd/marker<2322,2323>, hnd/ev<2321>, 2319) -> 2322 2320) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"17\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}, {\\\"op\\\": \\\"Top\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"17\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (@x: (hnd/marker<2322,2323>, hnd/ev<2321>, 2319) -> 2322 2320) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"17\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}, {\\\"op\\\": \\\"Top\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"82([#164])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"clause\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (@this) {\n  ((@skip std/core/hnd/Clause1((@x: ((hnd/marker :: (E, V) -> V)<(2322 :: E),2323>, (hnd/ev :: ((E, V) -> V) -> V)<(2321 :: (E, V) -> V)>, 2319) -> (2322 :: E) 2320) : ((hnd/marker :: (E, V) -> V)<(e :: E),d>, (hnd/ev :: ((E, V) -> V) -> V)<(c :: (E, V) -> V)>, a) -> (e :: E) b) : (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<a,b,(c :: (E, V) -> V),(e :: E),d> ) as @pat@1: ((hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<2319,2320,(2321 :: (E, V) -> V),(2322 :: E),2323>))\n     -> @x;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}: \"std/core/hnd/clause1\".\"std/core/hnd/Clause1\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"17\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}: \"std/core/hnd/clause1\".\"std/core/hnd/Clause1\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"17\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (@this) {\n  ((@skip std/core/hnd/Clause1((@x: ((hnd/marker :: (E, V) -> V)<(2322 :: E),2323>, (hnd/ev :: ((E, V) -> V) -> V)<(2321 :: (E, V) -> V)>, 2319) -> (2322 :: E) 2320) : ((hnd/marker :: (E, V) -> V)<(e :: E),d>, (hnd/ev :: ((E, V) -> V) -> V)<(c :: (E, V) -> V)>, a) -> (e :: E) b) : (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<a,b,(c :: (E, V) -> V),(e :: E),d> ) as @pat@1: ((hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<2319,2320,(2321 :: (E, V) -> V),(2322 :: E),2323>))\n     -> @x;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"clause\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}})]","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/clause1","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Clause1","target":81,"args":{"any":[0]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3016]","target":80,"args":{"any":[]}}}]},
{"label":"83([match_def@[mcore:[#391]#157]#162])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"clause\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}: \"std/core/types/@optional\".\"std/core/types/@None\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"clause\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}: \"std/core/types/@optional\".\"std/core/types/@None\"(())","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/@optional","scrutinee":1,"clauses":[{"tag":"std/core/types/@None","target":82,"args":{"any":[]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3017]","target":78,"args":{"any":[]}}}]},
{"label":"84([#170])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"clause\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}),(@uniq-clause@2287,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"value\\\"16\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@uniq-clause@2287: (hnd/marker<2322,2323>, hnd/ev<2321>, 2319) -> 2322 2320) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"value\\\\\\\"16\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"clause\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}),(@uniq-clause@2287,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"value\\\"16\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@uniq-clause@2287: (hnd/marker<2322,2323>, hnd/ev<2321>, 2319) -> 2322 2320) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"value\\\\\\\"16\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"85([mcore:[#391]#157])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Clause1<a,a,(a :: (E, V) -> V),(e :: E),a>((match (clause) {\n  ((std/core/types/@Optional((@uniq-clause@2287: ((hnd/marker :: (E, V) -> V)<(2322 :: E),2323>, (hnd/ev :: ((E, V) -> V) -> V)<(2321 :: (E, V) -> V)>, 2319) -> (2322 :: E) 2320) : ((hnd/marker :: (E, V) -> V)<(e :: E),d>, (hnd/ev :: ((E, V) -> V) -> V)<(c :: (E, V) -> V)>, a) -> (e :: E) b) : ? (((hnd/marker :: (E, V) -> V)<(e :: E),d>, (hnd/ev :: ((E, V) -> V) -> V)<(c :: (E, V) -> V)>, a) -> (e :: E) b) ) as @pat: ? (((hnd/marker :: (E, V) -> V)<(2322 :: E),2323>, (hnd/ev :: ((E, V) -> V) -> V)<(2321 :: (E, V) -> V)>, 2319) -> (2322 :: E) 2320))\n     -> @uniq-clause@2287;\n  ((@skip std/core/types/@None() : ? (((hnd/marker :: (E, V) -> V)<(e :: E),d>, (hnd/ev :: ((E, V) -> V) -> V)<(c :: (E, V) -> V)>, a) -> (e :: E) b) ) as @pat@0: ? (((hnd/marker :: (E, V) -> V)<(2322 :: E),2323>, (hnd/ev :: ((E, V) -> V) -> V)<(2321 :: (E, V) -> V)>, 2319) -> (2322 :: E) 2320))\n     -> (match (@this) {\n      ((@skip std/core/hnd/Clause1((@x: ((hnd/marker :: (E, V) -> V)<(2322 :: E),2323>, (hnd/ev :: ((E, V) -> V) -> V)<(2321 :: (E, V) -> V)>, 2319) -> (2322 :: E) 2320) : ((hnd/marker :: (E, V) -> V)<(e :: E),d>, (hnd/ev :: ((E, V) -> V) -> V)<(c :: (E, V) -> V)>, a) -> (e :: E) b) : (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<a,b,(c :: (E, V) -> V),(e :: E),d> ) as @pat@1: ((hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<2319,2320,(2321 :: (E, V) -> V),(2322 :: E),2323>))\n         -> @x;\n    });\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (clause) {\n  ((std/core/types/@Optional((@uniq-clause@2287: ((hnd/marker :: (E, V) -> V)<(2322 :: E),2323>, (hnd/ev :: ((E, V) -> V) -> V)<(2321 :: (E, V) -> V)>, 2319) -> (2322 :: E) 2320) : ((hnd/marker :: (E, V) -> V)<(e :: E),d>, (hnd/ev :: ((E, V) -> V) -> V)<(c :: (E, V) -> V)>, a) -> (e :: E) b) : ? (((hnd/marker :: (E, V) -> V)<(e :: E),d>, (hnd/ev :: ((E, V) -> V) -> V)<(c :: (E, V) -> V)>, a) -> (e :: E) b) ) as @pat: ? (((hnd/marker :: (E, V) -> V)<(2322 :: E),2323>, (hnd/ev :: ((E, V) -> V) -> V)<(2321 :: (E, V) -> V)>, 2319) -> (2322 :: E) 2320))\n     -> @uniq-clause@2287;\n  ((@skip std/core/types/@None() : ? (((hnd/marker :: (E, V) -> V)<(e :: E),d>, (hnd/ev :: ((E, V) -> V) -> V)<(c :: (E, V) -> V)>, a) -> (e :: E) b) ) as @pat@0: ? (((hnd/marker :: (E, V) -> V)<(2322 :: E),2323>, (hnd/ev :: ((E, V) -> V) -> V)<(2321 :: (E, V) -> V)>, 2319) -> (2322 :: E) 2320))\n     -> (match (@this) {\n      ((@skip std/core/hnd/Clause1((@x: ((hnd/marker :: (E, V) -> V)<(2322 :: E),2323>, (hnd/ev :: ((E, V) -> V) -> V)<(2321 :: (E, V) -> V)>, 2319) -> (2322 :: E) 2320) : ((hnd/marker :: (E, V) -> V)<(e :: E),d>, (hnd/ev :: ((E, V) -> V) -> V)<(c :: (E, V) -> V)>, a) -> (e :: E) b) : (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<a,b,(c :: (E, V) -> V),(e :: E),d> ) as @pat@1: ((hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<2319,2320,(2321 :: (E, V) -> V),(2322 :: E),2323>))\n         -> @x;\n    });\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"clause\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}: \"std/core/types/@optional\".\"std/core/types/@Optional\"(({\"op\": \"Var\",\"id\": \"@\\\"value\\\"16\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Push","target":77,"args":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"clause\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}: \"std/core/types/@optional\".\"std/core/types/@Optional\"(({\"op\": \"Var\",\"id\": \"@\\\"value\\\"16\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (clause) {\n  ((std/core/types/@Optional((@uniq-clause@2287: ((hnd/marker :: (E, V) -> V)<(2322 :: E),2323>, (hnd/ev :: ((E, V) -> V) -> V)<(2321 :: (E, V) -> V)>, 2319) -> (2322 :: E) 2320) : ((hnd/marker :: (E, V) -> V)<(e :: E),d>, (hnd/ev :: ((E, V) -> V) -> V)<(c :: (E, V) -> V)>, a) -> (e :: E) b) : ? (((hnd/marker :: (E, V) -> V)<(e :: E),d>, (hnd/ev :: ((E, V) -> V) -> V)<(c :: (E, V) -> V)>, a) -> (e :: E) b) ) as @pat: ? (((hnd/marker :: (E, V) -> V)<(2322 :: E),2323>, (hnd/ev :: ((E, V) -> V) -> V)<(2321 :: (E, V) -> V)>, 2319) -> (2322 :: E) 2320))\n     -> @uniq-clause@2287;\n  ((@skip std/core/types/@None() : ? (((hnd/marker :: (E, V) -> V)<(e :: E),d>, (hnd/ev :: ((E, V) -> V) -> V)<(c :: (E, V) -> V)>, a) -> (e :: E) b) ) as @pat@0: ? (((hnd/marker :: (E, V) -> V)<(2322 :: E),2323>, (hnd/ev :: ((E, V) -> V) -> V)<(2321 :: (E, V) -> V)>, 2319) -> (2322 :: E) 2320))\n     -> (match (@this) {\n      ((@skip std/core/hnd/Clause1((@x: ((hnd/marker :: (E, V) -> V)<(2322 :: E),2323>, (hnd/ev :: ((E, V) -> V) -> V)<(2321 :: (E, V) -> V)>, 2319) -> (2322 :: E) 2320) : ((hnd/marker :: (E, V) -> V)<(e :: E),d>, (hnd/ev :: ((E, V) -> V) -> V)<(c :: (E, V) -> V)>, a) -> (e :: E) b) : (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<a,b,(c :: (E, V) -> V),(e :: E),d> ) as @pat@1: ((hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<2319,2320,(2321 :: (E, V) -> V),(2322 :: E),2323>))\n         -> @x;\n    });\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Clause1<a,a,(a :: (E, V) -> V),(e :: E),a>((match (clause) {\n  ((std/core/types/@Optional((@uniq-clause@2287: ((hnd/marker :: (E, V) -> V)<(2322 :: E),2323>, (hnd/ev :: ((E, V) -> V) -> V)<(2321 :: (E, V) -> V)>, 2319) -> (2322 :: E) 2320) : ((hnd/marker :: (E, V) -> V)<(e :: E),d>, (hnd/ev :: ((E, V) -> V) -> V)<(c :: (E, V) -> V)>, a) -> (e :: E) b) : ? (((hnd/marker :: (E, V) -> V)<(e :: E),d>, (hnd/ev :: ((E, V) -> V) -> V)<(c :: (E, V) -> V)>, a) -> (e :: E) b) ) as @pat: ? (((hnd/marker :: (E, V) -> V)<(2322 :: E),2323>, (hnd/ev :: ((E, V) -> V) -> V)<(2321 :: (E, V) -> V)>, 2319) -> (2322 :: E) 2320))\n     -> @uniq-clause@2287;\n  ((@skip std/core/types/@None() : ? (((hnd/marker :: (E, V) -> V)<(e :: E),d>, (hnd/ev :: ((E, V) -> V) -> V)<(c :: (E, V) -> V)>, a) -> (e :: E) b) ) as @pat@0: ? (((hnd/marker :: (E, V) -> V)<(2322 :: E),2323>, (hnd/ev :: ((E, V) -> V) -> V)<(2321 :: (E, V) -> V)>, 2319) -> (2322 :: E) 2320))\n     -> (match (@this) {\n      ((@skip std/core/hnd/Clause1((@x: ((hnd/marker :: (E, V) -> V)<(2322 :: E),2323>, (hnd/ev :: ((E, V) -> V) -> V)<(2321 :: (E, V) -> V)>, 2319) -> (2322 :: E) 2320) : ((hnd/marker :: (E, V) -> V)<(e :: E),d>, (hnd/ev :: ((E, V) -> V) -> V)<(c :: (E, V) -> V)>, a) -> (e :: E) b) : (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<a,b,(c :: (E, V) -> V),(e :: E),d> ) as @pat@1: ((hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<2319,2320,(2321 :: (E, V) -> V),(2322 :: E),2323>))\n         -> @x;\n    });\n}))","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/@optional","scrutinee":1,"clauses":[{"tag":"std/core/types/@Optional","target":84,"args":{"any":[2]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3018]","target":83,"args":{"any":[]}}}]},
{"label":"86([match_def@[mcore:[#392]#171]#172])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"87([#173])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"clause2\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause2\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"18\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (@x: (hnd/marker<2375,2376>, hnd/ev<2374>, 2371, 2372) -> 2375 2373) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"18\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}, {\\\"op\\\": \\\"Top\\\"}, {\\\"op\\\": \\\"Top\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"clause2\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause2\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"18\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (@x: (hnd/marker<2375,2376>, hnd/ev<2374>, 2371, 2372) -> 2375 2373) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"18\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}, {\\\"op\\\": \\\"Top\\\"}, {\\\"op\\\": \\\"Top\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"88([mcore:[#392]#171])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"clause2\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause2\"}}: \"std/core/hnd/clause2\".\"std/core/hnd/Clause2\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"18\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"clause2\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause2\"}}: \"std/core/hnd/clause2\".\"std/core/hnd/Clause2\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"18\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/clause2","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Clause2","target":87,"args":{"any":[0]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3019]","target":86,"args":{"any":[]}}}]},
{"label":"89([k@[mcore:[#395]#174]#176])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Jump","target":1058}]},
{"label":"90([#180])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"91([k@[#181]#183])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"92([match_def@[#181]#185])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"93([match_std/core/hnd/Clause2@[#181]#186])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause2\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"20\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (@x: (hnd/marker<2476,2477>, hnd/ev<2475>, 2472, 2473) -> 2476 2474) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"20\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}, {\\\"op\\\": \\\"Top\\\"}, {\\\"op\\\": \\\"Top\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause2\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"20\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (@x: (hnd/marker<2476,2477>, hnd/ev<2475>, 2472, 2473) -> 2476 2474) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"20\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}, {\\\"op\\\": \\\"Top\\\"}, {\\\"op\\\": \\\"Top\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"94([#181])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"clause\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (@this) {\n  ((@skip std/core/hnd/Clause2((@x: ((hnd/marker :: (E, V) -> V)<(2476 :: E),2477>, (hnd/ev :: ((E, V) -> V) -> V)<(2475 :: (E, V) -> V)>, 2472, 2473) -> (2476 :: E) 2474) : ((hnd/marker :: (E, V) -> V)<(e :: E),a1>, (hnd/ev :: ((E, V) -> V) -> V)<(d :: (E, V) -> V)>, a, b) -> (e :: E) c) : (hnd/clause2 :: (V, V, V, (E, V) -> V, E, V) -> V)<a,b,c,(d :: (E, V) -> V),(e :: E),a1> ) as @pat@1: ((hnd/clause2 :: (V, V, V, (E, V) -> V, E, V) -> V)<2472,2473,2474,(2475 :: (E, V) -> V),(2476 :: E),2477>))\n     -> @x;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause2\"}}: \"std/core/hnd/clause2\".\"std/core/hnd/Clause2\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"20\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause2\"}}: \"std/core/hnd/clause2\".\"std/core/hnd/Clause2\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"20\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (@this) {\n  ((@skip std/core/hnd/Clause2((@x: ((hnd/marker :: (E, V) -> V)<(2476 :: E),2477>, (hnd/ev :: ((E, V) -> V) -> V)<(2475 :: (E, V) -> V)>, 2472, 2473) -> (2476 :: E) 2474) : ((hnd/marker :: (E, V) -> V)<(e :: E),a1>, (hnd/ev :: ((E, V) -> V) -> V)<(d :: (E, V) -> V)>, a, b) -> (e :: E) c) : (hnd/clause2 :: (V, V, V, (E, V) -> V, E, V) -> V)<a,b,c,(d :: (E, V) -> V),(e :: E),a1> ) as @pat@1: ((hnd/clause2 :: (V, V, V, (E, V) -> V, E, V) -> V)<2472,2473,2474,(2475 :: (E, V) -> V),(2476 :: E),2477>))\n     -> @x;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"clause\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}})]","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/clause2","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Clause2","target":93,"args":{"any":[0]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3020]","target":92,"args":{"any":[]}}}]},
{"label":"95([match_def@[mcore:[#395]#174]#179])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"clause\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}: \"std/core/types/@optional\".\"std/core/types/@None\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"clause\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}: \"std/core/types/@optional\".\"std/core/types/@None\"(())","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/@optional","scrutinee":1,"clauses":[{"tag":"std/core/types/@None","target":94,"args":{"any":[]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3021]","target":90,"args":{"any":[]}}}]},
{"label":"96([#187])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"clause\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}),(@uniq-clause@2435,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"value\\\"19\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@uniq-clause@2435: (hnd/marker<2476,2477>, hnd/ev<2475>, 2472, 2473) -> 2476 2474) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"value\\\\\\\"19\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"clause\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}),(@uniq-clause@2435,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"value\\\"19\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@uniq-clause@2435: (hnd/marker<2476,2477>, hnd/ev<2475>, 2472, 2473) -> 2476 2474) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"value\\\\\\\"19\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"97([mcore:[#395]#174])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Clause2<a,a,a,(a :: (E, V) -> V),(e :: E),a>((match (clause) {\n  ((std/core/types/@Optional((@uniq-clause@2435: ((hnd/marker :: (E, V) -> V)<(2476 :: E),2477>, (hnd/ev :: ((E, V) -> V) -> V)<(2475 :: (E, V) -> V)>, 2472, 2473) -> (2476 :: E) 2474) : ((hnd/marker :: (E, V) -> V)<(e :: E),a1>, (hnd/ev :: ((E, V) -> V) -> V)<(d :: (E, V) -> V)>, a, b) -> (e :: E) c) : ? (((hnd/marker :: (E, V) -> V)<(e :: E),a1>, (hnd/ev :: ((E, V) -> V) -> V)<(d :: (E, V) -> V)>, a, b) -> (e :: E) c) ) as @pat: ? (((hnd/marker :: (E, V) -> V)<(2476 :: E),2477>, (hnd/ev :: ((E, V) -> V) -> V)<(2475 :: (E, V) -> V)>, 2472, 2473) -> (2476 :: E) 2474))\n     -> @uniq-clause@2435;\n  ((@skip std/core/types/@None() : ? (((hnd/marker :: (E, V) -> V)<(e :: E),a1>, (hnd/ev :: ((E, V) -> V) -> V)<(d :: (E, V) -> V)>, a, b) -> (e :: E) c) ) as @pat@0: ? (((hnd/marker :: (E, V) -> V)<(2476 :: E),2477>, (hnd/ev :: ((E, V) -> V) -> V)<(2475 :: (E, V) -> V)>, 2472, 2473) -> (2476 :: E) 2474))\n     -> (match (@this) {\n      ((@skip std/core/hnd/Clause2((@x: ((hnd/marker :: (E, V) -> V)<(2476 :: E),2477>, (hnd/ev :: ((E, V) -> V) -> V)<(2475 :: (E, V) -> V)>, 2472, 2473) -> (2476 :: E) 2474) : ((hnd/marker :: (E, V) -> V)<(e :: E),a1>, (hnd/ev :: ((E, V) -> V) -> V)<(d :: (E, V) -> V)>, a, b) -> (e :: E) c) : (hnd/clause2 :: (V, V, V, (E, V) -> V, E, V) -> V)<a,b,c,(d :: (E, V) -> V),(e :: E),a1> ) as @pat@1: ((hnd/clause2 :: (V, V, V, (E, V) -> V, E, V) -> V)<2472,2473,2474,(2475 :: (E, V) -> V),(2476 :: E),2477>))\n         -> @x;\n    });\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (clause) {\n  ((std/core/types/@Optional((@uniq-clause@2435: ((hnd/marker :: (E, V) -> V)<(2476 :: E),2477>, (hnd/ev :: ((E, V) -> V) -> V)<(2475 :: (E, V) -> V)>, 2472, 2473) -> (2476 :: E) 2474) : ((hnd/marker :: (E, V) -> V)<(e :: E),a1>, (hnd/ev :: ((E, V) -> V) -> V)<(d :: (E, V) -> V)>, a, b) -> (e :: E) c) : ? (((hnd/marker :: (E, V) -> V)<(e :: E),a1>, (hnd/ev :: ((E, V) -> V) -> V)<(d :: (E, V) -> V)>, a, b) -> (e :: E) c) ) as @pat: ? (((hnd/marker :: (E, V) -> V)<(2476 :: E),2477>, (hnd/ev :: ((E, V) -> V) -> V)<(2475 :: (E, V) -> V)>, 2472, 2473) -> (2476 :: E) 2474))\n     -> @uniq-clause@2435;\n  ((@skip std/core/types/@None() : ? (((hnd/marker :: (E, V) -> V)<(e :: E),a1>, (hnd/ev :: ((E, V) -> V) -> V)<(d :: (E, V) -> V)>, a, b) -> (e :: E) c) ) as @pat@0: ? (((hnd/marker :: (E, V) -> V)<(2476 :: E),2477>, (hnd/ev :: ((E, V) -> V) -> V)<(2475 :: (E, V) -> V)>, 2472, 2473) -> (2476 :: E) 2474))\n     -> (match (@this) {\n      ((@skip std/core/hnd/Clause2((@x: ((hnd/marker :: (E, V) -> V)<(2476 :: E),2477>, (hnd/ev :: ((E, V) -> V) -> V)<(2475 :: (E, V) -> V)>, 2472, 2473) -> (2476 :: E) 2474) : ((hnd/marker :: (E, V) -> V)<(e :: E),a1>, (hnd/ev :: ((E, V) -> V) -> V)<(d :: (E, V) -> V)>, a, b) -> (e :: E) c) : (hnd/clause2 :: (V, V, V, (E, V) -> V, E, V) -> V)<a,b,c,(d :: (E, V) -> V),(e :: E),a1> ) as @pat@1: ((hnd/clause2 :: (V, V, V, (E, V) -> V, E, V) -> V)<2472,2473,2474,(2475 :: (E, V) -> V),(2476 :: E),2477>))\n         -> @x;\n    });\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"clause\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}: \"std/core/types/@optional\".\"std/core/types/@Optional\"(({\"op\": \"Var\",\"id\": \"@\\\"value\\\"19\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Push","target":89,"args":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"clause\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}: \"std/core/types/@optional\".\"std/core/types/@Optional\"(({\"op\": \"Var\",\"id\": \"@\\\"value\\\"19\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (clause) {\n  ((std/core/types/@Optional((@uniq-clause@2435: ((hnd/marker :: (E, V) -> V)<(2476 :: E),2477>, (hnd/ev :: ((E, V) -> V) -> V)<(2475 :: (E, V) -> V)>, 2472, 2473) -> (2476 :: E) 2474) : ((hnd/marker :: (E, V) -> V)<(e :: E),a1>, (hnd/ev :: ((E, V) -> V) -> V)<(d :: (E, V) -> V)>, a, b) -> (e :: E) c) : ? (((hnd/marker :: (E, V) -> V)<(e :: E),a1>, (hnd/ev :: ((E, V) -> V) -> V)<(d :: (E, V) -> V)>, a, b) -> (e :: E) c) ) as @pat: ? (((hnd/marker :: (E, V) -> V)<(2476 :: E),2477>, (hnd/ev :: ((E, V) -> V) -> V)<(2475 :: (E, V) -> V)>, 2472, 2473) -> (2476 :: E) 2474))\n     -> @uniq-clause@2435;\n  ((@skip std/core/types/@None() : ? (((hnd/marker :: (E, V) -> V)<(e :: E),a1>, (hnd/ev :: ((E, V) -> V) -> V)<(d :: (E, V) -> V)>, a, b) -> (e :: E) c) ) as @pat@0: ? (((hnd/marker :: (E, V) -> V)<(2476 :: E),2477>, (hnd/ev :: ((E, V) -> V) -> V)<(2475 :: (E, V) -> V)>, 2472, 2473) -> (2476 :: E) 2474))\n     -> (match (@this) {\n      ((@skip std/core/hnd/Clause2((@x: ((hnd/marker :: (E, V) -> V)<(2476 :: E),2477>, (hnd/ev :: ((E, V) -> V) -> V)<(2475 :: (E, V) -> V)>, 2472, 2473) -> (2476 :: E) 2474) : ((hnd/marker :: (E, V) -> V)<(e :: E),a1>, (hnd/ev :: ((E, V) -> V) -> V)<(d :: (E, V) -> V)>, a, b) -> (e :: E) c) : (hnd/clause2 :: (V, V, V, (E, V) -> V, E, V) -> V)<a,b,c,(d :: (E, V) -> V),(e :: E),a1> ) as @pat@1: ((hnd/clause2 :: (V, V, V, (E, V) -> V, E, V) -> V)<2472,2473,2474,(2475 :: (E, V) -> V),(2476 :: E),2477>))\n         -> @x;\n    });\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Clause2<a,a,a,(a :: (E, V) -> V),(e :: E),a>((match (clause) {\n  ((std/core/types/@Optional((@uniq-clause@2435: ((hnd/marker :: (E, V) -> V)<(2476 :: E),2477>, (hnd/ev :: ((E, V) -> V) -> V)<(2475 :: (E, V) -> V)>, 2472, 2473) -> (2476 :: E) 2474) : ((hnd/marker :: (E, V) -> V)<(e :: E),a1>, (hnd/ev :: ((E, V) -> V) -> V)<(d :: (E, V) -> V)>, a, b) -> (e :: E) c) : ? (((hnd/marker :: (E, V) -> V)<(e :: E),a1>, (hnd/ev :: ((E, V) -> V) -> V)<(d :: (E, V) -> V)>, a, b) -> (e :: E) c) ) as @pat: ? (((hnd/marker :: (E, V) -> V)<(2476 :: E),2477>, (hnd/ev :: ((E, V) -> V) -> V)<(2475 :: (E, V) -> V)>, 2472, 2473) -> (2476 :: E) 2474))\n     -> @uniq-clause@2435;\n  ((@skip std/core/types/@None() : ? (((hnd/marker :: (E, V) -> V)<(e :: E),a1>, (hnd/ev :: ((E, V) -> V) -> V)<(d :: (E, V) -> V)>, a, b) -> (e :: E) c) ) as @pat@0: ? (((hnd/marker :: (E, V) -> V)<(2476 :: E),2477>, (hnd/ev :: ((E, V) -> V) -> V)<(2475 :: (E, V) -> V)>, 2472, 2473) -> (2476 :: E) 2474))\n     -> (match (@this) {\n      ((@skip std/core/hnd/Clause2((@x: ((hnd/marker :: (E, V) -> V)<(2476 :: E),2477>, (hnd/ev :: ((E, V) -> V) -> V)<(2475 :: (E, V) -> V)>, 2472, 2473) -> (2476 :: E) 2474) : ((hnd/marker :: (E, V) -> V)<(e :: E),a1>, (hnd/ev :: ((E, V) -> V) -> V)<(d :: (E, V) -> V)>, a, b) -> (e :: E) c) : (hnd/clause2 :: (V, V, V, (E, V) -> V, E, V) -> V)<a,b,c,(d :: (E, V) -> V),(e :: E),a1> ) as @pat@1: ((hnd/clause2 :: (V, V, V, (E, V) -> V, E, V) -> V)<2472,2473,2474,(2475 :: (E, V) -> V),(2476 :: E),2477>))\n         -> @x;\n    });\n}))","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/@optional","scrutinee":1,"clauses":[{"tag":"std/core/types/@Optional","target":96,"args":{"any":[2]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3022]","target":95,"args":{"any":[]}}}]},
{"label":"98([match_def@[mcore:[#396]#188]#189])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"resume-result\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/False","traced":{"any":[]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/False","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"resume-result\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"99([#192])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"resume-result\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"result\\\"21\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@0: 2501) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"result\\\\\\\"21\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/True","traced":{"any":[]}},
{"op":"Const","format":"bool","out":0,"value":true},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/True","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"resume-result\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"result\\\"21\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@0: 2501) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"result\\\\\\\"21\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"100([mcore:[#396]#188])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"resume-result\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}}: \"std/core/hnd/resume-result\".\"std/core/hnd/Deep\"(({\"op\": \"Var\",\"id\": \"@\\\"result\\\"21\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"resume-result\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}}: \"std/core/hnd/resume-result\".\"std/core/hnd/Deep\"(({\"op\": \"Var\",\"id\": \"@\\\"result\\\"21\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/resume-result","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Deep","target":99,"args":{"any":[0]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3023]","target":98,"args":{"any":[]}}}]},
{"label":"101([match_def@[mcore:[#397]#195]#196])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"resume-result\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/False","traced":{"any":[]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/False","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"resume-result\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"102([#199])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"resume-result\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"result\\\"22\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@0: 2521) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"result\\\\\\\"22\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/True","traced":{"any":[]}},
{"op":"Const","format":"bool","out":0,"value":true},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/True","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"resume-result\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"result\\\"22\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@0: 2521) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"result\\\\\\\"22\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"103([mcore:[#397]#195])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"resume-result\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}}: \"std/core/hnd/resume-result\".\"std/core/hnd/Shallow\"(({\"op\": \"Var\",\"id\": \"@\\\"result\\\"22\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"resume-result\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}}: \"std/core/hnd/resume-result\".\"std/core/hnd/Shallow\"(({\"op\": \"Var\",\"id\": \"@\\\"result\\\"22\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/resume-result","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Shallow","target":102,"args":{"any":[0]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3024]","target":101,"args":{"any":[]}}}]},
{"label":"104([match_def@[mcore:[#398]#202]#203])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"resume-result\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/False","traced":{"any":[]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/False","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"resume-result\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"105([#206])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"resume-result\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"result\\\"23\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@0: 2542) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"result\\\\\\\"23\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/True","traced":{"any":[]}},
{"op":"Const","format":"bool","out":0,"value":true},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/True","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"resume-result\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"result\\\"23\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@0: 2542) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"result\\\\\\\"23\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"106([mcore:[#398]#202])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"resume-result\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}}: \"std/core/hnd/resume-result\".\"std/core/hnd/Finalize\"(({\"op\": \"Var\",\"id\": \"@\\\"result\\\"23\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"resume-result\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}}: \"std/core/hnd/resume-result\".\"std/core/hnd/Finalize\"(({\"op\": \"Var\",\"id\": \"@\\\"result\\\"23\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/resume-result","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Finalize","target":105,"args":{"any":[0]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3025]","target":104,"args":{"any":[]}}}]},
{"label":"107([match_def@[mcore:[#399]#209]#210])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"108([#211])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-context\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"k\\\"24\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (@x: (hnd/resume-result<2580,2583>) -> 2581 2583) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"k\\\\\\\"24\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/resume-result\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-context\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"k\\\"24\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (@x: (hnd/resume-result<2580,2583>) -> 2581 2583) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"k\\\\\\\"24\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/resume-result\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"109([mcore:[#399]#209])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-context\"}}: \"std/core/hnd/resume-context\".\"std/core/hnd/Resume-context\"(({\"op\": \"Var\",\"id\": \"@\\\"k\\\"24\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-context\"}}: \"std/core/hnd/resume-context\".\"std/core/hnd/Resume-context\"(({\"op\": \"Var\",\"id\": \"@\\\"k\\\"24\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/resume-context","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Resume-context","target":108,"args":{"any":[0]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3026]","target":107,"args":{"any":[]}}}]},
{"label":"110([k@[mcore:[#402]#212]#214])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Jump","target":1062}]},
{"label":"111([#218])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"112([k@[#219]#221])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"113([match_def@[#219]#223])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"114([#224])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-context\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"k\\\"26\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (@x: (hnd/resume-result<2646,2649>) -> 2647 2649) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"k\\\\\\\"26\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/resume-result\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-context\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"k\\\"26\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (@x: (hnd/resume-result<2646,2649>) -> 2647 2649) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"k\\\\\\\"26\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/resume-result\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"115([#219])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"k\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (@this) {\n  ((@skip std/core/hnd/Resume-context((@x: ((hnd/resume-result :: (V, V) -> V)<2646,2649>) -> (2647 :: E) 2649) : ((hnd/resume-result :: (V, V) -> V)<a,b>) -> (e :: E) b) : (hnd/resume-context :: (V, E, E, V) -> V)<a,(e :: E),(e1 :: E),b> ) as @pat@1: ((hnd/resume-context :: (V, E, E, V) -> V)<2646,(2647 :: E),(2648 :: E),2649>))\n     -> @x;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-context\"}}: \"std/core/hnd/resume-context\".\"std/core/hnd/Resume-context\"(({\"op\": \"Var\",\"id\": \"@\\\"k\\\"26\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-context\"}}: \"std/core/hnd/resume-context\".\"std/core/hnd/Resume-context\"(({\"op\": \"Var\",\"id\": \"@\\\"k\\\"26\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (@this) {\n  ((@skip std/core/hnd/Resume-context((@x: ((hnd/resume-result :: (V, V) -> V)<2646,2649>) -> (2647 :: E) 2649) : ((hnd/resume-result :: (V, V) -> V)<a,b>) -> (e :: E) b) : (hnd/resume-context :: (V, E, E, V) -> V)<a,(e :: E),(e1 :: E),b> ) as @pat@1: ((hnd/resume-context :: (V, E, E, V) -> V)<2646,(2647 :: E),(2648 :: E),2649>))\n     -> @x;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"k\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}})]","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/resume-context","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Resume-context","target":114,"args":{"any":[0]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3027]","target":113,"args":{"any":[]}}}]},
{"label":"116([match_def@[mcore:[#402]#212]#217])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"k\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}: \"std/core/types/@optional\".\"std/core/types/@None\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"k\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}: \"std/core/types/@optional\".\"std/core/types/@None\"(())","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/@optional","scrutinee":1,"clauses":[{"tag":"std/core/types/@None","target":115,"args":{"any":[]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3028]","target":111,"args":{"any":[]}}}]},
{"label":"117([#225])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"k\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}),(@uniq-k@2619,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"value\\\"25\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@uniq-k@2619: (hnd/resume-result<2646,2649>) -> 2647 2649) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"value\\\\\\\"25\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"k\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}),(@uniq-k@2619,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"value\\\"25\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@uniq-k@2619: (hnd/resume-result<2646,2649>) -> 2647 2649) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"value\\\\\\\"25\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"118([mcore:[#402]#212])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>((match (k) {\n  ((std/core/types/@Optional((@uniq-k@2619: ((hnd/resume-result :: (V, V) -> V)<2646,2649>) -> (2647 :: E) 2649) : ((hnd/resume-result :: (V, V) -> V)<a,b>) -> (e :: E) b) : ? (((hnd/resume-result :: (V, V) -> V)<a,b>) -> (e :: E) b) ) as @pat: ? (((hnd/resume-result :: (V, V) -> V)<2646,2649>) -> (2647 :: E) 2649))\n     -> @uniq-k@2619;\n  ((@skip std/core/types/@None() : ? (((hnd/resume-result :: (V, V) -> V)<a,b>) -> (e :: E) b) ) as @pat@0: ? (((hnd/resume-result :: (V, V) -> V)<2646,2649>) -> (2647 :: E) 2649))\n     -> (match (@this) {\n      ((@skip std/core/hnd/Resume-context((@x: ((hnd/resume-result :: (V, V) -> V)<2646,2649>) -> (2647 :: E) 2649) : ((hnd/resume-result :: (V, V) -> V)<a,b>) -> (e :: E) b) : (hnd/resume-context :: (V, E, E, V) -> V)<a,(e :: E),(e1 :: E),b> ) as @pat@1: ((hnd/resume-context :: (V, E, E, V) -> V)<2646,(2647 :: E),(2648 :: E),2649>))\n         -> @x;\n    });\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (k) {\n  ((std/core/types/@Optional((@uniq-k@2619: ((hnd/resume-result :: (V, V) -> V)<2646,2649>) -> (2647 :: E) 2649) : ((hnd/resume-result :: (V, V) -> V)<a,b>) -> (e :: E) b) : ? (((hnd/resume-result :: (V, V) -> V)<a,b>) -> (e :: E) b) ) as @pat: ? (((hnd/resume-result :: (V, V) -> V)<2646,2649>) -> (2647 :: E) 2649))\n     -> @uniq-k@2619;\n  ((@skip std/core/types/@None() : ? (((hnd/resume-result :: (V, V) -> V)<a,b>) -> (e :: E) b) ) as @pat@0: ? (((hnd/resume-result :: (V, V) -> V)<2646,2649>) -> (2647 :: E) 2649))\n     -> (match (@this) {\n      ((@skip std/core/hnd/Resume-context((@x: ((hnd/resume-result :: (V, V) -> V)<2646,2649>) -> (2647 :: E) 2649) : ((hnd/resume-result :: (V, V) -> V)<a,b>) -> (e :: E) b) : (hnd/resume-context :: (V, E, E, V) -> V)<a,(e :: E),(e1 :: E),b> ) as @pat@1: ((hnd/resume-context :: (V, E, E, V) -> V)<2646,(2647 :: E),(2648 :: E),2649>))\n         -> @x;\n    });\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"k\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}: \"std/core/types/@optional\".\"std/core/types/@Optional\"(({\"op\": \"Var\",\"id\": \"@\\\"value\\\"25\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Push","target":110,"args":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"k\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}: \"std/core/types/@optional\".\"std/core/types/@Optional\"(({\"op\": \"Var\",\"id\": \"@\\\"value\\\"25\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (k) {\n  ((std/core/types/@Optional((@uniq-k@2619: ((hnd/resume-result :: (V, V) -> V)<2646,2649>) -> (2647 :: E) 2649) : ((hnd/resume-result :: (V, V) -> V)<a,b>) -> (e :: E) b) : ? (((hnd/resume-result :: (V, V) -> V)<a,b>) -> (e :: E) b) ) as @pat: ? (((hnd/resume-result :: (V, V) -> V)<2646,2649>) -> (2647 :: E) 2649))\n     -> @uniq-k@2619;\n  ((@skip std/core/types/@None() : ? (((hnd/resume-result :: (V, V) -> V)<a,b>) -> (e :: E) b) ) as @pat@0: ? (((hnd/resume-result :: (V, V) -> V)<2646,2649>) -> (2647 :: E) 2649))\n     -> (match (@this) {\n      ((@skip std/core/hnd/Resume-context((@x: ((hnd/resume-result :: (V, V) -> V)<2646,2649>) -> (2647 :: E) 2649) : ((hnd/resume-result :: (V, V) -> V)<a,b>) -> (e :: E) b) : (hnd/resume-context :: (V, E, E, V) -> V)<a,(e :: E),(e1 :: E),b> ) as @pat@1: ((hnd/resume-context :: (V, E, E, V) -> V)<2646,(2647 :: E),(2648 :: E),2649>))\n         -> @x;\n    });\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>((match (k) {\n  ((std/core/types/@Optional((@uniq-k@2619: ((hnd/resume-result :: (V, V) -> V)<2646,2649>) -> (2647 :: E) 2649) : ((hnd/resume-result :: (V, V) -> V)<a,b>) -> (e :: E) b) : ? (((hnd/resume-result :: (V, V) -> V)<a,b>) -> (e :: E) b) ) as @pat: ? (((hnd/resume-result :: (V, V) -> V)<2646,2649>) -> (2647 :: E) 2649))\n     -> @uniq-k@2619;\n  ((@skip std/core/types/@None() : ? (((hnd/resume-result :: (V, V) -> V)<a,b>) -> (e :: E) b) ) as @pat@0: ? (((hnd/resume-result :: (V, V) -> V)<2646,2649>) -> (2647 :: E) 2649))\n     -> (match (@this) {\n      ((@skip std/core/hnd/Resume-context((@x: ((hnd/resume-result :: (V, V) -> V)<2646,2649>) -> (2647 :: E) 2649) : ((hnd/resume-result :: (V, V) -> V)<a,b>) -> (e :: E) b) : (hnd/resume-context :: (V, E, E, V) -> V)<a,(e :: E),(e1 :: E),b> ) as @pat@1: ((hnd/resume-context :: (V, E, E, V) -> V)<2646,(2647 :: E),(2648 :: E),2649>))\n         -> @x;\n    });\n}))","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/@optional","scrutinee":1,"clauses":[{"tag":"std/core/types/@Optional","target":117,"args":{"any":[2]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3029]","target":116,"args":{"any":[]}}}]},
{"label":"119([match_def@[mcore:[#403]#226]#227])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"yld\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/False","traced":{"any":[]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/False","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"yld\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"120([#230])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"yld\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/True","traced":{"any":[]}},
{"op":"Const","format":"bool","out":0,"value":true},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/True","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"yld\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"121([mcore:[#403]#226])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"yld\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}}: \"std/core/hnd/yld\".\"std/core/hnd/Pure\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"yld\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}}: \"std/core/hnd/yld\".\"std/core/hnd/Pure\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/yld","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Pure","target":120,"args":{"any":[]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3030]","target":119,"args":{"any":[]}}}]},
{"label":"122([match_def@[mcore:[#404]#233]#234])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"yld\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/False","traced":{"any":[]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/False","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"yld\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"123([#237])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"yld\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/True","traced":{"any":[]}},
{"op":"Const","format":"bool","out":0,"value":true},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/True","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"yld\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"124([mcore:[#404]#233])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"yld\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}}: \"std/core/hnd/yld\".\"std/core/hnd/YieldingFinal\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"yld\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}}: \"std/core/hnd/yld\".\"std/core/hnd/YieldingFinal\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/yld","scrutinee":0,"clauses":[{"tag":"std/core/hnd/YieldingFinal","target":123,"args":{"any":[]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3031]","target":122,"args":{"any":[]}}}]},
{"label":"125([match_def@[mcore:[#405]#240]#241])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"yld\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/False","traced":{"any":[]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/False","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"yld\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"126([#244])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"yld\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/True","traced":{"any":[]}},
{"op":"Const","format":"bool","out":0,"value":true},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/True","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"yld\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"127([mcore:[#405]#240])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"yld\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}}: \"std/core/hnd/yld\".\"std/core/hnd/Yielding\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"yld\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}}: \"std/core/hnd/yld\".\"std/core/hnd/Yielding\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/yld","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Yielding","target":126,"args":{"any":[]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3032]","target":125,"args":{"any":[]}}}]},
{"label":"128([match_def@[mcore:[#406]#247]#248])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@2,{\"op\": \"Var\",\"id\": \"yld\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/False","traced":{"any":[]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/False","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@2,{\"op\": \"Var\",\"id\": \"yld\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"129([#251])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"yld\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"27\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (@pat@0: ((hnd/resume-result<2737,2740>) -> 2738 2740) -> 2738 2740) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"27\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/resume-result\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"cont\\\"28\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Function\",\"params\": [],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (@pat@1: (() -> 2737) -> 2738 2739) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"cont\\\\\\\"28\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Function\\\",\\\"params\\\": [],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/True","traced":{"any":[]}},
{"op":"Const","format":"bool","out":0,"value":true},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/True","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"yld\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"27\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (@pat@0: ((hnd/resume-result<2737,2740>) -> 2738 2740) -> 2738 2740) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"27\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/resume-result\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"cont\\\"28\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Function\",\"params\": [],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (@pat@1: (() -> 2737) -> 2738 2739) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"cont\\\\\\\"28\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Function\\\",\\\"params\\\": [],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"130([mcore:[#406]#247])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"yld\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}}: \"std/core/hnd/yld\".\"std/core/hnd/Yield\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"27\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}, {\"op\": \"Var\",\"id\": \"@\\\"cont\\\"28\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Function\",\"params\": [],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"yld\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}}: \"std/core/hnd/yld\".\"std/core/hnd/Yield\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"27\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}, {\"op\": \"Var\",\"id\": \"@\\\"cont\\\"28\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Function\",\"params\": [],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/yld","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Yield","target":129,"args":{"any":[0,1]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3033]","target":128,"args":{"any":[]}}}]},
{"label":"131([k@[k@[mcore:[#409]#254]#256]#261])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"132([k@[mcore:[#409]#254]#256])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Const","format":"int","out":2,"value":0},
{"op":"Jump","target":34}]},
{"label":"133([mcore:[#409]#254])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@extern-evv-index<(e :: E),(a :: (E, V) -> V)>(htag)","traced":{"any":[]}},
{"op":"Push","target":132,"args":{"any":[0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@extern-evv-index<(e :: E),(a :: (E, V) -> V)>(htag)","traced":{"any":[]}},
{"op":"Jump","target":0}]},
{"label":"134([mcore:[#410]#262])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[]}},
{"op":"Const","format":"bool","out":0,"value":false},
{"op":"Return","args":{"any":[0]}}]},
{"label":"135([k@[mcore:[#411]#264]#266])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"136([return_clause@[mcore:[#411]#264]#268])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned to return clause","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: returnClause","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: returnClause","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"137([k@[mcore:[#411]#264]#270])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"138([mcore:[#411]#264])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@extern-reset-vm<a,(e :: E),a>(m, ret, action)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: reset","traced":{"any":[]}},
{"op":"NewStack","out":0,"region":1,"label":0,"target":136,"args":{"any":[1]}},
{"op":"PushStack","arg":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: reset","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@extern-reset-vm<a,(e :: E),a>(m, ret, action)","traced":{"any":[]}},
{"op":"Invoke","receiver":2,"tag":"apply","args":{"any":[]}}]},
{"label":"139([mcore:[#413]#272])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: action()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: action()","traced":{"any":[]}},
{"op":"Invoke","receiver":0,"tag":"apply","args":{"any":[]}}]},
{"label":"140([mcore:[#416]#273])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Htag<(a :: (E, V) -> V)>(tag)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Htag<(a :: (E, V) -> V)>(tag)","traced":{"any":[]}},
{"op":"Jump","target":1054}]},
{"label":"141([mcore:[#417]#274])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"CallLib","lib":0,"symbol":"evvSwapCreate0"}]},
{"label":"142([mcore:[#419]#278])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"143([k@[k@[k@[mcore:[#420]#283]#288]#290]#295])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Return","args":{"any":[0]}}]},
{"label":"144([k@[k@[mcore:[#420]#283]#288]#290])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"keep\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Push","target":143,"args":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Copy","from":2,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"keep\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":142}]},
{"label":"145([k@[mcore:[#420]#283]#288])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: f()","traced":{"any":[]}},
{"op":"Push","target":144,"args":{"any":[0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[]}}]},
{"label":"146([mcore:[#420]#283])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap-create0<(e :: E)>()","traced":{"any":[]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"Push","target":145,"args":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap-create0<(e :: E)>()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":141}]},
{"label":"147([mcore:[#421]#296])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"CallLib","lib":0,"symbol":"evvSwapCreate0"}]},
{"label":"148([mcore:[#424]#300])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"149([k@[k@[k@[mcore:[#425]#305]#310]#312]#317])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Return","args":{"any":[0]}}]},
{"label":"150([k@[k@[mcore:[#425]#305]#310]#312])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"keep\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Push","target":149,"args":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Copy","from":2,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"keep\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":148}]},
{"label":"151([k@[mcore:[#425]#305]#310])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: f(x1)","traced":{"any":[]}},
{"op":"Push","target":150,"args":{"any":[0]}},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f(x1)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"152([mcore:[#425]#305])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap-create0<(e :: E)>()","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Push","target":151,"args":{"any":[0,1]}},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap-create0<(e :: E)>()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":147}]},
{"label":"153([mcore:[#426]#318])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"CallLib","lib":0,"symbol":"evvSwapCreate0"}]},
{"label":"154([mcore:[#430]#322])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"155([k@[k@[k@[mcore:[#431]#327]#332]#334]#339])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Return","args":{"any":[0]}}]},
{"label":"156([k@[k@[mcore:[#431]#327]#332]#334])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"keep\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Push","target":155,"args":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Copy","from":2,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"keep\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":154}]},
{"label":"157([k@[mcore:[#431]#327]#332])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: f(x1, x2)","traced":{"any":[]}},
{"op":"Push","target":156,"args":{"any":[0]}},
{"op":"Copy","from":2,"to":0},
{"op":"Copy","from":1,"to":2},
{"op":"Copy","from":3,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f(x1, x2)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":2,"tag":"apply","args":{"any":[0,1]}}]},
{"label":"158([mcore:[#431]#327])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap-create0<(e :: E)>()","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Push","target":157,"args":{"any":[0,1,2]}},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap-create0<(e :: E)>()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":153}]},
{"label":"159([mcore:[#432]#340])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"CallLib","lib":0,"symbol":"evvSwapCreate0"}]},
{"label":"160([mcore:[#437]#344])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"161([k@[k@[k@[mcore:[#438]#349]#354]#356]#361])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Return","args":{"any":[0]}}]},
{"label":"162([k@[k@[mcore:[#438]#349]#354]#356])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"keep\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Push","target":161,"args":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Copy","from":2,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"keep\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":160}]},
{"label":"163([k@[mcore:[#438]#349]#354])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: f(x1, x2, x3)","traced":{"any":[]}},
{"op":"Push","target":162,"args":{"any":[0]}},
{"op":"Copy","from":2,"to":0},
{"op":"Copy","from":4,"to":2},
{"op":"Swap","a":3,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f(x1, x2, x3)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":3,"tag":"apply","args":{"any":[0,1,2]}}]},
{"label":"164([mcore:[#438]#349])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap-create0<(e :: E)>()","traced":{"any":[]}},
{"op":"Const","format":"string","out":4,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"Push","target":163,"args":{"any":[0,1,2,3]}},
{"op":"Copy","from":4,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap-create0<(e :: E)>()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":159}]},
{"label":"165([mcore:[#439]#362])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"CallLib","lib":0,"symbol":"evvSwapCreate0"}]},
{"label":"166([mcore:[#445]#366])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"167([k@[k@[k@[mcore:[#446]#371]#376]#378]#383])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Return","args":{"any":[0]}}]},
{"label":"168([k@[k@[mcore:[#446]#371]#376]#378])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"keep\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Push","target":167,"args":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Copy","from":2,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"keep\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":166}]},
{"label":"169([k@[mcore:[#446]#371]#376])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: f(x1, x2, x3, x4)","traced":{"any":[]}},
{"op":"Push","target":168,"args":{"any":[0]}},
{"op":"Copy","from":2,"to":0},
{"op":"Copy","from":4,"to":2},
{"op":"Copy","from":1,"to":4},
{"op":"Copy","from":3,"to":1},
{"op":"Copy","from":5,"to":3},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f(x1, x2, x3, x4)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":4,"tag":"apply","args":{"any":[0,1,2,3]}}]},
{"label":"170([mcore:[#446]#371])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4,5]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap-create0<(e :: E)>()","traced":{"any":[]}},
{"op":"Const","format":"string","out":5,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[5]},"in":{"any":[5]}},
{"op":"Push","target":169,"args":{"any":[0,1,2,3,4]}},
{"op":"Copy","from":5,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap-create0<(e :: E)>()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":165}]},
{"label":"171([match_def@[mcore:[#452]#384]#385])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"172([k@[k@[#386]#388]#390])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"173([match_def@[k@[#386]#388]#392])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"174([k@[#393]#395])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"175([#393])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@2,{\"op\": \"Var\",\"id\": \"@x33\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}),(f,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"34\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (f: (hnd/marker<3233,3234>, hnd/ev<3289>) -> 3233 3287) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"34\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/cast-clause0<a,(e :: E),(e :: E),(a :: (E, V) -> V),a>(f)(m, ev)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/cast-clause0<a,(e :: E),(e :: E),(a :: (E, V) -> V),a>(f)(m, ev)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@2,{\"op\": \"Var\",\"id\": \"@x33\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}),(f,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"34\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (f: (hnd/marker<3233,3234>, hnd/ev<3289>) -> 3233 3287) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"34\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Invoke","receiver":2,"tag":"apply","args":{"any":[0,1]}}]},
{"label":"176([k@[#386]#388])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@x33\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}: \"std/core/hnd/clause0\".\"std/core/hnd/Clause0\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"34\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@x33\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}: \"std/core/hnd/clause0\".\"std/core/hnd/Clause0\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"34\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/clause0","scrutinee":2,"clauses":[{"tag":"std/core/hnd/Clause0","target":175,"args":{"any":[2]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3034]","target":173,"args":{"any":[]}}}]},
{"label":"177([#386])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"29\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<3289>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"29\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(m,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"30\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (m: hnd/marker<3233,3234>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"30\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(h,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"31\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h: 3289<3233,3234>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"31\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"32\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/evv<3233>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"32\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match ((op<(e :: E),a>(h))) {\n  ((@skip std/core/hnd/Clause0((f: ((hnd/marker :: (E, V) -> V)<(3233 :: E),3234>, (hnd/ev :: ((E, V) -> V) -> V)<(3289 :: (E, V) -> V)>) -> (3233 :: E) 3287) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(c :: (E, V) -> V)>) -> (e :: E) b) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<b,(c :: (E, V) -> V),(e :: E),a> ) as @pat@2: ((hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<3287,(3289 :: (E, V) -> V),(3233 :: E),3234>))\n     -> std/core/hnd/cast-clause0<a,(e :: E),(e :: E),(a :: (E, V) -> V),a>(f)(m, ev);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: op<(e :: E),a>(h)","traced":{"any":[]}},
{"op":"Push","target":176,"args":{"any":[3,0]}},
{"op":"Copy","from":4,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op<(e :: E),a>(h)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match ((op<(e :: E),a>(h))) {\n  ((@skip std/core/hnd/Clause0((f: ((hnd/marker :: (E, V) -> V)<(3233 :: E),3234>, (hnd/ev :: ((E, V) -> V) -> V)<(3289 :: (E, V) -> V)>) -> (3233 :: E) 3287) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(c :: (E, V) -> V)>) -> (e :: E) b) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<b,(c :: (E, V) -> V),(e :: E),a> ) as @pat@2: ((hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<3287,(3289 :: (E, V) -> V),(3233 :: E),3234>))\n     -> std/core/hnd/cast-clause0<a,(e :: E),(e :: E),(a :: (E, V) -> V),a>(f)(m, ev);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"29\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<3289>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"29\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(m,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"30\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (m: hnd/marker<3233,3234>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"30\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(h,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"31\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h: 3289<3233,3234>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"31\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"32\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/evv<3233>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"32\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"178([mcore:[#452]#384])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"29\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"30\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"31\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"32\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"29\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"30\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"31\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"32\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/ev","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Ev","target":177,"args":{"any":[2,3,4,5]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3035]","target":171,"args":{"any":[]}}}]},
{"label":"179([match_def@[mcore:[#459]#397]#398])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"180([k@[k@[#399]#401]#403])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"181([match_def@[k@[#399]#401]#405])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"182([k@[#406]#408])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"183([#406])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@2,{\"op\": \"Var\",\"id\": \"@x39\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}),(f,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"40\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (f: (hnd/marker<3307,3308>, hnd/ev<3370>, 3368) -> 3307 3369) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"40\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}, {\\\"op\\\": \\\"Top\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: f(m, ev, x)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f(m, ev, x)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@2,{\"op\": \"Var\",\"id\": \"@x39\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}),(f,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"40\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (f: (hnd/marker<3307,3308>, hnd/ev<3370>, 3368) -> 3307 3369) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"40\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}, {\\\"op\\\": \\\"Top\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Invoke","receiver":3,"tag":"apply","args":{"any":[0,1,2]}}]},
{"label":"184([k@[#399]#401])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@x39\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}: \"std/core/hnd/clause1\".\"std/core/hnd/Clause1\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"40\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@x39\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}: \"std/core/hnd/clause1\".\"std/core/hnd/Clause1\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"40\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/clause1","scrutinee":3,"clauses":[{"tag":"std/core/hnd/Clause1","target":183,"args":{"any":[3]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3036]","target":181,"args":{"any":[]}}}]},
{"label":"185([#399])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"35\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<3370>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"35\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(m,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"36\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (m: hnd/marker<3307,3308>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"36\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(h,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"37\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h: 3370<3307,3308>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"37\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"38\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/evv<3307>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"38\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match ((op<(e :: E),a>(h))) {\n  ((@skip std/core/hnd/Clause1((f: ((hnd/marker :: (E, V) -> V)<(3307 :: E),3308>, (hnd/ev :: ((E, V) -> V) -> V)<(3370 :: (E, V) -> V)>, 3368) -> (3307 :: E) 3369) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(d :: (E, V) -> V)>, b) -> (e :: E) c) : (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<b,c,(d :: (E, V) -> V),(e :: E),a> ) as @pat@2: ((hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<3368,3369,(3370 :: (E, V) -> V),(3307 :: E),3308>))\n     -> f(m, ev, x);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: op<(e :: E),a>(h)","traced":{"any":[]}},
{"op":"Push","target":184,"args":{"any":[4,0,2]}},
{"op":"Copy","from":5,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op<(e :: E),a>(h)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match ((op<(e :: E),a>(h))) {\n  ((@skip std/core/hnd/Clause1((f: ((hnd/marker :: (E, V) -> V)<(3307 :: E),3308>, (hnd/ev :: ((E, V) -> V) -> V)<(3370 :: (E, V) -> V)>, 3368) -> (3307 :: E) 3369) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(d :: (E, V) -> V)>, b) -> (e :: E) c) : (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<b,c,(d :: (E, V) -> V),(e :: E),a> ) as @pat@2: ((hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<3368,3369,(3370 :: (E, V) -> V),(3307 :: E),3308>))\n     -> f(m, ev, x);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"35\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<3370>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"35\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(m,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"36\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (m: hnd/marker<3307,3308>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"36\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(h,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"37\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h: 3370<3307,3308>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"37\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"38\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/evv<3307>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"38\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"186([mcore:[#459]#397])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"35\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"36\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"37\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"38\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"35\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"36\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"37\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"38\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/ev","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Ev","target":185,"args":{"any":[3,4,5,6]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3037]","target":179,"args":{"any":[]}}}]},
{"label":"187([match_def@[mcore:[#467]#410]#411])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"188([k@[k@[#412]#414]#416])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"189([match_def@[k@[#412]#414]#418])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"190([k@[#419]#421])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"191([#419])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@2,{\"op\": \"Var\",\"id\": \"@x45\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause2\"}}),(f,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"46\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (f: (hnd/marker<3393,3394>, hnd/ev<3465>, 3461, 3462) -> 3393 3463) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"46\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}, {\\\"op\\\": \\\"Top\\\"}, {\\\"op\\\": \\\"Top\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: f(m, evx, x, y)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f(m, evx, x, y)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@2,{\"op\": \"Var\",\"id\": \"@x45\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause2\"}}),(f,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"46\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (f: (hnd/marker<3393,3394>, hnd/ev<3465>, 3461, 3462) -> 3393 3463) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"46\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}, {\\\"op\\\": \\\"Top\\\"}, {\\\"op\\\": \\\"Top\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Invoke","receiver":4,"tag":"apply","args":{"any":[0,1,2,3]}}]},
{"label":"192([k@[#412]#414])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@x45\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause2\"}}: \"std/core/hnd/clause2\".\"std/core/hnd/Clause2\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"46\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Swap","a":3,"b":4},
{"op":"Swap","a":2,"b":4},
{"op":"Swap","a":1,"b":4},
{"op":"Swap","a":0,"b":4},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@x45\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause2\"}}: \"std/core/hnd/clause2\".\"std/core/hnd/Clause2\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"46\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/clause2","scrutinee":4,"clauses":[{"tag":"std/core/hnd/Clause2","target":191,"args":{"any":[4]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3038]","target":189,"args":{"any":[]}}}]},
{"label":"193([#412])",
"frameDescriptor":{"regs_any":8},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"evx\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"41\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<3465>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"41\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(m,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"42\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (m: hnd/marker<3393,3394>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"42\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(h,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"43\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h: 3465<3393,3394>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"43\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"44\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/evv<3393>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"44\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match ((op<(e :: E),a>(h))) {\n  ((@skip std/core/hnd/Clause2((f: ((hnd/marker :: (E, V) -> V)<(3393 :: E),3394>, (hnd/ev :: ((E, V) -> V) -> V)<(3465 :: (E, V) -> V)>, 3461, 3462) -> (3393 :: E) 3463) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(a1 :: (E, V) -> V)>, b, c) -> (e :: E) d) : (hnd/clause2 :: (V, V, V, (E, V) -> V, E, V) -> V)<b,c,d,(a1 :: (E, V) -> V),(e :: E),a> ) as @pat@2: ((hnd/clause2 :: (V, V, V, (E, V) -> V, E, V) -> V)<3461,3462,3463,(3465 :: (E, V) -> V),(3393 :: E),3394>))\n     -> f(m, evx, x, y);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: op<(e :: E),a>(h)","traced":{"any":[]}},
{"op":"Push","target":192,"args":{"any":[5,0,2,3]}},
{"op":"Copy","from":6,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op<(e :: E),a>(h)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match ((op<(e :: E),a>(h))) {\n  ((@skip std/core/hnd/Clause2((f: ((hnd/marker :: (E, V) -> V)<(3393 :: E),3394>, (hnd/ev :: ((E, V) -> V) -> V)<(3465 :: (E, V) -> V)>, 3461, 3462) -> (3393 :: E) 3463) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(a1 :: (E, V) -> V)>, b, c) -> (e :: E) d) : (hnd/clause2 :: (V, V, V, (E, V) -> V, E, V) -> V)<b,c,d,(a1 :: (E, V) -> V),(e :: E),a> ) as @pat@2: ((hnd/clause2 :: (V, V, V, (E, V) -> V, E, V) -> V)<3461,3462,3463,(3465 :: (E, V) -> V),(3393 :: E),3394>))\n     -> f(m, evx, x, y);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"evx\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"41\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<3465>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"41\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(m,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"42\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (m: hnd/marker<3393,3394>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"42\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(h,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"43\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h: 3465<3393,3394>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"43\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"44\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/evv<3393>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"44\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"194([mcore:[#467]#410])",
"frameDescriptor":{"regs_any":8},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"evx\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"41\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"42\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"43\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"44\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"evx\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"41\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"42\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"43\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"44\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/ev","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Ev","target":193,"args":{"any":[4,5,6,7]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3039]","target":187,"args":{"any":[]}}}]},
{"label":"195([k@[mcore:[#469]#423]#427])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"196([return_clause@[mcore:[#469]#423]#429])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned to return clause","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"197([k@[mcore:[#469]#423]#431])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"198([mcore:[#469]#423])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@extern-prompt-local-var-prim-vm<a,a,(e :: E),(h :: H)>(init, action)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: prompt-local-var-prim","traced":{"any":[]}},
{"op":"PrimOp","name":"freshlabel","out":{"any":[2]},"in":{"any":[]}},
{"op":"NewStack","out":2,"region":3,"label":2,"target":196,"args":{"any":[]}},
{"op":"PushStack","arg":2},
{"op":"Allocate","out":0,"init":0,"region":3},
{"op":"Debug","msg":"AFTER TERMINATOR: END: prompt-local-var-prim","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@extern-prompt-local-var-prim-vm<a,a,(e :: E),(h :: H)>(init, action)","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"199([mcore:[#473]#433])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genExpr: clause(x, k)","traced":{"any":[]}},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: clause(x, k)","traced":{"any":[]}},
{"op":"Invoke","receiver":2,"tag":"apply","args":{"any":[0,1]}}]},
{"label":"200([mcore:[#475]#434])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: Resuming","traced":{"any":[]}},
{"op":"PushStack","arg":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Resuming","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"201([k@[mcore:[#476]#435]#439])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"202([method_apply@[mcore:[#476]#435]#442])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Jump","target":200}]},
{"label":"203([mcore:[#476]#435])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@extern-yield-to-prim-vm<a,(e :: E),(e :: E),a>(m, clause)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: yield-to-prim","traced":{"any":[]}},
{"op":"Const","format":"int","out":2,"value":0},
{"op":"ShiftDyn","out":0,"n":2,"label":0},
{"op":"New","out":0,"targets":[202],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: yield-to-prim","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@extern-yield-to-prim-vm<a,(e :: E),(e :: E),a>(m, clause)","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"204([k@[mcore:[#477]#445]#447])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"205([mcore:[#477]#445])",
"frameDescriptor":{"regs_any":0},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@extern-evv-get<(e :: E)>()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@extern-evv-get<(e :: E)>()","traced":{"any":[]}},
{"op":"Jump","target":0}]},
{"label":"206([k@[mcore:[#478]#448]#450])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"207([mcore:[#478]#448])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@extern-evv-insert<(e :: E),(e :: E),(a :: (E, V) -> V)>(evv, ev)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@extern-evv-insert<(e :: E),(e :: E),(a :: (E, V) -> V)>(evv, ev)","traced":{"any":[]}},
{"op":"Jump","target":28}]},
{"label":"208([mcore:[#479]#451])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@extern-fresh-marker<a,(e :: E)>()","traced":{"any":[]}},
{"op":"PrimOp","name":"freshlabel","out":{"any":[0]},"in":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@extern-fresh-marker<a,(e :: E)>()","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"209([mcore:[#482]#453])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@extern-evv-eq<(e :: E)>(evv0, evv1)","traced":{"any":[]}},
{"op":"PrimOp","name":"ptr_eq","out":{"any":[0]},"in":{"any":[0,1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@extern-evv-eq<(e :: E)>(evv0, evv1)","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"210([mcore:[#483]#454])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@extern-guard<(e :: E)>(w)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Undefined:  std/core/hnd/@extern-guard"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@extern-guard<(e :: E)>(w)","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"211([mcore:[#484]#457])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@extern-yield-extend<a,a,(e :: E)>(next)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Undefined:  std/core/hnd/@extern-yield-extend"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@extern-yield-extend<a,a,(e :: E)>(next)","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"212([mcore:[#485]#460])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@extern-yield-cont<a,(e :: E),a>(f)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Undefined:  std/core/hnd/@extern-yield-cont"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@extern-yield-cont<a,(e :: E),a>(f)","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"213([k@[mcore:[#486]#463]#465])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"214([return_clause@[mcore:[#486]#463]#467])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned to return clause","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"215([mcore:[#486]#463])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@extern-yield-prompt<a,(e :: E),a>(m)","traced":{"any":[]}},
{"op":"NewStack","out":0,"region":1,"label":0,"target":214,"args":{"any":[]}},
{"op":"PushStack","arg":0},
{"op":"Const","format":"string","out":0,"value":"Name(std/core/hnd/Pure)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@extern-yield-prompt<a,(e :: E),a>(m)","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"216([mcore:[#487]#470])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@extern-yield-to-final<a,(e :: E),(e :: E),a>(m, clause)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Undefined:  std/core/hnd/@extern-yield-to-final"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@extern-yield-to-final<a,(e :: E),(e :: E),a>(m, clause)","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"217([k@[mcore:[#488]#473]#475])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"218([mcore:[#488]#473])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@extern-evv-swap-delete<(e :: E),(e :: E)>(i, behind)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@extern-evv-swap-delete<(e :: E),(e :: E)>(i, behind)","traced":{"any":[]}},
{"op":"Jump","target":13}]},
{"label":"219([mcore:[#489]#476])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@extern-fresh-marker-named<a,(e :: E)>()","traced":{"any":[]}},
{"op":"PrimOp","name":"freshlabel","out":{"any":[0]},"in":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@extern-fresh-marker-named<a,(e :: E)>()","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"220([mcore:[#490]#478])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@extern-evv-swap-create<(e :: E)>(indices)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Undefined:  std/core/hnd/@extern-evv-swap-create"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@extern-evv-swap-create<(e :: E)>(indices)","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"221([match_def@[mcore:[#497]#481]#482])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"222([k@[k@[#483]#485]#487])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"223([match_def@[k@[#483]#485]#489])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"224([k@[#490]#492])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"225([#490])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@2,{\"op\": \"Var\",\"id\": \"@x51\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}),(f,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"52\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (f: (hnd/marker<3931,3932>, hnd/ev<3995>, 3992) -> 3931 3993) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"52\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}, {\\\"op\\\": \\\"Top\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: f(m, ev, x)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f(m, ev, x)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@2,{\"op\": \"Var\",\"id\": \"@x51\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}),(f,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"52\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (f: (hnd/marker<3931,3932>, hnd/ev<3995>, 3992) -> 3931 3993) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"52\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}, {\\\"op\\\": \\\"Top\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Invoke","receiver":3,"tag":"apply","args":{"any":[0,1,2]}}]},
{"label":"226([k@[#483]#485])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@x51\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}: \"std/core/hnd/clause1\".\"std/core/hnd/Clause1\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"52\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@x51\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}: \"std/core/hnd/clause1\".\"std/core/hnd/Clause1\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"52\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/clause1","scrutinee":3,"clauses":[{"tag":"std/core/hnd/Clause1","target":225,"args":{"any":[3]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3040]","target":223,"args":{"any":[]}}}]},
{"label":"227([#483])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"47\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<3995>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"47\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(m,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"48\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (m: hnd/marker<3931,3932>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"48\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(h,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"49\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h: 3995<3931,3932>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"49\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"50\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/evv<3931>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"50\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match ((op<(e :: E),a>(h))) {\n  ((@skip std/core/hnd/Clause1((f: ((hnd/marker :: (E, V) -> V)<(3931 :: E),3932>, (hnd/ev :: ((E, V) -> V) -> V)<(3995 :: (E, V) -> V)>, 3992) -> (3931 :: E) 3993) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(d :: (E, V) -> V)>, b) -> (e :: E) c) : (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<b,c,(d :: (E, V) -> V),(e :: E),a> ) as @pat@2: ((hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<3992,3993,(3995 :: (E, V) -> V),(3931 :: E),3932>))\n     -> f(m, ev, x);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: op<(e :: E),a>(h)","traced":{"any":[]}},
{"op":"Push","target":226,"args":{"any":[4,0,2]}},
{"op":"Copy","from":5,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op<(e :: E),a>(h)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match ((op<(e :: E),a>(h))) {\n  ((@skip std/core/hnd/Clause1((f: ((hnd/marker :: (E, V) -> V)<(3931 :: E),3932>, (hnd/ev :: ((E, V) -> V) -> V)<(3995 :: (E, V) -> V)>, 3992) -> (3931 :: E) 3993) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(d :: (E, V) -> V)>, b) -> (e :: E) c) : (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<b,c,(d :: (E, V) -> V),(e :: E),a> ) as @pat@2: ((hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<3992,3993,(3995 :: (E, V) -> V),(3931 :: E),3932>))\n     -> f(m, ev, x);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"47\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<3995>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"47\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(m,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"48\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (m: hnd/marker<3931,3932>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"48\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(h,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"49\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h: 3995<3931,3932>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"49\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"50\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/evv<3931>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"50\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"228([mcore:[#497]#481])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"47\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"48\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"49\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"50\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"47\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"48\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"49\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"50\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/ev","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Ev","target":227,"args":{"any":[3,4,5,6]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3041]","target":221,"args":{"any":[]}}}]},
{"label":"229([mcore:[#498]#494])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@extern-yield-to-prim<a,(e :: E),(e :: E),a>(m, clause)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Undefined:  std/core/hnd/@extern-yield-to-prim"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@extern-yield-to-prim<a,(e :: E),(e :: E),a>(m, clause)","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"230([mcore:[#501]#497])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genExpr: op()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op()","traced":{"any":[]}},
{"op":"Invoke","receiver":2,"tag":"apply","args":{"any":[]}}]},
{"label":"231([method_apply@[mcore:[#503]#498]#502])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Jump","target":230}]},
{"label":"232([mcore:[#503]#498])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Clause0<a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(@_wildcard-x737_14: (hnd/marker :: (E, V) -> V)<(4088 :: E),4089>, @_wildcard-x737_17: (hnd/ev :: ((E, V) -> V) -> V)<(4090 :: (E, V) -> V)>){\n  (op());\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[231],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Clause0<a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(@_wildcard-x737_14: (hnd/marker :: (E, V) -> V)<(4088 :: E),4089>, @_wildcard-x737_17: (hnd/ev :: ((E, V) -> V) -> V)<(4090 :: (E, V) -> V)>){\n  (op());\n}))","traced":{"any":[]}},
{"op":"Jump","target":1056}]},
{"label":"233([mcore:[#507]#505])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: op(x)","traced":{"any":[]}},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op(x)","traced":{"any":[]}},
{"op":"Invoke","receiver":3,"tag":"apply","args":{"any":[0]}}]},
{"label":"234([method_apply@[mcore:[#509]#506]#511])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Jump","target":233}]},
{"label":"235([mcore:[#509]#506])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Clause1<a,a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(@_wildcard-x691_14: (hnd/marker :: (E, V) -> V)<(4143 :: E),4144>, @_wildcard-x691_17: (hnd/ev :: ((E, V) -> V) -> V)<(4145 :: (E, V) -> V)>, x: 4146){\n  (op(x));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[234],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Clause1<a,a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(@_wildcard-x691_14: (hnd/marker :: (E, V) -> V)<(4143 :: E),4144>, @_wildcard-x691_17: (hnd/ev :: ((E, V) -> V) -> V)<(4145 :: (E, V) -> V)>, x: 4146){\n  (op(x));\n}))","traced":{"any":[]}},
{"op":"Jump","target":1057}]},
{"label":"236([mcore:[#514]#514])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4]}},
{"op":"Debug","msg":"BGN: genExpr: op(x1, x2)","traced":{"any":[]}},
{"op":"Copy","from":3,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op(x1, x2)","traced":{"any":[]}},
{"op":"Invoke","receiver":4,"tag":"apply","args":{"any":[0,1]}}]},
{"label":"237([method_apply@[mcore:[#516]#515]#521])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Jump","target":236}]},
{"label":"238([mcore:[#516]#515])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Clause2<a,a,a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(@_wildcard-x779_14: (hnd/marker :: (E, V) -> V)<(4209 :: E),4210>, @_wildcard-x779_17: (hnd/ev :: ((E, V) -> V) -> V)<(4211 :: (E, V) -> V)>, x1: 4212, x2: 4213){\n  (op(x1, x2));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[237],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Clause2<a,a,a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(@_wildcard-x779_14: (hnd/marker :: (E, V) -> V)<(4209 :: E),4210>, @_wildcard-x779_17: (hnd/ev :: ((E, V) -> V) -> V)<(4211 :: (E, V) -> V)>, x1: 4212, x2: 4213){\n  (op(x1, x2));\n}))","traced":{"any":[]}},
{"op":"Jump","target":1058}]},
{"label":"239([mcore:[#517]#524])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"swapCurrentEvv"}]},
{"label":"240([match_def@[mcore:[#518]#529]#530])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"241([k@[#531]#536])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"242([#531])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"53\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<4263>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"53\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"54\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/marker<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"54\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"55\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2: 4263<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"55\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(w,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"56\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (w: hnd/evv<4237>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"56\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap<(total :: E),(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap<(total :: E),(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"53\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<4263>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"53\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"54\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/marker<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"54\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"55\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2: 4263<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"55\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(w,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"56\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (w: hnd/evv<4237>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"56\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Jump","target":239}]},
{"label":"243([mcore:[#518]#529])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"53\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"54\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"55\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"56\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"53\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"54\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"55\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"56\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/ev","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Ev","target":242,"args":{"any":[0,1,2,3]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3042]","target":240,"args":{"any":[]}}}]},
{"label":"244([mcore:[#520]#538])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Copy","from":2,"to":0},
{"op":"Return","args":{"any":[0]}}]},
{"label":"245([method_apply@[mcore:[#522]#539]#543])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Jump","target":244}]},
{"label":"246([mcore:[#522]#539])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Clause0<a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(@_wildcard-x740_14: (hnd/marker :: (E, V) -> V)<(4303 :: E),4305>, @_wildcard-x740_17: (hnd/ev :: ((E, V) -> V) -> V)<(4304 :: (E, V) -> V)>){\n  v;\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[245],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Clause0<a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(@_wildcard-x740_14: (hnd/marker :: (E, V) -> V)<(4303 :: E),4305>, @_wildcard-x740_17: (hnd/ev :: ((E, V) -> V) -> V)<(4304 :: (E, V) -> V)>){\n  v;\n}))","traced":{"any":[]}},
{"op":"Jump","target":1056}]},
{"label":"247([mcore:[#525]#546])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@extern-eq-marker<a,a,(e :: E),(e :: E)>(x, y)","traced":{"any":[]}},
{"op":"PrimOp","name":"#1==#2","out":{"any":[0]},"in":{"any":[0,1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@extern-eq-marker<a,a,(e :: E),(e :: E)>(x, y)","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"248([mcore:[#526]#547])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@extern-evv-show<(e :: E)>(evv)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Undefined:  std/core/hnd/@extern-evv-show"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@extern-evv-show<(e :: E)>(evv)","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"249([mcore:[#527]#550])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@extern-unsafe-reyield<a,(e :: E)>(yld)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Undefined:  std/core/hnd/@extern-unsafe-reyield"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@extern-unsafe-reyield<a,(e :: E)>(yld)","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"250([mcore:[#528]#553])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@extern-yield-capture<(e :: E)>()","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Undefined:  std/core/hnd/@extern-yield-capture"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@extern-yield-capture<(e :: E)>()","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"251([mcore:[#530]#556])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/ref/(!)<(h :: H),a,(div :: X)>(ref)","traced":{"any":[]}},
{"op":"PrimOp","name":"getRef(Ref[Ptr]): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/ref/(!)<(h :: H),a,(div :: X)>(ref)","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"252([match_def@[mcore:[#535]#557]#558])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"253([k@[k@[#559]#561]#564])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"254([k@[#559]#561])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"255([#559])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-context\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"k\\\"57\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (@x: (hnd/resume-result<4490,4493>) -> 4491 4493) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"k\\\\\\\"57\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/resume-result\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: @x((std/core/hnd/Deep<a,a>(x)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Deep<a,a>(x)","traced":{"any":[]}},
{"op":"Push","target":254,"args":{"any":[1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Deep<a,a>(x)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: @x((std/core/hnd/Deep<a,a>(x)))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-context\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"k\\\"57\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (@x: (hnd/resume-result<4490,4493>) -> 4491 4493) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"k\\\\\\\"57\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/resume-result\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Jump","target":1059}]},
{"label":"256([mcore:[#535]#557])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-context\"}}: \"std/core/hnd/resume-context\".\"std/core/hnd/Resume-context\"(({\"op\": \"Var\",\"id\": \"@\\\"k\\\"57\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-context\"}}: \"std/core/hnd/resume-context\".\"std/core/hnd/Resume-context\"(({\"op\": \"Var\",\"id\": \"@\\\"k\\\"57\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/resume-context","scrutinee":1,"clauses":[{"tag":"std/core/hnd/Resume-context","target":255,"args":{"any":[1]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3043]","target":252,"args":{"any":[]}}}]},
{"label":"257([mcore:[#536]#567])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@extern-resume-final<a>()","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Undefined:  std/core/hnd/@extern-resume-final"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@extern-resume-final<a>()","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"258([match_def@[mcore:[#541]#570]#571])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"259([k@[k@[#572]#574]#577])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"260([k@[#572]#574])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"261([#572])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-context\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"k\\\"58\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (@x: (hnd/resume-result<4576,4579>) -> 4577 4579) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"k\\\\\\\"58\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/resume-result\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: @x((std/core/hnd/Shallow<a,a>(x)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Shallow<a,a>(x)","traced":{"any":[]}},
{"op":"Push","target":260,"args":{"any":[1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Shallow<a,a>(x)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: @x((std/core/hnd/Shallow<a,a>(x)))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-context\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"k\\\"58\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (@x: (hnd/resume-result<4576,4579>) -> 4577 4579) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"k\\\\\\\"58\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/resume-result\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Jump","target":1060}]},
{"label":"262([mcore:[#541]#570])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-context\"}}: \"std/core/hnd/resume-context\".\"std/core/hnd/Resume-context\"(({\"op\": \"Var\",\"id\": \"@\\\"k\\\"58\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-context\"}}: \"std/core/hnd/resume-context\".\"std/core/hnd/Resume-context\"(({\"op\": \"Var\",\"id\": \"@\\\"k\\\"58\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/resume-context","scrutinee":1,"clauses":[{"tag":"std/core/hnd/Resume-context","target":261,"args":{"any":[1]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3044]","target":258,"args":{"any":[]}}}]},
{"label":"263([match_def@[mcore:[#542]#580]#581])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"264([#582])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"@pat-x127_20\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}),(tag,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"tagname\\\"59\",\"type\": {\"op\": \"String\"}},\"annotation\": \"genTest: normal: (tag: string) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"tagname\\\\\\\"59\\\",\\\"type\\\": {\\\"op\\\": \\\"String\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"@pat-x127_20\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}),(tag,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"tagname\\\"59\",\"type\": {\"op\": \"String\"}},\"annotation\": \"genTest: normal: (tag: string) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"tagname\\\\\\\"59\\\",\\\"type\\\": {\\\"op\\\": \\\"String\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"265([mcore:[#542]#580])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@pat-x127_20\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}: \"std/core/hnd/htag\".\"std/core/hnd/Htag\"(({\"op\": \"Var\",\"id\": \"@\\\"tagname\\\"59\",\"type\": {\"op\": \"String\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@pat-x127_20\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}: \"std/core/hnd/htag\".\"std/core/hnd/Htag\"(({\"op\": \"Var\",\"id\": \"@\\\"tagname\\\"59\",\"type\": {\"op\": \"String\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/htag","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Htag","target":264,"args":{"any":[0]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3045]","target":263,"args":{"any":[]}}}]},
{"label":"266([k@[switch case for Bool(true)#585]#587])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"267([switch case for Bool(true)#585])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-extend<a,a,(e :: E)>(next)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-extend<a,a,(e :: E)>(next)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":211}]},
{"label":"268([k@[switch case for Bool(false)#591]#593])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"269([switch case for Bool(false)#591])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: next(x)","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: next(x)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"270([switch default case#595])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"271([switch default case#589])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"int","out":2,"value":0},
{"op":"Switch","arg":2,"values":[false],"targets":[269],"default":270}]},
{"label":"272([mcore:[#547]#583])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"int","out":2,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":2,"values":[true],"targets":[267],"default":271}]},
{"label":"273([mcore:[#550]#596])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"274([mcore:[#563]#601])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"275([k@[#617]#619])",
"frameDescriptor":{"regs_any":8},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Const","format":"string","out":6,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[6]},"in":{"any":[6]}},
{"op":"Const","format":"string","out":7,"value":"Name(std/core/hnd/Pure)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[7]},"in":{"any":[7]}},
{"op":"Swap","a":1,"b":5},
{"op":"Swap","a":2,"b":5},
{"op":"Swap","a":3,"b":5},
{"op":"Swap","a":4,"b":5},
{"op":"Swap","a":0,"b":5},
{"op":"Jump","target":349}]},
{"label":"276([#617])",
"frameDescriptor":{"regs_any":8},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/prompt<a,(e :: E),(a :: (E, V) -> V),a>(w0', w1', ev, m, ret, (cont(res)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: cont(res)","traced":{"any":[]}},
{"op":"Push","target":275,"args":{"any":[2,3,5,6,7]}},
{"op":"Copy","from":4,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: cont(res)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/prompt<a,(e :: E),(a :: (E, V) -> V),a>(w0', w1', ev, m, ret, (cont(res)))","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"277([k@[k@[k@[mcore:[#573]#606]#608]#610]#612])",
"frameDescriptor":{"regs_any":8},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_@1\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w1')","traced":{"any":[]}},
{"op":"Const","format":"string","out":7,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[7]},"in":{"any":[7]}},
{"op":"Push","target":276,"args":{"any":[1,2,3,4,5,6,0]}},
{"op":"Copy","from":7,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w1')","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_@1\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":274}]},
{"label":"278([switch case for Bool(true)#628])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@2,{\"op\": \"Var\",\"id\": \"@x61\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@2,{\"op\": \"Var\",\"id\": \"@x61\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"279([k@[switch case for Bool(false)#630]#632])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"280([switch case for Bool(false)#630])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@3,{\"op\": \"Var\",\"id\": \"@x61\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-insert<(e :: E),(e :: E),(a :: (E, V) -> V)>(w0', ev)","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-insert<(e :: E),(e :: E),(a :: (E, V) -> V)>(w0', ev)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@3,{\"op\": \"Var\",\"id\": \"@x61\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Jump","target":207}]},
{"label":"281([switch default case#634])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"282([switch default case#629])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Switch","arg":2,"values":[false],"targets":[280],"default":281}]},
{"label":"283([k@[k@[mcore:[#573]#606]#608]#610])",
"frameDescriptor":{"regs_any":8},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Push","target":277,"args":{"any":[1,2,3,4,5,6]}},
{"op":"Copy","from":7,"to":3},
{"op":"Copy","from":2,"to":1},
{"op":"Copy","from":6,"to":2},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":0,"values":[true],"targets":[278],"default":282}]},
{"label":"284([k@[mcore:[#573]#606]#608])",
"frameDescriptor":{"regs_any":8},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w1'\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match ((std/core/hnd/evv-eq<(e :: E)>(w0, w0'))) {\n  ((std/core/types/True() : bool ) as @pat@2: bool)\n     -> w1;\n  ((@skip std/core/types/False() : bool ) as @pat@3: bool)\n     -> std/core/hnd/evv-insert<(e :: E),(e :: E),(a :: (E, V) -> V)>(w0', ev);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-eq<(e :: E)>(w0, w0')","traced":{"any":[]}},
{"op":"Push","target":283,"args":{"any":[1,2,3,4,5,0,7]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":6,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-eq<(e :: E)>(w0, w0')","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match ((std/core/hnd/evv-eq<(e :: E)>(w0, w0'))) {\n  ((std/core/types/True() : bool ) as @pat@2: bool)\n     -> w1;\n  ((@skip std/core/types/False() : bool ) as @pat@3: bool)\n     -> std/core/hnd/evv-insert<(e :: E),(e :: E),(a :: (E, V) -> V)>(w0', ev);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w1'\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":209}]},
{"label":"285([mcore:[#573]#606])",
"frameDescriptor":{"regs_any":9},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4,5,6,7,8]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w0'\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-get<(e :: E)>()","traced":{"any":[]}},
{"op":"Push","target":284,"args":{"any":[0,2,4,1,5,7,8]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-get<(e :: E)>()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w0'\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":205}]},
{"label":"286([mcore:[#583]#635])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"287([mcore:[#591]#640])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genTest: normal: (x: 4779) -> {\"op\": \"Var\",\"id\": \"@\\\"result\\\"63\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genTest: normal: (x: 4779) -> {\"op\": \"Var\",\"id\": \"@\\\"result\\\"63\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"288([mcore:[#595]#641])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genTest: normal: (x@0: 4779) -> {\"op\": \"Var\",\"id\": \"@\\\"result\\\"64\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genTest: normal: (x@0: 4779) -> {\"op\": \"Var\",\"id\": \"@\\\"result\\\"64\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"289([mcore:[#608]#642])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"290([mcore:[#618]#647])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genTest: normal: (x@1@0: 4982) -> {\"op\": \"Var\",\"id\": \"@\\\"result\\\"65\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genTest: normal: (x@1@0: 4982) -> {\"op\": \"Var\",\"id\": \"@\\\"result\\\"65\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"291([method_apply@[mcore:[#620]#648]#651])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Jump","target":290}]},
{"label":"292([mcore:[#620]#648])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-to-final<a,(total :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x432_85: ((hnd/resume-result :: (V, V) -> V)<4779,4982>) -> (4980 :: E) 4982){\n    x@1@0;\n  }))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[291],"args":{"any":[0]},"tags":["apply"]},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-to-final<a,(total :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x432_85: ((hnd/resume-result :: (V, V) -> V)<4779,4982>) -> (4980 :: E) 4982){\n    x@1@0;\n  }))","traced":{"any":[]}},
{"op":"Jump","target":216}]},
{"label":"293([match_def@[#656]#657])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"294([#671])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Jump","target":292}]},
{"label":"295([#684])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"296([k@[k@[k@[k@[#660]#662]#664]#669]#675])",
"frameDescriptor":{"regs_any":8},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Const","format":"string","out":6,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[6]},"in":{"any":[6]}},
{"op":"Const","format":"string","out":7,"value":"Name(std/core/hnd/Pure)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[7]},"in":{"any":[7]}},
{"op":"Swap","a":1,"b":5},
{"op":"Swap","a":2,"b":5},
{"op":"Swap","a":3,"b":5},
{"op":"Swap","a":4,"b":5},
{"op":"Swap","a":0,"b":5},
{"op":"Jump","target":349}]},
{"label":"297([k@[k@[k@[#660]#662]#664]#669])",
"frameDescriptor":{"regs_any":8},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/prompt<a,(e :: E),(a :: (E, V) -> V),a>(w0@1', w1@1', ev, m, ret, (cont@0((fn(){\n    (std/core/hnd/yield-to-final<a,(total :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x432_85: ((hnd/resume-result :: (V, V) -> V)<4779,4982>) -> (4980 :: E) 4982){\n        x@1@0;\n      })));\n  }))))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: cont@0((fn(){\n  (std/core/hnd/yield-to-final<a,(total :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x432_85: ((hnd/resume-result :: (V, V) -> V)<4779,4982>) -> (4980 :: E) 4982){\n      x@1@0;\n    })));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[294],"args":{"any":[2,4]},"tags":["apply"]},
{"op":"Push","target":296,"args":{"any":[3,4,5,6,7]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: cont@0((fn(){\n  (std/core/hnd/yield-to-final<a,(total :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x432_85: ((hnd/resume-result :: (V, V) -> V)<4779,4982>) -> (4980 :: E) 4982){\n      x@1@0;\n    })));\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/prompt<a,(e :: E),(a :: (E, V) -> V),a>(w0@1', w1@1', ev, m, ret, (cont@0((fn(){\n    (std/core/hnd/yield-to-final<a,(total :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x432_85: ((hnd/resume-result :: (V, V) -> V)<4779,4982>) -> (4980 :: E) 4982){\n        x@1@0;\n      })));\n  }))))","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"298([k@[k@[#660]#662]#664])",
"frameDescriptor":{"regs_any":8},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_@3\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w1@1')","traced":{"any":[]}},
{"op":"Const","format":"string","out":7,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[7]},"in":{"any":[7]}},
{"op":"Push","target":297,"args":{"any":[1,2,3,4,5,6,0]}},
{"op":"Copy","from":7,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w1@1')","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_@3\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":289}]},
{"label":"299([switch case for Bool(true)#686])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@10,{\"op\": \"Var\",\"id\": \"@x66\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@10,{\"op\": \"Var\",\"id\": \"@x66\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"300([k@[switch case for Bool(false)#688]#690])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"301([switch case for Bool(false)#688])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@11,{\"op\": \"Var\",\"id\": \"@x66\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-insert<(e :: E),(e :: E),(a :: (E, V) -> V)>(w0@1', ev)","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-insert<(e :: E),(e :: E),(a :: (E, V) -> V)>(w0@1', ev)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@11,{\"op\": \"Var\",\"id\": \"@x66\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Jump","target":207}]},
{"label":"302([switch default case#692])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"303([switch default case#687])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Switch","arg":2,"values":[false],"targets":[301],"default":302}]},
{"label":"304([k@[#660]#662])",
"frameDescriptor":{"regs_any":8},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Push","target":298,"args":{"any":[1,2,3,4,5,6]}},
{"op":"Copy","from":3,"to":1},
{"op":"Copy","from":6,"to":2},
{"op":"Copy","from":7,"to":3},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":0,"values":[true],"targets":[299],"default":303}]},
{"label":"305([#660])",
"frameDescriptor":{"regs_any":8},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w1@1'\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match ((std/core/hnd/evv-eq<(e :: E)>(w0, w0@1'))) {\n  ((std/core/types/True() : bool ) as @pat@10: bool)\n     -> w1;\n  ((@skip std/core/types/False() : bool ) as @pat@11: bool)\n     -> std/core/hnd/evv-insert<(e :: E),(e :: E),(a :: (E, V) -> V)>(w0@1', ev);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-eq<(e :: E)>(w0, w0@1')","traced":{"any":[]}},
{"op":"Push","target":304,"args":{"any":[1,2,3,4,5,0,7]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":6,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-eq<(e :: E)>(w0, w0@1')","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match ((std/core/hnd/evv-eq<(e :: E)>(w0, w0@1'))) {\n  ((std/core/types/True() : bool ) as @pat@10: bool)\n     -> w1;\n  ((@skip std/core/types/False() : bool ) as @pat@11: bool)\n     -> std/core/hnd/evv-insert<(e :: E),(e :: E),(a :: (E, V) -> V)>(w0@1', ev);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w1@1'\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":209}]},
{"label":"306([match_std/core/hnd/Finalize@[#656]#658])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@9@0,{\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}}),(x@1@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"result\\\"65\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x@1@0: 4982) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"result\\\\\\\"65\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: val w0@1' : (hnd/evv :: E -> V)<(e :: E)>;\nval w1@1' : (hnd/evv :: E -> V)<(e :: E)>;\nval _@3 : ();\nstd/core/hnd/prompt<a,(e :: E),(a :: (E, V) -> V),a>(w0@1', w1@1', ev, m, ret, (cont@0((fn(){\n    (std/core/hnd/yield-to-final<a,(total :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x432_85: ((hnd/resume-result :: (V, V) -> V)<4779,4982>) -> (4980 :: E) 4982){\n        x@1@0;\n      })));\n  }))))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w0@1'\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-get<(e :: E)>()","traced":{"any":[]}},
{"op":"Push","target":305,"args":{"any":[0,6,1,2,3,4,5]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-get<(e :: E)>()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w0@1'\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: val w0@1' : (hnd/evv :: E -> V)<(e :: E)>;\nval w1@1' : (hnd/evv :: E -> V)<(e :: E)>;\nval _@3 : ();\nstd/core/hnd/prompt<a,(e :: E),(a :: (E, V) -> V),a>(w0@1', w1@1', ev, m, ret, (cont@0((fn(){\n    (std/core/hnd/yield-to-final<a,(total :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x432_85: ((hnd/resume-result :: (V, V) -> V)<4779,4982>) -> (4980 :: E) 4982){\n        x@1@0;\n      })));\n  }))))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@9@0,{\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}}),(x@1@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"result\\\"65\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x@1@0: 4982) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"result\\\\\\\"65\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Jump","target":205}]},
{"label":"307([#656])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}}: \"std/core/hnd/resume-result\".\"std/core/hnd/Finalize\"(({\"op\": \"Var\",\"id\": \"@\\\"result\\\"65\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Swap","a":4,"b":5},
{"op":"Swap","a":3,"b":5},
{"op":"Swap","a":6,"b":5},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}}: \"std/core/hnd/resume-result\".\"std/core/hnd/Finalize\"(({\"op\": \"Var\",\"id\": \"@\\\"result\\\"65\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/resume-result","scrutinee":6,"clauses":[{"tag":"std/core/hnd/Finalize","target":306,"args":{"any":[6]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3046]","target":293,"args":{"any":[]}}}]},
{"label":"308([method_apply@[#693]#695])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Jump","target":288}]},
{"label":"309([k@[k@[#693]#699]#702])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"310([k@[switch case for Bool(true)#704]#706])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"311([switch case for Bool(true)#704])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@9,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-extend<a,a,(e :: E)>(ret)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-extend<a,a,(e :: E)>(ret)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@9,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":211}]},
{"label":"312([k@[switch case for Bool(false)#710]#712])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"313([switch case for Bool(false)#710])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0@0,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: ret(x@1@10006)","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: ret(x@1@10006)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0@0,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"314([switch default case#714])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"315([switch default case#708])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"int","out":2,"value":0},
{"op":"Switch","arg":2,"values":[false],"targets":[313],"default":314}]},
{"label":"316([k@[#693]#699])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: match ((std/core/hnd/yielding())) {\n  ((std/core/types/True() : bool ) as @pat@9: bool)\n     -> std/core/hnd/yield-extend<a,a,(e :: E)>(ret);\n  ((@skip std/core/types/False() : bool ) as @pat@0@0: bool)\n     -> ret(x@1@10006);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"int","out":2,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match ((std/core/hnd/yielding())) {\n  ((std/core/types/True() : bool ) as @pat@9: bool)\n     -> std/core/hnd/yield-extend<a,a,(e :: E)>(ret);\n  ((@skip std/core/types/False() : bool ) as @pat@0@0: bool)\n     -> ret(x@1@10006);\n}","traced":{"any":[]}},
{"op":"Switch","arg":2,"values":[true],"targets":[311],"default":315}]},
{"label":"317([#693])",
"frameDescriptor":{"regs_any":8},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@8,{\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}}),(x@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"result\\\"64\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x@0: 4779) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"result\\\\\\\"64\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: val x@1@10006 : a\n      = cont@0((fn(){\n        x@0;\n      }));\nmatch ((std/core/hnd/yielding())) {\n  ((std/core/types/True() : bool ) as @pat@9: bool)\n     -> std/core/hnd/yield-extend<a,a,(e :: E)>(ret);\n  ((@skip std/core/types/False() : bool ) as @pat@0@0: bool)\n     -> ret(x@1@10006);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"x@1@10006\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: cont@0((fn(){\n  x@0;\n}))","traced":{"any":[]}},
{"op":"New","out":1,"targets":[308],"args":{"any":[7]},"tags":["apply"]},
{"op":"Push","target":316,"args":{"any":[4]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: cont@0((fn(){\n  x@0;\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"x@1@10006\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: val x@1@10006 : a\n      = cont@0((fn(){\n        x@0;\n      }));\nmatch ((std/core/hnd/yielding())) {\n  ((std/core/types/True() : bool ) as @pat@9: bool)\n     -> std/core/hnd/yield-extend<a,a,(e :: E)>(ret);\n  ((@skip std/core/types/False() : bool ) as @pat@0@0: bool)\n     -> ret(x@1@10006);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@8,{\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}}),(x@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"result\\\"64\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x@0: 4779) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"result\\\\\\\"64\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"318([match_def@[mcore:[#623]#654]#655])",
"frameDescriptor":{"regs_any":8},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}}: \"std/core/hnd/resume-result\".\"std/core/hnd/Shallow\"(({\"op\": \"Var\",\"id\": \"@\\\"result\\\"64\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}}: \"std/core/hnd/resume-result\".\"std/core/hnd/Shallow\"(({\"op\": \"Var\",\"id\": \"@\\\"result\\\"64\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/resume-result","scrutinee":3,"clauses":[{"tag":"std/core/hnd/Shallow","target":317,"args":{"any":[7]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3047]","target":307,"args":{"any":[]}}}]},
{"label":"319([#728])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Jump","target":287}]},
{"label":"320([k@[#732]#741])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"321([#732])",
"frameDescriptor":{"regs_any":8},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Const","format":"string","out":6,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[6]},"in":{"any":[6]}},
{"op":"Const","format":"string","out":7,"value":"Name(std/core/hnd/Pure)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[7]},"in":{"any":[7]}},
{"op":"Swap","a":1,"b":5},
{"op":"Swap","a":2,"b":5},
{"op":"Swap","a":3,"b":5},
{"op":"Swap","a":4,"b":5},
{"op":"Swap","a":0,"b":5},
{"op":"Jump","target":349}]},
{"label":"322([k@[k@[k@[k@[#715]#717]#719]#721]#726])",
"frameDescriptor":{"regs_any":8},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/prompt<a,(e :: E),(a :: (E, V) -> V),a>(w0@0', w1@0', ev, m, ret, (cont@0((fn(){\n    x;\n  }))))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: cont@0((fn(){\n  x;\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[319],"args":{"any":[2]},"tags":["apply"]},
{"op":"Push","target":321,"args":{"any":[3,4,5,6,7]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: cont@0((fn(){\n  x;\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/prompt<a,(e :: E),(a :: (E, V) -> V),a>(w0@0', w1@0', ev, m, ret, (cont@0((fn(){\n    x;\n  }))))","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"323([k@[k@[k@[#715]#717]#719]#721])",
"frameDescriptor":{"regs_any":8},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_@2\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w1@0')","traced":{"any":[]}},
{"op":"Const","format":"string","out":7,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[7]},"in":{"any":[7]}},
{"op":"Push","target":322,"args":{"any":[1,2,3,4,5,6,0]}},
{"op":"Copy","from":7,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w1@0')","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_@2\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":286}]},
{"label":"324([switch case for Bool(true)#743])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@6,{\"op\": \"Var\",\"id\": \"@x64\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@6,{\"op\": \"Var\",\"id\": \"@x64\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"325([k@[switch case for Bool(false)#745]#747])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"326([switch case for Bool(false)#745])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@7,{\"op\": \"Var\",\"id\": \"@x64\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-insert<(e :: E),(e :: E),(a :: (E, V) -> V)>(w0@0', ev)","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-insert<(e :: E),(e :: E),(a :: (E, V) -> V)>(w0@0', ev)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@7,{\"op\": \"Var\",\"id\": \"@x64\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Jump","target":207}]},
{"label":"327([switch default case#749])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"328([switch default case#744])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Switch","arg":2,"values":[false],"targets":[326],"default":327}]},
{"label":"329([k@[k@[#715]#717]#719])",
"frameDescriptor":{"regs_any":8},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Push","target":323,"args":{"any":[1,2,3,4,5,6]}},
{"op":"Copy","from":3,"to":1},
{"op":"Copy","from":6,"to":2},
{"op":"Copy","from":7,"to":3},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":0,"values":[true],"targets":[324],"default":328}]},
{"label":"330([k@[#715]#717])",
"frameDescriptor":{"regs_any":8},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w1@0'\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match ((std/core/hnd/evv-eq<(e :: E)>(w0, w0@0'))) {\n  ((std/core/types/True() : bool ) as @pat@6: bool)\n     -> w1;\n  ((@skip std/core/types/False() : bool ) as @pat@7: bool)\n     -> std/core/hnd/evv-insert<(e :: E),(e :: E),(a :: (E, V) -> V)>(w0@0', ev);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-eq<(e :: E)>(w0, w0@0')","traced":{"any":[]}},
{"op":"Push","target":329,"args":{"any":[1,2,3,4,5,0,7]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":6,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-eq<(e :: E)>(w0, w0@0')","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match ((std/core/hnd/evv-eq<(e :: E)>(w0, w0@0'))) {\n  ((std/core/types/True() : bool ) as @pat@6: bool)\n     -> w1;\n  ((@skip std/core/types/False() : bool ) as @pat@7: bool)\n     -> std/core/hnd/evv-insert<(e :: E),(e :: E),(a :: (E, V) -> V)>(w0@0', ev);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w1@0'\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":209}]},
{"label":"331([#715])",
"frameDescriptor":{"regs_any":8},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@5,{\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}}),(x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"result\\\"63\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x: 4779) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"result\\\\\\\"63\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: val w0@0' : (hnd/evv :: E -> V)<(e :: E)>;\nval w1@0' : (hnd/evv :: E -> V)<(e :: E)>;\nval _@2 : ();\nstd/core/hnd/prompt<a,(e :: E),(a :: (E, V) -> V),a>(w0@0', w1@0', ev, m, ret, (cont@0((fn(){\n    x;\n  }))))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w0@0'\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-get<(e :: E)>()","traced":{"any":[]}},
{"op":"Push","target":330,"args":{"any":[0,7,1,2,4,5,6]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-get<(e :: E)>()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w0@0'\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: val w0@0' : (hnd/evv :: E -> V)<(e :: E)>;\nval w1@0' : (hnd/evv :: E -> V)<(e :: E)>;\nval _@2 : ();\nstd/core/hnd/prompt<a,(e :: E),(a :: (E, V) -> V),a>(w0@0', w1@0', ev, m, ret, (cont@0((fn(){\n    x;\n  }))))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@5,{\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}}),(x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"result\\\"63\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x: 4779) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"result\\\\\\\"63\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Jump","target":205}]},
{"label":"332([mcore:[#623]#654])",
"frameDescriptor":{"regs_any":9},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4,5,6,7,8]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}}: \"std/core/hnd/resume-result\".\"std/core/hnd/Deep\"(({\"op\": \"Var\",\"id\": \"@\\\"result\\\"63\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Copy","from":8,"to":6},
{"op":"Copy","from":0,"to":3},
{"op":"Copy","from":1,"to":0},
{"op":"Copy","from":2,"to":1},
{"op":"Copy","from":4,"to":2},
{"op":"Copy","from":5,"to":4},
{"op":"Copy","from":7,"to":5},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}}: \"std/core/hnd/resume-result\".\"std/core/hnd/Deep\"(({\"op\": \"Var\",\"id\": \"@\\\"result\\\"63\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/resume-result","scrutinee":3,"clauses":[{"tag":"std/core/hnd/Deep","target":331,"args":{"any":[7]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3048]","target":318,"args":{"any":[]}}}]},
{"label":"333([#765])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"334([method_apply@[#766]#769])",
"frameDescriptor":{"regs_any":9},
"instructions":[{"op":"Const","format":"string","out":7,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[7]},"in":{"any":[7]}},
{"op":"Const","format":"string","out":8,"value":"Name(std/core/hnd/Pure)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[8]},"in":{"any":[8]}},
{"op":"Swap","a":7,"b":5},
{"op":"Swap","a":3,"b":5},
{"op":"Swap","a":4,"b":5},
{"op":"Swap","a":6,"b":8},
{"op":"Jump","target":332}]},
{"label":"335([k@[#766]#779])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"336([#766])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@4,{\"op\": \"Var\",\"id\": \"@x60\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}}),(clause,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"61\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (clause: ((hnd/resume-result<4779,4982>) -> 4980 4982) -> 4980 4982) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"61\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/resume-result\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"}),(cont@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"cont\\\"62\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Function\",\"params\": [],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (cont@0: (() -> 4779) -> 4980 4979) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"cont\\\\\\\"62\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Function\\\",\\\"params\\\": [],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: clause((fn<(e :: E)>(r: (hnd/resume-result :: (V, V) -> V)<4779,4982>){\n  (match (r) {\n    ((std/core/hnd/Deep((x: 4779) : a) : (hnd/resume-result :: (V, V) -> V)<a,b> ) as @pat@5: ((hnd/resume-result :: (V, V) -> V)<4779,4982>))\n       -> val w0@0' : (hnd/evv :: E -> V)<(e :: E)>;\n          val w1@0' : (hnd/evv :: E -> V)<(e :: E)>;\n          val _@2 : ();\n      std/core/hnd/prompt<a,(e :: E),(a :: (E, V) -> V),a>(w0@0', w1@0', ev, m, ret, (cont@0((fn(){\n          x;\n        }))));\n    ((std/core/hnd/Shallow((x@0: 4779) : a) : (hnd/resume-result :: (V, V) -> V)<a,b> ) as @pat@8: ((hnd/resume-result :: (V, V) -> V)<4779,4982>))\n       -> val x@1@10006 : a\n                = cont@0((fn(){\n                  x@0;\n                }));\n      (match ((std/core/hnd/yielding())) {\n        ((std/core/types/True() : bool ) as @pat@9: bool)\n           -> std/core/hnd/yield-extend<a,a,(e :: E)>(ret);\n        ((@skip std/core/types/False() : bool ) as @pat@0@0: bool)\n           -> ret(x@1@10006);\n      });\n    ((@skip std/core/hnd/Finalize((x@1@0: 4982) : a) : (hnd/resume-result :: (V, V) -> V)<a,b> ) as @pat@9@0: ((hnd/resume-result :: (V, V) -> V)<4779,4982>))\n       -> val w0@1' : (hnd/evv :: E -> V)<(e :: E)>;\n          val w1@1' : (hnd/evv :: E -> V)<(e :: E)>;\n          val _@3 : ();\n      std/core/hnd/prompt<a,(e :: E),(a :: (E, V) -> V),a>(w0@1', w1@1', ev, m, ret, (cont@0((fn(){\n          (std/core/hnd/yield-to-final<a,(total :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x432_85: ((hnd/resume-result :: (V, V) -> V)<4779,4982>) -> (4980 :: E) 4982){\n              x@1@0;\n            })));\n        }))));\n  });\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[334],"args":{"any":[6,0,1,2,3,4]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: clause((fn<(e :: E)>(r: (hnd/resume-result :: (V, V) -> V)<4779,4982>){\n  (match (r) {\n    ((std/core/hnd/Deep((x: 4779) : a) : (hnd/resume-result :: (V, V) -> V)<a,b> ) as @pat@5: ((hnd/resume-result :: (V, V) -> V)<4779,4982>))\n       -> val w0@0' : (hnd/evv :: E -> V)<(e :: E)>;\n          val w1@0' : (hnd/evv :: E -> V)<(e :: E)>;\n          val _@2 : ();\n      std/core/hnd/prompt<a,(e :: E),(a :: (E, V) -> V),a>(w0@0', w1@0', ev, m, ret, (cont@0((fn(){\n          x;\n        }))));\n    ((std/core/hnd/Shallow((x@0: 4779) : a) : (hnd/resume-result :: (V, V) -> V)<a,b> ) as @pat@8: ((hnd/resume-result :: (V, V) -> V)<4779,4982>))\n       -> val x@1@10006 : a\n                = cont@0((fn(){\n                  x@0;\n                }));\n      (match ((std/core/hnd/yielding())) {\n        ((std/core/types/True() : bool ) as @pat@9: bool)\n           -> std/core/hnd/yield-extend<a,a,(e :: E)>(ret);\n        ((@skip std/core/types/False() : bool ) as @pat@0@0: bool)\n           -> ret(x@1@10006);\n      });\n    ((@skip std/core/hnd/Finalize((x@1@0: 4982) : a) : (hnd/resume-result :: (V, V) -> V)<a,b> ) as @pat@9@0: ((hnd/resume-result :: (V, V) -> V)<4779,4982>))\n       -> val w0@1' : (hnd/evv :: E -> V)<(e :: E)>;\n          val w1@1' : (hnd/evv :: E -> V)<(e :: E)>;\n          val _@3 : ();\n      std/core/hnd/prompt<a,(e :: E),(a :: (E, V) -> V),a>(w0@1', w1@1', ev, m, ret, (cont@0((fn(){\n          (std/core/hnd/yield-to-final<a,(total :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x432_85: ((hnd/resume-result :: (V, V) -> V)<4779,4982>) -> (4980 :: E) 4982){\n              x@1@0;\n            })));\n        }))));\n  });\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@4,{\"op\": \"Var\",\"id\": \"@x60\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}}),(clause,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"61\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (clause: ((hnd/resume-result<4779,4982>) -> 4980 4982) -> 4980 4982) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"61\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/resume-result\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"}),(cont@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"cont\\\"62\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Function\",\"params\": [],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (cont@0: (() -> 4779) -> 4980 4979) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"cont\\\\\\\"62\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Function\\\",\\\"params\\\": [],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Invoke","receiver":5,"tag":"apply","args":{"any":[0]}}]},
{"label":"337([match_def@[match_def@[#762]#763]#764])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@x60\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}}: \"std/core/hnd/yld\".\"std/core/hnd/Yield\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"61\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}, {\"op\": \"Var\",\"id\": \"@\\\"cont\\\"62\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Function\",\"params\": [],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Swap","a":4,"b":5},
{"op":"Swap","a":3,"b":5},
{"op":"Swap","a":2,"b":5},
{"op":"Swap","a":1,"b":5},
{"op":"Swap","a":0,"b":5},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@x60\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}}: \"std/core/hnd/yld\".\"std/core/hnd/Yield\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"61\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}, {\"op\": \"Var\",\"id\": \"@\\\"cont\\\"62\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Function\",\"params\": [],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/yld","scrutinee":5,"clauses":[{"tag":"std/core/hnd/Yield","target":336,"args":{"any":[5,6]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3049]","target":333,"args":{"any":[]}}}]},
{"label":"338([method_apply@[#781]#785])",
"frameDescriptor":{"regs_any":9},
"instructions":[{"op":"Const","format":"string","out":7,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[7]},"in":{"any":[7]}},
{"op":"Const","format":"string","out":8,"value":"Name(std/core/hnd/Pure)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[8]},"in":{"any":[8]}},
{"op":"Swap","a":7,"b":5},
{"op":"Swap","a":3,"b":5},
{"op":"Swap","a":4,"b":5},
{"op":"Swap","a":6,"b":8},
{"op":"Jump","target":285}]},
{"label":"339([k@[#781]#795])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"340([#781])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"@x60\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (4980 :: E) 4979, res: a){\n  val w0' : (hnd/evv :: E -> V)<(e :: E)>;\n  val w1' : (hnd/evv :: E -> V)<(e :: E)>;\n  val _@1 : ();\n  std/core/hnd/prompt<b,(e :: E),(b :: (E, V) -> V),b>(w0', w1', ev, m, ret, (cont(res)));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[338],"args":{"any":[1,2,3,4,5]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (4980 :: E) 4979, res: a){\n  val w0' : (hnd/evv :: E -> V)<(e :: E)>;\n  val w1' : (hnd/evv :: E -> V)<(e :: E)>;\n  val _@1 : ();\n  std/core/hnd/prompt<b,(e :: E),(b :: (E, V) -> V),b>(w0', w1', ev, m, ret, (cont(res)));\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"@x60\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}})]","traced":{"any":[]}},
{"op":"Jump","target":212}]},
{"label":"341([match_def@[#762]#763])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@x60\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}}: \"std/core/hnd/yld\".\"std/core/hnd/Yielding\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@x60\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}}: \"std/core/hnd/yld\".\"std/core/hnd/Yielding\"(())","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/yld","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Yielding","target":340,"args":{"any":[]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3050]","target":337,"args":{"any":[]}}}]},
{"label":"342([match_std/core/hnd/YieldingFinal@[#762]#797])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"@x60\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/keep-yielding-final<(e :: E),a>()","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Undefined:  std/core/hnd/keep-yielding-final"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/keep-yielding-final<(e :: E),a>()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"@x60\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"343([#762])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@x60\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}}: \"std/core/hnd/yld\".\"std/core/hnd/YieldingFinal\"(())","traced":{"any":[]}},
{"op":"Copy","from":4,"to":3},
{"op":"Copy","from":5,"to":4},
{"op":"Copy","from":6,"to":5},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@x60\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}}: \"std/core/hnd/yld\".\"std/core/hnd/YieldingFinal\"(())","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/yld","scrutinee":0,"clauses":[{"tag":"std/core/hnd/YieldingFinal","target":342,"args":{"any":[]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3051]","target":341,"args":{"any":[]}}}]},
{"label":"344([k@[#801]#803])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"345([#801])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"@x60\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: ret(result)","traced":{"any":[]}},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: ret(result)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"@x60\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}})]","traced":{"any":[]}},
{"op":"Invoke","receiver":4,"tag":"apply","args":{"any":[0]}}]},
{"label":"346([k@[k@[k@[mcore:[#625]#627]#751]#756]#761])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@x60\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}}: \"std/core/hnd/yld\".\"std/core/hnd/Pure\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@x60\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yld\"}}: \"std/core/hnd/yld\".\"std/core/hnd/Pure\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/yld","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Pure","target":345,"args":{"any":[]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3052]","target":343,"args":{"any":[]}}}]},
{"label":"347([k@[k@[mcore:[#625]#627]#751]#756])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-prompt<a,(e :: E),a>(m)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Name(std/core/hnd/Pure)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Push","target":346,"args":{"any":[1,2,3,4,5,6]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-prompt<a,(e :: E),a>(m)","traced":{"any":[]}},
{"op":"Jump","target":215}]},
{"label":"348([k@[mcore:[#625]#627]#751])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_@0\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Push","target":347,"args":{"any":[1,2,3,4,5,6]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":5,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_@0\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":273}]},
{"label":"349([mcore:[#625]#627])",
"frameDescriptor":{"regs_any":8},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4,5,6,7]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/guard<(e :: E)>(w1)","traced":{"any":[]}},
{"op":"Push","target":348,"args":{"any":[2,3,5,4,0,1]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/guard<(e :: E)>(w1)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":210}]},
{"label":"350([mcore:[#636]#805])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"351([k@[k@[#818]#823]#825])",
"frameDescriptor":{"regs_any":8},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Const","format":"string","out":6,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[6]},"in":{"any":[6]}},
{"op":"Const","format":"string","out":7,"value":"Name(std/core/hnd/Pure)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[7]},"in":{"any":[7]}},
{"op":"Swap","a":1,"b":5},
{"op":"Swap","a":2,"b":5},
{"op":"Swap","a":3,"b":5},
{"op":"Swap","a":4,"b":5},
{"op":"Swap","a":0,"b":5},
{"op":"Jump","target":349}]},
{"label":"352([k@[#818]#823])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/prompt<a,(e :: E),(a :: (E, V) -> V),a>(w0, w1, ev, m, ret, (action()))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: action()","traced":{"any":[]}},
{"op":"Push","target":351,"args":{"any":[2,3,4,5,6]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: action()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/prompt<a,(e :: E),(a :: (E, V) -> V),a>(w0, w1, ev, m, ret, (action()))","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[]}}]},
{"label":"353([#818])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w1)","traced":{"any":[]}},
{"op":"Const","format":"string","out":6,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[6]},"in":{"any":[6]}},
{"op":"Push","target":352,"args":{"any":[1,2,3,4,5,0]}},
{"op":"Copy","from":6,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w1)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":350}]},
{"label":"354([k@[k@[k@[mcore:[#645]#810]#812]#814]#816])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w1\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-insert<(e :: E),(e :: E),(a :: (E, V) -> V)>(w0, ev)","traced":{"any":[]}},
{"op":"Push","target":353,"args":{"any":[1,0,2,3,4]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":4,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-insert<(e :: E),(e :: E),(a :: (E, V) -> V)>(w0, ev)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w1\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":207}]},
{"label":"355([k@[k@[mcore:[#645]#810]#812]#814])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Ev<(a :: (E, V) -> V),(e :: E),a>(tag, m, h, w0)","traced":{"any":[]}},
{"op":"Push","target":354,"args":{"any":[1,0,3,5]}},
{"op":"Copy","from":5,"to":3},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":4,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Ev<(a :: (E, V) -> V),(e :: E),a>(tag, m, h, w0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}","traced":{"any":[]}},
{"op":"Jump","target":1055}]},
{"label":"356([k@[mcore:[#645]#810]#812])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"m\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/fresh-marker<a,(e :: E)>()","traced":{"any":[]}},
{"op":"Push","target":355,"args":{"any":[1,2,3,4,0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/fresh-marker<a,(e :: E)>()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"m\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}","traced":{"any":[]}},
{"op":"Jump","target":208}]},
{"label":"357([mcore:[#645]#810])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4,5]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-get<(e :: E)>()","traced":{"any":[]}},
{"op":"Push","target":356,"args":{"any":[3,1,2,0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-get<(e :: E)>()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":205}]},
{"label":"358([mcore:[#656]#833])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"359([mcore:[#661]#838])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"360([k@[k@[k@[#852]#857]#859]#864])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Return","args":{"any":[0]}}]},
{"label":"361([k@[k@[#852]#857]#859])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_@0\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Push","target":360,"args":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Copy","from":2,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_@0\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":359}]},
{"label":"362([k@[#852]#857])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"res\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@reset-vm<a,(e :: E),a>(m, ret, action)","traced":{"any":[]}},
{"op":"Push","target":361,"args":{"any":[4]}},
{"op":"Copy","from":2,"to":0},
{"op":"Copy","from":1,"to":2},
{"op":"Copy","from":3,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@reset-vm<a,(e :: E),a>(m, ret, action)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"res\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Jump","target":138}]},
{"label":"363([#852])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w1)","traced":{"any":[]}},
{"op":"Const","format":"string","out":5,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[5]},"in":{"any":[5]}},
{"op":"Push","target":362,"args":{"any":[1,2,3,4]}},
{"op":"Copy","from":5,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w1)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":358}]},
{"label":"364([k@[k@[k@[mcore:[#662]#843]#845]#847]#849])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Push","target":363,"args":{"any":[1,2,3,4]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":4,"to":0},
{"op":"Jump","target":207}]},
{"label":"365([k@[k@[mcore:[#662]#843]#845]#847])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w1\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-insert<(e :: E),(_e :: E),(a :: (E, V) -> V)>(w0, (std/core/hnd/Ev<(a :: (E, V) -> V),(e :: E),a>(tag, m, h, w0)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Ev<(a :: (E, V) -> V),(e :: E),a>(tag, m, h, w0)","traced":{"any":[]}},
{"op":"Push","target":364,"args":{"any":[1,0,3,5]}},
{"op":"Copy","from":5,"to":3},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":4,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Ev<(a :: (E, V) -> V),(e :: E),a>(tag, m, h, w0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-insert<(e :: E),(_e :: E),(a :: (E, V) -> V)>(w0, (std/core/hnd/Ev<(a :: (E, V) -> V),(e :: E),a>(tag, m, h, w0)))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w1\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":1055}]},
{"label":"366([k@[mcore:[#662]#843]#845])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"m\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/fresh-marker<a,(e :: E)>()","traced":{"any":[]}},
{"op":"Push","target":365,"args":{"any":[1,2,3,4,0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/fresh-marker<a,(e :: E)>()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"m\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}","traced":{"any":[]}},
{"op":"Jump","target":208}]},
{"label":"367([mcore:[#662]#843])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-get<(e :: E)>()","traced":{"any":[]}},
{"op":"Push","target":366,"args":{"any":[3,1,2,0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-get<(e :: E)>()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":205}]},
{"label":"368([mcore:[#668]#865])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"369([mcore:[#675]#870])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/mask-at1<a,a,(e :: E),(e :: E)>(i, behind, cont, res)","traced":{"any":[]}},
{"op":"Const","format":"string","out":4,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/mask-at1<a,a,(e :: E),(e :: E)>(i, behind, cont, res)","traced":{"any":[]}},
{"op":"Jump","target":379}]},
{"label":"370([#889])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Const","format":"string","out":4,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"Jump","target":369}]},
{"label":"371([k@[switch case for Bool(true)#885]#896])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"372([switch case for Bool(true)#885])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (5330 :: E) 5328, res: a){\n  std/core/hnd/mask-at1<a,b,(e :: E),(e :: E)>(i, behind, cont, res);\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[370],"args":{"any":[0,1]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (5330 :: E) 5328, res: a){\n  std/core/hnd/mask-at1<a,b,(e :: E),(e :: E)>(i, behind, cont, res);\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":212}]},
{"label":"373([switch case for Bool(false)#900])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"374([switch default case#901])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"375([switch default case#898])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Switch","arg":1,"values":[false],"targets":[373],"default":374}]},
{"label":"376([k@[k@[k@[mcore:[#677]#874]#876]#878]#883])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":3,"values":[true],"targets":[372],"default":375}]},
{"label":"377([k@[k@[mcore:[#677]#874]#876]#878])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":4,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"Push","target":376,"args":{"any":[1,2,0]}},
{"op":"Copy","from":4,"to":1},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":368}]},
{"label":"378([k@[mcore:[#677]#874]#876])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: action(x)","traced":{"any":[]}},
{"op":"Push","target":377,"args":{"any":[2,3,0]}},
{"op":"Copy","from":4,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: action(x)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"379([mcore:[#677]#874])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap-delete<(_e :: E),(e :: E)>(i, behind)","traced":{"any":[]}},
{"op":"Push","target":378,"args":{"any":[2,1,0,3]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap-delete<(_e :: E),(e :: E)>(i, behind)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":218}]},
{"label":"380([mcore:[#682]#902])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"381([mcore:[#689]#907])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/mask-at1<a,a,(e :: E),(e :: E)>(i, behind, cont, res)","traced":{"any":[]}},
{"op":"Const","format":"string","out":4,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/mask-at1<a,a,(e :: E),(e :: E)>(i, behind, cont, res)","traced":{"any":[]}},
{"op":"Jump","target":379}]},
{"label":"382([#926])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Const","format":"string","out":4,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"Jump","target":381}]},
{"label":"383([k@[switch case for Bool(true)#922]#933])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"384([switch case for Bool(true)#922])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (5429 :: E) 5427, res: a){\n  std/core/hnd/mask-at1<a,b,(e :: E),(e :: E)>(i, behind, cont, res);\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[382],"args":{"any":[0,1]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (5429 :: E) 5427, res: a){\n  std/core/hnd/mask-at1<a,b,(e :: E),(e :: E)>(i, behind, cont, res);\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":212}]},
{"label":"385([switch case for Bool(false)#937])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"386([switch default case#938])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"387([switch default case#935])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Switch","arg":1,"values":[false],"targets":[385],"default":386}]},
{"label":"388([k@[k@[k@[mcore:[#691]#911]#913]#915]#920])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":3,"values":[true],"targets":[384],"default":387}]},
{"label":"389([k@[k@[mcore:[#691]#911]#913]#915])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":4,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"Push","target":388,"args":{"any":[1,2,0]}},
{"op":"Copy","from":4,"to":1},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":380}]},
{"label":"390([k@[mcore:[#691]#911]#913])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: action()","traced":{"any":[]}},
{"op":"Push","target":389,"args":{"any":[2,3,0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: action()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[]}}]},
{"label":"391([mcore:[#691]#911])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap-delete<(_e :: E),(e :: E)>(i, behind)","traced":{"any":[]}},
{"op":"Push","target":390,"args":{"any":[2,1,0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap-delete<(_e :: E),(e :: E)>(i, behind)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":218}]},
{"label":"392([#947])",
"frameDescriptor":{"regs_any":8},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Const","format":"string","out":5,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[5]},"in":{"any":[5]}},
{"op":"Const","format":"string","out":6,"value":"Name(std/core/hnd/Pure)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[6]},"in":{"any":[6]}},
{"op":"Copy","from":6,"to":7},
{"op":"Copy","from":5,"to":6},
{"op":"Copy","from":0,"to":5},
{"op":"Copy","from":4,"to":0},
{"op":"Swap","a":1,"b":4},
{"op":"Swap","a":2,"b":4},
{"op":"Swap","a":3,"b":4},
{"op":"Jump","target":349}]},
{"label":"393([k@[k@[k@[mcore:[#708]#939]#941]#943]#945])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/prompt<a,(e :: E),(a :: (E, V) -> V),a>(w0, w0, ev, m, ret, (action(ev)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: action(ev)","traced":{"any":[]}},
{"op":"Push","target":392,"args":{"any":[0,2,3,4]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: action(ev)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/prompt<a,(e :: E),(a :: (E, V) -> V),a>(w0, w0, ev, m, ret, (action(ev)))","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"394([k@[k@[mcore:[#708]#939]#941]#943])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Ev<(a :: (E, V) -> V),(e :: E),a>(tag, m, h, w0)","traced":{"any":[]}},
{"op":"Push","target":393,"args":{"any":[1,3,4,0]}},
{"op":"Copy","from":3,"to":1},
{"op":"Copy","from":0,"to":3},
{"op":"Copy","from":5,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Ev<(a :: (E, V) -> V),(e :: E),a>(tag, m, h, w0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}","traced":{"any":[]}},
{"op":"Jump","target":1055}]},
{"label":"395([k@[mcore:[#708]#939]#941])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-get<(e :: E)>()","traced":{"any":[]}},
{"op":"Push","target":394,"args":{"any":[1,2,0,3,4]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-get<(e :: E)>()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":205}]},
{"label":"396([mcore:[#708]#939])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4,5]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"m\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/fresh-marker-named<a,(e :: E)>()","traced":{"any":[]}},
{"op":"Push","target":395,"args":{"any":[3,1,2,0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/fresh-marker-named<a,(e :: E)>()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"m\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}","traced":{"any":[]}},
{"op":"Jump","target":219}]},
{"label":"397([mcore:[#709]#955])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"evvSwapCreate1"}]},
{"label":"398([mcore:[#712]#960])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"399([mcore:[#718]#965])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/open-at1<a,a,(e :: E),(e :: E)>(i, cont, res)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/open-at1<a,a,(e :: E),(e :: E)>(i, cont, res)","traced":{"any":[]}},
{"op":"Jump","target":409}]},
{"label":"400([#987])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Jump","target":399}]},
{"label":"401([k@[switch case for Bool(true)#983]#994])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"402([switch case for Bool(true)#983])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (5634 :: E) 5632, res: a){\n  std/core/hnd/open-at1<a,b,(e :: E),(e :: E)>(i, cont, res);\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[400],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (5634 :: E) 5632, res: a){\n  std/core/hnd/open-at1<a,b,(e :: E),(e :: E)>(i, cont, res);\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":212}]},
{"label":"403([switch case for Bool(false)#998])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"404([switch default case#999])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"405([switch default case#996])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Switch","arg":1,"values":[false],"targets":[403],"default":404}]},
{"label":"406([k@[k@[k@[mcore:[#720]#969]#974]#976]#981])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":2,"values":[true],"targets":[402],"default":405}]},
{"label":"407([k@[k@[mcore:[#720]#969]#974]#976])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Push","target":406,"args":{"any":[1,0]}},
{"op":"Copy","from":3,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":398}]},
{"label":"408([k@[mcore:[#720]#969]#974])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: f(x)","traced":{"any":[]}},
{"op":"Push","target":407,"args":{"any":[2,0]}},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f(x)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"409([mcore:[#720]#969])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap-create1<(e :: E)>(i)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Push","target":408,"args":{"any":[1,0,2]}},
{"op":"Copy","from":3,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap-create1<(e :: E)>(i)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":397}]},
{"label":"410([mcore:[#721]#1000])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"evvSwapCreate1"}]},
{"label":"411([mcore:[#723]#1005])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"412([mcore:[#729]#1010])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/open-at1<a,a,(e :: E),(e :: E)>(i, cont, res)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/open-at1<a,a,(e :: E),(e :: E)>(i, cont, res)","traced":{"any":[]}},
{"op":"Jump","target":409}]},
{"label":"413([#1032])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Jump","target":412}]},
{"label":"414([k@[switch case for Bool(true)#1028]#1039])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"415([switch case for Bool(true)#1028])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (5728 :: E) 5726, res: a){\n  std/core/hnd/open-at1<a,b,(e :: E),(e :: E)>(i, cont, res);\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[413],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (5728 :: E) 5726, res: a){\n  std/core/hnd/open-at1<a,b,(e :: E),(e :: E)>(i, cont, res);\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":212}]},
{"label":"416([switch case for Bool(false)#1043])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"417([switch default case#1044])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"418([switch default case#1041])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Switch","arg":1,"values":[false],"targets":[416],"default":417}]},
{"label":"419([k@[k@[k@[mcore:[#731]#1014]#1019]#1021]#1026])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":2,"values":[true],"targets":[415],"default":418}]},
{"label":"420([k@[k@[mcore:[#731]#1014]#1019]#1021])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Push","target":419,"args":{"any":[1,0]}},
{"op":"Copy","from":3,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":411}]},
{"label":"421([k@[mcore:[#731]#1014]#1019])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: f()","traced":{"any":[]}},
{"op":"Push","target":420,"args":{"any":[2,0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[]}}]},
{"label":"422([mcore:[#731]#1014])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap-create1<(e :: E)>(i)","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Push","target":421,"args":{"any":[1,0]}},
{"op":"Copy","from":2,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap-create1<(e :: E)>(i)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":410}]},
{"label":"423([mcore:[#732]#1045])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"evvSwapCreate1"}]},
{"label":"424([mcore:[#735]#1050])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"425([mcore:[#741]#1055])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/open-at1<a,a,(e :: E),(e :: E)>(i, cont, res)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/open-at1<a,a,(e :: E),(e :: E)>(i, cont, res)","traced":{"any":[]}},
{"op":"Jump","target":409}]},
{"label":"426([#1077])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Jump","target":425}]},
{"label":"427([k@[switch case for Bool(true)#1073]#1084])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"428([switch case for Bool(true)#1073])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (5827 :: E) 5825, res: a){\n  std/core/hnd/open-at1<a,b,(e :: E),(e :: E)>(i, cont, res);\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[426],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (5827 :: E) 5825, res: a){\n  std/core/hnd/open-at1<a,b,(e :: E),(e :: E)>(i, cont, res);\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":212}]},
{"label":"429([switch case for Bool(false)#1088])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"430([switch default case#1089])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"431([switch default case#1086])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Switch","arg":1,"values":[false],"targets":[429],"default":430}]},
{"label":"432([k@[k@[k@[mcore:[#743]#1059]#1064]#1066]#1071])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":2,"values":[true],"targets":[428],"default":431}]},
{"label":"433([k@[k@[mcore:[#743]#1059]#1064]#1066])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Push","target":432,"args":{"any":[1,0]}},
{"op":"Copy","from":3,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":424}]},
{"label":"434([k@[mcore:[#743]#1059]#1064])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: f(x)","traced":{"any":[]}},
{"op":"Push","target":433,"args":{"any":[2,0]}},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f(x)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"435([mcore:[#743]#1059])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap-create1<(e :: E)>(i)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Push","target":434,"args":{"any":[1,0,2]}},
{"op":"Copy","from":3,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap-create1<(e :: E)>(i)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":423}]},
{"label":"436([mcore:[#744]#1090])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"evvSwapCreate1"}]},
{"label":"437([mcore:[#748]#1095])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"438([mcore:[#754]#1100])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/open-at1<a,a,(e :: E),(e :: E)>(i, cont, res)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/open-at1<a,a,(e :: E),(e :: E)>(i, cont, res)","traced":{"any":[]}},
{"op":"Jump","target":409}]},
{"label":"439([#1122])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Jump","target":438}]},
{"label":"440([k@[switch case for Bool(true)#1118]#1129])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"441([switch case for Bool(true)#1118])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (5937 :: E) 5935, res: a){\n  std/core/hnd/open-at1<a,b,(e :: E),(e :: E)>(i, cont, res);\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[439],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (5937 :: E) 5935, res: a){\n  std/core/hnd/open-at1<a,b,(e :: E),(e :: E)>(i, cont, res);\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":212}]},
{"label":"442([switch case for Bool(false)#1133])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"443([switch default case#1134])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"444([switch default case#1131])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Switch","arg":1,"values":[false],"targets":[442],"default":443}]},
{"label":"445([k@[k@[k@[mcore:[#756]#1104]#1109]#1111]#1116])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":2,"values":[true],"targets":[441],"default":444}]},
{"label":"446([k@[k@[mcore:[#756]#1104]#1109]#1111])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Push","target":445,"args":{"any":[1,0]}},
{"op":"Copy","from":3,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":437}]},
{"label":"447([k@[mcore:[#756]#1104]#1109])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: f(x1, x2)","traced":{"any":[]}},
{"op":"Push","target":446,"args":{"any":[2,0]}},
{"op":"Copy","from":1,"to":2},
{"op":"Copy","from":3,"to":0},
{"op":"Copy","from":4,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f(x1, x2)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":2,"tag":"apply","args":{"any":[0,1]}}]},
{"label":"448([mcore:[#756]#1104])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap-create1<(e :: E)>(i)","traced":{"any":[]}},
{"op":"Const","format":"string","out":4,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"Push","target":447,"args":{"any":[1,0,2,3]}},
{"op":"Copy","from":4,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap-create1<(e :: E)>(i)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":436}]},
{"label":"449([mcore:[#757]#1135])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"evvSwapCreate1"}]},
{"label":"450([mcore:[#762]#1140])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"451([mcore:[#768]#1145])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/open-at1<a,a,(e :: E),(e :: E)>(i, cont, res)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/open-at1<a,a,(e :: E),(e :: E)>(i, cont, res)","traced":{"any":[]}},
{"op":"Jump","target":409}]},
{"label":"452([#1167])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Jump","target":451}]},
{"label":"453([k@[switch case for Bool(true)#1163]#1174])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"454([switch case for Bool(true)#1163])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (6058 :: E) 6056, res: a){\n  std/core/hnd/open-at1<a,b,(e :: E),(e :: E)>(i, cont, res);\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[452],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (6058 :: E) 6056, res: a){\n  std/core/hnd/open-at1<a,b,(e :: E),(e :: E)>(i, cont, res);\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":212}]},
{"label":"455([switch case for Bool(false)#1178])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"456([switch default case#1179])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"457([switch default case#1176])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Switch","arg":1,"values":[false],"targets":[455],"default":456}]},
{"label":"458([k@[k@[k@[mcore:[#770]#1149]#1154]#1156]#1161])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":2,"values":[true],"targets":[454],"default":457}]},
{"label":"459([k@[k@[mcore:[#770]#1149]#1154]#1156])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Push","target":458,"args":{"any":[1,0]}},
{"op":"Copy","from":3,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":450}]},
{"label":"460([k@[mcore:[#770]#1149]#1154])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: f(x1, x2, x3)","traced":{"any":[]}},
{"op":"Push","target":459,"args":{"any":[2,0]}},
{"op":"Copy","from":5,"to":2},
{"op":"Copy","from":3,"to":0},
{"op":"Copy","from":1,"to":3},
{"op":"Copy","from":4,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f(x1, x2, x3)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":3,"tag":"apply","args":{"any":[0,1,2]}}]},
{"label":"461([mcore:[#770]#1149])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4,5]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap-create1<(e :: E)>(i)","traced":{"any":[]}},
{"op":"Const","format":"string","out":5,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[5]},"in":{"any":[5]}},
{"op":"Push","target":460,"args":{"any":[1,0,2,3,4]}},
{"op":"Copy","from":5,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap-create1<(e :: E)>(i)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":449}]},
{"label":"462([mcore:[#771]#1180])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"evvSwapCreate1"}]},
{"label":"463([mcore:[#777]#1185])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"464([mcore:[#783]#1190])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/open-at1<a,a,(e :: E),(e :: E)>(i, cont, res)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/open-at1<a,a,(e :: E),(e :: E)>(i, cont, res)","traced":{"any":[]}},
{"op":"Jump","target":409}]},
{"label":"465([#1212])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Jump","target":464}]},
{"label":"466([k@[switch case for Bool(true)#1208]#1219])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"467([switch case for Bool(true)#1208])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (6190 :: E) 6188, res: a){\n  std/core/hnd/open-at1<a,b,(e :: E),(e :: E)>(i, cont, res);\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[465],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (6190 :: E) 6188, res: a){\n  std/core/hnd/open-at1<a,b,(e :: E),(e :: E)>(i, cont, res);\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":212}]},
{"label":"468([switch case for Bool(false)#1223])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"469([switch default case#1224])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"470([switch default case#1221])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Switch","arg":1,"values":[false],"targets":[468],"default":469}]},
{"label":"471([k@[k@[k@[mcore:[#785]#1194]#1199]#1201]#1206])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":2,"values":[true],"targets":[467],"default":470}]},
{"label":"472([k@[k@[mcore:[#785]#1194]#1199]#1201])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Push","target":471,"args":{"any":[1,0]}},
{"op":"Copy","from":3,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":463}]},
{"label":"473([k@[mcore:[#785]#1194]#1199])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: f(x1, x2, x3, x4)","traced":{"any":[]}},
{"op":"Push","target":472,"args":{"any":[2,0]}},
{"op":"Copy","from":5,"to":2},
{"op":"Copy","from":3,"to":0},
{"op":"Copy","from":6,"to":3},
{"op":"Swap","a":1,"b":4},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f(x1, x2, x3, x4)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":4,"tag":"apply","args":{"any":[0,1,2,3]}}]},
{"label":"474([mcore:[#785]#1194])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4,5,6]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap-create1<(e :: E)>(i)","traced":{"any":[]}},
{"op":"Const","format":"string","out":6,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[6]},"in":{"any":[6]}},
{"op":"Push","target":473,"args":{"any":[1,0,2,3,4,5]}},
{"op":"Copy","from":6,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap-create1<(e :: E)>(i)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":462}]},
{"label":"475([mcore:[#790]#1225])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"476([mcore:[#796]#1230])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/open1<a,a,(e :: E),(e :: E)>(indices, cont, res)","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/open1<a,a,(e :: E),(e :: E)>(indices, cont, res)","traced":{"any":[]}},
{"op":"Jump","target":486}]},
{"label":"477([#1249])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":2,"b":3},
{"op":"Jump","target":476}]},
{"label":"478([k@[switch case for Bool(true)#1245]#1256])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"479([switch case for Bool(true)#1245])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (6307 :: E) 6305, res: a){\n  std/core/hnd/open1<a,b,(e :: E),(e :: E)>(indices, cont, res);\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[477],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (6307 :: E) 6305, res: a){\n  std/core/hnd/open1<a,b,(e :: E),(e :: E)>(indices, cont, res);\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":212}]},
{"label":"480([switch case for Bool(false)#1260])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"481([switch default case#1261])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"482([switch default case#1258])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Switch","arg":1,"values":[false],"targets":[480],"default":481}]},
{"label":"483([k@[k@[k@[mcore:[#798]#1234]#1236]#1238]#1243])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":2,"values":[true],"targets":[479],"default":482}]},
{"label":"484([k@[k@[mcore:[#798]#1234]#1236]#1238])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Push","target":483,"args":{"any":[1,0]}},
{"op":"Copy","from":3,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":475}]},
{"label":"485([k@[mcore:[#798]#1234]#1236])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: f(x)","traced":{"any":[]}},
{"op":"Push","target":484,"args":{"any":[2,0]}},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f(x)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"486([mcore:[#798]#1234])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap-create<(e :: E)>(indices)","traced":{"any":[]}},
{"op":"Push","target":485,"args":{"any":[1,0,2]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap-create<(e :: E)>(indices)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":220}]},
{"label":"487([mcore:[#802]#1262])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"488([mcore:[#808]#1267])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/open1<a,a,(e :: E),(e :: E)>(indices, cont, res)","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/open1<a,a,(e :: E),(e :: E)>(indices, cont, res)","traced":{"any":[]}},
{"op":"Jump","target":486}]},
{"label":"489([#1286])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":2,"b":3},
{"op":"Jump","target":488}]},
{"label":"490([k@[switch case for Bool(true)#1282]#1293])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"491([switch case for Bool(true)#1282])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (6401 :: E) 6399, res: a){\n  std/core/hnd/open1<a,b,(e :: E),(e :: E)>(indices, cont, res);\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[489],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (6401 :: E) 6399, res: a){\n  std/core/hnd/open1<a,b,(e :: E),(e :: E)>(indices, cont, res);\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":212}]},
{"label":"492([switch case for Bool(false)#1297])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"493([switch default case#1298])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"494([switch default case#1295])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Switch","arg":1,"values":[false],"targets":[492],"default":493}]},
{"label":"495([k@[k@[k@[mcore:[#810]#1271]#1273]#1275]#1280])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":2,"values":[true],"targets":[491],"default":494}]},
{"label":"496([k@[k@[mcore:[#810]#1271]#1273]#1275])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Push","target":495,"args":{"any":[1,0]}},
{"op":"Copy","from":3,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":487}]},
{"label":"497([k@[mcore:[#810]#1271]#1273])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: f()","traced":{"any":[]}},
{"op":"Push","target":496,"args":{"any":[2,0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[]}}]},
{"label":"498([mcore:[#810]#1271])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap-create<(e :: E)>(indices)","traced":{"any":[]}},
{"op":"Push","target":497,"args":{"any":[1,0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap-create<(e :: E)>(indices)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":220}]},
{"label":"499([mcore:[#815]#1299])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"500([mcore:[#821]#1304])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/open1<a,a,(e :: E),(e :: E)>(indices, cont, res)","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/open1<a,a,(e :: E),(e :: E)>(indices, cont, res)","traced":{"any":[]}},
{"op":"Jump","target":486}]},
{"label":"501([#1323])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":2,"b":3},
{"op":"Jump","target":500}]},
{"label":"502([k@[switch case for Bool(true)#1319]#1330])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"503([switch case for Bool(true)#1319])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (6500 :: E) 6498, res: a){\n  std/core/hnd/open1<a,b,(e :: E),(e :: E)>(indices, cont, res);\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[501],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (6500 :: E) 6498, res: a){\n  std/core/hnd/open1<a,b,(e :: E),(e :: E)>(indices, cont, res);\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":212}]},
{"label":"504([switch case for Bool(false)#1334])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"505([switch default case#1335])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"506([switch default case#1332])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Switch","arg":1,"values":[false],"targets":[504],"default":505}]},
{"label":"507([k@[k@[k@[mcore:[#823]#1308]#1310]#1312]#1317])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":2,"values":[true],"targets":[503],"default":506}]},
{"label":"508([k@[k@[mcore:[#823]#1308]#1310]#1312])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Push","target":507,"args":{"any":[1,0]}},
{"op":"Copy","from":3,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":499}]},
{"label":"509([k@[mcore:[#823]#1308]#1310])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: f(x)","traced":{"any":[]}},
{"op":"Push","target":508,"args":{"any":[2,0]}},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f(x)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"510([mcore:[#823]#1308])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap-create<(e :: E)>(indices)","traced":{"any":[]}},
{"op":"Push","target":509,"args":{"any":[1,0,2]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap-create<(e :: E)>(indices)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":220}]},
{"label":"511([mcore:[#829]#1336])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"512([mcore:[#835]#1341])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/open1<a,a,(e :: E),(e :: E)>(indices, cont, res)","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/open1<a,a,(e :: E),(e :: E)>(indices, cont, res)","traced":{"any":[]}},
{"op":"Jump","target":486}]},
{"label":"513([#1360])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":2,"b":3},
{"op":"Jump","target":512}]},
{"label":"514([k@[switch case for Bool(true)#1356]#1367])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"515([switch case for Bool(true)#1356])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (6610 :: E) 6608, res: a){\n  std/core/hnd/open1<a,b,(e :: E),(e :: E)>(indices, cont, res);\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[513],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (6610 :: E) 6608, res: a){\n  std/core/hnd/open1<a,b,(e :: E),(e :: E)>(indices, cont, res);\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":212}]},
{"label":"516([switch case for Bool(false)#1371])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"517([switch default case#1372])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"518([switch default case#1369])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Switch","arg":1,"values":[false],"targets":[516],"default":517}]},
{"label":"519([k@[k@[k@[mcore:[#837]#1345]#1347]#1349]#1354])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":2,"values":[true],"targets":[515],"default":518}]},
{"label":"520([k@[k@[mcore:[#837]#1345]#1347]#1349])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Push","target":519,"args":{"any":[1,0]}},
{"op":"Copy","from":3,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":511}]},
{"label":"521([k@[mcore:[#837]#1345]#1347])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: f(x1, x2)","traced":{"any":[]}},
{"op":"Push","target":520,"args":{"any":[2,0]}},
{"op":"Copy","from":1,"to":2},
{"op":"Copy","from":3,"to":0},
{"op":"Copy","from":4,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f(x1, x2)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":2,"tag":"apply","args":{"any":[0,1]}}]},
{"label":"522([mcore:[#837]#1345])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap-create<(e :: E)>(indices)","traced":{"any":[]}},
{"op":"Push","target":521,"args":{"any":[1,0,2,3]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap-create<(e :: E)>(indices)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":220}]},
{"label":"523([mcore:[#844]#1373])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"524([mcore:[#850]#1378])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/open1<a,a,(e :: E),(e :: E)>(indices, cont, res)","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/open1<a,a,(e :: E),(e :: E)>(indices, cont, res)","traced":{"any":[]}},
{"op":"Jump","target":486}]},
{"label":"525([#1397])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":2,"b":3},
{"op":"Jump","target":524}]},
{"label":"526([k@[switch case for Bool(true)#1393]#1404])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"527([switch case for Bool(true)#1393])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (6731 :: E) 6729, res: a){\n  std/core/hnd/open1<a,b,(e :: E),(e :: E)>(indices, cont, res);\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[525],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (6731 :: E) 6729, res: a){\n  std/core/hnd/open1<a,b,(e :: E),(e :: E)>(indices, cont, res);\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":212}]},
{"label":"528([switch case for Bool(false)#1408])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"529([switch default case#1409])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"530([switch default case#1406])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Switch","arg":1,"values":[false],"targets":[528],"default":529}]},
{"label":"531([k@[k@[k@[mcore:[#852]#1382]#1384]#1386]#1391])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":2,"values":[true],"targets":[527],"default":530}]},
{"label":"532([k@[k@[mcore:[#852]#1382]#1384]#1386])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Push","target":531,"args":{"any":[1,0]}},
{"op":"Copy","from":3,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":523}]},
{"label":"533([k@[mcore:[#852]#1382]#1384])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: f(x1, x2, x3)","traced":{"any":[]}},
{"op":"Push","target":532,"args":{"any":[2,0]}},
{"op":"Copy","from":5,"to":2},
{"op":"Copy","from":3,"to":0},
{"op":"Copy","from":1,"to":3},
{"op":"Copy","from":4,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f(x1, x2, x3)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":3,"tag":"apply","args":{"any":[0,1,2]}}]},
{"label":"534([mcore:[#852]#1382])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4,5]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap-create<(e :: E)>(indices)","traced":{"any":[]}},
{"op":"Push","target":533,"args":{"any":[1,0,2,3,4]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap-create<(e :: E)>(indices)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":220}]},
{"label":"535([mcore:[#860]#1410])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"536([mcore:[#866]#1415])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/open1<a,a,(e :: E),(e :: E)>(indices, cont, res)","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/open1<a,a,(e :: E),(e :: E)>(indices, cont, res)","traced":{"any":[]}},
{"op":"Jump","target":486}]},
{"label":"537([#1434])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":2,"b":3},
{"op":"Jump","target":536}]},
{"label":"538([k@[switch case for Bool(true)#1430]#1441])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"539([switch case for Bool(true)#1430])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (6863 :: E) 6861, res: a){\n  std/core/hnd/open1<a,b,(e :: E),(e :: E)>(indices, cont, res);\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[537],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (6863 :: E) 6861, res: a){\n  std/core/hnd/open1<a,b,(e :: E),(e :: E)>(indices, cont, res);\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":212}]},
{"label":"540([switch case for Bool(false)#1445])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"541([switch default case#1446])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"542([switch default case#1443])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Switch","arg":1,"values":[false],"targets":[540],"default":541}]},
{"label":"543([k@[k@[k@[mcore:[#868]#1419]#1421]#1423]#1428])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":2,"values":[true],"targets":[539],"default":542}]},
{"label":"544([k@[k@[mcore:[#868]#1419]#1421]#1423])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Push","target":543,"args":{"any":[1,0]}},
{"op":"Copy","from":3,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":535}]},
{"label":"545([k@[mcore:[#868]#1419]#1421])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: f(x1, x2, x3, x4)","traced":{"any":[]}},
{"op":"Push","target":544,"args":{"any":[2,0]}},
{"op":"Copy","from":5,"to":2},
{"op":"Copy","from":3,"to":0},
{"op":"Copy","from":6,"to":3},
{"op":"Swap","a":1,"b":4},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f(x1, x2, x3, x4)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":4,"tag":"apply","args":{"any":[0,1,2,3]}}]},
{"label":"546([mcore:[#868]#1419])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4,5,6]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap-create<(e :: E)>(indices)","traced":{"any":[]}},
{"op":"Push","target":545,"args":{"any":[1,0,2,3,4,5]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap-create<(e :: E)>(indices)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":220}]},
{"label":"547([mcore:[#874]#1447])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"CallLib","lib":3,"symbol":"std/core/types/Tuple3"}]},
{"label":"548([match_def@[mcore:[#880]#1454]#1455])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"549([k@[k@[#1456]#1458]#1460])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"550([match_def@[k@[#1456]#1458]#1462])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"551([k@[k@[#1463]#1468]#1471])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"552([k@[#1463]#1468])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":2,"b":0},
{"op":"Invoke","receiver":3,"tag":"apply","args":{"any":[0,1,2]}}]},
{"label":"553([#1463])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@2,{\"op\": \"Var\",\"id\": \"@x70\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}),(f,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"71\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (f: (hnd/marker<3931,3932>, hnd/ev<6957>, (6952, 6953, 6954)) -> 3931 6955) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"71\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}, {\\\"op\\\": \\\"Top\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: f(m, ev, (std/core/types/Tuple3<a,a,a>(x1, x2, x3)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/Tuple3<a,a,a>(x1, x2, x3)","traced":{"any":[]}},
{"op":"Const","format":"string","out":6,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[6]},"in":{"any":[6]}},
{"op":"Push","target":552,"args":{"any":[5,0,1]}},
{"op":"Copy","from":3,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Copy","from":6,"to":3},
{"op":"Copy","from":4,"to":2},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/Tuple3<a,a,a>(x1, x2, x3)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f(m, ev, (std/core/types/Tuple3<a,a,a>(x1, x2, x3)))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@2,{\"op\": \"Var\",\"id\": \"@x70\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}),(f,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"71\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (f: (hnd/marker<3931,3932>, hnd/ev<6957>, (6952, 6953, 6954)) -> 3931 6955) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"71\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}, {\\\"op\\\": \\\"Top\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Jump","target":547}]},
{"label":"554([k@[#1456]#1458])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@x70\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}: \"std/core/hnd/clause1\".\"std/core/hnd/Clause1\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"71\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Swap","a":4,"b":5},
{"op":"Swap","a":3,"b":5},
{"op":"Swap","a":2,"b":5},
{"op":"Swap","a":1,"b":5},
{"op":"Swap","a":0,"b":5},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@x70\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}: \"std/core/hnd/clause1\".\"std/core/hnd/Clause1\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"71\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/clause1","scrutinee":5,"clauses":[{"tag":"std/core/hnd/Clause1","target":553,"args":{"any":[5]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3053]","target":550,"args":{"any":[]}}}]},
{"label":"555([#1456])",
"frameDescriptor":{"regs_any":9},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"66\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<6957>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"66\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(m,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"67\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (m: hnd/marker<3931,3932>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"67\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(h,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"68\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h: 6957<3931,3932>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"68\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"69\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/evv<3931>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"69\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match ((op<(e :: E),a>(h))) {\n  ((@skip std/core/hnd/Clause1((f: ((hnd/marker :: (E, V) -> V)<(3931 :: E),3932>, (hnd/ev :: ((E, V) -> V) -> V)<(6957 :: (E, V) -> V)>, (6952, 6953, 6954)) -> (3931 :: E) 6955) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(b1 :: (E, V) -> V)>, (b, c, d)) -> (e :: E) a1) : (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<(b, c, d),a1,(b1 :: (E, V) -> V),(e :: E),a> ) as @pat@2: ((hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<(6952, 6953, 6954),6955,(6957 :: (E, V) -> V),(3931 :: E),3932>))\n     -> f(m, ev, (std/core/types/Tuple3<a,a,a>(x1, x2, x3)));\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: op<(e :: E),a>(h)","traced":{"any":[]}},
{"op":"Push","target":554,"args":{"any":[6,0,2,3,4]}},
{"op":"Copy","from":7,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op<(e :: E),a>(h)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match ((op<(e :: E),a>(h))) {\n  ((@skip std/core/hnd/Clause1((f: ((hnd/marker :: (E, V) -> V)<(3931 :: E),3932>, (hnd/ev :: ((E, V) -> V) -> V)<(6957 :: (E, V) -> V)>, (6952, 6953, 6954)) -> (3931 :: E) 6955) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(b1 :: (E, V) -> V)>, (b, c, d)) -> (e :: E) a1) : (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<(b, c, d),a1,(b1 :: (E, V) -> V),(e :: E),a> ) as @pat@2: ((hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<(6952, 6953, 6954),6955,(6957 :: (E, V) -> V),(3931 :: E),3932>))\n     -> f(m, ev, (std/core/types/Tuple3<a,a,a>(x1, x2, x3)));\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"66\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<6957>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"66\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(m,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"67\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (m: hnd/marker<3931,3932>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"67\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(h,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"68\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h: 6957<3931,3932>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"68\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"69\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/evv<3931>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"69\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"556([mcore:[#880]#1454])",
"frameDescriptor":{"regs_any":9},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4,5]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"66\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"67\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"68\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"69\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"66\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"67\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"68\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"69\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/ev","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Ev","target":555,"args":{"any":[5,6,7,8]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3054]","target":548,"args":{"any":[]}}}]},
{"label":"557([mcore:[#886]#1473])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4]}},
{"op":"Const","format":"string","out":4,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"CallLib","lib":4,"symbol":"std/core/types/Tuple4"}]},
{"label":"558([match_def@[mcore:[#893]#1481]#1482])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"559([k@[k@[#1483]#1485]#1487])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"560([match_def@[k@[#1483]#1485]#1489])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"561([k@[k@[#1490]#1495]#1498])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"562([k@[#1490]#1495])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":2,"b":0},
{"op":"Invoke","receiver":3,"tag":"apply","args":{"any":[0,1,2]}}]},
{"label":"563([#1490])",
"frameDescriptor":{"regs_any":8},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@2,{\"op\": \"Var\",\"id\": \"@x76\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}),(f,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"77\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (f: (hnd/marker<3931,3932>, hnd/ev<7058>, (7052, 7053, 7054, 7055)) -> 3931 7056) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"77\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}, {\\\"op\\\": \\\"Top\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: f(m, ev, (std/core/types/Tuple4<a,a,a,a>(x1, x2, x3, x4)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/Tuple4<a,a,a,a>(x1, x2, x3, x4)","traced":{"any":[]}},
{"op":"Const","format":"string","out":7,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[7]},"in":{"any":[7]}},
{"op":"Push","target":562,"args":{"any":[6,0,1]}},
{"op":"Copy","from":3,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Copy","from":5,"to":3},
{"op":"Copy","from":4,"to":2},
{"op":"Copy","from":7,"to":4},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/Tuple4<a,a,a,a>(x1, x2, x3, x4)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f(m, ev, (std/core/types/Tuple4<a,a,a,a>(x1, x2, x3, x4)))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@2,{\"op\": \"Var\",\"id\": \"@x76\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}),(f,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"77\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (f: (hnd/marker<3931,3932>, hnd/ev<7058>, (7052, 7053, 7054, 7055)) -> 3931 7056) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"77\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}, {\\\"op\\\": \\\"Top\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Jump","target":557}]},
{"label":"564([k@[#1483]#1485])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@x76\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}: \"std/core/hnd/clause1\".\"std/core/hnd/Clause1\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"77\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Swap","a":4,"b":5},
{"op":"Swap","a":3,"b":5},
{"op":"Swap","a":2,"b":5},
{"op":"Swap","a":1,"b":5},
{"op":"Swap","a":0,"b":5},
{"op":"Swap","a":6,"b":5},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@x76\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}: \"std/core/hnd/clause1\".\"std/core/hnd/Clause1\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"77\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/clause1","scrutinee":6,"clauses":[{"tag":"std/core/hnd/Clause1","target":563,"args":{"any":[6]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3055]","target":560,"args":{"any":[]}}}]},
{"label":"565([#1483])",
"frameDescriptor":{"regs_any":10},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"72\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<7058>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"72\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(m,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"73\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (m: hnd/marker<3931,3932>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"73\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(h,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"74\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h: 7058<3931,3932>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"74\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"75\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/evv<3931>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"75\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match ((op<(e :: E),a>(h))) {\n  ((@skip std/core/hnd/Clause1((f: ((hnd/marker :: (E, V) -> V)<(3931 :: E),3932>, (hnd/ev :: ((E, V) -> V) -> V)<(7058 :: (E, V) -> V)>, (7052, 7053, 7054, 7055)) -> (3931 :: E) 7056) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(c1 :: (E, V) -> V)>, (b, c, d, a1)) -> (e :: E) b1) : (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<(b, c, d, a1),b1,(c1 :: (E, V) -> V),(e :: E),a> ) as @pat@2: ((hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<(7052, 7053, 7054, 7055),7056,(7058 :: (E, V) -> V),(3931 :: E),3932>))\n     -> f(m, ev, (std/core/types/Tuple4<a,a,a,a>(x1, x2, x3, x4)));\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: op<(e :: E),a>(h)","traced":{"any":[]}},
{"op":"Push","target":564,"args":{"any":[7,0,2,3,4,5]}},
{"op":"Copy","from":8,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op<(e :: E),a>(h)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match ((op<(e :: E),a>(h))) {\n  ((@skip std/core/hnd/Clause1((f: ((hnd/marker :: (E, V) -> V)<(3931 :: E),3932>, (hnd/ev :: ((E, V) -> V) -> V)<(7058 :: (E, V) -> V)>, (7052, 7053, 7054, 7055)) -> (3931 :: E) 7056) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(c1 :: (E, V) -> V)>, (b, c, d, a1)) -> (e :: E) b1) : (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<(b, c, d, a1),b1,(c1 :: (E, V) -> V),(e :: E),a> ) as @pat@2: ((hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<(7052, 7053, 7054, 7055),7056,(7058 :: (E, V) -> V),(3931 :: E),3932>))\n     -> f(m, ev, (std/core/types/Tuple4<a,a,a,a>(x1, x2, x3, x4)));\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"72\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<7058>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"72\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(m,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"73\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (m: hnd/marker<3931,3932>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"73\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(h,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"74\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h: 7058<3931,3932>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"74\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"75\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/evv<3931>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"75\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"566([mcore:[#893]#1481])",
"frameDescriptor":{"regs_any":10},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4,5,6]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"72\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"73\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"74\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"75\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"72\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"73\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"74\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"75\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/ev","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Ev","target":565,"args":{"any":[6,7,8,9]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3056]","target":558,"args":{"any":[]}}}]},
{"label":"567([mcore:[#898]#1500])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"568([k@[k@[k@[mcore:[#899]#1505]#1507]#1509]#1514])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Return","args":{"any":[0]}}]},
{"label":"569([k@[k@[mcore:[#899]#1505]#1507]#1509])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Push","target":568,"args":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Copy","from":2,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(e :: E)>(w0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":567}]},
{"label":"570([k@[mcore:[#899]#1505]#1507])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@yield-to-prim-vm<a,(e :: E),(e :: E),a>(m, clause)","traced":{"any":[]}},
{"op":"Push","target":569,"args":{"any":[0]}},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@yield-to-prim-vm<a,(e :: E),(e :: E),a>(m, clause)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Jump","target":203}]},
{"label":"571([mcore:[#899]#1505])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-get<(e :: E)>()","traced":{"any":[]}},
{"op":"Push","target":570,"args":{"any":[1,0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-get<(e :: E)>()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Jump","target":205}]},
{"label":"572([mcore:[#905]#1515])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: f()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f()","traced":{"any":[]}},
{"op":"Invoke","receiver":0,"tag":"apply","args":{"any":[]}}]},
{"label":"573([#1521])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Jump","target":572}]},
{"label":"574([k@[mcore:[#907]#1516]#1518])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-extend<() -> (e :: E) a,a,(e :: E)>((fn<(e :: E)>(f: () -> (7175 :: E) 7174){\n  (f());\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[573],"args":{"any":[]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-extend<() -> (e :: E) a,a,(e :: E)>((fn<(e :: E)>(f: () -> (7175 :: E) 7174){\n  (f());\n}))","traced":{"any":[]}},
{"op":"Jump","target":211}]},
{"label":"575([mcore:[#907]#1516])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"g\",\"type\": {\"op\": \"Function\",\"params\": [],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-to-prim<a,(e :: E),(e :: E),a>(m, clause)","traced":{"any":[]}},
{"op":"Push","target":574,"args":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-to-prim<a,(e :: E),(e :: E),a>(m, clause)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"g\",\"type\": {\"op\": \"Function\",\"params\": [],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}","traced":{"any":[]}},
{"op":"Jump","target":229}]},
{"label":"576([k@[mcore:[#915]#1524]#1526])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"577([mcore:[#915]#1524])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: op((std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k)","traced":{"any":[]}},
{"op":"Push","target":576,"args":{"any":[1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op((std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k)))","traced":{"any":[]}},
{"op":"Jump","target":1062}]},
{"label":"578([method_apply@[mcore:[#917]#1528]#1531])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Jump","target":577}]},
{"label":"579([mcore:[#917]#1528])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<7248,7252>) -> (7249 :: E) 7252){\n    (op((std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k))));\n  }))","traced":{"any":[]}},
{"op":"New","out":1,"targets":[578],"args":{"any":[3]},"tags":["apply"]},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<7248,7252>) -> (7249 :: E) 7252){\n    (op((std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k))));\n  }))","traced":{"any":[]}},
{"op":"Jump","target":571}]},
{"label":"580([method_apply@[mcore:[#919]#1537]#1541])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":2,"b":3},
{"op":"Jump","target":579}]},
{"label":"581([mcore:[#919]#1537])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Clause0<a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(7249 :: E),7252>, @_wildcard-x722_16: (hnd/ev :: ((E, V) -> V) -> V)<(7251 :: (E, V) -> V)>){\n  (std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<7248,7252>) -> (7249 :: E) 7252){\n      (op((std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k))));\n    })));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[580],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Clause0<a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(7249 :: E),7252>, @_wildcard-x722_16: (hnd/ev :: ((E, V) -> V) -> V)<(7251 :: (E, V) -> V)>){\n  (std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<7248,7252>) -> (7249 :: E) 7252){\n      (op((std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k))));\n    })));\n}))","traced":{"any":[]}},
{"op":"Jump","target":1056}]},
{"label":"582([k@[mcore:[#928]#1547]#1549])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Invoke","receiver":2,"tag":"apply","args":{"any":[0,1]}}]},
{"label":"583([mcore:[#928]#1547])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genExpr: op(x, (std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k)","traced":{"any":[]}},
{"op":"Push","target":582,"args":{"any":[1,2]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op(x, (std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k)))","traced":{"any":[]}},
{"op":"Jump","target":1062}]},
{"label":"584([method_apply@[mcore:[#930]#1551]#1554])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Jump","target":583}]},
{"label":"585([mcore:[#930]#1551])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<7339,7343>) -> (7340 :: E) 7343){\n    (op(x, (std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k))));\n  }))","traced":{"any":[]}},
{"op":"New","out":1,"targets":[584],"args":{"any":[4,2]},"tags":["apply"]},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<7339,7343>) -> (7340 :: E) 7343){\n    (op(x, (std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k))));\n  }))","traced":{"any":[]}},
{"op":"Jump","target":571}]},
{"label":"586([method_apply@[mcore:[#932]#1560]#1565])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Const","format":"string","out":4,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"Swap","a":3,"b":4},
{"op":"Jump","target":585}]},
{"label":"587([mcore:[#932]#1560])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Clause1<a,a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(7340 :: E),7343>, @_wildcard-x648_16: (hnd/ev :: ((E, V) -> V) -> V)<(7342 :: (E, V) -> V)>, x: 7338){\n  (std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<7339,7343>) -> (7340 :: E) 7343){\n      (op(x, (std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k))));\n    })));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[586],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Clause1<a,a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(7340 :: E),7343>, @_wildcard-x648_16: (hnd/ev :: ((E, V) -> V) -> V)<(7342 :: (E, V) -> V)>, x: 7338){\n  (std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<7339,7343>) -> (7340 :: E) 7343){\n      (op(x, (std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k))));\n    })));\n}))","traced":{"any":[]}},
{"op":"Jump","target":1057}]},
{"label":"588([k@[mcore:[#942]#1571]#1573])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":2,"b":0},
{"op":"Invoke","receiver":3,"tag":"apply","args":{"any":[0,1,2]}}]},
{"label":"589([mcore:[#942]#1571])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: op(x1, x2, (std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k)","traced":{"any":[]}},
{"op":"Push","target":588,"args":{"any":[1,2,3]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op(x1, x2, (std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k)))","traced":{"any":[]}},
{"op":"Jump","target":1062}]},
{"label":"590([method_apply@[mcore:[#944]#1575]#1578])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Jump","target":589}]},
{"label":"591([mcore:[#944]#1575])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4,5]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<7441,7445>) -> (7442 :: E) 7445){\n    (op(x1, x2, (std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k))));\n  }))","traced":{"any":[]}},
{"op":"New","out":1,"targets":[590],"args":{"any":[5,2,3]},"tags":["apply"]},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<7441,7445>) -> (7442 :: E) 7445){\n    (op(x1, x2, (std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k))));\n  }))","traced":{"any":[]}},
{"op":"Jump","target":571}]},
{"label":"592([method_apply@[mcore:[#946]#1584]#1590])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Const","format":"string","out":5,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[5]},"in":{"any":[5]}},
{"op":"Swap","a":4,"b":5},
{"op":"Jump","target":591}]},
{"label":"593([mcore:[#946]#1584])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Clause2<a,a,a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(7442 :: E),7445>, @_wildcard-x773_16: (hnd/ev :: ((E, V) -> V) -> V)<(7444 :: (E, V) -> V)>, x1: 7439, x2: 7440){\n  (std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<7441,7445>) -> (7442 :: E) 7445){\n      (op(x1, x2, (std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k))));\n    })));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[592],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Clause2<a,a,a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(7442 :: E),7445>, @_wildcard-x773_16: (hnd/ev :: ((E, V) -> V) -> V)<(7444 :: (E, V) -> V)>, x1: 7439, x2: 7440){\n  (std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<7441,7445>) -> (7442 :: E) 7445){\n      (op(x1, x2, (std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k))));\n    })));\n}))","traced":{"any":[]}},
{"op":"Jump","target":1058}]},
{"label":"594([match_def@[mcore:[#957]#1596]#1597])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"595([k@[k@[#1598]#1600]#1603])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"596([k@[#1598]#1600])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Invoke","receiver":4,"tag":"apply","args":{"any":[0,1,2,3]}}]},
{"label":"597([#1598])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}),(x1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"78\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x1: 7528) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"78\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"79\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x2: 7529) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"79\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x3,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"80\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x3: 7530) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"80\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: op(x1, x2, x3, (std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k)","traced":{"any":[]}},
{"op":"Push","target":596,"args":{"any":[2,3,4,1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op(x1, x2, x3, (std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k)))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}),(x1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"78\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x1: 7528) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"78\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"79\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x2: 7529) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"79\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x3,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"80\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x3: 7530) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"80\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Jump","target":1062}]},
{"label":"598([mcore:[#957]#1596])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}: \"std/core/types/tuple3\".\"std/core/types/Tuple3\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"78\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"79\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"80\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}: \"std/core/types/tuple3\".\"std/core/types/Tuple3\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"78\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"79\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"80\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/tuple3","scrutinee":2,"clauses":[{"tag":"std/core/types/Tuple3","target":597,"args":{"any":[2,3,4]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3057]","target":594,"args":{"any":[]}}}]},
{"label":"599([method_apply@[mcore:[#959]#1605]#1608])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Jump","target":598}]},
{"label":"600([mcore:[#959]#1605])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<7531,7535>) -> (7532 :: E) 7535){\n    (match (x) {\n      ((@skip std/core/types/Tuple3((x1: 7528) : a, (x2: 7529) : a, (x3: 7530) : a) : (a, b, c) ) as @pat: (7528, 7529, 7530))\n         -> op(x1, x2, x3, (std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k)));\n    });\n  }))","traced":{"any":[]}},
{"op":"New","out":1,"targets":[599],"args":{"any":[4,2]},"tags":["apply"]},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<7531,7535>) -> (7532 :: E) 7535){\n    (match (x) {\n      ((@skip std/core/types/Tuple3((x1: 7528) : a, (x2: 7529) : a, (x3: 7530) : a) : (a, b, c) ) as @pat: (7528, 7529, 7530))\n         -> op(x1, x2, x3, (std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k)));\n    });\n  }))","traced":{"any":[]}},
{"op":"Jump","target":571}]},
{"label":"601([method_apply@[mcore:[#961]#1614]#1619])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Const","format":"string","out":4,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"Swap","a":3,"b":4},
{"op":"Jump","target":600}]},
{"label":"602([mcore:[#961]#1614])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Clause1<(a, b, c),a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(7532 :: E),7535>, @_wildcard-x648_16: (hnd/ev :: ((E, V) -> V) -> V)<(7534 :: (E, V) -> V)>, x: (7528, 7529, 7530)){\n  (std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<7531,7535>) -> (7532 :: E) 7535){\n      (match (x) {\n        ((@skip std/core/types/Tuple3((x1: 7528) : a, (x2: 7529) : a, (x3: 7530) : a) : (a, b, c) ) as @pat: (7528, 7529, 7530))\n           -> op(x1, x2, x3, (std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k)));\n      });\n    })));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[601],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Clause1<(a, b, c),a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(7532 :: E),7535>, @_wildcard-x648_16: (hnd/ev :: ((E, V) -> V) -> V)<(7534 :: (E, V) -> V)>, x: (7528, 7529, 7530)){\n  (std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<7531,7535>) -> (7532 :: E) 7535){\n      (match (x) {\n        ((@skip std/core/types/Tuple3((x1: 7528) : a, (x2: 7529) : a, (x3: 7530) : a) : (a, b, c) ) as @pat: (7528, 7529, 7530))\n           -> op(x1, x2, x3, (std/core/hnd/Resume-context<a,(e :: E),(e :: E),a>(k)));\n      });\n    })));\n}))","traced":{"any":[]}},
{"op":"Jump","target":1057}]},
{"label":"603([match_def@[mcore:[#966]#1625]#1626])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"604([k@[k@[#1627]#1629]#1632])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"605([k@[#1627]#1629])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"606([#1627])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-context\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"k\\\"81\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (@x: (hnd/resume-result<7600,7603>) -> 7601 7603) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"k\\\\\\\"81\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/resume-result\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: @x((std/core/hnd/Finalize<a,a>(x)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Finalize<a,a>(x)","traced":{"any":[]}},
{"op":"Push","target":605,"args":{"any":[1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Finalize<a,a>(x)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: @x((std/core/hnd/Finalize<a,a>(x)))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-context\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"k\\\"81\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (@x: (hnd/resume-result<7600,7603>) -> 7601 7603) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"k\\\\\\\"81\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/resume-result\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Jump","target":1061}]},
{"label":"607([mcore:[#966]#1625])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-context\"}}: \"std/core/hnd/resume-context\".\"std/core/hnd/Resume-context\"(({\"op\": \"Var\",\"id\": \"@\\\"k\\\"81\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-context\"}}: \"std/core/hnd/resume-context\".\"std/core/hnd/Resume-context\"(({\"op\": \"Var\",\"id\": \"@\\\"k\\\"81\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/resume-result\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/resume-context","scrutinee":1,"clauses":[{"tag":"std/core/hnd/Resume-context","target":606,"args":{"any":[1]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3058]","target":603,"args":{"any":[]}}}]},
{"label":"608([switch case for Bool(true)#1636])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"did-resume\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"did-resume\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"609([#1643])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"610([k@[switch case for Bool(false)#1638]#1640])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"611([switch case for Bool(false)#1638])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"did-resume\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: k((std/core/hnd/Finalize<a,a>(res)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Finalize<a,a>(res)","traced":{"any":[]}},
{"op":"Push","target":610,"args":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Finalize<a,a>(res)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: k((std/core/hnd/Finalize<a,a>(res)))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"did-resume\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Jump","target":1061}]},
{"label":"612([switch default case#1645])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"613([switch default case#1637])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Switch","arg":2,"values":[false],"targets":[611],"default":612}]},
{"label":"614([mcore:[#972]#1635])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"did-resume\",\"type\": {\"op\": \"Bool\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/ref/(!)<(global :: H),bool,<(alloc :: H -> X)<(global :: H)>,(write :: H -> X)<(global :: H)>|(e :: E)>>(resumed)","traced":{"any":[]}},
{"op":"PrimOp","name":"getRef(Ref[Ptr]): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/ref/(!)<(global :: H),bool,<(alloc :: H -> X)<(global :: H)>,(write :: H -> X)<(global :: H)>|(e :: E)>>(resumed)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"did-resume\",\"type\": {\"op\": \"Bool\"}}","traced":{"any":[]}},
{"op":"Switch","arg":0,"values":[true],"targets":[608],"default":613}]},
{"label":"615([k@[mcore:[#982]#1646]#1650])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"616([mcore:[#982]#1646])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/set<bool,(global :: H)>(resumed, std/core/types/True)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/True","traced":{"any":[]}},
{"op":"Const","format":"bool","out":3,"value":true},
{"op":"PrimOp","name":"setRef(Ref[Ptr], Ptr): Unit","out":{"any":[2]},"in":{"any":[2,3]}},
{"op":"Debug","msg":"BGN: genExpr: k((std/core/hnd/Deep<a,a>(ret)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Deep<a,a>(ret)","traced":{"any":[]}},
{"op":"Push","target":615,"args":{"any":[1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Deep<a,a>(ret)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: k((std/core/hnd/Deep<a,a>(ret)))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/True","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/set<bool,(global :: H)>(resumed, std/core/types/True)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":1059}]},
{"label":"617([mcore:[#989]#1652])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/protect-check<a,(e :: E),a>(resumed, k, xres)","traced":{"any":[]}},
{"op":"Swap","a":2,"b":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/protect-check<a,(e :: E),a>(resumed, k, xres)","traced":{"any":[]}},
{"op":"Jump","target":614}]},
{"label":"618([method_apply@[mcore:[#995]#1653]#1658])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Jump","target":616}]},
{"label":"619([#1667])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Jump","target":617}]},
{"label":"620([k@[switch case for Bool(true)#1664]#1671])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"621([switch case for Bool(true)#1664])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-extend<a,a,(e :: E)>((fn<(e :: E)>(xres: 7818){\n  (std/core/hnd/protect-check<a,(e :: E),a>(resumed, k, xres));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[619],"args":{"any":[0,2]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-extend<a,a,(e :: E)>((fn<(e :: E)>(xres: 7818){\n  (std/core/hnd/protect-check<a,(e :: E),a>(resumed, k, xres));\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":211}]},
{"label":"622([k@[switch case for Bool(false)#1675]#1677])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"623([switch case for Bool(false)#1675])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/protect-check<a,(e :: E),a>(resumed, k, res)","traced":{"any":[]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/protect-check<a,(e :: E),a>(resumed, k, res)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":614}]},
{"label":"624([switch default case#1679])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"625([switch default case#1673])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"int","out":3,"value":0},
{"op":"Switch","arg":3,"values":[false],"targets":[623],"default":624}]},
{"label":"626([k@[mcore:[#995]#1653]#1662])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"int","out":3,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":3,"values":[true],"targets":[621],"default":625}]},
{"label":"627([mcore:[#995]#1653])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"resumed\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"ref\\\"\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/ref<bool,(global :: H)>(std/core/types/False)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/False","traced":{"any":[]}},
{"op":"Const","format":"bool","out":3,"value":false},
{"op":"PrimOp","name":"mkRef(Ptr): Ref[Ptr]","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"res\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: clause(x, (fn<(e :: E)>(ret: 7816){\n    val _ : ()\n          = (std/core/types/set<bool,(global :: H)>(resumed, std/core/types/True));\n    (k((std/core/hnd/Deep<a,a>(ret))));\n  }))","traced":{"any":[]}},
{"op":"New","out":4,"targets":[618],"args":{"any":[2,3]},"tags":["apply"]},
{"op":"Push","target":626,"args":{"any":[2,3]}},
{"op":"Copy","from":1,"to":2},
{"op":"Copy","from":4,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: clause(x, (fn<(e :: E)>(ret: 7816){\n    val _ : ()\n          = (std/core/types/set<bool,(global :: H)>(resumed, std/core/types/True));\n    (k((std/core/hnd/Deep<a,a>(ret))));\n  }))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"res\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/False","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/ref<bool,(global :: H)>(std/core/types/False)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"resumed\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"ref\\\"\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":2,"tag":"apply","args":{"any":[0,1]}}]},
{"label":"628([mcore:[#1003]#1680])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genExpr: op(r)","traced":{"any":[]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op(r)","traced":{"any":[]}},
{"op":"Invoke","receiver":2,"tag":"apply","args":{"any":[0]}}]},
{"label":"629([method_apply@[mcore:[#1006]#1681]#1687])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Jump","target":628}]},
{"label":"630([mcore:[#1006]#1681])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/protect<(),a,(e :: E),a>(std/core/types/Unit, (fn<(e :: E)>(@_wildcard-x730_55: (), r: (7891) -> (7892 :: E) 7894){\n    (op(r));\n  }), k)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/Unit","traced":{"any":[]}},
{"op":"Construct","out":2,"type":"Unit","tag":"unit","args":{"any":[]}},
{"op":"New","out":1,"targets":[629],"args":{"any":[1]},"tags":["apply"]},
{"op":"Swap","a":2,"b":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/Unit","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/protect<(),a,(e :: E),a>(std/core/types/Unit, (fn<(e :: E)>(@_wildcard-x730_55: (), r: (7891) -> (7892 :: E) 7894){\n    (op(r));\n  }), k)","traced":{"any":[]}},
{"op":"Jump","target":199}]},
{"label":"631([method_apply@[mcore:[#1008]#1690]#1693])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Jump","target":630}]},
{"label":"632([mcore:[#1008]#1690])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<7891,7894>) -> (7892 :: E) 7894){\n    (std/core/hnd/protect<(),a,(e :: E),a>(std/core/types/Unit, (fn<(e :: E)>(@_wildcard-x730_55: (), r: (7891) -> (7892 :: E) 7894){\n        (op(r));\n      }), k));\n  }))","traced":{"any":[]}},
{"op":"New","out":1,"targets":[631],"args":{"any":[3]},"tags":["apply"]},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<7891,7894>) -> (7892 :: E) 7894){\n    (std/core/hnd/protect<(),a,(e :: E),a>(std/core/types/Unit, (fn<(e :: E)>(@_wildcard-x730_55: (), r: (7891) -> (7892 :: E) 7894){\n        (op(r));\n      }), k));\n  }))","traced":{"any":[]}},
{"op":"Jump","target":571}]},
{"label":"633([method_apply@[mcore:[#1010]#1699]#1703])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":2,"b":3},
{"op":"Jump","target":632}]},
{"label":"634([mcore:[#1010]#1699])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Clause0<a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(7892 :: E),7894>, @_wildcard-x730_16: (hnd/ev :: ((E, V) -> V) -> V)<(7893 :: (E, V) -> V)>){\n  (std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<7891,7894>) -> (7892 :: E) 7894){\n      (std/core/hnd/protect<(),a,(e :: E),a>(std/core/types/Unit, (fn<(e :: E)>(@_wildcard-x730_55: (), r: (7891) -> (7892 :: E) 7894){\n          (op(r));\n        }), k));\n    })));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[633],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Clause0<a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(7892 :: E),7894>, @_wildcard-x730_16: (hnd/ev :: ((E, V) -> V) -> V)<(7893 :: (E, V) -> V)>){\n  (std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<7891,7894>) -> (7892 :: E) 7894){\n      (std/core/hnd/protect<(),a,(e :: E),a>(std/core/types/Unit, (fn<(e :: E)>(@_wildcard-x730_55: (), r: (7891) -> (7892 :: E) 7894){\n          (op(r));\n        }), k));\n    })));\n}))","traced":{"any":[]}},
{"op":"Jump","target":1056}]},
{"label":"635([mcore:[#1018]#1709])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/protect<a,a,(e :: E),a>(x, clause, k)","traced":{"any":[]}},
{"op":"Swap","a":2,"b":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/protect<a,a,(e :: E),a>(x, clause, k)","traced":{"any":[]}},
{"op":"Jump","target":199}]},
{"label":"636([method_apply@[mcore:[#1020]#1710]#1713])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Jump","target":635}]},
{"label":"637([mcore:[#1020]#1710])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<7973,7976>) -> (7974 :: E) 7976){\n    (std/core/hnd/protect<a,a,(e :: E),a>(x, clause, k));\n  }))","traced":{"any":[]}},
{"op":"New","out":1,"targets":[636],"args":{"any":[3,2]},"tags":["apply"]},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<7973,7976>) -> (7974 :: E) 7976){\n    (std/core/hnd/protect<a,a,(e :: E),a>(x, clause, k));\n  }))","traced":{"any":[]}},
{"op":"Jump","target":571}]},
{"label":"638([method_apply@[mcore:[#1022]#1719]#1724])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Const","format":"string","out":4,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"Jump","target":637}]},
{"label":"639([mcore:[#1022]#1719])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Clause1<a,a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(7974 :: E),7976>, @_wildcard-x681_16: (hnd/ev :: ((E, V) -> V) -> V)<(7975 :: (E, V) -> V)>, x: 7972){\n  (std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<7973,7976>) -> (7974 :: E) 7976){\n      (std/core/hnd/protect<a,a,(e :: E),a>(x, clause, k));\n    })));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[638],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Clause1<a,a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(7974 :: E),7976>, @_wildcard-x681_16: (hnd/ev :: ((E, V) -> V) -> V)<(7975 :: (E, V) -> V)>, x: 7972){\n  (std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<7973,7976>) -> (7974 :: E) 7976){\n      (std/core/hnd/protect<a,a,(e :: E),a>(x, clause, k));\n    })));\n}))","traced":{"any":[]}},
{"op":"Jump","target":1057}]},
{"label":"640([k@[mcore:[#1033]#1730]#1734])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"641([mcore:[#1033]#1730])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/set<bool,(global :: H)>(resumed, std/core/types/True)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/True","traced":{"any":[]}},
{"op":"Const","format":"bool","out":3,"value":true},
{"op":"PrimOp","name":"setRef(Ref[Ptr], Ptr): Unit","out":{"any":[2]},"in":{"any":[2,3]}},
{"op":"Debug","msg":"BGN: genExpr: k((std/core/hnd/Deep<a,a>(ret)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Deep<a,a>(ret)","traced":{"any":[]}},
{"op":"Push","target":640,"args":{"any":[1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Deep<a,a>(ret)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: k((std/core/hnd/Deep<a,a>(ret)))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/True","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/set<bool,(global :: H)>(resumed, std/core/types/True)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":1059}]},
{"label":"642([mcore:[#1040]#1736])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/protect-check<a,(e :: E),a>(resumed, k, xres)","traced":{"any":[]}},
{"op":"Swap","a":2,"b":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/protect-check<a,(e :: E),a>(resumed, k, xres)","traced":{"any":[]}},
{"op":"Jump","target":614}]},
{"label":"643([method_apply@[mcore:[#1046]#1737]#1742])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Jump","target":641}]},
{"label":"644([#1751])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Jump","target":642}]},
{"label":"645([k@[switch case for Bool(true)#1748]#1755])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"646([switch case for Bool(true)#1748])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-extend<a,a,(e :: E)>((fn<(e :: E)>(xres: 8122){\n  (std/core/hnd/protect-check<a,(e :: E),a>(resumed, k, xres));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[644],"args":{"any":[0,2]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-extend<a,a,(e :: E)>((fn<(e :: E)>(xres: 8122){\n  (std/core/hnd/protect-check<a,(e :: E),a>(resumed, k, xres));\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":211}]},
{"label":"647([k@[switch case for Bool(false)#1759]#1761])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"648([switch case for Bool(false)#1759])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/protect-check<a,(e :: E),a>(resumed, k, res)","traced":{"any":[]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/protect-check<a,(e :: E),a>(resumed, k, res)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":614}]},
{"label":"649([switch default case#1763])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"650([switch default case#1757])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"int","out":3,"value":0},
{"op":"Switch","arg":3,"values":[false],"targets":[648],"default":649}]},
{"label":"651([k@[mcore:[#1046]#1737]#1746])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"int","out":3,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":3,"values":[true],"targets":[646],"default":650}]},
{"label":"652([mcore:[#1046]#1737])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"resumed\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"ref\\\"\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/ref<bool,(global :: H)>(std/core/types/False)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/False","traced":{"any":[]}},
{"op":"Const","format":"bool","out":4,"value":false},
{"op":"PrimOp","name":"mkRef(Ptr): Ref[Ptr]","out":{"any":[4]},"in":{"any":[4]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"res\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: clause(x1, x2, (fn<(e :: E)>(ret: 8120){\n    val _ : ()\n          = (std/core/types/set<bool,(global :: H)>(resumed, std/core/types/True));\n    (k((std/core/hnd/Deep<a,a>(ret))));\n  }))","traced":{"any":[]}},
{"op":"New","out":5,"targets":[643],"args":{"any":[3,4]},"tags":["apply"]},
{"op":"Push","target":651,"args":{"any":[3,4]}},
{"op":"Copy","from":2,"to":3},
{"op":"Copy","from":5,"to":2},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: clause(x1, x2, (fn<(e :: E)>(ret: 8120){\n    val _ : ()\n          = (std/core/types/set<bool,(global :: H)>(resumed, std/core/types/True));\n    (k((std/core/hnd/Deep<a,a>(ret))));\n  }))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"res\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/False","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/ref<bool,(global :: H)>(std/core/types/False)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"resumed\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"ref\\\"\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":3,"tag":"apply","args":{"any":[0,1,2]}}]},
{"label":"653([mcore:[#1055]#1764])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/protect2<a,a,a,(e :: E),a>(x1, x2, clause, k)","traced":{"any":[]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":3,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/protect2<a,a,a,(e :: E),a>(x1, x2, clause, k)","traced":{"any":[]}},
{"op":"Jump","target":652}]},
{"label":"654([method_apply@[mcore:[#1057]#1765]#1768])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Jump","target":653}]},
{"label":"655([mcore:[#1057]#1765])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4,5]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<8214,8217>) -> (8215 :: E) 8217){\n    (std/core/hnd/protect2<a,a,a,(e :: E),a>(x1, x2, clause, k));\n  }))","traced":{"any":[]}},
{"op":"New","out":1,"targets":[654],"args":{"any":[4,2,3]},"tags":["apply"]},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<8214,8217>) -> (8215 :: E) 8217){\n    (std/core/hnd/protect2<a,a,a,(e :: E),a>(x1, x2, clause, k));\n  }))","traced":{"any":[]}},
{"op":"Jump","target":571}]},
{"label":"656([method_apply@[mcore:[#1059]#1774]#1780])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Const","format":"string","out":5,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[5]},"in":{"any":[5]}},
{"op":"Jump","target":655}]},
{"label":"657([mcore:[#1059]#1774])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Clause2<a,a,a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(8215 :: E),8217>, @_wildcard-x769_16: (hnd/ev :: ((E, V) -> V) -> V)<(8216 :: (E, V) -> V)>, x1: 8212, x2: 8213){\n  (std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<8214,8217>) -> (8215 :: E) 8217){\n      (std/core/hnd/protect2<a,a,a,(e :: E),a>(x1, x2, clause, k));\n    })));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[656],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Clause2<a,a,a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(8215 :: E),8217>, @_wildcard-x769_16: (hnd/ev :: ((E, V) -> V) -> V)<(8216 :: (E, V) -> V)>, x1: 8212, x2: 8213){\n  (std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<8214,8217>) -> (8215 :: E) 8217){\n      (std/core/hnd/protect2<a,a,a,(e :: E),a>(x1, x2, clause, k));\n    })));\n}))","traced":{"any":[]}},
{"op":"Jump","target":1058}]},
{"label":"658([match_def@[mcore:[#1070]#1786]#1787])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"659([k@[#1788]#1790])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"660([#1788])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"@pat-x805_23\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}),(x1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"82\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x1: 8291) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"82\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"83\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x2: 8292) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"83\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x3,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"84\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x3: 8293) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"84\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: op(x1, x2, x3, k@0)","traced":{"any":[]}},
{"op":"Swap","a":2,"b":4},
{"op":"Swap","a":0,"b":4},
{"op":"Swap","a":3,"b":4},
{"op":"Swap","a":1,"b":4},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op(x1, x2, x3, k@0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"@pat-x805_23\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}),(x1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"82\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x1: 8291) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"82\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"83\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x2: 8292) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"83\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x3,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"84\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x3: 8293) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"84\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Invoke","receiver":4,"tag":"apply","args":{"any":[0,1,2,3]}}]},
{"label":"661([mcore:[#1070]#1786])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@pat-x805_23\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}: \"std/core/types/tuple3\".\"std/core/types/Tuple3\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"82\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"83\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"84\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@pat-x805_23\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}: \"std/core/types/tuple3\".\"std/core/types/Tuple3\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"82\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"83\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"84\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/tuple3","scrutinee":2,"clauses":[{"tag":"std/core/types/Tuple3","target":660,"args":{"any":[2,3,4]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3059]","target":658,"args":{"any":[]}}}]},
{"label":"662([method_apply@[mcore:[#1073]#1792]#1796])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Jump","target":661}]},
{"label":"663([mcore:[#1073]#1792])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/protect<(a, b, c),a,(e :: E),a>(x, (fn<(e :: E)>(@pat-x805_23: (8291, 8292, 8293), k@0: (8294) -> (8295 :: E) 8297){\n    (match (@pat-x805_23) {\n      ((@skip std/core/types/Tuple3((x1: 8291) : a, (x2: 8292) : a, (x3: 8293) : a) : (a, b, c) ) as @pat: (8291, 8292, 8293))\n         -> op(x1, x2, x3, k@0);\n    });\n  }), k)","traced":{"any":[]}},
{"op":"New","out":1,"targets":[662],"args":{"any":[1]},"tags":["apply"]},
{"op":"Swap","a":2,"b":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/protect<(a, b, c),a,(e :: E),a>(x, (fn<(e :: E)>(@pat-x805_23: (8291, 8292, 8293), k@0: (8294) -> (8295 :: E) 8297){\n    (match (@pat-x805_23) {\n      ((@skip std/core/types/Tuple3((x1: 8291) : a, (x2: 8292) : a, (x3: 8293) : a) : (a, b, c) ) as @pat: (8291, 8292, 8293))\n         -> op(x1, x2, x3, k@0);\n    });\n  }), k)","traced":{"any":[]}},
{"op":"Jump","target":199}]},
{"label":"664([method_apply@[mcore:[#1075]#1799]#1802])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Jump","target":663}]},
{"label":"665([mcore:[#1075]#1799])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<8294,8297>) -> (8295 :: E) 8297){\n    (std/core/hnd/protect<(a, b, c),a,(e :: E),a>(x, (fn<(e :: E)>(@pat-x805_23: (8291, 8292, 8293), k@0: (8294) -> (8295 :: E) 8297){\n        (match (@pat-x805_23) {\n          ((@skip std/core/types/Tuple3((x1: 8291) : a, (x2: 8292) : a, (x3: 8293) : a) : (a, b, c) ) as @pat: (8291, 8292, 8293))\n             -> op(x1, x2, x3, k@0);\n        });\n      }), k));\n  }))","traced":{"any":[]}},
{"op":"New","out":1,"targets":[664],"args":{"any":[4,2]},"tags":["apply"]},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<8294,8297>) -> (8295 :: E) 8297){\n    (std/core/hnd/protect<(a, b, c),a,(e :: E),a>(x, (fn<(e :: E)>(@pat-x805_23: (8291, 8292, 8293), k@0: (8294) -> (8295 :: E) 8297){\n        (match (@pat-x805_23) {\n          ((@skip std/core/types/Tuple3((x1: 8291) : a, (x2: 8292) : a, (x3: 8293) : a) : (a, b, c) ) as @pat: (8291, 8292, 8293))\n             -> op(x1, x2, x3, k@0);\n        });\n      }), k));\n  }))","traced":{"any":[]}},
{"op":"Jump","target":571}]},
{"label":"666([method_apply@[mcore:[#1077]#1808]#1813])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Const","format":"string","out":4,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"Swap","a":3,"b":4},
{"op":"Jump","target":665}]},
{"label":"667([mcore:[#1077]#1808])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Clause1<(a, b, c),a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(8295 :: E),8297>, @_wildcard-x681_16: (hnd/ev :: ((E, V) -> V) -> V)<(8296 :: (E, V) -> V)>, x: (8291, 8292, 8293)){\n  (std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<8294,8297>) -> (8295 :: E) 8297){\n      (std/core/hnd/protect<(a, b, c),a,(e :: E),a>(x, (fn<(e :: E)>(@pat-x805_23: (8291, 8292, 8293), k@0: (8294) -> (8295 :: E) 8297){\n          (match (@pat-x805_23) {\n            ((@skip std/core/types/Tuple3((x1: 8291) : a, (x2: 8292) : a, (x3: 8293) : a) : (a, b, c) ) as @pat: (8291, 8292, 8293))\n               -> op(x1, x2, x3, k@0);\n          });\n        }), k));\n    })));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[666],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Clause1<(a, b, c),a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(8295 :: E),8297>, @_wildcard-x681_16: (hnd/ev :: ((E, V) -> V) -> V)<(8296 :: (E, V) -> V)>, x: (8291, 8292, 8293)){\n  (std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<8294,8297>) -> (8295 :: E) 8297){\n      (std/core/hnd/protect<(a, b, c),a,(e :: E),a>(x, (fn<(e :: E)>(@pat-x805_23: (8291, 8292, 8293), k@0: (8294) -> (8295 :: E) 8297){\n          (match (@pat-x805_23) {\n            ((@skip std/core/types/Tuple3((x1: 8291) : a, (x2: 8292) : a, (x3: 8293) : a) : (a, b, c) ) as @pat: (8291, 8292, 8293))\n               -> op(x1, x2, x3, k@0);\n          });\n        }), k));\n    })));\n}))","traced":{"any":[]}},
{"op":"Jump","target":1057}]},
{"label":"668([match_def@[mcore:[#1089]#1819]#1820])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"669([k@[#1821]#1823])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"670([#1821])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"@pat-x829_23\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple4\\\"\"}}),(x1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"85\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x1: 8379) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"85\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"86\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x2: 8380) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"86\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x3,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"87\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x3: 8381) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"87\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x4,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"field4\\\"88\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x4: 8382) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"field4\\\\\\\"88\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: op(x1, x2, x3, x4, k@0)","traced":{"any":[]}},
{"op":"Swap","a":3,"b":5},
{"op":"Swap","a":1,"b":5},
{"op":"Swap","a":2,"b":4},
{"op":"Swap","a":0,"b":4},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op(x1, x2, x3, x4, k@0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"@pat-x829_23\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple4\\\"\"}}),(x1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"85\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x1: 8379) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"85\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"86\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x2: 8380) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"86\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x3,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"87\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x3: 8381) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"87\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x4,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"field4\\\"88\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x4: 8382) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"field4\\\\\\\"88\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Invoke","receiver":5,"tag":"apply","args":{"any":[0,1,2,3,4]}}]},
{"label":"671([mcore:[#1089]#1819])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@pat-x829_23\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple4\\\"\"}}: \"std/core/types/tuple4\".\"std/core/types/Tuple4\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"85\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"86\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"87\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"field4\\\"88\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@pat-x829_23\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple4\\\"\"}}: \"std/core/types/tuple4\".\"std/core/types/Tuple4\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"85\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"86\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"87\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"field4\\\"88\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/tuple4","scrutinee":2,"clauses":[{"tag":"std/core/types/Tuple4","target":670,"args":{"any":[2,3,4,5]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3060]","target":668,"args":{"any":[]}}}]},
{"label":"672([method_apply@[mcore:[#1092]#1825]#1829])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Jump","target":671}]},
{"label":"673([mcore:[#1092]#1825])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/protect<(a, b, c, d),a,(e :: E),a>(x, (fn<(e :: E)>(@pat-x829_23: (8379, 8380, 8381, 8382), k@0: (8383) -> (8384 :: E) 8386){\n    (match (@pat-x829_23) {\n      ((@skip std/core/types/Tuple4((x1: 8379) : a, (x2: 8380) : a, (x3: 8381) : a, (x4: 8382) : a) : (a, b, c, d) ) as @pat: (8379, 8380, 8381, 8382))\n         -> op(x1, x2, x3, x4, k@0);\n    });\n  }), k)","traced":{"any":[]}},
{"op":"New","out":1,"targets":[672],"args":{"any":[1]},"tags":["apply"]},
{"op":"Swap","a":2,"b":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/protect<(a, b, c, d),a,(e :: E),a>(x, (fn<(e :: E)>(@pat-x829_23: (8379, 8380, 8381, 8382), k@0: (8383) -> (8384 :: E) 8386){\n    (match (@pat-x829_23) {\n      ((@skip std/core/types/Tuple4((x1: 8379) : a, (x2: 8380) : a, (x3: 8381) : a, (x4: 8382) : a) : (a, b, c, d) ) as @pat: (8379, 8380, 8381, 8382))\n         -> op(x1, x2, x3, x4, k@0);\n    });\n  }), k)","traced":{"any":[]}},
{"op":"Jump","target":199}]},
{"label":"674([method_apply@[mcore:[#1094]#1832]#1835])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Jump","target":673}]},
{"label":"675([mcore:[#1094]#1832])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<8383,8386>) -> (8384 :: E) 8386){\n    (std/core/hnd/protect<(a, b, c, d),a,(e :: E),a>(x, (fn<(e :: E)>(@pat-x829_23: (8379, 8380, 8381, 8382), k@0: (8383) -> (8384 :: E) 8386){\n        (match (@pat-x829_23) {\n          ((@skip std/core/types/Tuple4((x1: 8379) : a, (x2: 8380) : a, (x3: 8381) : a, (x4: 8382) : a) : (a, b, c, d) ) as @pat: (8379, 8380, 8381, 8382))\n             -> op(x1, x2, x3, x4, k@0);\n        });\n      }), k));\n  }))","traced":{"any":[]}},
{"op":"New","out":1,"targets":[674],"args":{"any":[4,2]},"tags":["apply"]},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<8383,8386>) -> (8384 :: E) 8386){\n    (std/core/hnd/protect<(a, b, c, d),a,(e :: E),a>(x, (fn<(e :: E)>(@pat-x829_23: (8379, 8380, 8381, 8382), k@0: (8383) -> (8384 :: E) 8386){\n        (match (@pat-x829_23) {\n          ((@skip std/core/types/Tuple4((x1: 8379) : a, (x2: 8380) : a, (x3: 8381) : a, (x4: 8382) : a) : (a, b, c, d) ) as @pat: (8379, 8380, 8381, 8382))\n             -> op(x1, x2, x3, x4, k@0);\n        });\n      }), k));\n  }))","traced":{"any":[]}},
{"op":"Jump","target":571}]},
{"label":"676([method_apply@[mcore:[#1096]#1841]#1846])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Const","format":"string","out":4,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"Swap","a":3,"b":4},
{"op":"Jump","target":675}]},
{"label":"677([mcore:[#1096]#1841])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Clause1<(a, b, c, d),a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(8384 :: E),8386>, @_wildcard-x681_16: (hnd/ev :: ((E, V) -> V) -> V)<(8385 :: (E, V) -> V)>, x: (8379, 8380, 8381, 8382)){\n  (std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<8383,8386>) -> (8384 :: E) 8386){\n      (std/core/hnd/protect<(a, b, c, d),a,(e :: E),a>(x, (fn<(e :: E)>(@pat-x829_23: (8379, 8380, 8381, 8382), k@0: (8383) -> (8384 :: E) 8386){\n          (match (@pat-x829_23) {\n            ((@skip std/core/types/Tuple4((x1: 8379) : a, (x2: 8380) : a, (x3: 8381) : a, (x4: 8382) : a) : (a, b, c, d) ) as @pat: (8379, 8380, 8381, 8382))\n               -> op(x1, x2, x3, x4, k@0);\n          });\n        }), k));\n    })));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[676],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Clause1<(a, b, c, d),a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(8384 :: E),8386>, @_wildcard-x681_16: (hnd/ev :: ((E, V) -> V) -> V)<(8385 :: (E, V) -> V)>, x: (8379, 8380, 8381, 8382)){\n  (std/core/hnd/yield-to<a,(e :: E),a>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<8383,8386>) -> (8384 :: E) 8386){\n      (std/core/hnd/protect<(a, b, c, d),a,(e :: E),a>(x, (fn<(e :: E)>(@pat-x829_23: (8379, 8380, 8381, 8382), k@0: (8383) -> (8384 :: E) 8386){\n          (match (@pat-x829_23) {\n            ((@skip std/core/types/Tuple4((x1: 8379) : a, (x2: 8380) : a, (x3: 8381) : a, (x4: 8382) : a) : (a, b, c, d) ) as @pat: (8379, 8380, 8381, 8382))\n               -> op(x1, x2, x3, x4, k@0);\n          });\n        }), k));\n    })));\n}))","traced":{"any":[]}},
{"op":"Jump","target":1057}]},
{"label":"678([mcore:[#1101]#1852])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: op()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op()","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[]}}]},
{"label":"679([method_apply@[mcore:[#1103]#1853]#1856])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Jump","target":678}]},
{"label":"680([mcore:[#1103]#1853])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-to-final<a,(e :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x743_43: ((hnd/resume-result :: (V, V) -> V)<8458,8461>) -> (8459 :: E) 8461){\n    (op());\n  }))","traced":{"any":[]}},
{"op":"New","out":1,"targets":[679],"args":{"any":[2]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-to-final<a,(e :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x743_43: ((hnd/resume-result :: (V, V) -> V)<8458,8461>) -> (8459 :: E) 8461){\n    (op());\n  }))","traced":{"any":[]}},
{"op":"Jump","target":216}]},
{"label":"681([method_apply@[mcore:[#1105]#1859]#1863])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Jump","target":680}]},
{"label":"682([mcore:[#1105]#1859])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Clause0<a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(8459 :: E),8461>, @_wildcard-x743_16: (hnd/ev :: ((E, V) -> V) -> V)<(8460 :: (E, V) -> V)>){\n  (std/core/hnd/yield-to-final<a,(e :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x743_43: ((hnd/resume-result :: (V, V) -> V)<8458,8461>) -> (8459 :: E) 8461){\n      (op());\n    })));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[681],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Clause0<a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(8459 :: E),8461>, @_wildcard-x743_16: (hnd/ev :: ((E, V) -> V) -> V)<(8460 :: (E, V) -> V)>){\n  (std/core/hnd/yield-to-final<a,(e :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x743_43: ((hnd/resume-result :: (V, V) -> V)<8458,8461>) -> (8459 :: E) 8461){\n      (op());\n    })));\n}))","traced":{"any":[]}},
{"op":"Jump","target":1056}]},
{"label":"683([mcore:[#1111]#1866])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genExpr: op(x)","traced":{"any":[]}},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op(x)","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"684([method_apply@[mcore:[#1113]#1867]#1870])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Jump","target":683}]},
{"label":"685([mcore:[#1113]#1867])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-to-final<a,(e :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x696_45: ((hnd/resume-result :: (V, V) -> V)<8529,8532>) -> (8530 :: E) 8532){\n    (op(x));\n  }))","traced":{"any":[]}},
{"op":"New","out":1,"targets":[684],"args":{"any":[3,2]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-to-final<a,(e :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x696_45: ((hnd/resume-result :: (V, V) -> V)<8529,8532>) -> (8530 :: E) 8532){\n    (op(x));\n  }))","traced":{"any":[]}},
{"op":"Jump","target":216}]},
{"label":"686([method_apply@[mcore:[#1115]#1873]#1878])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Jump","target":685}]},
{"label":"687([mcore:[#1115]#1873])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Clause1<a,a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(8530 :: E),8532>, @_wildcard-x696_16: (hnd/ev :: ((E, V) -> V) -> V)<(8531 :: (E, V) -> V)>, x: 8528){\n  (std/core/hnd/yield-to-final<a,(e :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x696_45: ((hnd/resume-result :: (V, V) -> V)<8529,8532>) -> (8530 :: E) 8532){\n      (op(x));\n    })));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[686],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Clause1<a,a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(8530 :: E),8532>, @_wildcard-x696_16: (hnd/ev :: ((E, V) -> V) -> V)<(8531 :: (E, V) -> V)>, x: 8528){\n  (std/core/hnd/yield-to-final<a,(e :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x696_45: ((hnd/resume-result :: (V, V) -> V)<8529,8532>) -> (8530 :: E) 8532){\n      (op(x));\n    })));\n}))","traced":{"any":[]}},
{"op":"Jump","target":1057}]},
{"label":"688([mcore:[#1122]#1881])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: op(x1, x2)","traced":{"any":[]}},
{"op":"Copy","from":2,"to":0},
{"op":"Copy","from":1,"to":2},
{"op":"Copy","from":3,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op(x1, x2)","traced":{"any":[]}},
{"op":"Invoke","receiver":2,"tag":"apply","args":{"any":[0,1]}}]},
{"label":"689([method_apply@[mcore:[#1124]#1882]#1885])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Jump","target":688}]},
{"label":"690([mcore:[#1124]#1882])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-to-final<a,(e :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x787_49: ((hnd/resume-result :: (V, V) -> V)<8611,8614>) -> (8612 :: E) 8614){\n    (op(x1, x2));\n  }))","traced":{"any":[]}},
{"op":"New","out":1,"targets":[689],"args":{"any":[4,2,3]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-to-final<a,(e :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x787_49: ((hnd/resume-result :: (V, V) -> V)<8611,8614>) -> (8612 :: E) 8614){\n    (op(x1, x2));\n  }))","traced":{"any":[]}},
{"op":"Jump","target":216}]},
{"label":"691([method_apply@[mcore:[#1126]#1888]#1894])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Jump","target":690}]},
{"label":"692([mcore:[#1126]#1888])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Clause2<a,a,a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(8612 :: E),8614>, @_wildcard-x787_16: (hnd/ev :: ((E, V) -> V) -> V)<(8613 :: (E, V) -> V)>, x1: 8609, x2: 8610){\n  (std/core/hnd/yield-to-final<a,(e :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x787_49: ((hnd/resume-result :: (V, V) -> V)<8611,8614>) -> (8612 :: E) 8614){\n      (op(x1, x2));\n    })));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[691],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Clause2<a,a,a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(8612 :: E),8614>, @_wildcard-x787_16: (hnd/ev :: ((E, V) -> V) -> V)<(8613 :: (E, V) -> V)>, x1: 8609, x2: 8610){\n  (std/core/hnd/yield-to-final<a,(e :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x787_49: ((hnd/resume-result :: (V, V) -> V)<8611,8614>) -> (8612 :: E) 8614){\n      (op(x1, x2));\n    })));\n}))","traced":{"any":[]}},
{"op":"Jump","target":1058}]},
{"label":"693([match_def@[mcore:[#1134]#1897]#1898])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"694([k@[#1899]#1901])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"695([#1899])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}),(x1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"89\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x1: 8687) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"89\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"90\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x2: 8688) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"90\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x3,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"91\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x3: 8689) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"91\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: op(x1, x2, x3)","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op(x1, x2, x3)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}),(x1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"89\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x1: 8687) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"89\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"90\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x2: 8688) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"90\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x3,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"91\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x3: 8689) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"91\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Invoke","receiver":3,"tag":"apply","args":{"any":[0,1,2]}}]},
{"label":"696([mcore:[#1134]#1897])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}: \"std/core/types/tuple3\".\"std/core/types/Tuple3\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"89\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"90\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"91\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}: \"std/core/types/tuple3\".\"std/core/types/Tuple3\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"89\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"90\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"91\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/tuple3","scrutinee":2,"clauses":[{"tag":"std/core/types/Tuple3","target":695,"args":{"any":[1,2,3]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3061]","target":693,"args":{"any":[]}}}]},
{"label":"697([method_apply@[mcore:[#1136]#1903]#1906])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Jump","target":696}]},
{"label":"698([mcore:[#1136]#1903])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-to-final<a,(e :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x696_45: ((hnd/resume-result :: (V, V) -> V)<8690,8693>) -> (8691 :: E) 8693){\n    (match (x) {\n      ((@skip std/core/types/Tuple3((x1: 8687) : a, (x2: 8688) : a, (x3: 8689) : a) : (a, b, c) ) as @pat: (8687, 8688, 8689))\n         -> op(x1, x2, x3);\n    });\n  }))","traced":{"any":[]}},
{"op":"New","out":1,"targets":[697],"args":{"any":[3,2]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-to-final<a,(e :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x696_45: ((hnd/resume-result :: (V, V) -> V)<8690,8693>) -> (8691 :: E) 8693){\n    (match (x) {\n      ((@skip std/core/types/Tuple3((x1: 8687) : a, (x2: 8688) : a, (x3: 8689) : a) : (a, b, c) ) as @pat: (8687, 8688, 8689))\n         -> op(x1, x2, x3);\n    });\n  }))","traced":{"any":[]}},
{"op":"Jump","target":216}]},
{"label":"699([method_apply@[mcore:[#1138]#1909]#1914])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Jump","target":698}]},
{"label":"700([mcore:[#1138]#1909])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Clause1<(a, b, c),a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(8691 :: E),8693>, @_wildcard-x696_16: (hnd/ev :: ((E, V) -> V) -> V)<(8692 :: (E, V) -> V)>, x: (8687, 8688, 8689)){\n  (std/core/hnd/yield-to-final<a,(e :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x696_45: ((hnd/resume-result :: (V, V) -> V)<8690,8693>) -> (8691 :: E) 8693){\n      (match (x) {\n        ((@skip std/core/types/Tuple3((x1: 8687) : a, (x2: 8688) : a, (x3: 8689) : a) : (a, b, c) ) as @pat: (8687, 8688, 8689))\n           -> op(x1, x2, x3);\n      });\n    })));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[699],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Clause1<(a, b, c),a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(8691 :: E),8693>, @_wildcard-x696_16: (hnd/ev :: ((E, V) -> V) -> V)<(8692 :: (E, V) -> V)>, x: (8687, 8688, 8689)){\n  (std/core/hnd/yield-to-final<a,(e :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x696_45: ((hnd/resume-result :: (V, V) -> V)<8690,8693>) -> (8691 :: E) 8693){\n      (match (x) {\n        ((@skip std/core/types/Tuple3((x1: 8687) : a, (x2: 8688) : a, (x3: 8689) : a) : (a, b, c) ) as @pat: (8687, 8688, 8689))\n           -> op(x1, x2, x3);\n      });\n    })));\n}))","traced":{"any":[]}},
{"op":"Jump","target":1057}]},
{"label":"701([match_def@[mcore:[#1147]#1917]#1918])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"702([k@[#1919]#1921])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"703([#1919])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple4\\\"\"}}),(x1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"92\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x1: 8774) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"92\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"93\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x2: 8775) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"93\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x3,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"94\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x3: 8776) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"94\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x4,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"field4\\\"95\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x4: 8777) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"field4\\\\\\\"95\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: op(x1, x2, x3, x4)","traced":{"any":[]}},
{"op":"Swap","a":3,"b":4},
{"op":"Swap","a":2,"b":4},
{"op":"Swap","a":1,"b":4},
{"op":"Swap","a":0,"b":4},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op(x1, x2, x3, x4)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple4\\\"\"}}),(x1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"92\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x1: 8774) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"92\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"93\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x2: 8775) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"93\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x3,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"94\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x3: 8776) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"94\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x4,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"field4\\\"95\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x4: 8777) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"field4\\\\\\\"95\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Invoke","receiver":4,"tag":"apply","args":{"any":[0,1,2,3]}}]},
{"label":"704([mcore:[#1147]#1917])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple4\\\"\"}}: \"std/core/types/tuple4\".\"std/core/types/Tuple4\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"92\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"93\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"94\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"field4\\\"95\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple4\\\"\"}}: \"std/core/types/tuple4\".\"std/core/types/Tuple4\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"92\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"93\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"94\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"field4\\\"95\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/tuple4","scrutinee":2,"clauses":[{"tag":"std/core/types/Tuple4","target":703,"args":{"any":[1,2,3,4]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3062]","target":701,"args":{"any":[]}}}]},
{"label":"705([method_apply@[mcore:[#1149]#1923]#1926])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Jump","target":704}]},
{"label":"706([mcore:[#1149]#1923])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-to-final<a,(e :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x696_45: ((hnd/resume-result :: (V, V) -> V)<8778,8781>) -> (8779 :: E) 8781){\n    (match (x) {\n      ((@skip std/core/types/Tuple4((x1: 8774) : a, (x2: 8775) : a, (x3: 8776) : a, (x4: 8777) : a) : (a, b, c, d) ) as @pat: (8774, 8775, 8776, 8777))\n         -> op(x1, x2, x3, x4);\n    });\n  }))","traced":{"any":[]}},
{"op":"New","out":1,"targets":[705],"args":{"any":[3,2]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-to-final<a,(e :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x696_45: ((hnd/resume-result :: (V, V) -> V)<8778,8781>) -> (8779 :: E) 8781){\n    (match (x) {\n      ((@skip std/core/types/Tuple4((x1: 8774) : a, (x2: 8775) : a, (x3: 8776) : a, (x4: 8777) : a) : (a, b, c, d) ) as @pat: (8774, 8775, 8776, 8777))\n         -> op(x1, x2, x3, x4);\n    });\n  }))","traced":{"any":[]}},
{"op":"Jump","target":216}]},
{"label":"707([method_apply@[mcore:[#1151]#1929]#1934])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Jump","target":706}]},
{"label":"708([mcore:[#1151]#1929])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Clause1<(a, b, c, d),a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(8779 :: E),8781>, @_wildcard-x696_16: (hnd/ev :: ((E, V) -> V) -> V)<(8780 :: (E, V) -> V)>, x: (8774, 8775, 8776, 8777)){\n  (std/core/hnd/yield-to-final<a,(e :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x696_45: ((hnd/resume-result :: (V, V) -> V)<8778,8781>) -> (8779 :: E) 8781){\n      (match (x) {\n        ((@skip std/core/types/Tuple4((x1: 8774) : a, (x2: 8775) : a, (x3: 8776) : a, (x4: 8777) : a) : (a, b, c, d) ) as @pat: (8774, 8775, 8776, 8777))\n           -> op(x1, x2, x3, x4);\n      });\n    })));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[707],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Clause1<(a, b, c, d),a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(8779 :: E),8781>, @_wildcard-x696_16: (hnd/ev :: ((E, V) -> V) -> V)<(8780 :: (E, V) -> V)>, x: (8774, 8775, 8776, 8777)){\n  (std/core/hnd/yield-to-final<a,(e :: E),(e :: E),a>(m, (fn<(e :: E)>(@_wildcard-x696_45: ((hnd/resume-result :: (V, V) -> V)<8778,8781>) -> (8779 :: E) 8781){\n      (match (x) {\n        ((@skip std/core/types/Tuple4((x1: 8774) : a, (x2: 8775) : a, (x3: 8776) : a, (x4: 8777) : a) : (a, b, c, d) ) as @pat: (8774, 8775, 8776, 8777))\n           -> op(x1, x2, x3, x4);\n      });\n    })));\n}))","traced":{"any":[]}},
{"op":"Jump","target":1057}]},
{"label":"709([match_def@[mcore:[#1157]#1937]#1938])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"710([k@[#1939]#1941])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"711([#1939])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}),(x1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"96\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x1: 8863) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"96\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"97\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x2: 8864) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"97\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x3,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"98\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x3: 8865) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"98\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: op(x1, x2, x3)","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op(x1, x2, x3)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}),(x1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"96\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x1: 8863) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"96\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"97\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x2: 8864) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"97\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x3,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"98\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x3: 8865) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"98\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Invoke","receiver":3,"tag":"apply","args":{"any":[0,1,2]}}]},
{"label":"712([mcore:[#1157]#1937])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}: \"std/core/types/tuple3\".\"std/core/types/Tuple3\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"96\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"97\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"98\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}: \"std/core/types/tuple3\".\"std/core/types/Tuple3\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"96\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"97\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"98\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/tuple3","scrutinee":2,"clauses":[{"tag":"std/core/types/Tuple3","target":711,"args":{"any":[1,2,3]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3063]","target":709,"args":{"any":[]}}}]},
{"label":"713([method_apply@[mcore:[#1159]#1943]#1948])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Jump","target":712}]},
{"label":"714([mcore:[#1159]#1943])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Clause1<(a, b, c),a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(@_wildcard-x691_14: (hnd/marker :: (E, V) -> V)<(8860 :: E),8861>, @_wildcard-x691_17: (hnd/ev :: ((E, V) -> V) -> V)<(8862 :: (E, V) -> V)>, x: (8863, 8864, 8865)){\n  (match (x) {\n    ((@skip std/core/types/Tuple3((x1: 8863) : a, (x2: 8864) : a, (x3: 8865) : a) : (a, b, c) ) as @pat: (8863, 8864, 8865))\n       -> op(x1, x2, x3);\n  });\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[713],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Clause1<(a, b, c),a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(@_wildcard-x691_14: (hnd/marker :: (E, V) -> V)<(8860 :: E),8861>, @_wildcard-x691_17: (hnd/ev :: ((E, V) -> V) -> V)<(8862 :: (E, V) -> V)>, x: (8863, 8864, 8865)){\n  (match (x) {\n    ((@skip std/core/types/Tuple3((x1: 8863) : a, (x2: 8864) : a, (x3: 8865) : a) : (a, b, c) ) as @pat: (8863, 8864, 8865))\n       -> op(x1, x2, x3);\n  });\n}))","traced":{"any":[]}},
{"op":"Jump","target":1057}]},
{"label":"715([match_def@[mcore:[#1166]#1951]#1952])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"716([k@[#1953]#1955])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"717([#1953])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple4\\\"\"}}),(x1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"99\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x1: 8950) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"99\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"100\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x2: 8951) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"100\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x3,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"101\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x3: 8952) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"101\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x4,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"field4\\\"102\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x4: 8953) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"field4\\\\\\\"102\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: op(x1, x2, x3, x4)","traced":{"any":[]}},
{"op":"Swap","a":3,"b":4},
{"op":"Swap","a":2,"b":4},
{"op":"Swap","a":1,"b":4},
{"op":"Swap","a":0,"b":4},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op(x1, x2, x3, x4)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple4\\\"\"}}),(x1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"99\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x1: 8950) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"99\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"100\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x2: 8951) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"100\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x3,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"101\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x3: 8952) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"101\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x4,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"field4\\\"102\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x4: 8953) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"field4\\\\\\\"102\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Invoke","receiver":4,"tag":"apply","args":{"any":[0,1,2,3]}}]},
{"label":"718([mcore:[#1166]#1951])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple4\\\"\"}}: \"std/core/types/tuple4\".\"std/core/types/Tuple4\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"99\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"100\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"101\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"field4\\\"102\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"x\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple4\\\"\"}}: \"std/core/types/tuple4\".\"std/core/types/Tuple4\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"99\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"100\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"101\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"field4\\\"102\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/tuple4","scrutinee":2,"clauses":[{"tag":"std/core/types/Tuple4","target":717,"args":{"any":[1,2,3,4]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3064]","target":715,"args":{"any":[]}}}]},
{"label":"719([method_apply@[mcore:[#1168]#1957]#1962])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Jump","target":718}]},
{"label":"720([mcore:[#1168]#1957])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Clause1<(a, b, c, d),a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(@_wildcard-x691_14: (hnd/marker :: (E, V) -> V)<(8947 :: E),8948>, @_wildcard-x691_17: (hnd/ev :: ((E, V) -> V) -> V)<(8949 :: (E, V) -> V)>, x: (8950, 8951, 8952, 8953)){\n  (match (x) {\n    ((@skip std/core/types/Tuple4((x1: 8950) : a, (x2: 8951) : a, (x3: 8952) : a, (x4: 8953) : a) : (a, b, c, d) ) as @pat: (8950, 8951, 8952, 8953))\n       -> op(x1, x2, x3, x4);\n  });\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[719],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Clause1<(a, b, c, d),a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(@_wildcard-x691_14: (hnd/marker :: (E, V) -> V)<(8947 :: E),8948>, @_wildcard-x691_17: (hnd/ev :: ((E, V) -> V) -> V)<(8949 :: (E, V) -> V)>, x: (8950, 8951, 8952, 8953)){\n  (match (x) {\n    ((@skip std/core/types/Tuple4((x1: 8950) : a, (x2: 8951) : a, (x3: 8952) : a, (x4: 8953) : a) : (a, b, c, d) ) as @pat: (8950, 8951, 8952, 8953))\n       -> op(x1, x2, x3, x4);\n  });\n}))","traced":{"any":[]}},
{"op":"Jump","target":1057}]},
{"label":"721([mcore:[#1169]#1965])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"swapCurrentEvv"}]},
{"label":"722([mcore:[#1177]#1970])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/under1x<a,a,(e :: E),(a :: (E, V) -> V)>(ev, cont, res)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/under1x<a,a,(e :: E),(a :: (E, V) -> V)>(ev, cont, res)","traced":{"any":[]}},
{"op":"Jump","target":736}]},
{"label":"723([mcore:[#1179]#1975])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"724([#1989])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Jump","target":722}]},
{"label":"725([k@[switch case for Bool(true)#1985]#1996])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"726([switch case for Bool(true)#1985])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@3,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (9064 :: E) 9063, res: a){\n  std/core/hnd/under1x<a,b,(e :: E),(b :: (E, V) -> V)>(ev, cont, res);\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[724],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (9064 :: E) 9063, res: a){\n  std/core/hnd/under1x<a,b,(e :: E),(b :: (E, V) -> V)>(ev, cont, res);\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@3,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":212}]},
{"label":"727([k@[switch case for Bool(false)#2000]#2005])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: y","traced":{"any":[]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: y","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"728([switch case for Bool(false)#2000])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0@0,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: val _@0 : ()\n      = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0);\ny","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_@0\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Push","target":727,"args":{"any":[1]}},
{"op":"Copy","from":2,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_@0\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: val _@0 : ()\n      = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0);\ny","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0@0,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":723}]},
{"label":"729([switch default case#2007])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"730([switch default case#1998])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Switch","arg":2,"values":[false],"targets":[728],"default":729}]},
{"label":"731([k@[k@[mcore:[#1180]#1974]#1981]#1983])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"int","out":3,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":3,"values":[true],"targets":[726],"default":730}]},
{"label":"732([k@[mcore:[#1180]#1974]#1981])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: op(x)","traced":{"any":[]}},
{"op":"Push","target":731,"args":{"any":[1,0]}},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op(x)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":2,"tag":"apply","args":{"any":[0]}}]},
{"label":"733([match_def@[mcore:[#1180]#1974]#2008])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"734([k@[#2009]#2014])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"735([#2009])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<9065>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"103\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/marker<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"104\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2: 9065<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"105\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(w,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (w: hnd/evv<4237>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"106\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap<(total :: E),(e :: E),(_e :: E)>(w)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap<(total :: E),(e :: E),(_e :: E)>(w)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<9065>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"103\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/marker<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"104\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2: 9065<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"105\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(w,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (w: hnd/evv<4237>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"106\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Jump","target":721}]},
{"label":"736([mcore:[#1180]#1974])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (ev) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0: (hnd/htag :: ((E, V) -> V) -> V)<(9065 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@1: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@2: (9065 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (w: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat: ((hnd/ev :: ((E, V) -> V) -> V)<(9065 :: (E, V) -> V)>))\n     -> std/core/hnd/evv-swap<(total :: E),(e :: E),(_e1 :: E)>(w);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Push","target":732,"args":{"any":[0,1,2]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (ev) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0: (hnd/htag :: ((E, V) -> V) -> V)<(9065 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@1: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@2: (9065 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (w: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat: ((hnd/ev :: ((E, V) -> V) -> V)<(9065 :: (E, V) -> V)>))\n     -> std/core/hnd/evv-swap<(total :: E),(e :: E),(_e1 :: E)>(w);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/ev","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Ev","target":735,"args":{"any":[0,1,2,3]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3065]","target":733,"args":{"any":[]}}}]},
{"label":"737([mcore:[#1181]#2016])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"swapCurrentEvv"}]},
{"label":"738([mcore:[#1189]#2021])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/under1x<a,a,(e :: E),(a :: (E, V) -> V)>(ev, cont, res)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/under1x<a,a,(e :: E),(a :: (E, V) -> V)>(ev, cont, res)","traced":{"any":[]}},
{"op":"Jump","target":736}]},
{"label":"739([mcore:[#1191]#2025])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"740([#2040])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Jump","target":738}]},
{"label":"741([k@[switch case for Bool(true)#2036]#2047])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"742([switch case for Bool(true)#2036])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@3,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (9162 :: E) 9161, res: a){\n  std/core/hnd/under1x<a,b,(e :: E),(b :: (E, V) -> V)>(ev, cont, res);\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[740],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (9162 :: E) 9161, res: a){\n  std/core/hnd/under1x<a,b,(e :: E),(b :: (E, V) -> V)>(ev, cont, res);\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@3,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":212}]},
{"label":"743([k@[switch case for Bool(false)#2051]#2056])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: y","traced":{"any":[]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: y","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"744([switch case for Bool(false)#2051])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0@0,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: val _@0 : ()\n      = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0);\ny","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_@0\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Push","target":743,"args":{"any":[1]}},
{"op":"Copy","from":2,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_@0\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: val _@0 : ()\n      = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0);\ny","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0@0,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":739}]},
{"label":"745([switch default case#2058])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"746([switch default case#2049])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Switch","arg":2,"values":[false],"targets":[744],"default":745}]},
{"label":"747([k@[k@[mcore:[#1192]#2030]#2032]#2034])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"int","out":3,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":3,"values":[true],"targets":[742],"default":746}]},
{"label":"748([k@[mcore:[#1192]#2030]#2032])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: op(x)","traced":{"any":[]}},
{"op":"Push","target":747,"args":{"any":[1,0]}},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op(x)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":2,"tag":"apply","args":{"any":[0]}}]},
{"label":"749([match_def@[mcore:[#1192]#2030]#2059])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"750([k@[#2060]#2065])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"751([#2060])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<9163>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"103\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/marker<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"104\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2: 9163<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"105\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(w,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (w: hnd/evv<4237>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"106\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap<(total :: E),(e :: E),(_e :: E)>(w)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap<(total :: E),(e :: E),(_e :: E)>(w)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<9163>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"103\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/marker<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"104\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2: 9163<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"105\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(w,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (w: hnd/evv<4237>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"106\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Jump","target":737}]},
{"label":"752([mcore:[#1192]#2030])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (ev) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0: (hnd/htag :: ((E, V) -> V) -> V)<(9163 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@1: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@2: (9163 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (w: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat: ((hnd/ev :: ((E, V) -> V) -> V)<(9163 :: (E, V) -> V)>))\n     -> std/core/hnd/evv-swap<(total :: E),(e :: E),(_e1 :: E)>(w);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Push","target":748,"args":{"any":[0,1,2]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (ev) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0: (hnd/htag :: ((E, V) -> V) -> V)<(9163 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@1: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@2: (9163 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (w: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat: ((hnd/ev :: ((E, V) -> V) -> V)<(9163 :: (E, V) -> V)>))\n     -> std/core/hnd/evv-swap<(total :: E),(e :: E),(_e1 :: E)>(w);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/ev","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Ev","target":751,"args":{"any":[0,1,2,3]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3066]","target":749,"args":{"any":[]}}}]},
{"label":"753([mcore:[#1193]#2067])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"swapCurrentEvv"}]},
{"label":"754([mcore:[#1195]#2072])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"755([mcore:[#1197]#2077])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"swapCurrentEvv"}]},
{"label":"756([mcore:[#1205]#2082])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/under1x<a,a,(e :: E),(a :: (E, V) -> V)>(ev, cont@0, res@0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/under1x<a,a,(e :: E),(a :: (E, V) -> V)>(ev, cont@0, res@0)","traced":{"any":[]}},
{"op":"Jump","target":736}]},
{"label":"757([mcore:[#1207]#2086])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"758([#2101])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Jump","target":756}]},
{"label":"759([k@[switch case for Bool(true)#2097]#2108])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"760([switch case for Bool(true)#2097])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@5,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont@0: (a) -> (9249 :: E) 9248, res@0: a){\n  std/core/hnd/under1x<a,b,(e :: E),(b :: (E, V) -> V)>(ev, cont@0, res@0);\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[758],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont@0: (a) -> (9249 :: E) 9248, res@0: a){\n  std/core/hnd/under1x<a,b,(e :: E),(b :: (E, V) -> V)>(ev, cont@0, res@0);\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@5,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":212}]},
{"label":"761([k@[switch case for Bool(false)#2112]#2117])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: y@0","traced":{"any":[]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: y@0","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"762([switch case for Bool(false)#2112])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0@1,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: val _@0 : ()\n      = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0);\ny@0","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_@0\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Push","target":761,"args":{"any":[1]}},
{"op":"Copy","from":2,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_@0\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: val _@0 : ()\n      = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0);\ny@0","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0@1,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":757}]},
{"label":"763([switch default case#2119])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"764([switch default case#2110])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Switch","arg":2,"values":[false],"targets":[762],"default":763}]},
{"label":"765([k@[k@[mcore:[#1208]#2091]#2093]#2095])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"int","out":3,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":3,"values":[true],"targets":[760],"default":764}]},
{"label":"766([k@[mcore:[#1208]#2091]#2093])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"y@0\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: cont(res)","traced":{"any":[]}},
{"op":"Push","target":765,"args":{"any":[2,0]}},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: cont(res)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"y@0\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"767([match_def@[mcore:[#1208]#2091]#2120])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"768([k@[#2121]#2126])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"769([#2121])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@4,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0@0: hnd/htag<9250>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"103\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@1@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@1@0: hnd/marker<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"104\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@2@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2@0: 9250<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"105\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(w@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (w@0: hnd/evv<4237>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"106\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap<(total :: E),(e :: E),(_e :: E)>(w@0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap<(total :: E),(e :: E),(_e :: E)>(w@0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@4,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0@0: hnd/htag<9250>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"103\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@1@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@1@0: hnd/marker<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"104\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@2@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2@0: 9250<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"105\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(w@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (w@0: hnd/evv<4237>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"106\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Jump","target":755}]},
{"label":"770([mcore:[#1208]#2091])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w0@0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (ev) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0@0: (hnd/htag :: ((E, V) -> V) -> V)<(9250 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@1@0: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@2@0: (9250 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (w@0: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat@4: ((hnd/ev :: ((E, V) -> V) -> V)<(9250 :: (E, V) -> V)>))\n     -> std/core/hnd/evv-swap<(total :: E),(e :: E),(_e1 :: E)>(w@0);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Push","target":766,"args":{"any":[0,2,1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (ev) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0@0: (hnd/htag :: ((E, V) -> V) -> V)<(9250 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@1@0: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@2@0: (9250 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (w@0: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat@4: ((hnd/ev :: ((E, V) -> V) -> V)<(9250 :: (E, V) -> V)>))\n     -> std/core/hnd/evv-swap<(total :: E),(e :: E),(_e1 :: E)>(w@0);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w0@0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/ev","scrutinee":2,"clauses":[{"tag":"std/core/hnd/Ev","target":769,"args":{"any":[0,1,2,3]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3067]","target":767,"args":{"any":[]}}}]},
{"label":"771([#2143])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Jump","target":770}]},
{"label":"772([k@[switch case for Bool(true)#2139]#2150])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"773([switch case for Bool(true)#2139])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@3,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (9249 :: E) 9248, res: a){\n  val w0@0 : (hnd/evv :: E -> V)<(_e :: E)>;\n  val y@0 : b;\n  (match ((std/core/hnd/yielding())) {\n    ((std/core/types/True() : bool ) as @pat@5: bool)\n       -> std/core/hnd/yield-cont<b,(e :: E),b>((forall<b> fn<(e :: E)>(cont@0: (b) -> (9249 :: E) 9248, res@0: b){\n        std/core/hnd/under1x<b,c,(e :: E),(c :: (E, V) -> V)>(ev, cont@0, res@0);\n      }));\n    ((@skip std/core/types/False() : bool ) as @pat@0@1: bool)\n       -> val _@0 : ()\n                = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0);\n      y@0;\n  });\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[771],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (9249 :: E) 9248, res: a){\n  val w0@0 : (hnd/evv :: E -> V)<(_e :: E)>;\n  val y@0 : b;\n  (match ((std/core/hnd/yielding())) {\n    ((std/core/types/True() : bool ) as @pat@5: bool)\n       -> std/core/hnd/yield-cont<b,(e :: E),b>((forall<b> fn<(e :: E)>(cont@0: (b) -> (9249 :: E) 9248, res@0: b){\n        std/core/hnd/under1x<b,c,(e :: E),(c :: (E, V) -> V)>(ev, cont@0, res@0);\n      }));\n    ((@skip std/core/types/False() : bool ) as @pat@0@1: bool)\n       -> val _@0 : ()\n                = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0);\n      y@0;\n  });\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@3,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":212}]},
{"label":"774([switch case for Bool(false)#2154])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0@2,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0@2,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"775([switch default case#2155])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"776([switch default case#2152])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Switch","arg":1,"values":[false],"targets":[774],"default":775}]},
{"label":"777([#2137])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":2,"values":[true],"targets":[773],"default":776}]},
{"label":"778([k@[k@[mcore:[#1210]#2128]#2130]#2132])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Push","target":777,"args":{"any":[1,0]}},
{"op":"Copy","from":3,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":754}]},
{"label":"779([k@[mcore:[#1210]#2128]#2130])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: op()","traced":{"any":[]}},
{"op":"Push","target":778,"args":{"any":[1,0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":2,"tag":"apply","args":{"any":[]}}]},
{"label":"780([match_def@[mcore:[#1210]#2128]#2156])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"781([k@[#2157]#2162])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"782([#2157])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<9250>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"103\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/marker<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"104\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2: 9250<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"105\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(w,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (w: hnd/evv<4237>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"106\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap<(total :: E),(e :: E),(_e :: E)>(w)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap<(total :: E),(e :: E),(_e :: E)>(w)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<9250>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"103\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/marker<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"104\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2: 9250<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"105\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(w,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (w: hnd/evv<4237>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"106\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Jump","target":753}]},
{"label":"783([mcore:[#1210]#2128])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (ev) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0: (hnd/htag :: ((E, V) -> V) -> V)<(9250 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@1: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@2: (9250 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (w: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat: ((hnd/ev :: ((E, V) -> V) -> V)<(9250 :: (E, V) -> V)>))\n     -> std/core/hnd/evv-swap<(total :: E),(e :: E),(_e1 :: E)>(w);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Push","target":779,"args":{"any":[0,1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (ev) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0: (hnd/htag :: ((E, V) -> V) -> V)<(9250 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@1: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@2: (9250 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (w: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat: ((hnd/ev :: ((E, V) -> V) -> V)<(9250 :: (E, V) -> V)>))\n     -> std/core/hnd/evv-swap<(total :: E),(e :: E),(_e1 :: E)>(w);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/ev","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Ev","target":782,"args":{"any":[0,1,2,3]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3068]","target":780,"args":{"any":[]}}}]},
{"label":"784([mcore:[#1212]#2164])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"swapCurrentEvv"}]},
{"label":"785([mcore:[#1214]#2169])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"786([mcore:[#1216]#2174])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"swapCurrentEvv"}]},
{"label":"787([mcore:[#1224]#2179])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/under1x<a,a,(e :: E),(a :: (E, V) -> V)>(ev, cont@0, res@0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/under1x<a,a,(e :: E),(a :: (E, V) -> V)>(ev, cont@0, res@0)","traced":{"any":[]}},
{"op":"Jump","target":736}]},
{"label":"788([mcore:[#1226]#2183])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"789([#2198])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Jump","target":787}]},
{"label":"790([k@[switch case for Bool(true)#2194]#2205])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"791([switch case for Bool(true)#2194])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@5,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont@0: (a) -> (9302 :: E) 9305, res@0: a){\n  std/core/hnd/under1x<a,b,(e :: E),(b :: (E, V) -> V)>(ev, cont@0, res@0);\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[789],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont@0: (a) -> (9302 :: E) 9305, res@0: a){\n  std/core/hnd/under1x<a,b,(e :: E),(b :: (E, V) -> V)>(ev, cont@0, res@0);\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@5,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":212}]},
{"label":"792([k@[switch case for Bool(false)#2209]#2214])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: y@0","traced":{"any":[]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: y@0","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"793([switch case for Bool(false)#2209])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0@1,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: val _@0 : ()\n      = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0);\ny@0","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_@0\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Push","target":792,"args":{"any":[1]}},
{"op":"Copy","from":2,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_@0\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: val _@0 : ()\n      = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0);\ny@0","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0@1,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":788}]},
{"label":"794([switch default case#2216])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"795([switch default case#2207])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Switch","arg":2,"values":[false],"targets":[793],"default":794}]},
{"label":"796([k@[k@[mcore:[#1227]#2188]#2190]#2192])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"int","out":3,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":3,"values":[true],"targets":[791],"default":795}]},
{"label":"797([k@[mcore:[#1227]#2188]#2190])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"y@0\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: cont(res)","traced":{"any":[]}},
{"op":"Push","target":796,"args":{"any":[2,0]}},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: cont(res)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"y@0\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"798([match_def@[mcore:[#1227]#2188]#2217])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"799([k@[#2218]#2223])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"800([#2218])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@4,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0@0: hnd/htag<9304>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"103\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@1@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@1@0: hnd/marker<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"104\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@2@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2@0: 9304<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"105\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(w@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (w@0: hnd/evv<4237>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"106\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap<(total :: E),(e :: E),(_e :: E)>(w@0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap<(total :: E),(e :: E),(_e :: E)>(w@0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@4,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0@0: hnd/htag<9304>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"103\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@1@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@1@0: hnd/marker<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"104\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@2@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2@0: 9304<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"105\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(w@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (w@0: hnd/evv<4237>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"106\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Jump","target":786}]},
{"label":"801([mcore:[#1227]#2188])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w0@0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (ev) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0@0: (hnd/htag :: ((E, V) -> V) -> V)<(9304 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@1@0: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@2@0: (9304 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (w@0: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat@4: ((hnd/ev :: ((E, V) -> V) -> V)<(9304 :: (E, V) -> V)>))\n     -> std/core/hnd/evv-swap<(total :: E),(e :: E),(_e1 :: E)>(w@0);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Push","target":797,"args":{"any":[0,2,1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (ev) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0@0: (hnd/htag :: ((E, V) -> V) -> V)<(9304 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@1@0: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@2@0: (9304 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (w@0: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat@4: ((hnd/ev :: ((E, V) -> V) -> V)<(9304 :: (E, V) -> V)>))\n     -> std/core/hnd/evv-swap<(total :: E),(e :: E),(_e1 :: E)>(w@0);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w0@0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/ev","scrutinee":2,"clauses":[{"tag":"std/core/hnd/Ev","target":800,"args":{"any":[0,1,2,3]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3069]","target":798,"args":{"any":[]}}}]},
{"label":"802([#2240])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Jump","target":801}]},
{"label":"803([k@[switch case for Bool(true)#2236]#2247])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"804([switch case for Bool(true)#2236])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@3,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (9302 :: E) 9305, res: a){\n  val w0@0 : (hnd/evv :: E -> V)<(_e :: E)>;\n  val y@0 : b;\n  (match ((std/core/hnd/yielding())) {\n    ((std/core/types/True() : bool ) as @pat@5: bool)\n       -> std/core/hnd/yield-cont<b,(e :: E),b>((forall<b> fn<(e :: E)>(cont@0: (b) -> (9302 :: E) 9305, res@0: b){\n        std/core/hnd/under1x<b,c,(e :: E),(c :: (E, V) -> V)>(ev, cont@0, res@0);\n      }));\n    ((@skip std/core/types/False() : bool ) as @pat@0@1: bool)\n       -> val _@0 : ()\n                = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0);\n      y@0;\n  });\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[802],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (9302 :: E) 9305, res: a){\n  val w0@0 : (hnd/evv :: E -> V)<(_e :: E)>;\n  val y@0 : b;\n  (match ((std/core/hnd/yielding())) {\n    ((std/core/types/True() : bool ) as @pat@5: bool)\n       -> std/core/hnd/yield-cont<b,(e :: E),b>((forall<b> fn<(e :: E)>(cont@0: (b) -> (9302 :: E) 9305, res@0: b){\n        std/core/hnd/under1x<b,c,(e :: E),(c :: (E, V) -> V)>(ev, cont@0, res@0);\n      }));\n    ((@skip std/core/types/False() : bool ) as @pat@0@1: bool)\n       -> val _@0 : ()\n                = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0);\n      y@0;\n  });\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@3,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":212}]},
{"label":"805([switch case for Bool(false)#2251])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0@2,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0@2,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"806([switch default case#2252])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"807([switch default case#2249])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Switch","arg":1,"values":[false],"targets":[805],"default":806}]},
{"label":"808([#2234])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":2,"values":[true],"targets":[804],"default":807}]},
{"label":"809([k@[k@[mcore:[#1229]#2225]#2227]#2229])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Push","target":808,"args":{"any":[1,0]}},
{"op":"Copy","from":3,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":785}]},
{"label":"810([k@[mcore:[#1229]#2225]#2227])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: op()","traced":{"any":[]}},
{"op":"Push","target":809,"args":{"any":[1,0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":2,"tag":"apply","args":{"any":[]}}]},
{"label":"811([match_def@[mcore:[#1229]#2225]#2253])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"812([k@[#2254]#2259])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"813([#2254])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<9304>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"103\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/marker<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"104\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2: 9304<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"105\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(w,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (w: hnd/evv<4237>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"106\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap<(total :: E),(e :: E),(_e :: E)>(w)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap<(total :: E),(e :: E),(_e :: E)>(w)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<9304>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"103\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/marker<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"104\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2: 9304<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"105\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(w,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (w: hnd/evv<4237>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"106\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Jump","target":784}]},
{"label":"814([mcore:[#1229]#2225])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (ev) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0: (hnd/htag :: ((E, V) -> V) -> V)<(9304 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@1: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@2: (9304 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (w: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat: ((hnd/ev :: ((E, V) -> V) -> V)<(9304 :: (E, V) -> V)>))\n     -> std/core/hnd/evv-swap<(total :: E),(e :: E),(_e1 :: E)>(w);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Push","target":810,"args":{"any":[1,3]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (ev) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0: (hnd/htag :: ((E, V) -> V) -> V)<(9304 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@1: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@2: (9304 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (w: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat: ((hnd/ev :: ((E, V) -> V) -> V)<(9304 :: (E, V) -> V)>))\n     -> std/core/hnd/evv-swap<(total :: E),(e :: E),(_e1 :: E)>(w);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/ev","scrutinee":1,"clauses":[{"tag":"std/core/hnd/Ev","target":813,"args":{"any":[0,1,2,3]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3070]","target":811,"args":{"any":[]}}}]},
{"label":"815([method_apply@[mcore:[#1231]#2261]#2265])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":2,"b":3},
{"op":"Jump","target":814}]},
{"label":"816([mcore:[#1231]#2261])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Clause0<a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(@_wildcard-x734_14: (hnd/marker :: (E, V) -> V)<(9302 :: E),9303>, ev: (hnd/ev :: ((E, V) -> V) -> V)<(9304 :: (E, V) -> V)>){\n  val w0 : ((hnd/evv :: E -> V)<(_e :: E)>);\n  val y : a;\n  val _ : ();\n  (match ((std/core/hnd/yielding())) {\n    ((std/core/types/True() : bool ) as @pat@3: bool)\n       -> std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (9302 :: E) 9305, res: a){\n        val w0@0 : (hnd/evv :: E -> V)<(_e :: E)>;\n        val y@0 : b;\n        (match ((std/core/hnd/yielding())) {\n          ((std/core/types/True() : bool ) as @pat@5: bool)\n             -> std/core/hnd/yield-cont<b,(e :: E),b>((forall<b> fn<(e :: E)>(cont@0: (b) -> (9302 :: E) 9305, res@0: b){\n              std/core/hnd/under1x<b,c,(e :: E),(c :: (E, V) -> V)>(ev, cont@0, res@0);\n            }));\n          ((@skip std/core/types/False() : bool ) as @pat@0@1: bool)\n             -> val _@0 : ()\n                      = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0);\n            y@0;\n        });\n      }));\n    ((@skip std/core/types/False() : bool ) as @pat@0@2: bool)\n       -> y;\n  });\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[815],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Clause0<a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(@_wildcard-x734_14: (hnd/marker :: (E, V) -> V)<(9302 :: E),9303>, ev: (hnd/ev :: ((E, V) -> V) -> V)<(9304 :: (E, V) -> V)>){\n  val w0 : ((hnd/evv :: E -> V)<(_e :: E)>);\n  val y : a;\n  val _ : ();\n  (match ((std/core/hnd/yielding())) {\n    ((std/core/types/True() : bool ) as @pat@3: bool)\n       -> std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (9302 :: E) 9305, res: a){\n        val w0@0 : (hnd/evv :: E -> V)<(_e :: E)>;\n        val y@0 : b;\n        (match ((std/core/hnd/yielding())) {\n          ((std/core/types/True() : bool ) as @pat@5: bool)\n             -> std/core/hnd/yield-cont<b,(e :: E),b>((forall<b> fn<(e :: E)>(cont@0: (b) -> (9302 :: E) 9305, res@0: b){\n              std/core/hnd/under1x<b,c,(e :: E),(c :: (E, V) -> V)>(ev, cont@0, res@0);\n            }));\n          ((@skip std/core/types/False() : bool ) as @pat@0@1: bool)\n             -> val _@0 : ()\n                      = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0);\n            y@0;\n        });\n      }));\n    ((@skip std/core/types/False() : bool ) as @pat@0@2: bool)\n       -> y;\n  });\n}))","traced":{"any":[]}},
{"op":"Jump","target":1056}]},
{"label":"817([mcore:[#1233]#2271])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"swapCurrentEvv"}]},
{"label":"818([mcore:[#1241]#2276])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/under1x<a,a,(e :: E),(a :: (E, V) -> V)>(ev, cont, res)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/under1x<a,a,(e :: E),(a :: (E, V) -> V)>(ev, cont, res)","traced":{"any":[]}},
{"op":"Jump","target":736}]},
{"label":"819([mcore:[#1243]#2280])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"820([#2295])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Jump","target":818}]},
{"label":"821([k@[switch case for Bool(true)#2291]#2302])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"822([switch case for Bool(true)#2291])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@3,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (9371 :: E) 9375, res: a){\n  std/core/hnd/under1x<a,b,(e :: E),(b :: (E, V) -> V)>(ev, cont, res);\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[820],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (9371 :: E) 9375, res: a){\n  std/core/hnd/under1x<a,b,(e :: E),(b :: (E, V) -> V)>(ev, cont, res);\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@3,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":212}]},
{"label":"823([k@[switch case for Bool(false)#2306]#2311])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: y","traced":{"any":[]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: y","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"824([switch case for Bool(false)#2306])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0@0,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: val _@0 : ()\n      = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0);\ny","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_@0\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Push","target":823,"args":{"any":[1]}},
{"op":"Copy","from":2,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_@0\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: val _@0 : ()\n      = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0);\ny","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0@0,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":819}]},
{"label":"825([switch default case#2313])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"826([switch default case#2304])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Switch","arg":2,"values":[false],"targets":[824],"default":825}]},
{"label":"827([k@[k@[mcore:[#1244]#2285]#2287]#2289])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"int","out":3,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":3,"values":[true],"targets":[822],"default":826}]},
{"label":"828([k@[mcore:[#1244]#2285]#2287])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: op(x)","traced":{"any":[]}},
{"op":"Push","target":827,"args":{"any":[1,0]}},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op(x)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":2,"tag":"apply","args":{"any":[0]}}]},
{"label":"829([match_def@[mcore:[#1244]#2285]#2314])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"830([k@[#2315]#2320])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"831([#2315])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<9373>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"103\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/marker<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"104\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2: 9373<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"105\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(w,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (w: hnd/evv<4237>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"106\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap<(total :: E),(e :: E),(_e :: E)>(w)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap<(total :: E),(e :: E),(_e :: E)>(w)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<9373>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"103\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/marker<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"104\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2: 9373<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"105\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(w,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (w: hnd/evv<4237>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"106\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Jump","target":817}]},
{"label":"832([mcore:[#1244]#2285])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (ev) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0: (hnd/htag :: ((E, V) -> V) -> V)<(9373 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@1: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@2: (9373 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (w: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat: ((hnd/ev :: ((E, V) -> V) -> V)<(9373 :: (E, V) -> V)>))\n     -> std/core/hnd/evv-swap<(total :: E),(e :: E),(_e1 :: E)>(w);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Push","target":828,"args":{"any":[1,4,2]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (ev) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0: (hnd/htag :: ((E, V) -> V) -> V)<(9373 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@1: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@2: (9373 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (w: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat: ((hnd/ev :: ((E, V) -> V) -> V)<(9373 :: (E, V) -> V)>))\n     -> std/core/hnd/evv-swap<(total :: E),(e :: E),(_e1 :: E)>(w);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/ev","scrutinee":1,"clauses":[{"tag":"std/core/hnd/Ev","target":831,"args":{"any":[0,1,2,3]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3071]","target":829,"args":{"any":[]}}}]},
{"label":"833([method_apply@[mcore:[#1246]#2322]#2327])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Const","format":"string","out":4,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"Swap","a":3,"b":4},
{"op":"Jump","target":832}]},
{"label":"834([mcore:[#1246]#2322])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Clause1<a,a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(@_wildcard-x686_14: (hnd/marker :: (E, V) -> V)<(9371 :: E),9372>, ev: (hnd/ev :: ((E, V) -> V) -> V)<(9373 :: (E, V) -> V)>, x: 9374){\n  val w0 : ((hnd/evv :: E -> V)<(_e :: E)>);\n  val y : a;\n  (match ((std/core/hnd/yielding())) {\n    ((std/core/types/True() : bool ) as @pat@3: bool)\n       -> std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (9371 :: E) 9375, res: a){\n        std/core/hnd/under1x<a,b,(e :: E),(b :: (E, V) -> V)>(ev, cont, res);\n      }));\n    ((@skip std/core/types/False() : bool ) as @pat@0@0: bool)\n       -> val _@0 : ()\n                = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0);\n      y;\n  });\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[833],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Clause1<a,a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(@_wildcard-x686_14: (hnd/marker :: (E, V) -> V)<(9371 :: E),9372>, ev: (hnd/ev :: ((E, V) -> V) -> V)<(9373 :: (E, V) -> V)>, x: 9374){\n  val w0 : ((hnd/evv :: E -> V)<(_e :: E)>);\n  val y : a;\n  (match ((std/core/hnd/yielding())) {\n    ((std/core/types/True() : bool ) as @pat@3: bool)\n       -> std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (9371 :: E) 9375, res: a){\n        std/core/hnd/under1x<a,b,(e :: E),(b :: (E, V) -> V)>(ev, cont, res);\n      }));\n    ((@skip std/core/types/False() : bool ) as @pat@0@0: bool)\n       -> val _@0 : ()\n                = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0);\n      y;\n  });\n}))","traced":{"any":[]}},
{"op":"Jump","target":1057}]},
{"label":"835([mcore:[#1247]#2333])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"swapCurrentEvv"}]},
{"label":"836([mcore:[#1251]#2338])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"837([mcore:[#1253]#2343])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"swapCurrentEvv"}]},
{"label":"838([mcore:[#1261]#2348])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/under1x<a,a,(e :: E),(a :: (E, V) -> V)>(ev, cont@0, res@0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/under1x<a,a,(e :: E),(a :: (E, V) -> V)>(ev, cont@0, res@0)","traced":{"any":[]}},
{"op":"Jump","target":736}]},
{"label":"839([mcore:[#1263]#2352])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"840([#2367])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Jump","target":838}]},
{"label":"841([k@[switch case for Bool(true)#2363]#2374])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"842([switch case for Bool(true)#2363])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@5,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont@0: (a) -> (9475 :: E) 9474, res@0: a){\n  std/core/hnd/under1x<a,b,(e :: E),(b :: (E, V) -> V)>(ev, cont@0, res@0);\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[840],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont@0: (a) -> (9475 :: E) 9474, res@0: a){\n  std/core/hnd/under1x<a,b,(e :: E),(b :: (E, V) -> V)>(ev, cont@0, res@0);\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@5,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":212}]},
{"label":"843([k@[switch case for Bool(false)#2378]#2383])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: y","traced":{"any":[]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: y","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"844([switch case for Bool(false)#2378])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0@1,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: val _@0 : ()\n      = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0);\ny","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_@0\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Push","target":843,"args":{"any":[1]}},
{"op":"Copy","from":2,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_@0\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: val _@0 : ()\n      = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0);\ny","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0@1,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":839}]},
{"label":"845([switch default case#2385])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"846([switch default case#2376])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Switch","arg":2,"values":[false],"targets":[844],"default":845}]},
{"label":"847([k@[k@[mcore:[#1264]#2357]#2359]#2361])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"int","out":3,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":3,"values":[true],"targets":[842],"default":846}]},
{"label":"848([k@[mcore:[#1264]#2357]#2359])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: cont(res)","traced":{"any":[]}},
{"op":"Push","target":847,"args":{"any":[2,0]}},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: cont(res)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"849([match_def@[mcore:[#1264]#2357]#2386])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"850([k@[#2387]#2392])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"851([#2387])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@4,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0@0: hnd/htag<9476>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"103\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@1@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@1@0: hnd/marker<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"104\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@2@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2@0: 9476<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"105\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(w@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (w@0: hnd/evv<4237>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"106\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap<(total :: E),(e :: E),(_e :: E)>(w@0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap<(total :: E),(e :: E),(_e :: E)>(w@0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@4,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0@0: hnd/htag<9476>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"103\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@1@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@1@0: hnd/marker<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"104\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@2@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2@0: 9476<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"105\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(w@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (w@0: hnd/evv<4237>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"106\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Jump","target":837}]},
{"label":"852([mcore:[#1264]#2357])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w0@0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (ev) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0@0: (hnd/htag :: ((E, V) -> V) -> V)<(9476 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@1@0: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@2@0: (9476 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (w@0: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat@4: ((hnd/ev :: ((E, V) -> V) -> V)<(9476 :: (E, V) -> V)>))\n     -> std/core/hnd/evv-swap<(total :: E),(e :: E),(_e1 :: E)>(w@0);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Push","target":848,"args":{"any":[0,2,1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (ev) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0@0: (hnd/htag :: ((E, V) -> V) -> V)<(9476 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@1@0: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@2@0: (9476 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (w@0: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat@4: ((hnd/ev :: ((E, V) -> V) -> V)<(9476 :: (E, V) -> V)>))\n     -> std/core/hnd/evv-swap<(total :: E),(e :: E),(_e1 :: E)>(w@0);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w0@0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/ev","scrutinee":2,"clauses":[{"tag":"std/core/hnd/Ev","target":851,"args":{"any":[0,1,2,3]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3072]","target":849,"args":{"any":[]}}}]},
{"label":"853([#2409])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Jump","target":852}]},
{"label":"854([k@[switch case for Bool(true)#2405]#2416])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"855([switch case for Bool(true)#2405])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@3,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (9475 :: E) 9474, res: a){\n  val w0@0 : (hnd/evv :: E -> V)<(_e :: E)>;\n  val y : b;\n  (match ((std/core/hnd/yielding())) {\n    ((std/core/types/True() : bool ) as @pat@5: bool)\n       -> std/core/hnd/yield-cont<b,(e :: E),b>((forall<b> fn<(e :: E)>(cont@0: (b) -> (9475 :: E) 9474, res@0: b){\n        std/core/hnd/under1x<b,c,(e :: E),(c :: (E, V) -> V)>(ev, cont@0, res@0);\n      }));\n    ((@skip std/core/types/False() : bool ) as @pat@0@1: bool)\n       -> val _@0 : ()\n                = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0);\n      y;\n  });\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[853],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (9475 :: E) 9474, res: a){\n  val w0@0 : (hnd/evv :: E -> V)<(_e :: E)>;\n  val y : b;\n  (match ((std/core/hnd/yielding())) {\n    ((std/core/types/True() : bool ) as @pat@5: bool)\n       -> std/core/hnd/yield-cont<b,(e :: E),b>((forall<b> fn<(e :: E)>(cont@0: (b) -> (9475 :: E) 9474, res@0: b){\n        std/core/hnd/under1x<b,c,(e :: E),(c :: (E, V) -> V)>(ev, cont@0, res@0);\n      }));\n    ((@skip std/core/types/False() : bool ) as @pat@0@1: bool)\n       -> val _@0 : ()\n                = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0);\n      y;\n  });\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@3,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":212}]},
{"label":"856([switch case for Bool(false)#2420])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0@2,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0@2,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"857([switch default case#2421])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"858([switch default case#2418])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Switch","arg":1,"values":[false],"targets":[856],"default":857}]},
{"label":"859([#2403])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":2,"values":[true],"targets":[855],"default":858}]},
{"label":"860([k@[k@[mcore:[#1266]#2394]#2396]#2398])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Push","target":859,"args":{"any":[1,0]}},
{"op":"Copy","from":3,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":836}]},
{"label":"861([k@[mcore:[#1266]#2394]#2396])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"z\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: op(x1, x2)","traced":{"any":[]}},
{"op":"Push","target":860,"args":{"any":[1,0]}},
{"op":"Copy","from":4,"to":1},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op(x1, x2)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"z\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":2,"tag":"apply","args":{"any":[0,1]}}]},
{"label":"862([match_def@[mcore:[#1266]#2394]#2422])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"863([k@[#2423]#2428])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"864([#2423])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<9476>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"103\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/marker<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"104\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2: 9476<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"105\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(w,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (w: hnd/evv<4237>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"106\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap<(total :: E),(e :: E),(_e :: E)>(w)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap<(total :: E),(e :: E),(_e :: E)>(w)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<9476>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"103\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/marker<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"104\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2: 9476<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"105\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(w,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (w: hnd/evv<4237>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"106\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Jump","target":835}]},
{"label":"865([mcore:[#1266]#2394])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (ev) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0: (hnd/htag :: ((E, V) -> V) -> V)<(9476 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@1: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@2: (9476 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (w: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat: ((hnd/ev :: ((E, V) -> V) -> V)<(9476 :: (E, V) -> V)>))\n     -> std/core/hnd/evv-swap<(total :: E),(e :: E),(_e1 :: E)>(w);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Push","target":861,"args":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"103\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"104\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"105\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"106\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (ev) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0: (hnd/htag :: ((E, V) -> V) -> V)<(9476 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@1: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@2: (9476 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (w: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat: ((hnd/ev :: ((E, V) -> V) -> V)<(9476 :: (E, V) -> V)>))\n     -> std/core/hnd/evv-swap<(total :: E),(e :: E),(_e1 :: E)>(w);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/ev","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Ev","target":864,"args":{"any":[0,1,2,3]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3073]","target":862,"args":{"any":[]}}}]},
{"label":"866([mcore:[#1273]#2430])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4,5]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/under2<a,a,a,(e :: E),(a :: (E, V) -> V)>(ev, op, x1, x2)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Copy","from":0,"to":4},
{"op":"Copy","from":1,"to":0},
{"op":"Copy","from":5,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/under2<a,a,a,(e :: E),(a :: (E, V) -> V)>(ev, op, x1, x2)","traced":{"any":[]}},
{"op":"Jump","target":865}]},
{"label":"867([method_apply@[mcore:[#1275]#2434]#2440])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Const","format":"string","out":5,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[5]},"in":{"any":[5]}},
{"op":"Swap","a":4,"b":5},
{"op":"Jump","target":866}]},
{"label":"868([mcore:[#1275]#2434])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Clause2<a,a,a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(9554 :: E),9555>, ev: (hnd/ev :: ((E, V) -> V) -> V)<(9556 :: (E, V) -> V)>, x1: 9557, x2: 9558){\n  (std/core/hnd/under2<a,a,a,(e :: E),(a :: (E, V) -> V)>(ev, op, x1, x2));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[867],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Clause2<a,a,a,(a :: (E, V) -> V),(e :: E),a>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(9554 :: E),9555>, ev: (hnd/ev :: ((E, V) -> V) -> V)<(9556 :: (E, V) -> V)>, x1: 9557, x2: 9558){\n  (std/core/hnd/under2<a,a,a,(e :: E),(a :: (E, V) -> V)>(ev, op, x1, x2));\n}))","traced":{"any":[]}},
{"op":"Jump","target":1058}]},
{"label":"869([match_def@[mcore:[#1281]#2446]#2447])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"870([k@[#2448]#2450])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"871([#2448])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"@pat-x808_20\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}),(x1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"103\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x1: 9635) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"103\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"104\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x2: 9636) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"104\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x3,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"105\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x3: 9637) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"105\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: op(x1, x2, x3)","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op(x1, x2, x3)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"@pat-x808_20\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}),(x1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"103\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x1: 9635) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"103\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"104\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x2: 9636) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"104\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x3,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"105\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x3: 9637) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"105\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Invoke","receiver":3,"tag":"apply","args":{"any":[0,1,2]}}]},
{"label":"872([mcore:[#1281]#2446])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@pat-x808_20\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}: \"std/core/types/tuple3\".\"std/core/types/Tuple3\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"103\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"104\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"105\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@pat-x808_20\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple3\\\"\"}}: \"std/core/types/tuple3\".\"std/core/types/Tuple3\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"103\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"104\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"105\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/tuple3","scrutinee":1,"clauses":[{"tag":"std/core/types/Tuple3","target":871,"args":{"any":[1,2,3]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3074]","target":869,"args":{"any":[]}}}]},
{"label":"873([method_apply@[mcore:[#1283]#2452]#2455])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Jump","target":872}]},
{"label":"874([mcore:[#1283]#2452])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/clause-tail1<(e :: E),a,(a :: (E, V) -> V),(a, b, c),a>((fn<(e :: E)>(@pat-x808_20: (9635, 9636, 9637)){\n  (match (@pat-x808_20) {\n    ((@skip std/core/types/Tuple3((x1: 9635) : a, (x2: 9636) : a, (x3: 9637) : a) : (a, b, c) ) as @pat: (9635, 9636, 9637))\n       -> op(x1, x2, x3);\n  });\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[873],"args":{"any":[0]},"tags":["apply"]},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/clause-tail1<(e :: E),a,(a :: (E, V) -> V),(a, b, c),a>((fn<(e :: E)>(@pat-x808_20: (9635, 9636, 9637)){\n  (match (@pat-x808_20) {\n    ((@skip std/core/types/Tuple3((x1: 9635) : a, (x2: 9636) : a, (x3: 9637) : a) : (a, b, c) ) as @pat: (9635, 9636, 9637))\n       -> op(x1, x2, x3);\n  });\n}))","traced":{"any":[]}},
{"op":"Jump","target":834}]},
{"label":"875([match_def@[mcore:[#1290]#2461]#2462])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"876([k@[#2463]#2465])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"877([#2463])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"@pat-x832_20\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple4\\\"\"}}),(x1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"106\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x1: 9722) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"106\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"107\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x2: 9723) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"107\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x3,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"108\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x3: 9724) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"108\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x4,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"field4\\\"109\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x4: 9725) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"field4\\\\\\\"109\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: op(x1, x2, x3, x4)","traced":{"any":[]}},
{"op":"Swap","a":3,"b":4},
{"op":"Swap","a":2,"b":4},
{"op":"Swap","a":1,"b":4},
{"op":"Swap","a":0,"b":4},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op(x1, x2, x3, x4)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"@pat-x832_20\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple4\\\"\"}}),(x1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"fst\\\"106\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x1: 9722) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"fst\\\\\\\"106\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"107\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x2: 9723) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"snd\\\\\\\"107\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x3,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"108\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x3: 9724) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"thd\\\\\\\"108\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(x4,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"field4\\\"109\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x4: 9725) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"field4\\\\\\\"109\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Invoke","receiver":4,"tag":"apply","args":{"any":[0,1,2,3]}}]},
{"label":"878([mcore:[#1290]#2461])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@pat-x832_20\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple4\\\"\"}}: \"std/core/types/tuple4\".\"std/core/types/Tuple4\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"106\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"107\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"108\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"field4\\\"109\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@pat-x832_20\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"tuple4\\\"\"}}: \"std/core/types/tuple4\".\"std/core/types/Tuple4\"(({\"op\": \"Var\",\"id\": \"@\\\"fst\\\"106\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"snd\\\"107\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"thd\\\"108\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"field4\\\"109\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/tuple4","scrutinee":1,"clauses":[{"tag":"std/core/types/Tuple4","target":877,"args":{"any":[1,2,3,4]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3075]","target":875,"args":{"any":[]}}}]},
{"label":"879([method_apply@[mcore:[#1292]#2467]#2470])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Jump","target":878}]},
{"label":"880([mcore:[#1292]#2467])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/clause-tail1<(e :: E),a,(a :: (E, V) -> V),(a, b, c, d),a>((fn<(e :: E)>(@pat-x832_20: (9722, 9723, 9724, 9725)){\n  (match (@pat-x832_20) {\n    ((@skip std/core/types/Tuple4((x1: 9722) : a, (x2: 9723) : a, (x3: 9724) : a, (x4: 9725) : a) : (a, b, c, d) ) as @pat: (9722, 9723, 9724, 9725))\n       -> op(x1, x2, x3, x4);\n  });\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[879],"args":{"any":[0]},"tags":["apply"]},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/clause-tail1<(e :: E),a,(a :: (E, V) -> V),(a, b, c, d),a>((fn<(e :: E)>(@pat-x832_20: (9722, 9723, 9724, 9725)){\n  (match (@pat-x832_20) {\n    ((@skip std/core/types/Tuple4((x1: 9722) : a, (x2: 9723) : a, (x3: 9724) : a, (x4: 9725) : a) : (a, b, c, d) ) as @pat: (9722, 9723, 9724, 9725))\n       -> op(x1, x2, x3, x4);\n  });\n}))","traced":{"any":[]}},
{"op":"Jump","target":834}]},
{"label":"881([k@[mcore:[#1299]#2476]#2478])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Swap","a":0,"b":1},
{"op":"Jump","target":906}]},
{"label":"882([mcore:[#1299]#2476])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/finally-prompt<a,(e :: E)>(fin, (cont(x)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: cont(x)","traced":{"any":[]}},
{"op":"Push","target":881,"args":{"any":[2]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: cont(x)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/finally-prompt<a,(e :: E)>(fin, (cont(x)))","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"883([mcore:[#1306]#2481])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/unsafe-reyield<a,(e :: E)>(yld)","traced":{"any":[]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/unsafe-reyield<a,(e :: E)>(yld)","traced":{"any":[]}},
{"op":"Jump","target":249}]},
{"label":"884([k@[switch case for Bool(true)#2483]#2486])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"885([#2492])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Jump","target":882}]},
{"label":"886([k@[switch case for Bool(true)#2488]#2496])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"887([switch case for Bool(true)#2488])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@1@0,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (9857 :: E) 9856, x: a){\n  std/core/hnd/finally-prompt<b,(e :: E)>(fin, (cont(x)));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[885],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (9857 :: E) 9856, x: a){\n  std/core/hnd/finally-prompt<b,(e :: E)>(fin, (cont(x)));\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@1@0,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":212}]},
{"label":"888([k@[#2504]#2507])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"889([#2512])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Jump","target":883}]},
{"label":"890([k@[switch case for Bool(true)#2509]#2516])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"891([switch case for Bool(true)#2509])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@3,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-extend<_a,a,(e :: E)>((fn<(e :: E)>(@_wildcard-x537_43: _9825){\n  (std/core/hnd/unsafe-reyield<a,(e :: E)>(yld));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[889],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-extend<_a,a,(e :: E)>((fn<(e :: E)>(@_wildcard-x537_43: _9825){\n  (std/core/hnd/unsafe-reyield<a,(e :: E)>(yld));\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@3,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":211}]},
{"label":"892([k@[switch case for Bool(false)#2520]#2522])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"893([switch case for Bool(false)#2520])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@4,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/unsafe-reyield<a,(e :: E)>(yld)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/unsafe-reyield<a,(e :: E)>(yld)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@4,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":249}]},
{"label":"894([switch default case#2524])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"895([switch default case#2518])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Const","format":"int","out":1,"value":0},
{"op":"Switch","arg":1,"values":[false],"targets":[893],"default":894}]},
{"label":"896([#2504])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: match ((std/core/hnd/yielding())) {\n  ((std/core/types/True() : bool ) as @pat@3: bool)\n     -> std/core/hnd/yield-extend<_a,a,(e :: E)>((fn<(e :: E)>(@_wildcard-x537_43: _9825){\n      (std/core/hnd/unsafe-reyield<a,(e :: E)>(yld));\n    }));\n  ((@skip std/core/types/False() : bool ) as @pat@4: bool)\n     -> std/core/hnd/unsafe-reyield<a,(e :: E)>(yld);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match ((std/core/hnd/yielding())) {\n  ((std/core/types/True() : bool ) as @pat@3: bool)\n     -> std/core/hnd/yield-extend<_a,a,(e :: E)>((fn<(e :: E)>(@_wildcard-x537_43: _9825){\n      (std/core/hnd/unsafe-reyield<a,(e :: E)>(yld));\n    }));\n  ((@skip std/core/types/False() : bool ) as @pat@4: bool)\n     -> std/core/hnd/unsafe-reyield<a,(e :: E)>(yld);\n}","traced":{"any":[]}},
{"op":"Switch","arg":1,"values":[true],"targets":[891],"default":895}]},
{"label":"897([k@[switch case for Bool(false)#2500]#2502])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_@0\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: fin()","traced":{"any":[]}},
{"op":"Push","target":896,"args":{"any":[0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: fin()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_@0\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[]}}]},
{"label":"898([switch case for Bool(false)#2500])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@2,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: val yld : hnd/yield-info;\nval _@0 : ();\nmatch ((std/core/hnd/yielding())) {\n  ((std/core/types/True() : bool ) as @pat@3: bool)\n     -> std/core/hnd/yield-extend<_a,a,(e :: E)>((fn<(e :: E)>(@_wildcard-x537_43: _9825){\n      (std/core/hnd/unsafe-reyield<a,(e :: E)>(yld));\n    }));\n  ((@skip std/core/types/False() : bool ) as @pat@4: bool)\n     -> std/core/hnd/unsafe-reyield<a,(e :: E)>(yld);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"yld\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yield-info\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-capture<(e :: E)>()","traced":{"any":[]}},
{"op":"Push","target":897,"args":{"any":[0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-capture<(e :: E)>()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"yld\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/yield-info\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: val yld : hnd/yield-info;\nval _@0 : ();\nmatch ((std/core/hnd/yielding())) {\n  ((std/core/types/True() : bool ) as @pat@3: bool)\n     -> std/core/hnd/yield-extend<_a,a,(e :: E)>((fn<(e :: E)>(@_wildcard-x537_43: _9825){\n      (std/core/hnd/unsafe-reyield<a,(e :: E)>(yld));\n    }));\n  ((@skip std/core/types/False() : bool ) as @pat@4: bool)\n     -> std/core/hnd/unsafe-reyield<a,(e :: E)>(yld);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@2,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":250}]},
{"label":"899([switch default case#2525])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"900([switch default case#2498])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Const","format":"int","out":1,"value":0},
{"op":"Switch","arg":1,"values":[false],"targets":[898],"default":899}]},
{"label":"901([switch case for Bool(true)#2483])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"b@10067\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match ((std/core/hnd/yielding-non-final())) {\n  ((std/core/types/True() : bool ) as @pat@1@0: bool)\n     -> std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (9857 :: E) 9856, x: a){\n      std/core/hnd/finally-prompt<b,(e :: E)>(fin, (cont(x)));\n    }));\n  ((@skip std/core/types/False() : bool ) as @pat@2: bool)\n     -> val yld : hnd/yield-info;\n        val _@0 : ();\n    (match ((std/core/hnd/yielding())) {\n      ((std/core/types/True() : bool ) as @pat@3: bool)\n         -> std/core/hnd/yield-extend<_a,a,(e :: E)>((fn<(e :: E)>(@_wildcard-x537_43: _9825){\n          (std/core/hnd/unsafe-reyield<a,(e :: E)>(yld));\n        }));\n      ((@skip std/core/types/False() : bool ) as @pat@4: bool)\n         -> std/core/hnd/unsafe-reyield<a,(e :: E)>(yld);\n    });\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match ((std/core/hnd/yielding-non-final())) {\n  ((std/core/types/True() : bool ) as @pat@1@0: bool)\n     -> std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (9857 :: E) 9856, x: a){\n      std/core/hnd/finally-prompt<b,(e :: E)>(fin, (cont(x)));\n    }));\n  ((@skip std/core/types/False() : bool ) as @pat@2: bool)\n     -> val yld : hnd/yield-info;\n        val _@0 : ();\n    (match ((std/core/hnd/yielding())) {\n      ((std/core/types/True() : bool ) as @pat@3: bool)\n         -> std/core/hnd/yield-extend<_a,a,(e :: E)>((fn<(e :: E)>(@_wildcard-x537_43: _9825){\n          (std/core/hnd/unsafe-reyield<a,(e :: E)>(yld));\n        }));\n      ((@skip std/core/types/False() : bool ) as @pat@4: bool)\n         -> std/core/hnd/unsafe-reyield<a,(e :: E)>(yld);\n    });\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"b@10067\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Switch","arg":1,"values":[true],"targets":[887],"default":900}]},
{"label":"902([k@[switch case for Bool(false)#2527]#2529])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: res","traced":{"any":[]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: res","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"903([switch case for Bool(false)#2527])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"b@10067\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: val _ : ()\n      = fin();\nres","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: fin()","traced":{"any":[]}},
{"op":"Push","target":902,"args":{"any":[1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: fin()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: val _ : ()\n      = fin();\nres","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"b@10067\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Invoke","receiver":0,"tag":"apply","args":{"any":[]}}]},
{"label":"904([switch default case#2531])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"905([switch default case#2526])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Switch","arg":2,"values":[false],"targets":[903],"default":904}]},
{"label":"906([mcore:[#1311]#2480])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"b@10067\",\"type\": {\"op\": \"Bool\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yielding()","traced":{"any":[]}},
{"op":"Const","format":"int","out":2,"value":0},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yielding()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"b@10067\",\"type\": {\"op\": \"Bool\"}}","traced":{"any":[]}},
{"op":"Switch","arg":0,"values":[true],"targets":[901],"default":905}]},
{"label":"907([k@[mcore:[#1316]#2532]#2534])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Swap","a":0,"b":1},
{"op":"Jump","target":906}]},
{"label":"908([mcore:[#1316]#2532])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/finally-prompt<a,(e :: E)>(fin, (action()))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: action()","traced":{"any":[]}},
{"op":"Push","target":907,"args":{"any":[0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: action()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/finally-prompt<a,(e :: E)>(fin, (action()))","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[]}}]},
{"label":"909([k@[mcore:[#1335]#2536]#2538])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Swap","a":0,"b":1},
{"op":"Jump","target":932}]},
{"label":"910([mcore:[#1335]#2536])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/initially-prompt<a,(e :: E)>(init, (cont(x)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: cont(x)","traced":{"any":[]}},
{"op":"Push","target":909,"args":{"any":[2]}},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: cont(x)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/initially-prompt<a,(e :: E)>(init, (cont(x)))","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"911([k@[k@[mcore:[#1342]#2541]#2549]#2551])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Swap","a":0,"b":1},
{"op":"Jump","target":932}]},
{"label":"912([k@[mcore:[#1342]#2541]#2549])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/initially-prompt<a,(e :: E)>(init, (cont(x)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: cont(x)","traced":{"any":[]}},
{"op":"Push","target":911,"args":{"any":[2]}},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: cont(x)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/initially-prompt<a,(e :: E)>(init, (cont(x)))","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"913([switch case for Bool(true)#2553])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"infixEq(Int, Int): Int\",\"args\": [{\"op\": \"Var\",\"id\": \"cnt\",\"type\": {\"op\": \"Int\"}}, {\"op\": \"Literal\",\"type\": {\"op\": \"Int\"},\"value\": 0}],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/Unit","traced":{"any":[]}},
{"op":"Construct","out":0,"type":"Unit","tag":"unit","args":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/Unit","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"infixEq(Int, Int): Int\",\"args\": [{\"op\": \"Var\",\"id\": \"cnt\",\"type\": {\"op\": \"Int\"}}, {\"op\": \"Literal\",\"type\": {\"op\": \"Int\"},\"value\": 0}],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"914([#2565])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"915([#2570])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Jump","target":910}]},
{"label":"916([k@[switch case for Bool(true)#2567]#2574])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/Unit","traced":{"any":[]}},
{"op":"Construct","out":0,"type":"Unit","tag":"unit","args":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/Unit","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"917([switch case for Bool(true)#2567])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@2,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: val _@0 : a\n      = std/core/hnd/yield-extend<_a,a,(e :: E)>((fn<(e :: E)>(@_wildcard-x580_35: _10005){\n        (std/core/hnd/initially-prompt<a,(e :: E)>(init, (cont(x))));\n      }));\nstd/core/types/Unit","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_@0\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-extend<_a,a,(e :: E)>((fn<(e :: E)>(@_wildcard-x580_35: _10005){\n  (std/core/hnd/initially-prompt<a,(e :: E)>(init, (cont(x))));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[915],"args":{"any":[0,1,2]},"tags":["apply"]},
{"op":"Push","target":916,"args":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-extend<_a,a,(e :: E)>((fn<(e :: E)>(@_wildcard-x580_35: _10005){\n  (std/core/hnd/initially-prompt<a,(e :: E)>(init, (cont(x))));\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_@0\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: val _@0 : a\n      = std/core/hnd/yield-extend<_a,a,(e :: E)>((fn<(e :: E)>(@_wildcard-x580_35: _10005){\n        (std/core/hnd/initially-prompt<a,(e :: E)>(init, (cont(x))));\n      }));\nstd/core/types/Unit","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@2,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":211}]},
{"label":"918([switch case for Bool(false)#2579])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@3,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/Unit","traced":{"any":[]}},
{"op":"Construct","out":0,"type":"Unit","tag":"unit","args":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/Unit","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@3,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"919([switch default case#2582])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"920([switch default case#2577])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Switch","arg":0,"values":[false],"targets":[918],"default":919}]},
{"label":"921([k@[switch case for Bool(false)#2560]#2562])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: match ((std/core/hnd/yielding())) {\n  ((std/core/types/True() : bool ) as @pat@2: bool)\n     -> val _@0 : a\n              = std/core/hnd/yield-extend<_a,a,(e :: E)>((fn<(e :: E)>(@_wildcard-x580_35: _10005){\n                (std/core/hnd/initially-prompt<a,(e :: E)>(init, (cont(x))));\n              }));\n    std/core/types/Unit;\n  ((@skip std/core/types/False() : bool ) as @pat@3: bool)\n     -> std/core/types/Unit;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match ((std/core/hnd/yielding())) {\n  ((std/core/types/True() : bool ) as @pat@2: bool)\n     -> val _@0 : a\n              = std/core/hnd/yield-extend<_a,a,(e :: E)>((fn<(e :: E)>(@_wildcard-x580_35: _10005){\n                (std/core/hnd/initially-prompt<a,(e :: E)>(init, (cont(x))));\n              }));\n    std/core/types/Unit;\n  ((@skip std/core/types/False() : bool ) as @pat@3: bool)\n     -> std/core/types/Unit;\n}","traced":{"any":[]}},
{"op":"Switch","arg":3,"values":[true],"targets":[917],"default":920}]},
{"label":"922([switch case for Bool(false)#2560])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@1,{\"op\": \"Primitive\",\"name\": \"infixEq(Int, Int): Int\",\"args\": [{\"op\": \"Var\",\"id\": \"cnt\",\"type\": {\"op\": \"Int\"}}, {\"op\": \"Literal\",\"type\": {\"op\": \"Int\"},\"value\": 0}],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: val r : ()\n      = init(cnt);\nmatch ((std/core/hnd/yielding())) {\n  ((std/core/types/True() : bool ) as @pat@2: bool)\n     -> val _@0 : a\n              = std/core/hnd/yield-extend<_a,a,(e :: E)>((fn<(e :: E)>(@_wildcard-x580_35: _10005){\n                (std/core/hnd/initially-prompt<a,(e :: E)>(init, (cont(x))));\n              }));\n    std/core/types/Unit;\n  ((@skip std/core/types/False() : bool ) as @pat@3: bool)\n     -> std/core/types/Unit;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: init(cnt)","traced":{"any":[]}},
{"op":"Push","target":921,"args":{"any":[1,2,3]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: init(cnt)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: val r : ()\n      = init(cnt);\nmatch ((std/core/hnd/yielding())) {\n  ((std/core/types/True() : bool ) as @pat@2: bool)\n     -> val _@0 : a\n              = std/core/hnd/yield-extend<_a,a,(e :: E)>((fn<(e :: E)>(@_wildcard-x580_35: _10005){\n                (std/core/hnd/initially-prompt<a,(e :: E)>(init, (cont(x))));\n              }));\n    std/core/types/Unit;\n  ((@skip std/core/types/False() : bool ) as @pat@3: bool)\n     -> std/core/types/Unit;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@1,{\"op\": \"Primitive\",\"name\": \"infixEq(Int, Int): Int\",\"args\": [{\"op\": \"Var\",\"id\": \"cnt\",\"type\": {\"op\": \"Int\"}}, {\"op\": \"Literal\",\"type\": {\"op\": \"Int\"},\"value\": 0}],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Invoke","receiver":2,"tag":"apply","args":{"any":[0]}}]},
{"label":"923([switch default case#2583])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"924([switch default case#2556])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Const","format":"int","out":4,"value":0},
{"op":"PrimOp","name":"infixEq(Int, Int): Int","out":{"any":[4]},"in":{"any":[0,4]}},
{"op":"Switch","arg":4,"values":[false],"targets":[922],"default":923}]},
{"label":"925([mcore:[#1342]#2541])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"cnt\",\"type\": {\"op\": \"Int\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/ref/(!)<(global :: H),int,<(alloc :: H -> X)<(global :: H)>,(write :: H -> X)<(global :: H)>|(e :: E)>>(count)","traced":{"any":[]}},
{"op":"PrimOp","name":"getRef(Ref[Ptr]): Ptr","out":{"any":[4]},"in":{"any":[2]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/set<int,(global :: H)>(count, (std/core/hnd/add(cnt, 1)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/add(cnt, 1)","traced":{"any":[]}},
{"op":"Const","format":"int","out":5,"value":1},
{"op":"PrimOp","name":"infixAdd(Int, Int): Int","out":{"any":[5]},"in":{"any":[4,5]}},
{"op":"PrimOp","name":"setRef(Ref[Ptr], Ptr): Unit","out":{"any":[2]},"in":{"any":[2,5]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_@1\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match ((std/core/hnd/eq(cnt, 0))) {\n  ((std/core/types/True() : bool ) as @pat@0: bool)\n     -> std/core/types/Unit;\n  ((@skip std/core/types/False() : bool ) as @pat@1: bool)\n     -> val r : ()\n              = init(cnt);\n    (match ((std/core/hnd/yielding())) {\n      ((std/core/types/True() : bool ) as @pat@2: bool)\n         -> val _@0 : a\n                  = std/core/hnd/yield-extend<_a,a,(e :: E)>((fn<(e :: E)>(@_wildcard-x580_35: _10005){\n                    (std/core/hnd/initially-prompt<a,(e :: E)>(init, (cont(x))));\n                  }));\n        std/core/types/Unit;\n      ((@skip std/core/types/False() : bool ) as @pat@3: bool)\n         -> std/core/types/Unit;\n    });\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"int","out":2,"value":0},
{"op":"PrimOp","name":"infixEq(Int, Int): Int","out":{"any":[2]},"in":{"any":[4,2]}},
{"op":"Push","target":912,"args":{"any":[0,3,1]}},
{"op":"Swap","a":0,"b":4},
{"op":"Swap","a":1,"b":4},
{"op":"Swap","a":3,"b":4},
{"op":"Swap","a":2,"b":4},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match ((std/core/hnd/eq(cnt, 0))) {\n  ((std/core/types/True() : bool ) as @pat@0: bool)\n     -> std/core/types/Unit;\n  ((@skip std/core/types/False() : bool ) as @pat@1: bool)\n     -> val r : ()\n              = init(cnt);\n    (match ((std/core/hnd/yielding())) {\n      ((std/core/types/True() : bool ) as @pat@2: bool)\n         -> val _@0 : a\n                  = std/core/hnd/yield-extend<_a,a,(e :: E)>((fn<(e :: E)>(@_wildcard-x580_35: _10005){\n                    (std/core/hnd/initially-prompt<a,(e :: E)>(init, (cont(x))));\n                  }));\n        std/core/types/Unit;\n      ((@skip std/core/types/False() : bool ) as @pat@3: bool)\n         -> std/core/types/Unit;\n    });\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_@1\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/add(cnt, 1)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/set<int,(global :: H)>(count, (std/core/hnd/add(cnt, 1)))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/ref/(!)<(global :: H),int,<(alloc :: H -> X)<(global :: H)>,(write :: H -> X)<(global :: H)>|(e :: E)>>(count)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"cnt\",\"type\": {\"op\": \"Int\"}}","traced":{"any":[]}},
{"op":"Switch","arg":4,"values":[true],"targets":[913],"default":924}]},
{"label":"926([#2591])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Jump","target":925}]},
{"label":"927([k@[switch case for Bool(true)#2585]#2595])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"928([switch case for Bool(true)#2585])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: val count : (ref :: (H, V) -> V)<(global :: H),int>\n      = std/core/types/ref<int,(global :: H)>(0);\nstd/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (10059 :: E) 10058, x: a){\n  val cnt : int;\n  val _ : ();\n  val _@1 : ();\n  std/core/hnd/initially-prompt<b,(e :: E)>(init, (cont(x)));\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"count\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"ref\\\"\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/ref<int,(global :: H)>(0)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: 0","traced":{"any":[]}},
{"op":"Const","format":"int","out":1,"value":0},
{"op":"PrimOp","name":"mkRef(Ptr): Ref[Ptr]","out":{"any":[1]},"in":{"any":[1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (10059 :: E) 10058, x: a){\n  val cnt : int;\n  val _ : ();\n  val _@1 : ();\n  std/core/hnd/initially-prompt<b,(e :: E)>(init, (cont(x)));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[926],"args":{"any":[1,0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (10059 :: E) 10058, x: a){\n  val cnt : int;\n  val _ : ();\n  val _@1 : ();\n  std/core/hnd/initially-prompt<b,(e :: E)>(init, (cont(x)));\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: 0","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/ref<int,(global :: H)>(0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"count\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"ref\\\"\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: val count : (ref :: (H, V) -> V)<(global :: H),int>\n      = std/core/types/ref<int,(global :: H)>(0);\nstd/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (10059 :: E) 10058, x: a){\n  val cnt : int;\n  val _ : ();\n  val _@1 : ();\n  std/core/hnd/initially-prompt<b,(e :: E)>(init, (cont(x)));\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":212}]},
{"label":"929([switch case for Bool(false)#2599])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@4,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@4,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"930([switch default case#2600])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"931([switch default case#2597])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Switch","arg":1,"values":[false],"targets":[929],"default":930}]},
{"label":"932([mcore:[#1344]#2540])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"int","out":2,"value":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":2,"values":[true],"targets":[928],"default":931}]},
{"label":"933([k@[mcore:[#1352]#2601]#2603])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Swap","a":0,"b":1},
{"op":"Jump","target":932}]},
{"label":"934([mcore:[#1352]#2601])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/initially-prompt<a,(e :: E)>(init, (action()))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: action()","traced":{"any":[]}},
{"op":"Push","target":933,"args":{"any":[2]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: action()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/initially-prompt<a,(e :: E)>(init, (action()))","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[]}}]},
{"label":"935([#2614])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Jump","target":934}]},
{"label":"936([k@[switch case for Bool(true)#2611]#2618])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"937([switch case for Bool(true)#2611])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-extend<(),a,(e :: E)>((fn<(e :: E)>(@_wildcard-x568_40: ()){\n  (std/core/hnd/initially-prompt<a,(e :: E)>(init, (action())));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[935],"args":{"any":[0,1]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-extend<(),a,(e :: E)>((fn<(e :: E)>(@_wildcard-x568_40: ()){\n  (std/core/hnd/initially-prompt<a,(e :: E)>(init, (action())));\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":211}]},
{"label":"938([#2627])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"939([k@[switch case for Bool(false)#2622]#2624])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Swap","a":0,"b":1},
{"op":"Jump","target":932}]},
{"label":"940([switch case for Bool(false)#2622])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/initially-prompt<a,(e :: E)>(init, (action()))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: action()","traced":{"any":[]}},
{"op":"Push","target":939,"args":{"any":[1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: action()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/initially-prompt<a,(e :: E)>(init, (action()))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Invoke","receiver":0,"tag":"apply","args":{"any":[]}}]},
{"label":"941([switch default case#2629])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"942([switch default case#2620])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"int","out":2,"value":0},
{"op":"Switch","arg":2,"values":[false],"targets":[940],"default":941}]},
{"label":"943([k@[mcore:[#1358]#2605]#2609])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":2,"values":[true],"targets":[937],"default":942}]},
{"label":"944([mcore:[#1358]#2605])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: init(0)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: 0","traced":{"any":[]}},
{"op":"Const","format":"int","out":2,"value":0},
{"op":"Push","target":943,"args":{"any":[1,0]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: 0","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: init(0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"945([k@[mcore:[#1368]#2630]#2632])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Swap","a":0,"b":1},
{"op":"Jump","target":953}]},
{"label":"946([mcore:[#1368]#2630])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_@0\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/local-set<a,(div :: X),(h :: H)>(loc, v)","traced":{"any":[]}},
{"op":"PrimOp","name":"setRef(Ref[Ptr], Ptr): Unit","out":{"any":[3]},"in":{"any":[2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/prompt-local-var<a,a,(total :: E),(h :: H)>(loc, (cont(x)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: cont(x)","traced":{"any":[]}},
{"op":"Push","target":945,"args":{"any":[2]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: cont(x)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/prompt-local-var<a,a,(total :: E),(h :: H)>(loc, (cont(x)))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/local-set<a,(div :: X),(h :: H)>(loc, v)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_@0\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"947([#2640])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Jump","target":946}]},
{"label":"948([k@[switch case for Bool(true)#2636]#2644])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"949([switch case for Bool(true)#2636])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"b@10035\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: val v : a\n      = std/core/types/local-get<a,(h :: H),(div :: X)>(loc);\nstd/core/hnd/yield-cont<a,<(div :: X),(local :: H -> X)<(h :: H)>>,a>((forall<a> fn<<(div :: X),(local :: H -> X)<(h :: H)>>>(cont: (a) -> <(div :: X),(local :: H -> X)<(10233 :: H)>> 10231, x: a){\n  val _@0 : ()\n        = std/core/types/local-set<b,(div :: X),(h :: H)>(loc, v);\n  std/core/hnd/prompt-local-var<b,b,(total :: E),(h :: H)>(loc, (cont(x)));\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"v\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/local-get<a,(h :: H),(div :: X)>(loc)","traced":{"any":[]}},
{"op":"PrimOp","name":"getRef(Ref[Ptr]): Ptr","out":{"any":[0]},"in":{"any":[1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,<(div :: X),(local :: H -> X)<(h :: H)>>,a>((forall<a> fn<<(div :: X),(local :: H -> X)<(h :: H)>>>(cont: (a) -> <(div :: X),(local :: H -> X)<(10233 :: H)>> 10231, x: a){\n  val _@0 : ()\n        = std/core/types/local-set<b,(div :: X),(h :: H)>(loc, v);\n  std/core/hnd/prompt-local-var<b,b,(total :: E),(h :: H)>(loc, (cont(x)));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[947],"args":{"any":[1,0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,<(div :: X),(local :: H -> X)<(h :: H)>>,a>((forall<a> fn<<(div :: X),(local :: H -> X)<(h :: H)>>>(cont: (a) -> <(div :: X),(local :: H -> X)<(10233 :: H)>> 10231, x: a){\n  val _@0 : ()\n        = std/core/types/local-set<b,(div :: X),(h :: H)>(loc, v);\n  std/core/hnd/prompt-local-var<b,b,(total :: E),(h :: H)>(loc, (cont(x)));\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/local-get<a,(h :: H),(div :: X)>(loc)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"v\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: val v : a\n      = std/core/types/local-get<a,(h :: H),(div :: X)>(loc);\nstd/core/hnd/yield-cont<a,<(div :: X),(local :: H -> X)<(h :: H)>>,a>((forall<a> fn<<(div :: X),(local :: H -> X)<(h :: H)>>>(cont: (a) -> <(div :: X),(local :: H -> X)<(10233 :: H)>> 10231, x: a){\n  val _@0 : ()\n        = std/core/types/local-set<b,(div :: X),(h :: H)>(loc, v);\n  std/core/hnd/prompt-local-var<b,b,(total :: E),(h :: H)>(loc, (cont(x)));\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"b@10035\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Jump","target":212}]},
{"label":"950([switch case for Bool(false)#2647])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"b@10035\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"b@10035\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"951([switch default case#2648])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"952([switch default case#2646])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Switch","arg":1,"values":[false],"targets":[950],"default":951}]},
{"label":"953([mcore:[#1370]#2634])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"b@10035\",\"type\": {\"op\": \"Bool\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yielding()","traced":{"any":[]}},
{"op":"Const","format":"int","out":2,"value":0},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yielding()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"b@10035\",\"type\": {\"op\": \"Bool\"}}","traced":{"any":[]}},
{"op":"Switch","arg":0,"values":[true],"targets":[949],"default":952}]},
{"label":"954([k@[mcore:[#1377]#2649]#2651])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/prompt-local-var<a,a,(h :: H)>(loc, res)","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/prompt-local-var<a,a,(h :: H)>(loc, res)","traced":{"any":[]}},
{"op":"Jump","target":953}]},
{"label":"955([mcore:[#1377]#2649])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"loc\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"local-var\\\"\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/local-new<a,<(div :: X)|(e :: E)>,(h :: H)>(init)","traced":{"any":[]}},
{"op":"PrimOp","name":"mkRef(Ptr): Ref[Ptr]","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"res\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: action(loc)","traced":{"any":[]}},
{"op":"Push","target":954,"args":{"any":[0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: action(loc)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"res\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/local-new<a,<(div :: X)|(e :: E)>,(h :: H)>(init)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"loc\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"local-var\\\"\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"956([mcore:[#1381]#2652])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@prompt-local-var-prim-vm<a,a,(e :: E),(h :: H)>(init, action)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@prompt-local-var-prim-vm<a,a,(e :: E),(h :: H)>(init, action)","traced":{"any":[]}},
{"op":"Jump","target":198}]},
{"label":"957([k@[mcore:[#1387]#2653]#2655])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"Jump","target":975}]},
{"label":"958([mcore:[#1387]#2653])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/try-finalize-prompt<a,(e :: E)>((cont(x)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: cont(x)","traced":{"any":[]}},
{"op":"Push","target":957,"args":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: cont(x)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/try-finalize-prompt<a,(e :: E)>((cont(x)))","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"959([mcore:[#1389]#2661])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"std/core/types/Left"}]},
{"label":"960([mcore:[#1393]#2666])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"std/core/types/Right"}]},
{"label":"961([#2676])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Jump","target":958}]},
{"label":"962([k@[switch case for Bool(true)#2672]#2683])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"963([switch case for Bool(true)#2672])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),(either :: (V, V) -> V)<hnd/yield-info,a>>((forall<a> fn<(e :: E)>(cont: (a) -> (10462 :: E) 10461, x: a){\n  std/core/hnd/try-finalize-prompt<b,(e :: E)>((cont(x)));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[961],"args":{"any":[]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),(either :: (V, V) -> V)<hnd/yield-info,a>>((forall<a> fn<(e :: E)>(cont: (a) -> (10462 :: E) 10461, x: a){\n  std/core/hnd/try-finalize-prompt<b,(e :: E)>((cont(x)));\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":212}]},
{"label":"964([k@[switch case for Bool(false)#2687]#2690])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"965([#2700])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"966([k@[switch case for Bool(true)#2692]#2694])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"Jump","target":959}]},
{"label":"967([switch case for Bool(true)#2692])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"b@10068\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/Left<hnd/yield-info,a>((std/core/hnd/yield-capture<(e :: E)>()))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-capture<(e :: E)>()","traced":{"any":[]}},
{"op":"Push","target":966,"args":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-capture<(e :: E)>()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/Left<hnd/yield-info,a>((std/core/hnd/yield-capture<(e :: E)>()))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"b@10068\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Jump","target":250}]},
{"label":"968([k@[switch case for Bool(false)#2703]#2708])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"969([switch case for Bool(false)#2703])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0@0,{\"op\": \"Var\",\"id\": \"b@10068\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/Right<hnd/yield-info,a>(res)","traced":{"any":[]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/Right<hnd/yield-info,a>(res)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0@0,{\"op\": \"Var\",\"id\": \"b@10068\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Jump","target":960}]},
{"label":"970([switch default case#2710])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"971([switch default case#2702])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Swap","a":0,"b":1},
{"op":"Switch","arg":1,"values":[false],"targets":[969],"default":970}]},
{"label":"972([switch case for Bool(false)#2687])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: val b@10068 : bool\n      = std/core/hnd/yielding();\nmatch (b@10068) {\n  ((std/core/types/True() : bool ) as @pat@1: bool)\n     -> std/core/types/Left<hnd/yield-info,a>((std/core/hnd/yield-capture<(e :: E)>()));\n  ((@skip std/core/types/False() : bool ) as @pat@0@0: bool)\n     -> std/core/types/Right<hnd/yield-info,a>(res);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"b@10068\",\"type\": {\"op\": \"Bool\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yielding()","traced":{"any":[]}},
{"op":"Const","format":"int","out":1,"value":0},
{"op":"Debug","msg":"BGN: genExpr: match (b@10068) {\n  ((std/core/types/True() : bool ) as @pat@1: bool)\n     -> std/core/types/Left<hnd/yield-info,a>((std/core/hnd/yield-capture<(e :: E)>()));\n  ((@skip std/core/types/False() : bool ) as @pat@0@0: bool)\n     -> std/core/types/Right<hnd/yield-info,a>(res);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (b@10068) {\n  ((std/core/types/True() : bool ) as @pat@1: bool)\n     -> std/core/types/Left<hnd/yield-info,a>((std/core/hnd/yield-capture<(e :: E)>()));\n  ((@skip std/core/types/False() : bool ) as @pat@0@0: bool)\n     -> std/core/types/Right<hnd/yield-info,a>(res);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yielding()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"b@10068\",\"type\": {\"op\": \"Bool\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: val b@10068 : bool\n      = std/core/hnd/yielding();\nmatch (b@10068) {\n  ((std/core/types/True() : bool ) as @pat@1: bool)\n     -> std/core/types/Left<hnd/yield-info,a>((std/core/hnd/yield-capture<(e :: E)>()));\n  ((@skip std/core/types/False() : bool ) as @pat@0@0: bool)\n     -> std/core/types/Right<hnd/yield-info,a>(res);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Switch","arg":0,"values":[true],"targets":[967],"default":971}]},
{"label":"973([switch default case#2711])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"974([switch default case#2685])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Const","format":"int","out":1,"value":0},
{"op":"Switch","arg":1,"values":[false],"targets":[972],"default":973}]},
{"label":"975([mcore:[#1396]#2660])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"int","out":1,"value":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":1,"values":[true],"targets":[963],"default":974}]},
{"label":"976([mcore:[#1397]#2712])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"swapCurrentEvv"}]},
{"label":"977([mcore:[#1402]#2717])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"978([mcore:[#1404]#2722])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"swapCurrentEvv"}]},
{"label":"979([mcore:[#1412]#2727])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/under1x<a,a,(e :: E),(a :: (E, V) -> V)>(ev, cont@0, res@0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/under1x<a,a,(e :: E),(a :: (E, V) -> V)>(ev, cont@0, res@0)","traced":{"any":[]}},
{"op":"Jump","target":736}]},
{"label":"980([mcore:[#1414]#2731])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"981([#2746])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Jump","target":979}]},
{"label":"982([k@[switch case for Bool(true)#2742]#2753])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"983([switch case for Bool(true)#2742])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@5,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont@0: (a) -> (10557 :: E) 10556, res@0: a){\n  std/core/hnd/under1x<a,b,(e :: E),(b :: (E, V) -> V)>(ev, cont@0, res@0);\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[981],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont@0: (a) -> (10557 :: E) 10556, res@0: a){\n  std/core/hnd/under1x<a,b,(e :: E),(b :: (E, V) -> V)>(ev, cont@0, res@0);\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@5,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":212}]},
{"label":"984([k@[switch case for Bool(false)#2757]#2762])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: y","traced":{"any":[]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: y","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"985([switch case for Bool(false)#2757])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0@1,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: val _@0 : ()\n      = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0);\ny","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_@0\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Push","target":984,"args":{"any":[1]}},
{"op":"Copy","from":2,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_@0\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: val _@0 : ()\n      = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0);\ny","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0@1,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":980}]},
{"label":"986([switch default case#2764])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"987([switch default case#2755])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Switch","arg":2,"values":[false],"targets":[985],"default":986}]},
{"label":"988([k@[k@[mcore:[#1415]#2736]#2738]#2740])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"int","out":3,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":3,"values":[true],"targets":[983],"default":987}]},
{"label":"989([k@[mcore:[#1415]#2736]#2738])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: cont(res)","traced":{"any":[]}},
{"op":"Push","target":988,"args":{"any":[2,0]}},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: cont(res)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"990([match_def@[mcore:[#1415]#2736]#2765])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"991([k@[#2766]#2771])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"992([#2766])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@4,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"110\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0@0: hnd/htag<10558>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"110\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@1@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"111\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@1@0: hnd/marker<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"111\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@2@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"112\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2@0: 10558<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"112\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(w@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"113\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (w@0: hnd/evv<4237>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"113\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap<(total :: E),(e :: E),(_e :: E)>(w@0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap<(total :: E),(e :: E),(_e :: E)>(w@0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@4,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"110\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0@0: hnd/htag<10558>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"110\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@1@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"111\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@1@0: hnd/marker<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"111\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@2@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"112\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2@0: 10558<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"112\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(w@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"113\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (w@0: hnd/evv<4237>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"113\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Jump","target":978}]},
{"label":"993([mcore:[#1415]#2736])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w0@0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (ev) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0@0: (hnd/htag :: ((E, V) -> V) -> V)<(10558 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@1@0: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@2@0: (10558 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (w@0: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat@4: ((hnd/ev :: ((E, V) -> V) -> V)<(10558 :: (E, V) -> V)>))\n     -> std/core/hnd/evv-swap<(total :: E),(e :: E),(_e1 :: E)>(w@0);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"110\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"111\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"112\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"113\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Push","target":989,"args":{"any":[0,2,1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"110\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"111\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"112\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"113\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (ev) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0@0: (hnd/htag :: ((E, V) -> V) -> V)<(10558 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@1@0: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@2@0: (10558 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (w@0: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat@4: ((hnd/ev :: ((E, V) -> V) -> V)<(10558 :: (E, V) -> V)>))\n     -> std/core/hnd/evv-swap<(total :: E),(e :: E),(_e1 :: E)>(w@0);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w0@0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/ev","scrutinee":2,"clauses":[{"tag":"std/core/hnd/Ev","target":992,"args":{"any":[0,1,2,3]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3076]","target":990,"args":{"any":[]}}}]},
{"label":"994([#2788])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Jump","target":993}]},
{"label":"995([k@[switch case for Bool(true)#2784]#2795])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"996([switch case for Bool(true)#2784])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@3,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (10557 :: E) 10556, res: a){\n  val w0@0 : (hnd/evv :: E -> V)<(_e :: E)>;\n  val y : b;\n  (match ((std/core/hnd/yielding())) {\n    ((std/core/types/True() : bool ) as @pat@5: bool)\n       -> std/core/hnd/yield-cont<b,(e :: E),b>((forall<b> fn<(e :: E)>(cont@0: (b) -> (10557 :: E) 10556, res@0: b){\n        std/core/hnd/under1x<b,c,(e :: E),(c :: (E, V) -> V)>(ev, cont@0, res@0);\n      }));\n    ((@skip std/core/types/False() : bool ) as @pat@0@1: bool)\n       -> val _@0 : ()\n                = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0);\n      y;\n  });\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[994],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (10557 :: E) 10556, res: a){\n  val w0@0 : (hnd/evv :: E -> V)<(_e :: E)>;\n  val y : b;\n  (match ((std/core/hnd/yielding())) {\n    ((std/core/types/True() : bool ) as @pat@5: bool)\n       -> std/core/hnd/yield-cont<b,(e :: E),b>((forall<b> fn<(e :: E)>(cont@0: (b) -> (10557 :: E) 10556, res@0: b){\n        std/core/hnd/under1x<b,c,(e :: E),(c :: (E, V) -> V)>(ev, cont@0, res@0);\n      }));\n    ((@skip std/core/types/False() : bool ) as @pat@0@1: bool)\n       -> val _@0 : ()\n                = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0);\n      y;\n  });\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@3,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":212}]},
{"label":"997([switch case for Bool(false)#2799])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0@2,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0@2,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"998([switch default case#2800])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"999([switch default case#2797])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Switch","arg":1,"values":[false],"targets":[997],"default":998}]},
{"label":"1000([#2782])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":2,"values":[true],"targets":[996],"default":999}]},
{"label":"1001([k@[k@[mcore:[#1417]#2773]#2775]#2777])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Push","target":1000,"args":{"any":[1,0]}},
{"op":"Copy","from":3,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":977}]},
{"label":"1002([k@[mcore:[#1417]#2773]#2775])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"z\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: op(x1, x2, x3)","traced":{"any":[]}},
{"op":"Push","target":1001,"args":{"any":[1,0]}},
{"op":"Copy","from":4,"to":1},
{"op":"Copy","from":3,"to":0},
{"op":"Copy","from":2,"to":3},
{"op":"Copy","from":5,"to":2},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op(x1, x2, x3)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"z\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":3,"tag":"apply","args":{"any":[0,1,2]}}]},
{"label":"1003([match_def@[mcore:[#1417]#2773]#2801])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1004([k@[#2802]#2807])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1005([#2802])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"110\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<10558>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"110\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"111\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/marker<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"111\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"112\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2: 10558<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"112\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(w,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"113\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (w: hnd/evv<4237>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"113\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap<(total :: E),(e :: E),(_e :: E)>(w)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap<(total :: E),(e :: E),(_e :: E)>(w)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"110\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<10558>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"110\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"111\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/marker<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"111\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"112\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2: 10558<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"112\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(w,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"113\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (w: hnd/evv<4237>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"113\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Jump","target":976}]},
{"label":"1006([mcore:[#1417]#2773])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4,5]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (ev) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0: (hnd/htag :: ((E, V) -> V) -> V)<(10558 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@1: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@2: (10558 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (w: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat: ((hnd/ev :: ((E, V) -> V) -> V)<(10558 :: (E, V) -> V)>))\n     -> std/core/hnd/evv-swap<(total :: E),(e :: E),(_e1 :: E)>(w);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"110\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"111\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"112\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"113\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Push","target":1002,"args":{"any":[0,1,2,3,4]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"110\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"111\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"112\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"113\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (ev) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0: (hnd/htag :: ((E, V) -> V) -> V)<(10558 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@1: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@2: (10558 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (w: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat: ((hnd/ev :: ((E, V) -> V) -> V)<(10558 :: (E, V) -> V)>))\n     -> std/core/hnd/evv-swap<(total :: E),(e :: E),(_e1 :: E)>(w);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/ev","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Ev","target":1005,"args":{"any":[0,1,2,3]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3077]","target":1003,"args":{"any":[]}}}]},
{"label":"1007([mcore:[#1418]#2809])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"swapCurrentEvv"}]},
{"label":"1008([mcore:[#1424]#2814])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"1009([mcore:[#1426]#2819])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"swapCurrentEvv"}]},
{"label":"1010([mcore:[#1434]#2824])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/under1x<a,a,(e :: E),(a :: (E, V) -> V)>(ev, cont@0, res@0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/under1x<a,a,(e :: E),(a :: (E, V) -> V)>(ev, cont@0, res@0)","traced":{"any":[]}},
{"op":"Jump","target":736}]},
{"label":"1011([mcore:[#1436]#2828])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"setCurrentEvv"}]},
{"label":"1012([#2843])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Jump","target":1010}]},
{"label":"1013([k@[switch case for Bool(true)#2839]#2850])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1014([switch case for Bool(true)#2839])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@5,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont@0: (a) -> (10670 :: E) 10669, res@0: a){\n  std/core/hnd/under1x<a,b,(e :: E),(b :: (E, V) -> V)>(ev, cont@0, res@0);\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[1012],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont@0: (a) -> (10670 :: E) 10669, res@0: a){\n  std/core/hnd/under1x<a,b,(e :: E),(b :: (E, V) -> V)>(ev, cont@0, res@0);\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@5,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":212}]},
{"label":"1015([k@[switch case for Bool(false)#2854]#2859])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: y","traced":{"any":[]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: y","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1016([switch case for Bool(false)#2854])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0@1,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: val _@0 : ()\n      = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0);\ny","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_@0\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Push","target":1015,"args":{"any":[1]}},
{"op":"Copy","from":2,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_@0\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: val _@0 : ()\n      = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0);\ny","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0@1,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":1011}]},
{"label":"1017([switch default case#2861])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1018([switch default case#2852])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Switch","arg":2,"values":[false],"targets":[1016],"default":1017}]},
{"label":"1019([k@[k@[mcore:[#1437]#2833]#2835]#2837])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"int","out":3,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":3,"values":[true],"targets":[1014],"default":1018}]},
{"label":"1020([k@[mcore:[#1437]#2833]#2835])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: cont(res)","traced":{"any":[]}},
{"op":"Push","target":1019,"args":{"any":[2,0]}},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: cont(res)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"y\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"1021([match_def@[mcore:[#1437]#2833]#2862])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1022([k@[#2863]#2868])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1023([#2863])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@4,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"110\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0@0: hnd/htag<10671>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"110\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@1@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"111\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@1@0: hnd/marker<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"111\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@2@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"112\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2@0: 10671<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"112\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(w@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"113\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (w@0: hnd/evv<4237>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"113\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap<(total :: E),(e :: E),(_e :: E)>(w@0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap<(total :: E),(e :: E),(_e :: E)>(w@0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@4,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"110\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0@0: hnd/htag<10671>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"110\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@1@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"111\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@1@0: hnd/marker<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"111\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@2@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"112\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2@0: 10671<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"112\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(w@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"113\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (w@0: hnd/evv<4237>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"113\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Jump","target":1009}]},
{"label":"1024([mcore:[#1437]#2833])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w0@0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (ev) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0@0: (hnd/htag :: ((E, V) -> V) -> V)<(10671 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@1@0: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@2@0: (10671 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (w@0: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat@4: ((hnd/ev :: ((E, V) -> V) -> V)<(10671 :: (E, V) -> V)>))\n     -> std/core/hnd/evv-swap<(total :: E),(e :: E),(_e1 :: E)>(w@0);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"110\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"111\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"112\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"113\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Push","target":1020,"args":{"any":[0,2,1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"110\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"111\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"112\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"113\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (ev) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0@0: (hnd/htag :: ((E, V) -> V) -> V)<(10671 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@1@0: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@2@0: (10671 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (w@0: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat@4: ((hnd/ev :: ((E, V) -> V) -> V)<(10671 :: (E, V) -> V)>))\n     -> std/core/hnd/evv-swap<(total :: E),(e :: E),(_e1 :: E)>(w@0);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w0@0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/ev","scrutinee":2,"clauses":[{"tag":"std/core/hnd/Ev","target":1023,"args":{"any":[0,1,2,3]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3078]","target":1021,"args":{"any":[]}}}]},
{"label":"1025([#2885])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Jump","target":1024}]},
{"label":"1026([k@[switch case for Bool(true)#2881]#2892])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1027([switch case for Bool(true)#2881])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@3,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (10670 :: E) 10669, res: a){\n  val w0@0 : (hnd/evv :: E -> V)<(_e :: E)>;\n  val y : b;\n  (match ((std/core/hnd/yielding())) {\n    ((std/core/types/True() : bool ) as @pat@5: bool)\n       -> std/core/hnd/yield-cont<b,(e :: E),b>((forall<b> fn<(e :: E)>(cont@0: (b) -> (10670 :: E) 10669, res@0: b){\n        std/core/hnd/under1x<b,c,(e :: E),(c :: (E, V) -> V)>(ev, cont@0, res@0);\n      }));\n    ((@skip std/core/types/False() : bool ) as @pat@0@1: bool)\n       -> val _@0 : ()\n                = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0);\n      y;\n  });\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[1025],"args":{"any":[0]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-cont<a,(e :: E),a>((forall<a> fn<(e :: E)>(cont: (a) -> (10670 :: E) 10669, res: a){\n  val w0@0 : (hnd/evv :: E -> V)<(_e :: E)>;\n  val y : b;\n  (match ((std/core/hnd/yielding())) {\n    ((std/core/types/True() : bool ) as @pat@5: bool)\n       -> std/core/hnd/yield-cont<b,(e :: E),b>((forall<b> fn<(e :: E)>(cont@0: (b) -> (10670 :: E) 10669, res@0: b){\n        std/core/hnd/under1x<b,c,(e :: E),(c :: (E, V) -> V)>(ev, cont@0, res@0);\n      }));\n    ((@skip std/core/types/False() : bool ) as @pat@0@1: bool)\n       -> val _@0 : ()\n                = std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0@0);\n      y;\n  });\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@3,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":212}]},
{"label":"1028([switch case for Bool(false)#2896])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0@2,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0@2,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1029([switch default case#2897])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1030([switch default case#2894])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Switch","arg":1,"values":[false],"targets":[1028],"default":1029}]},
{"label":"1031([#2879])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":2,"values":[true],"targets":[1027],"default":1030}]},
{"label":"1032([k@[k@[mcore:[#1439]#2870]#2872]#2874])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Push","target":1031,"args":{"any":[1,0]}},
{"op":"Copy","from":3,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-set<(e :: E),(_e :: E)>(w0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":1008}]},
{"label":"1033([k@[mcore:[#1439]#2870]#2872])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"z\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: op(x1, x2, x3, x4)","traced":{"any":[]}},
{"op":"Push","target":1032,"args":{"any":[1,0]}},
{"op":"Copy","from":4,"to":1},
{"op":"Copy","from":3,"to":0},
{"op":"Copy","from":2,"to":4},
{"op":"Copy","from":6,"to":3},
{"op":"Copy","from":5,"to":2},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: op(x1, x2, x3, x4)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"z\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":4,"tag":"apply","args":{"any":[0,1,2,3]}}]},
{"label":"1034([match_def@[mcore:[#1439]#2870]#2898])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1035([k@[#2899]#2904])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1036([#2899])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"110\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<10671>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"110\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"111\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/marker<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"111\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"112\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2: 10671<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"112\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(w,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"113\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (w: hnd/evv<4237>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"113\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/evv-swap<(total :: E),(e :: E),(_e :: E)>(w)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/evv-swap<(total :: E),(e :: E),(_e :: E)>(w)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"110\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<10671>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"110\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"111\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/marker<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"111\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"112\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@2: 10671<4237,4238>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"112\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(w,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"113\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (w: hnd/evv<4237>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"113\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Jump","target":1007}]},
{"label":"1037([mcore:[#1439]#2870])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4,5,6]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"w0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (ev) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0: (hnd/htag :: ((E, V) -> V) -> V)<(10671 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@1: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@2: (10671 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (w: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat: ((hnd/ev :: ((E, V) -> V) -> V)<(10671 :: (E, V) -> V)>))\n     -> std/core/hnd/evv-swap<(total :: E),(e :: E),(_e1 :: E)>(w);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"110\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"111\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"112\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"113\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Push","target":1033,"args":{"any":[0,1,2,3,4,5]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"ev\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"110\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"111\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"112\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"113\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (ev) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0: (hnd/htag :: ((E, V) -> V) -> V)<(10671 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (@pat@1: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@2: (10671 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (w: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat: ((hnd/ev :: ((E, V) -> V) -> V)<(10671 :: (E, V) -> V)>))\n     -> std/core/hnd/evv-swap<(total :: E),(e :: E),(_e1 :: E)>(w);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"w0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/ev","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Ev","target":1036,"args":{"any":[0,1,2,3]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3079]","target":1034,"args":{"any":[]}}}]},
{"label":"1038([k@[mcore:[#1443]#2906]#2908])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"Jump","target":975}]},
{"label":"1039([mcore:[#1443]#2906])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/try-finalize-prompt<a,(e :: E)>((action()))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: action()","traced":{"any":[]}},
{"op":"Push","target":1038,"args":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: action()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/try-finalize-prompt<a,(e :: E)>((action()))","traced":{"any":[]}},
{"op":"Invoke","receiver":0,"tag":"apply","args":{"any":[]}}]},
{"label":"1040([k@[switch case for Bool(true)#2915]#2917])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1041([switch case for Bool(true)#2915])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-extend<a,a,(e :: E)>(extend)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-extend<a,a,(e :: E)>(extend)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":211}]},
{"label":"1042([k@[switch case for Bool(false)#2921]#2923])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1043([switch case for Bool(false)#2921])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: next(x)","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: next(x)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Primitive\",\"name\": \"!sexp:0\",\"args\": [],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[0]}}]},
{"label":"1044([switch default case#2925])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1045([switch default case#2919])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Switch","arg":2,"values":[false],"targets":[1043],"default":1044}]},
{"label":"1046([mcore:[#1448]#2913])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"int","out":3,"value":0},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":3,"values":[true],"targets":[1041],"default":1045}]},
{"label":"1047([match_def@[mcore:[#1452]#2926]#2927])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1048([k@[#2928]#2930])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1049([match_def@[#2928]#2932])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1050([k@[match_std/core/hnd/Ev@[#2928]#2933]#2935])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1051([match_std/core/hnd/Ev@[#2928]#2933])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@3,{\"op\": \"Var\",\"id\": \"@pat-x142_37\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@4,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"114\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@4: hnd/htag<10801>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"114\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(m2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"115\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (m2: hnd/marker<10770,10771>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"115\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@5,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"116\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@5: 10801<10770,10771>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"116\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@6,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"117\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (@pat@6: hnd/evv<10770>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"117\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/eq-marker<a,a,(e :: E),(e :: E)>(m1, m2)","traced":{"any":[]}},
{"op":"Copy","from":2,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/eq-marker<a,a,(e :: E),(e :: E)>(m1, m2)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@3,{\"op\": \"Var\",\"id\": \"@pat-x142_37\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@4,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"114\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@4: hnd/htag<10801>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"114\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(m2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"115\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (m2: hnd/marker<10770,10771>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"115\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@5,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"116\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@5: 10801<10770,10771>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"116\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@6,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"117\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (@pat@6: hnd/evv<10770>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"117\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Jump","target":247}]},
{"label":"1052([#2928])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"@pat-x142_18\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"110\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<10801>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"110\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(m1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"111\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (m1: hnd/marker<10760,10761>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"111\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"112\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@1: 10801<10760,10761>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"112\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"113\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (@pat@2: hnd/evv<10760>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"113\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (@pat-x142_37) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@4: (hnd/htag :: ((E, V) -> V) -> V)<(10801 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (m2: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@5: (10801 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (@pat@6: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat@3: ((hnd/ev :: ((E, V) -> V) -> V)<(10801 :: (E, V) -> V)>))\n     -> std/core/hnd/eq-marker<b,a,(e1 :: E),(e :: E)>(m1, m2);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@pat-x142_37\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"114\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"115\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"116\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"117\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@pat-x142_37\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"114\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"115\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"116\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"117\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (@pat-x142_37) {\n  ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@4: (hnd/htag :: ((E, V) -> V) -> V)<(10801 :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)>, (m2: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (@pat@5: (10801 :: (E, V) -> V)<(e :: E),a>) : (c :: (E, V) -> V)<(e :: E),a>, (@pat@6: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(b :: (E, V) -> V)> ) as @pat@3: ((hnd/ev :: ((E, V) -> V) -> V)<(10801 :: (E, V) -> V)>))\n     -> std/core/hnd/eq-marker<b,a,(e1 :: E),(e :: E)>(m1, m2);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"@pat-x142_18\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"110\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<10801>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"110\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(m1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"111\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (m1: hnd/marker<10760,10761>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"111\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"112\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@pat@1: 10801<10760,10761>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"112\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"113\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (@pat@2: hnd/evv<10760>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"113\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/ev","scrutinee":1,"clauses":[{"tag":"std/core/hnd/Ev","target":1051,"args":{"any":[1,2,3,4]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3080]","target":1049,"args":{"any":[]}}}]},
{"label":"1053([mcore:[#1452]#2926])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@pat-x142_18\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"110\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"111\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"112\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"113\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@pat-x142_18\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"110\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"111\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"112\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"113\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/ev","scrutinee":1,"clauses":[{"tag":"std/core/hnd/Ev","target":1052,"args":{"any":[1,2,3,4]}}],"default":{"tag":"2b25e526-37f1-4473-976d-9cc6bba12d8e#[Missing Tag#3081]","target":1047,"args":{"any":[]}}}]},
{"label":"1054([mcore:[#1453]#110])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Construct","out":0,"type":"std/core/hnd/htag","tag":"std/core/hnd/Htag","args":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1055([mcore:[#1454]#127])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Construct","out":0,"type":"std/core/hnd/ev","tag":"std/core/hnd/Ev","args":{"any":[0,1,2,3]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1056([mcore:[#1455]#144])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Construct","out":0,"type":"std/core/hnd/clause0","tag":"std/core/hnd/Clause0","args":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1057([mcore:[#1456]#161])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Construct","out":0,"type":"std/core/hnd/clause1","tag":"std/core/hnd/Clause1","args":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1058([mcore:[#1457]#178])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Construct","out":0,"type":"std/core/hnd/clause2","tag":"std/core/hnd/Clause2","args":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1059([mcore:[#1458]#566])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Construct","out":0,"type":"std/core/hnd/resume-result","tag":"std/core/hnd/Deep","args":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1060([mcore:[#1459]#579])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Construct","out":0,"type":"std/core/hnd/resume-result","tag":"std/core/hnd/Shallow","args":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1061([mcore:[#1460]#1634])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Construct","out":0,"type":"std/core/hnd/resume-result","tag":"std/core/hnd/Finalize","args":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1062([mcore:[#1461]#216])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Construct","out":0,"type":"std/core/hnd/resume-context","tag":"std/core/hnd/Resume-context","args":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1063([mcore:[#1462]#2946])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Construct","out":0,"type":"std/core/hnd/yld","tag":"std/core/hnd/Yield","args":{"any":[0,1]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1064([k@[#2961]#2971])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[1,0]}},
{"op":"Const","format":"string","out":0,"value":"Name(std/core/hnd/Pure)"},
{"op":"Debug","msg":"BGN: genConstr","traced":{"any":[]}},
{"op":"Construct","out":1,"type":"std/core/hnd/yld","tag":"std/core/hnd/Pure","args":{"any":[]}},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[0,1]}},
{"op":"Const","format":"string","out":0,"value":"std/core/hnd/Pure"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[0,1]}},
{"op":"Const","format":"string","out":0,"value":"Name(std/core/hnd/YieldingFinal)"},
{"op":"Debug","msg":"BGN: genConstr","traced":{"any":[]}},
{"op":"Construct","out":1,"type":"std/core/hnd/yld","tag":"std/core/hnd/YieldingFinal","args":{"any":[]}},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[0,1]}},
{"op":"Const","format":"string","out":0,"value":"std/core/hnd/YieldingFinal"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[0,1]}},
{"op":"Const","format":"string","out":0,"value":"Name(std/core/hnd/Yielding)"},
{"op":"Debug","msg":"BGN: genConstr","traced":{"any":[]}},
{"op":"Construct","out":1,"type":"std/core/hnd/yld","tag":"std/core/hnd/Yielding","args":{"any":[]}},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[0,1]}},
{"op":"Const","format":"string","out":0,"value":"std/core/hnd/Yielding"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[0,1]}},
{"op":"Const","format":"string","out":0,"value":"ThisLib_a9f6c0f2-7eb0-4f65-8b03-4d5a64334f94"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[0,2]}},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genConstr","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genConstr","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genConstr","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1065([#2961])",
"frameDescriptor":{"regs_any":16},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[1,0]}},
{"op":"Const","format":"string","out":0,"value":"[#372]"},
{"op":"Const","format":"path","out":1,"value":"$0/./std_core_undiv.rpyeffect"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[0,1]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/undiv)"},
{"op":"Push","target":1064,"args":{"any":[0,2]}},
{"op":"LoadLib","path":1}]},
{"label":"1066([mcore:[static initializers#1805]#2948])",
"frameDescriptor":{"regs_any":16},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"Copy","from":0,"to":2},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[1]},"in":{"any":[1,2]}},
{"op":"Const","format":"string","out":1,"value":"[#371]"},
{"op":"Const","format":"path","out":2,"value":"$0/./std_core_types.rpyeffect"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[1]},"in":{"any":[1,2]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/types)"},
{"op":"Push","target":1065,"args":{"any":[1,0]}},
{"op":"LoadLib","path":2}]},
{"label":"1067([k@[main entrypoint#2]#2997])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Const","format":"string","out":0,"value":"Undefined: is a library"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1068([main entrypoint#2])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[]}},
{"op":"Copy","from":-1,"to":0},
{"op":"Push","target":1067,"args":{"any":[]}},
{"op":"Jump","target":1066}]}],
"symbols":[{"name":"getCurrentEvv","position":0},
{"name":"setCurrentEvv","position":1},
{"name":"swapCurrentEvv","position":2},
{"name":"evvSwapCreate1","position":6},
{"name":"evvSwapCreate0","position":9},
{"name":"evvSwapDelete","position":13},
{"name":"evvDelete","position":20},
{"name":"evvInsert","position":28},
{"name":"evvIndex","position":34},
{"name":"elt","position":37},
{"name":"std/core/hnd/htag/tagname","position":40},
{"name":"std/core/hnd/htag/@copy","position":49},
{"name":"std/core/hnd/ev/htag","position":52},
{"name":"std/core/hnd/ev/@copy","position":61},
{"name":"std/core/hnd/clause0/clause","position":64},
{"name":"std/core/hnd/clause0/@copy","position":73},
{"name":"std/core/hnd/clause1/clause","position":76},
{"name":"std/core/hnd/clause1/@copy","position":85},
{"name":"std/core/hnd/clause2/clause","position":88},
{"name":"std/core/hnd/clause2/@copy","position":97},
{"name":"std/core/hnd/is-deep","position":100},
{"name":"std/core/hnd/is-shallow","position":103},
{"name":"std/core/hnd/is-finalize","position":106},
{"name":"std/core/hnd/resume-context/k","position":109},
{"name":"std/core/hnd/resume-context/@copy","position":118},
{"name":"std/core/hnd/is-pure","position":121},
{"name":"std/core/hnd/is-yieldingFinal","position":124},
{"name":"std/core/hnd/is-yielding","position":127},
{"name":"std/core/hnd/is-yield","position":130},
{"name":"std/core/hnd/@evv-index","position":133},
{"name":"std/core/hnd/@evv-is-affine","position":134},
{"name":"std/core/hnd/@reset-vm","position":138},
{"name":"std/core/hnd/@mask-builtin","position":139},
{"name":"std/core/hnd/@new-htag","position":140},
{"name":"std/core/hnd/@open-none0","position":146},
{"name":"std/core/hnd/@open-none1","position":152},
{"name":"std/core/hnd/@open-none2","position":158},
{"name":"std/core/hnd/@open-none3","position":164},
{"name":"std/core/hnd/@open-none4","position":170},
{"name":"std/core/hnd/@perform0","position":178},
{"name":"std/core/hnd/@perform1","position":186},
{"name":"std/core/hnd/@perform2","position":194},
{"name":"std/core/hnd/@prompt-local-var-prim-vm","position":198},
{"name":"std/core/hnd/protect","position":199},
{"name":"std/core/hnd/@yield-to-prim-vm","position":203},
{"name":"std/core/hnd/evv-get","position":205},
{"name":"std/core/hnd/evv-insert","position":207},
{"name":"std/core/hnd/fresh-marker","position":208},
{"name":"std/core/hnd/evv-eq","position":209},
{"name":"std/core/hnd/guard","position":210},
{"name":"std/core/hnd/yield-extend","position":211},
{"name":"std/core/hnd/yield-cont","position":212},
{"name":"std/core/hnd/yield-prompt","position":215},
{"name":"std/core/hnd/yield-to-final","position":216},
{"name":"std/core/hnd/evv-swap-delete","position":218},
{"name":"std/core/hnd/fresh-marker-named","position":219},
{"name":"std/core/hnd/evv-swap-create","position":220},
{"name":"std/core/hnd/xperform1","position":228},
{"name":"std/core/hnd/yield-to-prim","position":229},
{"name":"std/core/hnd/clause-tail-noop0","position":232},
{"name":"std/core/hnd/clause-tail-noop1","position":235},
{"name":"std/core/hnd/clause-tail-noop2","position":238},
{"name":"std/core/hnd/evv-swap-with","position":243},
{"name":"std/core/hnd/clause-value","position":246},
{"name":"std/core/hnd/eq-marker","position":247},
{"name":"std/core/hnd/evv-show","position":248},
{"name":"std/core/hnd/unsafe-reyield","position":249},
{"name":"std/core/hnd/yield-capture","position":250},
{"name":"std/core/hnd/get","position":251},
{"name":"std/core/hnd/resume","position":256},
{"name":"std/core/hnd/resume-final","position":257},
{"name":"std/core/hnd/resume-shallow","position":262},
{"name":"std/core/hnd/htag/show","position":265},
{"name":"std/core/hnd/yield-bind","position":272},
{"name":"std/core/hnd/prompt","position":349},
{"name":"std/core/hnd/@hhandle-vm","position":357},
{"name":"std/core/hnd/@hhandle","position":367},
{"name":"std/core/hnd/mask-at1","position":379},
{"name":"std/core/hnd/@mask-at","position":391},
{"name":"std/core/hnd/@named-handle","position":396},
{"name":"std/core/hnd/open-at1","position":409},
{"name":"std/core/hnd/@open-at0","position":422},
{"name":"std/core/hnd/@open-at1","position":435},
{"name":"std/core/hnd/@open-at2","position":448},
{"name":"std/core/hnd/@open-at3","position":461},
{"name":"std/core/hnd/@open-at4","position":474},
{"name":"std/core/hnd/open1","position":486},
{"name":"std/core/hnd/@open0","position":498},
{"name":"std/core/hnd/@open1","position":510},
{"name":"std/core/hnd/@open2","position":522},
{"name":"std/core/hnd/@open3","position":534},
{"name":"std/core/hnd/@open4","position":546},
{"name":"std/core/hnd/@perform3","position":556},
{"name":"std/core/hnd/@perform4","position":566},
{"name":"std/core/hnd/yield-to","position":571},
{"name":"std/core/hnd/@yield-to-vm","position":575},
{"name":"std/core/hnd/clause-control-raw0","position":581},
{"name":"std/core/hnd/clause-control-raw1","position":587},
{"name":"std/core/hnd/clause-control-raw2","position":593},
{"name":"std/core/hnd/clause-control-raw3","position":602},
{"name":"std/core/hnd/finalize","position":607},
{"name":"std/core/hnd/protect-check","position":614},
{"name":"std/core/hnd/@protect-vm","position":627},
{"name":"std/core/hnd/clause-control0","position":634},
{"name":"std/core/hnd/clause-control1","position":639},
{"name":"std/core/hnd/protect2","position":652},
{"name":"std/core/hnd/clause-control2","position":657},
{"name":"std/core/hnd/clause-control3","position":667},
{"name":"std/core/hnd/clause-control4","position":677},
{"name":"std/core/hnd/clause-never0","position":682},
{"name":"std/core/hnd/clause-never1","position":687},
{"name":"std/core/hnd/clause-never2","position":692},
{"name":"std/core/hnd/clause-never3","position":700},
{"name":"std/core/hnd/clause-never4","position":708},
{"name":"std/core/hnd/clause-tail-noop3","position":714},
{"name":"std/core/hnd/clause-tail-noop4","position":720},
{"name":"std/core/hnd/under1x","position":736},
{"name":"std/core/hnd/under1","position":752},
{"name":"std/core/hnd/under0","position":783},
{"name":"std/core/hnd/clause-tail0","position":816},
{"name":"std/core/hnd/clause-tail1","position":834},
{"name":"std/core/hnd/under2","position":865},
{"name":"std/core/hnd/clause-tail2","position":868},
{"name":"std/core/hnd/clause-tail3","position":874},
{"name":"std/core/hnd/clause-tail4","position":880},
{"name":"std/core/hnd/finally-prompt","position":906},
{"name":"std/core/hnd/finally","position":908},
{"name":"std/core/hnd/initially-prompt","position":932},
{"name":"std/core/hnd/initially","position":944},
{"name":"std/core/hnd/prompt-local-var","position":953},
{"name":"std/core/hnd/local-var-vm","position":955},
{"name":"std/core/hnd/local-var","position":956},
{"name":"std/core/hnd/try-finalize-prompt","position":975},
{"name":"std/core/hnd/under3","position":1006},
{"name":"std/core/hnd/under4","position":1037},
{"name":"std/core/hnd/unsafe-try-finalize","position":1039},
{"name":"std/core/hnd/yield-bind2","position":1046},
{"name":"std/core/hnd/ev/(==)","position":1053},
{"name":"std/core/hnd/Htag","position":1054},
{"name":"std/core/hnd/Ev","position":1055},
{"name":"std/core/hnd/Clause0","position":1056},
{"name":"std/core/hnd/Clause1","position":1057},
{"name":"std/core/hnd/Clause2","position":1058},
{"name":"std/core/hnd/Deep","position":1059},
{"name":"std/core/hnd/Shallow","position":1060},
{"name":"std/core/hnd/Finalize","position":1061},
{"name":"std/core/hnd/Resume-context","position":1062},
{"name":"std/core/hnd/Yield","position":1063},
{"name":"$static-init","position":1066},
{"name":"$entrypoint","position":1068}],
"frameSize":{"regs_any":16}}