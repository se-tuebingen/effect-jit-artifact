{"blocks":[{"label":"0([match_def@[mcore:[#22]#3]#4])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1([#5])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"delayed\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/delayed/delayed\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"dref\\\"0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"ref\\\"\"}},\"annotation\": \"genTest: normal: (@x: ref<global,either<() -> 65 66,66>>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"dref\\\\\\\"0\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"\\\\\\\"ref\\\\\\\"\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"delayed\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/delayed/delayed\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"dref\\\"0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"ref\\\"\"}},\"annotation\": \"genTest: normal: (@x: ref<global,either<() -> 65 66,66>>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"dref\\\\\\\"0\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"\\\\\\\"ref\\\\\\\"\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"2([mcore:[#22]#3])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"delayed\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/delayed/delayed\"}}: \"std/core/delayed/delayed\".\"std/core/delayed/XDelay\"(({\"op\": \"Var\",\"id\": \"@\\\"dref\\\"0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"ref\\\"\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"delayed\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/delayed/delayed\"}}: \"std/core/delayed/delayed\".\"std/core/delayed/XDelay\"(({\"op\": \"Var\",\"id\": \"@\\\"dref\\\"0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"ref\\\"\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/delayed/delayed","scrutinee":0,"clauses":[{"tag":"std/core/delayed/XDelay","target":1,"args":{"any":[0]}}],"default":{"tag":"a41a6146-2ed9-4b06-9286-be919b4def62#[Missing Tag#133]","target":0,"args":{"any":[]}}}]},
{"label":"3([k@[mcore:[#25]#6]#8])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Jump","target":39}]},
{"label":"4([#12])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"5([k@[#13]#15])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"6([match_def@[#13]#17])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"7([match_std/core/delayed/XDelay@[#13]#18])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/delayed/delayed\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"dref\\\"2\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"ref\\\"\"}},\"annotation\": \"genTest: normal: (@x: ref<global,either<() -> 105 106,106>>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"dref\\\\\\\"2\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"\\\\\\\"ref\\\\\\\"\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/delayed/delayed\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"dref\\\"2\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"ref\\\"\"}},\"annotation\": \"genTest: normal: (@x: ref<global,either<() -> 105 106,106>>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"dref\\\\\\\"2\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"\\\\\\\"ref\\\\\\\"\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"8([#13])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"dref\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (@this) {\n  ((@skip std/core/delayed/XDelay((@x: (ref :: (H, V) -> V)<(global :: H),(either :: (V, V) -> V)<() -> (105 :: E) 106,106>>) : (ref :: (H, V) -> V)<(global :: H),(either :: (V, V) -> V)<() -> (e :: E) a,a>>) : (delayed/delayed :: (E, V) -> V)<(e :: E),a> ) as @pat@1: ((delayed/delayed :: (E, V) -> V)<(105 :: E),106>))\n     -> @x;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/delayed/delayed\"}}: \"std/core/delayed/delayed\".\"std/core/delayed/XDelay\"(({\"op\": \"Var\",\"id\": \"@\\\"dref\\\"2\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"ref\\\"\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@this\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/delayed/delayed\"}}: \"std/core/delayed/delayed\".\"std/core/delayed/XDelay\"(({\"op\": \"Var\",\"id\": \"@\\\"dref\\\"2\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"ref\\\"\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (@this) {\n  ((@skip std/core/delayed/XDelay((@x: (ref :: (H, V) -> V)<(global :: H),(either :: (V, V) -> V)<() -> (105 :: E) 106,106>>) : (ref :: (H, V) -> V)<(global :: H),(either :: (V, V) -> V)<() -> (e :: E) a,a>>) : (delayed/delayed :: (E, V) -> V)<(e :: E),a> ) as @pat@1: ((delayed/delayed :: (E, V) -> V)<(105 :: E),106>))\n     -> @x;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"dref\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}})]","traced":{"any":[]}},
{"op":"Match","type":"std/core/delayed/delayed","scrutinee":0,"clauses":[{"tag":"std/core/delayed/XDelay","target":7,"args":{"any":[0]}}],"default":{"tag":"a41a6146-2ed9-4b06-9286-be919b4def62#[Missing Tag#134]","target":6,"args":{"any":[]}}}]},
{"label":"9([match_def@[mcore:[#25]#6]#11])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"dref\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}: \"std/core/types/@optional\".\"std/core/types/@None\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"dref\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}: \"std/core/types/@optional\".\"std/core/types/@None\"(())","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/@optional","scrutinee":1,"clauses":[{"tag":"std/core/types/@None","target":8,"args":{"any":[]}}],"default":{"tag":"a41a6146-2ed9-4b06-9286-be919b4def62#[Missing Tag#135]","target":4,"args":{"any":[]}}}]},
{"label":"10([#19])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"dref\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}),(@uniq-dref@88,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"value\\\"1\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@uniq-dref@88: ref<global,either<() -> 105 106,106>>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"value\\\\\\\"1\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"dref\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}),(@uniq-dref@88,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"value\\\"1\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (@uniq-dref@88: ref<global,either<() -> 105 106,106>>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"value\\\\\\\"1\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"11([mcore:[#25]#6])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/delayed/XDelay<(e :: E),a>((match (dref) {\n  ((std/core/types/@Optional((@uniq-dref@88: (ref :: (H, V) -> V)<(global :: H),(either :: (V, V) -> V)<() -> (105 :: E) 106,106>>) : (ref :: (H, V) -> V)<(global :: H),(either :: (V, V) -> V)<() -> (e :: E) a,a>>) : ? ((ref :: (H, V) -> V)<(global :: H),(either :: (V, V) -> V)<() -> (e :: E) a,a>>) ) as @pat: ? ((ref :: (H, V) -> V)<(global :: H),(either :: (V, V) -> V)<() -> (105 :: E) 106,106>>))\n     -> @uniq-dref@88;\n  ((@skip std/core/types/@None() : ? ((ref :: (H, V) -> V)<(global :: H),(either :: (V, V) -> V)<() -> (e :: E) a,a>>) ) as @pat@0: ? ((ref :: (H, V) -> V)<(global :: H),(either :: (V, V) -> V)<() -> (105 :: E) 106,106>>))\n     -> (match (@this) {\n      ((@skip std/core/delayed/XDelay((@x: (ref :: (H, V) -> V)<(global :: H),(either :: (V, V) -> V)<() -> (105 :: E) 106,106>>) : (ref :: (H, V) -> V)<(global :: H),(either :: (V, V) -> V)<() -> (e :: E) a,a>>) : (delayed/delayed :: (E, V) -> V)<(e :: E),a> ) as @pat@1: ((delayed/delayed :: (E, V) -> V)<(105 :: E),106>))\n         -> @x;\n    });\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (dref) {\n  ((std/core/types/@Optional((@uniq-dref@88: (ref :: (H, V) -> V)<(global :: H),(either :: (V, V) -> V)<() -> (105 :: E) 106,106>>) : (ref :: (H, V) -> V)<(global :: H),(either :: (V, V) -> V)<() -> (e :: E) a,a>>) : ? ((ref :: (H, V) -> V)<(global :: H),(either :: (V, V) -> V)<() -> (e :: E) a,a>>) ) as @pat: ? ((ref :: (H, V) -> V)<(global :: H),(either :: (V, V) -> V)<() -> (105 :: E) 106,106>>))\n     -> @uniq-dref@88;\n  ((@skip std/core/types/@None() : ? ((ref :: (H, V) -> V)<(global :: H),(either :: (V, V) -> V)<() -> (e :: E) a,a>>) ) as @pat@0: ? ((ref :: (H, V) -> V)<(global :: H),(either :: (V, V) -> V)<() -> (105 :: E) 106,106>>))\n     -> (match (@this) {\n      ((@skip std/core/delayed/XDelay((@x: (ref :: (H, V) -> V)<(global :: H),(either :: (V, V) -> V)<() -> (105 :: E) 106,106>>) : (ref :: (H, V) -> V)<(global :: H),(either :: (V, V) -> V)<() -> (e :: E) a,a>>) : (delayed/delayed :: (E, V) -> V)<(e :: E),a> ) as @pat@1: ((delayed/delayed :: (E, V) -> V)<(105 :: E),106>))\n         -> @x;\n    });\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"dref\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}: \"std/core/types/@optional\".\"std/core/types/@Optional\"(({\"op\": \"Var\",\"id\": \"@\\\"value\\\"1\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Push","target":3,"args":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"dref\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"@optional\\\"\"}}: \"std/core/types/@optional\".\"std/core/types/@Optional\"(({\"op\": \"Var\",\"id\": \"@\\\"value\\\"1\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (dref) {\n  ((std/core/types/@Optional((@uniq-dref@88: (ref :: (H, V) -> V)<(global :: H),(either :: (V, V) -> V)<() -> (105 :: E) 106,106>>) : (ref :: (H, V) -> V)<(global :: H),(either :: (V, V) -> V)<() -> (e :: E) a,a>>) : ? ((ref :: (H, V) -> V)<(global :: H),(either :: (V, V) -> V)<() -> (e :: E) a,a>>) ) as @pat: ? ((ref :: (H, V) -> V)<(global :: H),(either :: (V, V) -> V)<() -> (105 :: E) 106,106>>))\n     -> @uniq-dref@88;\n  ((@skip std/core/types/@None() : ? ((ref :: (H, V) -> V)<(global :: H),(either :: (V, V) -> V)<() -> (e :: E) a,a>>) ) as @pat@0: ? ((ref :: (H, V) -> V)<(global :: H),(either :: (V, V) -> V)<() -> (105 :: E) 106,106>>))\n     -> (match (@this) {\n      ((@skip std/core/delayed/XDelay((@x: (ref :: (H, V) -> V)<(global :: H),(either :: (V, V) -> V)<() -> (105 :: E) 106,106>>) : (ref :: (H, V) -> V)<(global :: H),(either :: (V, V) -> V)<() -> (e :: E) a,a>>) : (delayed/delayed :: (E, V) -> V)<(e :: E),a> ) as @pat@1: ((delayed/delayed :: (E, V) -> V)<(105 :: E),106>))\n         -> @x;\n    });\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/delayed/XDelay<(e :: E),a>((match (dref) {\n  ((std/core/types/@Optional((@uniq-dref@88: (ref :: (H, V) -> V)<(global :: H),(either :: (V, V) -> V)<() -> (105 :: E) 106,106>>) : (ref :: (H, V) -> V)<(global :: H),(either :: (V, V) -> V)<() -> (e :: E) a,a>>) : ? ((ref :: (H, V) -> V)<(global :: H),(either :: (V, V) -> V)<() -> (e :: E) a,a>>) ) as @pat: ? ((ref :: (H, V) -> V)<(global :: H),(either :: (V, V) -> V)<() -> (105 :: E) 106,106>>))\n     -> @uniq-dref@88;\n  ((@skip std/core/types/@None() : ? ((ref :: (H, V) -> V)<(global :: H),(either :: (V, V) -> V)<() -> (e :: E) a,a>>) ) as @pat@0: ? ((ref :: (H, V) -> V)<(global :: H),(either :: (V, V) -> V)<() -> (105 :: E) 106,106>>))\n     -> (match (@this) {\n      ((@skip std/core/delayed/XDelay((@x: (ref :: (H, V) -> V)<(global :: H),(either :: (V, V) -> V)<() -> (105 :: E) 106,106>>) : (ref :: (H, V) -> V)<(global :: H),(either :: (V, V) -> V)<() -> (e :: E) a,a>>) : (delayed/delayed :: (E, V) -> V)<(e :: E),a> ) as @pat@1: ((delayed/delayed :: (E, V) -> V)<(105 :: E),106>))\n         -> @x;\n    });\n}))","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/@optional","scrutinee":1,"clauses":[{"tag":"std/core/types/@Optional","target":10,"args":{"any":[2]}}],"default":{"tag":"a41a6146-2ed9-4b06-9286-be919b4def62#[Missing Tag#136]","target":9,"args":{"any":[]}}}]},
{"label":"12([mcore:[#26]#20])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"std/core/types/Left"}]},
{"label":"13([k@[mcore:[#32]#25]#30])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"mkRef(Ptr): Ref[Ptr]","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/delayed/XDelay<(e :: E),a>(r)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/delayed/XDelay<(e :: E),a>(r)","traced":{"any":[]}},
{"op":"Jump","target":39}]},
{"label":"14([mcore:[#32]#25])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"ref\\\"\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/ref<(either :: (V, V) -> V)<() -> (e :: E) a,a>,(global :: H)>((std/core/types/Left<() -> (e :: E) a,a>(action)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/Left<() -> (e :: E) a,a>(action)","traced":{"any":[]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"Push","target":13,"args":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/Left<() -> (e :: E) a,a>(action)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/ref<(either :: (V, V) -> V)<() -> (e :: E) a,a>,(global :: H)>((std/core/types/Left<() -> (e :: E) a,a>(action)))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"ref\\\"\"}}","traced":{"any":[]}},
{"op":"Jump","target":12}]},
{"label":"15([mcore:[#36]#32])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"std/core/types/Right"}]},
{"label":"16([#42])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"17([k@[k@[k@[#43]#45]#47]#53])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"setRef(Ref[Ptr], Ptr): Unit","out":{"any":[0]},"in":{"any":[2,0]}},
{"op":"Debug","msg":"BGN: genExpr: x@0","traced":{"any":[]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: x@0","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"18([k@[k@[#43]#45]#47])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/Right<() -> (e :: E) a,a>(x@0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Push","target":17,"args":{"any":[1,0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Copy","from":2,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/Right<() -> (e :: E) a,a>(x@0)","traced":{"any":[]}},
{"op":"Jump","target":15}]},
{"label":"19([match_def@[k@[#43]#45]#56])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"20([#57])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"delayed\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/delayed/delayed\"}}),(@x@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"dref\\\"7\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"ref\\\"\"}},\"annotation\": \"genTest: normal: (@x@0: ref<global,either<() -> 271 270,270>>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"dref\\\\\\\"7\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"\\\\\\\"ref\\\\\\\"\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"delayed\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/delayed/delayed\"}}),(@x@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"dref\\\"7\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"ref\\\"\"}},\"annotation\": \"genTest: normal: (@x@0: ref<global,either<() -> 271 270,270>>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"dref\\\\\\\"7\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"\\\\\\\"ref\\\\\\\"\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"21([k@[#43]#45])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/set<(either :: (V, V) -> V)<() -> (e :: E) a,a>,(global :: H)>((match (delayed) {\n    ((@skip std/core/delayed/XDelay((@x@0: (ref :: (H, V) -> V)<(global :: H),(either :: (V, V) -> V)<() -> (271 :: E) 270,270>>) : (ref :: (H, V) -> V)<(global :: H),(either :: (V, V) -> V)<() -> (e :: E) a,a>>) : (delayed/delayed :: (E, V) -> V)<(e :: E),a> ) as @pat@1: ((delayed/delayed :: (E, V) -> V)<(271 :: E),270>))\n       -> @x@0;\n  }), (std/core/types/Right<() -> (e :: E) a,a>(x@0)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (delayed) {\n  ((@skip std/core/delayed/XDelay((@x@0: (ref :: (H, V) -> V)<(global :: H),(either :: (V, V) -> V)<() -> (271 :: E) 270,270>>) : (ref :: (H, V) -> V)<(global :: H),(either :: (V, V) -> V)<() -> (e :: E) a,a>>) : (delayed/delayed :: (E, V) -> V)<(e :: E),a> ) as @pat@1: ((delayed/delayed :: (E, V) -> V)<(271 :: E),270>))\n     -> @x@0;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"delayed\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/delayed/delayed\"}}: \"std/core/delayed/delayed\".\"std/core/delayed/XDelay\"(({\"op\": \"Var\",\"id\": \"@\\\"dref\\\"7\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"ref\\\"\"}}))","traced":{"any":[]}},
{"op":"Push","target":18,"args":{"any":[0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"delayed\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/delayed/delayed\"}}: \"std/core/delayed/delayed\".\"std/core/delayed/XDelay\"(({\"op\": \"Var\",\"id\": \"@\\\"dref\\\"7\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"ref\\\"\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (delayed) {\n  ((@skip std/core/delayed/XDelay((@x@0: (ref :: (H, V) -> V)<(global :: H),(either :: (V, V) -> V)<() -> (271 :: E) 270,270>>) : (ref :: (H, V) -> V)<(global :: H),(either :: (V, V) -> V)<() -> (e :: E) a,a>>) : (delayed/delayed :: (E, V) -> V)<(e :: E),a> ) as @pat@1: ((delayed/delayed :: (E, V) -> V)<(271 :: E),270>))\n     -> @x@0;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/set<(either :: (V, V) -> V)<() -> (e :: E) a,a>,(global :: H)>((match (delayed) {\n    ((@skip std/core/delayed/XDelay((@x@0: (ref :: (H, V) -> V)<(global :: H),(either :: (V, V) -> V)<() -> (271 :: E) 270,270>>) : (ref :: (H, V) -> V)<(global :: H),(either :: (V, V) -> V)<() -> (e :: E) a,a>>) : (delayed/delayed :: (E, V) -> V)<(e :: E),a> ) as @pat@1: ((delayed/delayed :: (E, V) -> V)<(271 :: E),270>))\n       -> @x@0;\n  }), (std/core/types/Right<() -> (e :: E) a,a>(x@0)))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Match","type":"std/core/delayed/delayed","scrutinee":1,"clauses":[{"tag":"std/core/delayed/XDelay","target":20,"args":{"any":[0]}}],"default":{"tag":"a41a6146-2ed9-4b06-9286-be919b4def62#[Missing Tag#137]","target":19,"args":{"any":[]}}}]},
{"label":"22([#43])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@0@0,{\"op\": \"Var\",\"id\": \"@x3\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"either\\\"\"}}),(action@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"left\\\"6\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (action@0: () -> 271 270) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"left\\\\\\\"6\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: val x@0 : a;\nval _ : ();\nx@0","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"x@0\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: action@0()","traced":{"any":[]}},
{"op":"Push","target":21,"args":{"any":[0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: action@0()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"x@0\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: val x@0 : a;\nval _ : ();\nx@0","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0@0,{\"op\": \"Var\",\"id\": \"@x3\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"either\\\"\"}}),(action@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"left\\\"6\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (action@0: () -> 271 270) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"left\\\\\\\"6\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Invoke","receiver":1,"tag":"apply","args":{"any":[]}}]},
{"label":"23([match_def@[k@[mcore:[#40]#37]#39]#41])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@x3\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"either\\\"\"}}: \"std/core/types/either\".\"std/core/types/Left\"(({\"op\": \"Var\",\"id\": \"@\\\"left\\\"6\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@x3\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"either\\\"\"}}: \"std/core/types/either\".\"std/core/types/Left\"(({\"op\": \"Var\",\"id\": \"@\\\"left\\\"6\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/either","scrutinee":1,"clauses":[{"tag":"std/core/types/Left","target":22,"args":{"any":[1]}}],"default":{"tag":"a41a6146-2ed9-4b06-9286-be919b4def62#[Missing Tag#138]","target":16,"args":{"any":[]}}}]},
{"label":"24([#58])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"@x3\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"either\\\"\"}}),(x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"right\\\"5\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x: 270) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"right\\\\\\\"5\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"@x3\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"either\\\"\"}}),(x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"right\\\"5\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x: 270) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"right\\\\\\\"5\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"25([k@[mcore:[#40]#37]#39])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"getRef(Ref[Ptr]): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@x3\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"either\\\"\"}}: \"std/core/types/either\".\"std/core/types/Right\"(({\"op\": \"Var\",\"id\": \"@\\\"right\\\"5\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@x3\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"either\\\"\"}}: \"std/core/types/either\".\"std/core/types/Right\"(({\"op\": \"Var\",\"id\": \"@\\\"right\\\"5\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/either","scrutinee":0,"clauses":[{"tag":"std/core/types/Right","target":24,"args":{"any":[2]}}],"default":{"tag":"a41a6146-2ed9-4b06-9286-be919b4def62#[Missing Tag#139]","target":23,"args":{"any":[]}}}]},
{"label":"26([match_def@[mcore:[#40]#37]#59])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"27([#60])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"delayed\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/delayed/delayed\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"dref\\\"4\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"ref\\\"\"}},\"annotation\": \"genTest: normal: (@x: ref<global,either<() -> 271 270,270>>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"dref\\\\\\\"4\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"\\\\\\\"ref\\\\\\\"\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"delayed\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/delayed/delayed\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"dref\\\"4\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"ref\\\"\"}},\"annotation\": \"genTest: normal: (@x: ref<global,either<() -> 271 270,270>>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"dref\\\\\\\"4\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"\\\\\\\"ref\\\\\\\"\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"28([mcore:[#40]#37])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/ref/(!)<(global :: H),(either :: (V, V) -> V)<() -> (e :: E) a,a>,<(div :: X),(alloc :: H -> X)<(global :: H)>,(write :: H -> X)<(global :: H)>|(e :: E)>>((match (delayed) {\n  ((@skip std/core/delayed/XDelay((@x: (ref :: (H, V) -> V)<(global :: H),(either :: (V, V) -> V)<() -> (271 :: E) 270,270>>) : (ref :: (H, V) -> V)<(global :: H),(either :: (V, V) -> V)<() -> (e :: E) a,a>>) : (delayed/delayed :: (E, V) -> V)<(e :: E),a> ) as @pat: ((delayed/delayed :: (E, V) -> V)<(271 :: E),270>))\n     -> @x;\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (delayed) {\n  ((@skip std/core/delayed/XDelay((@x: (ref :: (H, V) -> V)<(global :: H),(either :: (V, V) -> V)<() -> (271 :: E) 270,270>>) : (ref :: (H, V) -> V)<(global :: H),(either :: (V, V) -> V)<() -> (e :: E) a,a>>) : (delayed/delayed :: (E, V) -> V)<(e :: E),a> ) as @pat: ((delayed/delayed :: (E, V) -> V)<(271 :: E),270>))\n     -> @x;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"delayed\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/delayed/delayed\"}}: \"std/core/delayed/delayed\".\"std/core/delayed/XDelay\"(({\"op\": \"Var\",\"id\": \"@\\\"dref\\\"4\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"ref\\\"\"}}))","traced":{"any":[]}},
{"op":"Push","target":25,"args":{"any":[0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"delayed\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/delayed/delayed\"}}: \"std/core/delayed/delayed\".\"std/core/delayed/XDelay\"(({\"op\": \"Var\",\"id\": \"@\\\"dref\\\"4\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"ref\\\"\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (delayed) {\n  ((@skip std/core/delayed/XDelay((@x: (ref :: (H, V) -> V)<(global :: H),(either :: (V, V) -> V)<() -> (271 :: E) 270,270>>) : (ref :: (H, V) -> V)<(global :: H),(either :: (V, V) -> V)<() -> (e :: E) a,a>>) : (delayed/delayed :: (E, V) -> V)<(e :: E),a> ) as @pat: ((delayed/delayed :: (E, V) -> V)<(271 :: E),270>))\n     -> @x;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/ref/(!)<(global :: H),(either :: (V, V) -> V)<() -> (e :: E) a,a>,<(div :: X),(alloc :: H -> X)<(global :: H)>,(write :: H -> X)<(global :: H)>|(e :: E)>>((match (delayed) {\n  ((@skip std/core/delayed/XDelay((@x: (ref :: (H, V) -> V)<(global :: H),(either :: (V, V) -> V)<() -> (271 :: E) 270,270>>) : (ref :: (H, V) -> V)<(global :: H),(either :: (V, V) -> V)<() -> (e :: E) a,a>>) : (delayed/delayed :: (E, V) -> V)<(e :: E),a> ) as @pat: ((delayed/delayed :: (E, V) -> V)<(271 :: E),270>))\n     -> @x;\n}))","traced":{"any":[]}},
{"op":"Match","type":"std/core/delayed/delayed","scrutinee":0,"clauses":[{"tag":"std/core/delayed/XDelay","target":27,"args":{"any":[0]}}],"default":{"tag":"a41a6146-2ed9-4b06-9286-be919b4def62#[Missing Tag#140]","target":26,"args":{"any":[]}}}]},
{"label":"29([mcore:[#46]#61])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"std/core/types/Just"}]},
{"label":"30([#68])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"31([k@[k@[#69]#71]#76])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"setRef(Ref[Ptr], Ptr): Unit","out":{"any":[0]},"in":{"any":[1,0]}},
{"op":"Debug","msg":"BGN: genExpr: x@0","traced":{"any":[]}},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: x@0","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"32([k@[#69]#71])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/set<(maybe :: V -> V)<a>,(_h :: H)>(r, (std/core/types/Just<a>(x@0)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/Just<a>(x@0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Push","target":31,"args":{"any":[1,0]}},
{"op":"Copy","from":2,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/Just<a>(x@0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/set<(maybe :: V -> V)<a>,(_h :: H)>(r, (std/core/types/Just<a>(x@0)))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Jump","target":29}]},
{"label":"33([#69])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"@x7\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"maybe\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: val x@0 : a;\nval _ : ();\nx@0","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"x@0\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: calc()","traced":{"any":[]}},
{"op":"Push","target":32,"args":{"any":[1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: calc()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"x@0\",\"type\": {\"op\": \"Top\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: val x@0 : a;\nval _ : ();\nx@0","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"@x7\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"maybe\\\"\"}})]","traced":{"any":[]}},
{"op":"Invoke","receiver":0,"tag":"apply","args":{"any":[]}}]},
{"label":"34([match_def@[mcore:[#50]#66]#67])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@x7\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"maybe\\\"\"}}: \"std/core/types/maybe\".\"std/core/types/Nothing\"(())","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@x7\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"maybe\\\"\"}}: \"std/core/types/maybe\".\"std/core/types/Nothing\"(())","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/maybe","scrutinee":2,"clauses":[{"tag":"std/core/types/Nothing","target":33,"args":{"any":[]}}],"default":{"tag":"a41a6146-2ed9-4b06-9286-be919b4def62#[Missing Tag#141]","target":30,"args":{"any":[]}}}]},
{"label":"35([#79])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"@x7\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"maybe\\\"\"}}),(x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"value\\\"8\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x: 371) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"value\\\\\\\"8\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"@x7\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"maybe\\\"\"}}),(x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"value\\\"8\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x: 371) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"value\\\\\\\"8\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"36([mcore:[#50]#66])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/ref/(!)<(_h :: H),(maybe :: V -> V)<a>,<(write :: H -> X)<(_h :: H)>,(div :: X)|(_e :: E)>>(r)","traced":{"any":[]}},
{"op":"PrimOp","name":"getRef(Ref[Ptr]): Ptr","out":{"any":[1]},"in":{"any":[2]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@x7\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"maybe\\\"\"}}: \"std/core/types/maybe\".\"std/core/types/Just\"(({\"op\": \"Var\",\"id\": \"@\\\"value\\\"8\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@x7\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"maybe\\\"\"}}: \"std/core/types/maybe\".\"std/core/types/Just\"(({\"op\": \"Var\",\"id\": \"@\\\"value\\\"8\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/ref/(!)<(_h :: H),(maybe :: V -> V)<a>,<(write :: H -> X)<(_h :: H)>,(div :: X)|(_e :: E)>>(r)","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/maybe","scrutinee":0,"clauses":[{"tag":"std/core/types/Just","target":35,"args":{"any":[3]}}],"default":{"tag":"a41a6146-2ed9-4b06-9286-be919b4def62#[Missing Tag#142]","target":34,"args":{"any":[]}}}]},
{"label":"37([method_apply@[mcore:[#51]#80]#86])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/types)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Swap","a":2,"b":1},
{"op":"Jump","target":36}]},
{"label":"38([mcore:[#51]#80])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"ref\\\"\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/ref<(maybe :: V -> V)<a>,(_h :: H)>((std/core/types/Nothing<a>))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/Nothing<a>","traced":{"any":[]}},
{"op":"Const","format":"string","out":1,"value":"std/core/types/Nothing"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"PrimOp","name":"mkRef(Ptr): Ref[Ptr]","out":{"any":[1]},"in":{"any":[1]}},
{"op":"Debug","msg":"BGN: genPure: pure lambda in core code","traced":{"any":[]}},
{"op":"New","out":0,"targets":[37],"args":{"any":[0,1]},"tags":["apply"]},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genPure: pure lambda in core code","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/Nothing<a>","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/ref<(maybe :: V -> V)<a>,(_h :: H)>((std/core/types/Nothing<a>))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"r\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"ref\\\"\"}}","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"39([mcore:[#52]#10])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Construct","out":0,"type":"std/core/delayed/delayed","tag":"std/core/delayed/XDelay","args":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"40([k@[#112]#122])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[1,0]}},
{"op":"Const","format":"string","out":0,"value":"ThisLib_82868ead-65fc-4506-8bd1-0597a751aa47"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[0,2]}},
{"op":"Copy","from":2,"to":0},
{"op":"Return","args":{"any":[0]}}]},
{"label":"41([#112])",
"frameDescriptor":{"regs_any":16},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[1,0]}},
{"op":"Const","format":"string","out":0,"value":"[#21]"},
{"op":"Const","format":"path","out":1,"value":"$0/./std_core_unsafe.rpyeffect"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[0,1]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/unsafe)"},
{"op":"Push","target":40,"args":{"any":[0,2]}},
{"op":"LoadLib","path":1}]},
{"label":"42([k@[mcore:[static initializers#55]#92]#102])",
"frameDescriptor":{"regs_any":16},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[1,0]}},
{"op":"Const","format":"string","out":0,"value":"[#20]"},
{"op":"Const","format":"path","out":1,"value":"$0/./std_core_hnd.rpyeffect"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[0,1]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"Push","target":41,"args":{"any":[0,2]}},
{"op":"LoadLib","path":1}]},
{"label":"43([mcore:[static initializers#55]#92])",
"frameDescriptor":{"regs_any":16},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Const","format":"string","out":1,"value":"[#19]"},
{"op":"Const","format":"path","out":2,"value":"$0/./std_core_types.rpyeffect"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[1]},"in":{"any":[1,2]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/types)"},
{"op":"Push","target":42,"args":{"any":[1,0]}},
{"op":"LoadLib","path":2}]},
{"label":"44([k@[main entrypoint#2]#130])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Const","format":"string","out":0,"value":"Undefined: is a library"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"45([main entrypoint#2])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[]}},
{"op":"Copy","from":-1,"to":0},
{"op":"Push","target":44,"args":{"any":[]}},
{"op":"Jump","target":43}]}],
"symbols":[{"name":"std/core/delayed/delayed/dref","position":2},
{"name":"std/core/delayed/delayed/@copy","position":11},
{"name":"std/core/delayed/delay","position":14},
{"name":"std/core/delayed/force","position":28},
{"name":"std/core/delayed/once","position":38},
{"name":"std/core/delayed/XDelay","position":39},
{"name":"$static-init","position":43},
{"name":"$entrypoint","position":45}],
"frameSize":{"regs_any":16}}