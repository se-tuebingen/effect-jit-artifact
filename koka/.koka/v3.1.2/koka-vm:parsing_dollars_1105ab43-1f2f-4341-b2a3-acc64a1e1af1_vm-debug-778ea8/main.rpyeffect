{"blocks":[{"label":"0([match_def@[mcore:[#184]#3]#4])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"1([match_main/@Hnd-emit@[mcore:[#184]#3]#5])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"emit@0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"main/emit\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"0\",\"type\": {\"op\": \"Int\"}},\"annotation\": \"genTest: normal: (@x: int) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@cfc\\\\\\\"0\\\",\\\"type\\\": {\\\"op\\\": \\\"Int\\\"}}\"}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@fun-emit\\\"1\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/clause1<int,(),main/emit,169,170>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@fun-emit\\\\\\\"1\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/clause1\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"emit@0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"main/emit\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"0\",\"type\": {\"op\": \"Int\"}},\"annotation\": \"genTest: normal: (@x: int) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@cfc\\\\\\\"0\\\",\\\"type\\\": {\\\"op\\\": \\\"Int\\\"}}\"}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@fun-emit\\\"1\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/clause1<int,(),main/emit,169,170>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@fun-emit\\\\\\\"1\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/clause1\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"2([mcore:[#184]#3])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"emit@0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"main/emit\"}}: \"main/emit\".\"main/@Hnd-emit\"(({\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"0\",\"type\": {\"op\": \"Int\"}}, {\"op\": \"Var\",\"id\": \"@\\\"@fun-emit\\\"1\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"emit@0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"main/emit\"}}: \"main/emit\".\"main/@Hnd-emit\"(({\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"0\",\"type\": {\"op\": \"Int\"}}, {\"op\": \"Var\",\"id\": \"@\\\"@fun-emit\\\"1\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"main/emit","scrutinee":0,"clauses":[{"tag":"main/@Hnd-emit","target":1,"args":{"any":[0,1]}}],"default":{"tag":"27f4ad1c-0eaf-43c9-bffa-0472e2b3b921#[Missing Tag#1368]","target":0,"args":{"any":[]}}}]},
{"label":"3([match_def@[mcore:[#185]#6]#7])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"4([match_main/@Hnd-emit@[mcore:[#185]#6]#8])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"emit@0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"main/emit\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"2\",\"type\": {\"op\": \"Int\"}},\"annotation\": \"genTest: normal: (@pat@0: int) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@cfc\\\\\\\"2\\\",\\\"type\\\": {\\\"op\\\": \\\"Int\\\"}}\"}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@fun-emit\\\"3\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}},\"annotation\": \"genTest: normal: (@x: hnd/clause1<int,(),main/emit,193,194>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@fun-emit\\\\\\\"3\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/clause1\\\"}}\"})]","traced":{"any":[]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"emit@0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"main/emit\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"2\",\"type\": {\"op\": \"Int\"}},\"annotation\": \"genTest: normal: (@pat@0: int) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@cfc\\\\\\\"2\\\",\\\"type\\\": {\\\"op\\\": \\\"Int\\\"}}\"}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@fun-emit\\\"3\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}},\"annotation\": \"genTest: normal: (@x: hnd/clause1<int,(),main/emit,193,194>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@fun-emit\\\\\\\"3\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/clause1\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"5([mcore:[#185]#6])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"emit@0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"main/emit\"}}: \"main/emit\".\"main/@Hnd-emit\"(({\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"2\",\"type\": {\"op\": \"Int\"}}, {\"op\": \"Var\",\"id\": \"@\\\"@fun-emit\\\"3\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"emit@0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"main/emit\"}}: \"main/emit\".\"main/@Hnd-emit\"(({\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"2\",\"type\": {\"op\": \"Int\"}}, {\"op\": \"Var\",\"id\": \"@\\\"@fun-emit\\\"3\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"main/emit","scrutinee":0,"clauses":[{"tag":"main/@Hnd-emit","target":4,"args":{"any":[0,1]}}],"default":{"tag":"27f4ad1c-0eaf-43c9-bffa-0472e2b3b921#[Missing Tag#1369]","target":3,"args":{"any":[]}}}]},
{"label":"6([match_def@[mcore:[#186]#9]#10])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"7([match_main/@Hnd-read@[mcore:[#186]#9]#11])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"read@0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"main/read\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"4\",\"type\": {\"op\": \"Int\"}},\"annotation\": \"genTest: normal: (@x: int) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@cfc\\\\\\\"4\\\",\\\"type\\\": {\\\"op\\\": \\\"Int\\\"}}\"}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@fun-read\\\"5\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/clause0<main/chr,main/read,217,218>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@fun-read\\\\\\\"5\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/clause0\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"read@0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"main/read\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"4\",\"type\": {\"op\": \"Int\"}},\"annotation\": \"genTest: normal: (@x: int) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@cfc\\\\\\\"4\\\",\\\"type\\\": {\\\"op\\\": \\\"Int\\\"}}\"}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@fun-read\\\"5\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/clause0<main/chr,main/read,217,218>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@fun-read\\\\\\\"5\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/clause0\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"8([mcore:[#186]#9])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"read@0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"main/read\"}}: \"main/read\".\"main/@Hnd-read\"(({\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"4\",\"type\": {\"op\": \"Int\"}}, {\"op\": \"Var\",\"id\": \"@\\\"@fun-read\\\"5\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"read@0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"main/read\"}}: \"main/read\".\"main/@Hnd-read\"(({\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"4\",\"type\": {\"op\": \"Int\"}}, {\"op\": \"Var\",\"id\": \"@\\\"@fun-read\\\"5\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"main/read","scrutinee":0,"clauses":[{"tag":"main/@Hnd-read","target":7,"args":{"any":[0,1]}}],"default":{"tag":"27f4ad1c-0eaf-43c9-bffa-0472e2b3b921#[Missing Tag#1370]","target":6,"args":{"any":[]}}}]},
{"label":"9([match_def@[mcore:[#187]#12]#13])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"10([match_main/@Hnd-read@[mcore:[#187]#12]#14])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"read@0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"main/read\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"6\",\"type\": {\"op\": \"Int\"}},\"annotation\": \"genTest: normal: (@pat@0: int) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@cfc\\\\\\\"6\\\",\\\"type\\\": {\\\"op\\\": \\\"Int\\\"}}\"}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@fun-read\\\"7\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}},\"annotation\": \"genTest: normal: (@x: hnd/clause0<main/chr,main/read,241,242>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@fun-read\\\\\\\"7\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/clause0\\\"}}\"})]","traced":{"any":[]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"read@0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"main/read\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"6\",\"type\": {\"op\": \"Int\"}},\"annotation\": \"genTest: normal: (@pat@0: int) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@cfc\\\\\\\"6\\\",\\\"type\\\": {\\\"op\\\": \\\"Int\\\"}}\"}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@fun-read\\\"7\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}},\"annotation\": \"genTest: normal: (@x: hnd/clause0<main/chr,main/read,241,242>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@fun-read\\\\\\\"7\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/clause0\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"11([mcore:[#187]#12])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"read@0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"main/read\"}}: \"main/read\".\"main/@Hnd-read\"(({\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"6\",\"type\": {\"op\": \"Int\"}}, {\"op\": \"Var\",\"id\": \"@\\\"@fun-read\\\"7\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"read@0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"main/read\"}}: \"main/read\".\"main/@Hnd-read\"(({\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"6\",\"type\": {\"op\": \"Int\"}}, {\"op\": \"Var\",\"id\": \"@\\\"@fun-read\\\"7\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"main/read","scrutinee":0,"clauses":[{"tag":"main/@Hnd-read","target":10,"args":{"any":[0,1]}}],"default":{"tag":"27f4ad1c-0eaf-43c9-bffa-0472e2b3b921#[Missing Tag#1371]","target":9,"args":{"any":[]}}}]},
{"label":"12([match_def@[mcore:[#188]#15]#16])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"13([match_main/@Hnd-stop@[mcore:[#188]#15]#17])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"stop@0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"main/stop\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"8\",\"type\": {\"op\": \"Int\"}},\"annotation\": \"genTest: normal: (@x: int) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@cfc\\\\\\\"8\\\",\\\"type\\\": {\\\"op\\\": \\\"Int\\\"}}\"}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@ctl-stop\\\"9\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}},\"annotation\": \"genTest: normal: (@pat@0: forall<a> hnd/clause0<a,main/stop,265,266>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@ctl-stop\\\\\\\"9\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/clause0\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"stop@0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"main/stop\"}}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"8\",\"type\": {\"op\": \"Int\"}},\"annotation\": \"genTest: normal: (@x: int) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@cfc\\\\\\\"8\\\",\\\"type\\\": {\\\"op\\\": \\\"Int\\\"}}\"}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@ctl-stop\\\"9\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}},\"annotation\": \"genTest: normal: (@pat@0: forall<a> hnd/clause0<a,main/stop,265,266>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@ctl-stop\\\\\\\"9\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/clause0\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"14([mcore:[#188]#15])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"stop@0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"main/stop\"}}: \"main/stop\".\"main/@Hnd-stop\"(({\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"8\",\"type\": {\"op\": \"Int\"}}, {\"op\": \"Var\",\"id\": \"@\\\"@ctl-stop\\\"9\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"stop@0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"main/stop\"}}: \"main/stop\".\"main/@Hnd-stop\"(({\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"8\",\"type\": {\"op\": \"Int\"}}, {\"op\": \"Var\",\"id\": \"@\\\"@ctl-stop\\\"9\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"main/stop","scrutinee":0,"clauses":[{"tag":"main/@Hnd-stop","target":13,"args":{"any":[0,1]}}],"default":{"tag":"27f4ad1c-0eaf-43c9-bffa-0472e2b3b921#[Missing Tag#1372]","target":12,"args":{"any":[]}}}]},
{"label":"15([match_def@[mcore:[#189]#18]#19])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"16([match_main/@Hnd-stop@[mcore:[#189]#18]#20])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"stop@0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"main/stop\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"10\",\"type\": {\"op\": \"Int\"}},\"annotation\": \"genTest: normal: (@pat@0: int) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@cfc\\\\\\\"10\\\",\\\"type\\\": {\\\"op\\\": \\\"Int\\\"}}\"}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@ctl-stop\\\"11\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}},\"annotation\": \"genTest: normal: (@x: forall<a> hnd/clause0<a,main/stop,294,295>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@ctl-stop\\\\\\\"11\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/clause0\\\"}}\"})]","traced":{"any":[]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"stop@0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"main/stop\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"10\",\"type\": {\"op\": \"Int\"}},\"annotation\": \"genTest: normal: (@pat@0: int) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@cfc\\\\\\\"10\\\",\\\"type\\\": {\\\"op\\\": \\\"Int\\\"}}\"}),(@x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@ctl-stop\\\"11\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}},\"annotation\": \"genTest: normal: (@x: forall<a> hnd/clause0<a,main/stop,294,295>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@ctl-stop\\\\\\\"11\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/clause0\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"17([mcore:[#189]#18])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"stop@0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"main/stop\"}}: \"main/stop\".\"main/@Hnd-stop\"(({\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"10\",\"type\": {\"op\": \"Int\"}}, {\"op\": \"Var\",\"id\": \"@\\\"@ctl-stop\\\"11\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"stop@0\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"main/stop\"}}: \"main/stop\".\"main/@Hnd-stop\"(({\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"10\",\"type\": {\"op\": \"Int\"}}, {\"op\": \"Var\",\"id\": \"@\\\"@ctl-stop\\\"11\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"main/stop","scrutinee":0,"clauses":[{"tag":"main/@Hnd-stop","target":16,"args":{"any":[0,1]}}],"default":{"tag":"27f4ad1c-0eaf-43c9-bffa-0472e2b3b921#[Missing Tag#1373]","target":15,"args":{"any":[]}}}]},
{"label":"18([mcore:[#190]#21])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"std/core/hnd/Htag"}]},
{"label":"19([mcore:[#193]#26])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4]}},
{"op":"Const","format":"string","out":4,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"CallLib","lib":4,"symbol":"std/core/hnd/@hhandle"}]},
{"label":"20([mcore:[#199]#34])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@hhandle<a,(e :: E),<(main/emit :: (E, V) -> V)|(e :: E)>,(main/emit :: (E, V) -> V),a>(main/@tag-emit, hnd, ret, action)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(main/@tag-emit)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Const","format":"string","out":4,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@hhandle<a,(e :: E),<(main/emit :: (E, V) -> V)|(e :: E)>,(main/emit :: (E, V) -> V),a>(main/@tag-emit, hnd, ret, action)","traced":{"any":[]}},
{"op":"Jump","target":19}]},
{"label":"21([mcore:[#200]#41])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"std/core/hnd/Htag"}]},
{"label":"22([mcore:[#203]#46])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4]}},
{"op":"Const","format":"string","out":4,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"CallLib","lib":4,"symbol":"std/core/hnd/@hhandle"}]},
{"label":"23([mcore:[#209]#54])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@hhandle<a,(e :: E),<(main/read :: (E, V) -> V)|(e :: E)>,(main/read :: (E, V) -> V),a>(main/@tag-read, hnd, ret, action)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(main/@tag-read)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Const","format":"string","out":4,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@hhandle<a,(e :: E),<(main/read :: (E, V) -> V)|(e :: E)>,(main/read :: (E, V) -> V),a>(main/@tag-read, hnd, ret, action)","traced":{"any":[]}},
{"op":"Jump","target":22}]},
{"label":"24([mcore:[#210]#61])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"std/core/hnd/Htag"}]},
{"label":"25([mcore:[#213]#66])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4]}},
{"op":"Const","format":"string","out":4,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"CallLib","lib":4,"symbol":"std/core/hnd/@hhandle"}]},
{"label":"26([mcore:[#219]#74])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@hhandle<a,(e :: E),<(main/stop :: (E, V) -> V)|(e :: E)>,(main/stop :: (E, V) -> V),a>(main/@tag-stop, hnd, ret, action)","traced":{"any":[]}},
{"op":"Const","format":"string","out":3,"value":"Name(main/@tag-stop)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Const","format":"string","out":4,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@hhandle<a,(e :: E),<(main/stop :: (E, V) -> V)|(e :: E)>,(main/stop :: (E, V) -> V),a>(main/@tag-stop, hnd, ret, action)","traced":{"any":[]}},
{"op":"Jump","target":25}]},
{"label":"27([match_def@[mcore:[#220]#81]#82])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"28([match_main/@Hnd-emit@[mcore:[#220]#81]#83])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"hnd\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"main/emit\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"12\",\"type\": {\"op\": \"Int\"}},\"annotation\": \"genTest: normal: (@pat@0: int) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@cfc\\\\\\\"12\\\",\\\"type\\\": {\\\"op\\\": \\\"Int\\\"}}\"}),(@fun-emit,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@fun-emit\\\"13\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}},\"annotation\": \"genTest: normal: (@fun-emit: hnd/clause1<int,(),main/emit,469,470>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@fun-emit\\\\\\\"13\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/clause1\\\"}}\"})]","traced":{"any":[]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"hnd\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"main/emit\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"12\",\"type\": {\"op\": \"Int\"}},\"annotation\": \"genTest: normal: (@pat@0: int) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@cfc\\\\\\\"12\\\",\\\"type\\\": {\\\"op\\\": \\\"Int\\\"}}\"}),(@fun-emit,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@fun-emit\\\"13\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}},\"annotation\": \"genTest: normal: (@fun-emit: hnd/clause1<int,(),main/emit,469,470>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@fun-emit\\\\\\\"13\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/clause1\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"29([mcore:[#220]#81])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"hnd\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"main/emit\"}}: \"main/emit\".\"main/@Hnd-emit\"(({\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"12\",\"type\": {\"op\": \"Int\"}}, {\"op\": \"Var\",\"id\": \"@\\\"@fun-emit\\\"13\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"hnd\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"main/emit\"}}: \"main/emit\".\"main/@Hnd-emit\"(({\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"12\",\"type\": {\"op\": \"Int\"}}, {\"op\": \"Var\",\"id\": \"@\\\"@fun-emit\\\"13\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"main/emit","scrutinee":0,"clauses":[{"tag":"main/@Hnd-emit","target":28,"args":{"any":[0,1]}}],"default":{"tag":"27f4ad1c-0eaf-43c9-bffa-0472e2b3b921#[Missing Tag#1374]","target":27,"args":{"any":[]}}}]},
{"label":"30([match_def@[mcore:[#221]#84]#85])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"31([match_main/@Hnd-read@[mcore:[#221]#84]#86])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"hnd\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"main/read\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"14\",\"type\": {\"op\": \"Int\"}},\"annotation\": \"genTest: normal: (@pat@0: int) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@cfc\\\\\\\"14\\\",\\\"type\\\": {\\\"op\\\": \\\"Int\\\"}}\"}),(@fun-read,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@fun-read\\\"15\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}},\"annotation\": \"genTest: normal: (@fun-read: hnd/clause0<main/chr,main/read,493,494>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@fun-read\\\\\\\"15\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/clause0\\\"}}\"})]","traced":{"any":[]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"hnd\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"main/read\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"14\",\"type\": {\"op\": \"Int\"}},\"annotation\": \"genTest: normal: (@pat@0: int) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@cfc\\\\\\\"14\\\",\\\"type\\\": {\\\"op\\\": \\\"Int\\\"}}\"}),(@fun-read,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@fun-read\\\"15\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}},\"annotation\": \"genTest: normal: (@fun-read: hnd/clause0<main/chr,main/read,493,494>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@fun-read\\\\\\\"15\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/clause0\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"32([mcore:[#221]#84])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"hnd\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"main/read\"}}: \"main/read\".\"main/@Hnd-read\"(({\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"14\",\"type\": {\"op\": \"Int\"}}, {\"op\": \"Var\",\"id\": \"@\\\"@fun-read\\\"15\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"hnd\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"main/read\"}}: \"main/read\".\"main/@Hnd-read\"(({\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"14\",\"type\": {\"op\": \"Int\"}}, {\"op\": \"Var\",\"id\": \"@\\\"@fun-read\\\"15\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"main/read","scrutinee":0,"clauses":[{"tag":"main/@Hnd-read","target":31,"args":{"any":[0,1]}}],"default":{"tag":"27f4ad1c-0eaf-43c9-bffa-0472e2b3b921#[Missing Tag#1375]","target":30,"args":{"any":[]}}}]},
{"label":"33([match_def@[mcore:[#222]#87]#88])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"34([match_main/@Hnd-stop@[mcore:[#222]#87]#89])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"hnd\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"main/stop\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"16\",\"type\": {\"op\": \"Int\"}},\"annotation\": \"genTest: normal: (@pat@0: int) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@cfc\\\\\\\"16\\\",\\\"type\\\": {\\\"op\\\": \\\"Int\\\"}}\"}),(@ctl-stop,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@ctl-stop\\\"17\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}},\"annotation\": \"genTest: normal: (@ctl-stop: forall<a> hnd/clause0<a,main/stop,523,524>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@ctl-stop\\\\\\\"17\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/clause0\\\"}}\"})]","traced":{"any":[]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"hnd\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"main/stop\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"16\",\"type\": {\"op\": \"Int\"}},\"annotation\": \"genTest: normal: (@pat@0: int) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@cfc\\\\\\\"16\\\",\\\"type\\\": {\\\"op\\\": \\\"Int\\\"}}\"}),(@ctl-stop,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@ctl-stop\\\"17\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}},\"annotation\": \"genTest: normal: (@ctl-stop: forall<a> hnd/clause0<a,main/stop,523,524>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@ctl-stop\\\\\\\"17\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/clause0\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"35([mcore:[#222]#87])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"hnd\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"main/stop\"}}: \"main/stop\".\"main/@Hnd-stop\"(({\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"16\",\"type\": {\"op\": \"Int\"}}, {\"op\": \"Var\",\"id\": \"@\\\"@ctl-stop\\\"17\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"hnd\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"main/stop\"}}: \"main/stop\".\"main/@Hnd-stop\"(({\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"16\",\"type\": {\"op\": \"Int\"}}, {\"op\": \"Var\",\"id\": \"@\\\"@ctl-stop\\\"17\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"main/stop","scrutinee":0,"clauses":[{"tag":"main/@Hnd-stop","target":34,"args":{"any":[0,1]}}],"default":{"tag":"27f4ad1c-0eaf-43c9-bffa-0472e2b3b921#[Missing Tag#1376]","target":33,"args":{"any":[]}}}]},
{"label":"36([mcore:[#223]#90])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":36},
{"op":"Return","args":{"any":[0]}}]},
{"label":"37([mcore:[#224]#92])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":10},
{"op":"Return","args":{"any":[0]}}]},
{"label":"38([mcore:[#226]#94])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Const","format":"int","out":1,"value":36},
{"op":"PrimOp","name":"infixEq(Int, Int): Boolean","out":{"any":[0]},"in":{"any":[0,1]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"39([mcore:[#228]#97])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Const","format":"int","out":1,"value":10},
{"op":"PrimOp","name":"infixEq(Int, Int): Boolean","out":{"any":[0]},"in":{"any":[0,1]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"40([mcore:[#229]#100])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"CallLib","lib":2,"symbol":"elt"}]},
{"label":"41([mcore:[#230]#106])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"CallLib","lib":0,"symbol":"getCurrentEvv"}]},
{"label":"42([#125])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"43([k@[#126]#128])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"44([match_def@[#126]#130])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"45([k@[match_main/@Hnd-stop@[#126]#131]#133])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"46([#135])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"47([k@[#136]#138])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"48([#136])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@2@0,{\"op\": \"Var\",\"id\": \"@x24\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}),(f,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"25\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (f: (hnd/marker<1005,1006>, hnd/ev<main/stop>) -> 1005 653) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"25\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/cast-clause0<a,(main/stop :: (E, V) -> V),(e :: E),(main/stop :: (E, V) -> V),a>(f)(m, ev@10028)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/cast-clause0<a,(main/stop :: (E, V) -> V),(e :: E),(main/stop :: (E, V) -> V),a>(f)(m, ev@10028)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@2@0,{\"op\": \"Var\",\"id\": \"@x24\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}),(f,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"25\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (f: (hnd/marker<1005,1006>, hnd/ev<main/stop>) -> 1005 653) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"25\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Invoke","receiver":2,"tag":"apply","args":{"any":[0,1]}}]},
{"label":"49([match_main/@Hnd-stop@[#126]#131])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"20\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h: main/stop<1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"20\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@0@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"22\",\"type\": {\"op\": \"Int\"}},\"annotation\": \"genTest: normal: (@pat@0@0: int) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@cfc\\\\\\\"22\\\",\\\"type\\\": {\\\"op\\\": \\\"Int\\\"}}\"}),(@ctl-stop,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@ctl-stop\\\"23\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}},\"annotation\": \"genTest: normal: (@ctl-stop: forall<a> hnd/clause0<a,main/stop,1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@ctl-stop\\\\\\\"23\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/clause0\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match ((@ctl-stop<a>)) {\n  ((@skip std/core/hnd/Clause0((f: ((hnd/marker :: (E, V) -> V)<(1005 :: E),1006>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (1005 :: E) 653) : ((hnd/marker :: (E, V) -> V)<(e :: E),b>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (e :: E) a) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<a,(main/stop :: (E, V) -> V),(e :: E),b> ) as @pat@2@0: ((hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<653,(main/stop :: (E, V) -> V),(1005 :: E),1006>))\n     -> std/core/hnd/cast-clause0<a,(main/stop :: (E, V) -> V),(e :: E),(main/stop :: (E, V) -> V),a>(f)(m, ev@10028);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@x24\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}: \"std/core/hnd/clause0\".\"std/core/hnd/Clause0\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"25\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@x24\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}: \"std/core/hnd/clause0\".\"std/core/hnd/Clause0\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"25\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match ((@ctl-stop<a>)) {\n  ((@skip std/core/hnd/Clause0((f: ((hnd/marker :: (E, V) -> V)<(1005 :: E),1006>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (1005 :: E) 653) : ((hnd/marker :: (E, V) -> V)<(e :: E),b>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (e :: E) a) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<a,(main/stop :: (E, V) -> V),(e :: E),b> ) as @pat@2@0: ((hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<653,(main/stop :: (E, V) -> V),(1005 :: E),1006>))\n     -> std/core/hnd/cast-clause0<a,(main/stop :: (E, V) -> V),(e :: E),(main/stop :: (E, V) -> V),a>(f)(m, ev@10028);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"20\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h: main/stop<1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"20\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@0@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"22\",\"type\": {\"op\": \"Int\"}},\"annotation\": \"genTest: normal: (@pat@0@0: int) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@cfc\\\\\\\"22\\\",\\\"type\\\": {\\\"op\\\": \\\"Int\\\"}}\"}),(@ctl-stop,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@ctl-stop\\\"23\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}},\"annotation\": \"genTest: normal: (@ctl-stop: forall<a> hnd/clause0<a,main/stop,1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@ctl-stop\\\\\\\"23\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/clause0\\\"}}\"})]","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/clause0","scrutinee":3,"clauses":[{"tag":"std/core/hnd/Clause0","target":48,"args":{"any":[2]}}],"default":{"tag":"27f4ad1c-0eaf-43c9-bffa-0472e2b3b921#[Missing Tag#1377]","target":46,"args":{"any":[]}}}]},
{"label":"50([#126])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev@10028\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"18\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<main/stop>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"18\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(m,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"19\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (m: hnd/marker<1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"19\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(h,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"20\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h: main/stop<1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"20\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"21\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/evv<1005>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"21\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (h) {\n  ((@skip main/@Hnd-stop((@pat@0@0: int) : int, (@ctl-stop: (forall<a> (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<a,(main/stop :: (E, V) -> V),(1005 :: E),1006>)) : (forall<b> (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<b,(main/stop :: (E, V) -> V),(e :: E),a>)) : (main/stop :: (E, V) -> V)<(e :: E),a> ) as @pat@2: ((main/stop :: (E, V) -> V)<(1005 :: E),1006>))\n     -> (match ((@ctl-stop<a>)) {\n      ((@skip std/core/hnd/Clause0((f: ((hnd/marker :: (E, V) -> V)<(1005 :: E),1006>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (1005 :: E) 653) : ((hnd/marker :: (E, V) -> V)<(e :: E),b>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (e :: E) a) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<a,(main/stop :: (E, V) -> V),(e :: E),b> ) as @pat@2@0: ((hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<653,(main/stop :: (E, V) -> V),(1005 :: E),1006>))\n         -> std/core/hnd/cast-clause0<a,(main/stop :: (E, V) -> V),(e :: E),(main/stop :: (E, V) -> V),a>(f)(m, ev@10028);\n    });\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"20\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h: main/stop<1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"20\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}: \"main/stop\".\"main/@Hnd-stop\"(({\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"22\",\"type\": {\"op\": \"Int\"}}, {\"op\": \"Var\",\"id\": \"@\\\"@ctl-stop\\\"23\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}))","traced":{"any":[]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"20\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h: main/stop<1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"20\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}: \"main/stop\".\"main/@Hnd-stop\"(({\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"22\",\"type\": {\"op\": \"Int\"}}, {\"op\": \"Var\",\"id\": \"@\\\"@ctl-stop\\\"23\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (h) {\n  ((@skip main/@Hnd-stop((@pat@0@0: int) : int, (@ctl-stop: (forall<a> (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<a,(main/stop :: (E, V) -> V),(1005 :: E),1006>)) : (forall<b> (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<b,(main/stop :: (E, V) -> V),(e :: E),a>)) : (main/stop :: (E, V) -> V)<(e :: E),a> ) as @pat@2: ((main/stop :: (E, V) -> V)<(1005 :: E),1006>))\n     -> (match ((@ctl-stop<a>)) {\n      ((@skip std/core/hnd/Clause0((f: ((hnd/marker :: (E, V) -> V)<(1005 :: E),1006>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (1005 :: E) 653) : ((hnd/marker :: (E, V) -> V)<(e :: E),b>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (e :: E) a) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<a,(main/stop :: (E, V) -> V),(e :: E),b> ) as @pat@2@0: ((hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<653,(main/stop :: (E, V) -> V),(1005 :: E),1006>))\n         -> std/core/hnd/cast-clause0<a,(main/stop :: (E, V) -> V),(e :: E),(main/stop :: (E, V) -> V),a>(f)(m, ev@10028);\n    });\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev@10028\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"18\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<main/stop>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"18\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(m,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"19\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (m: hnd/marker<1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"19\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(h,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"20\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h: main/stop<1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"20\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"21\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/evv<1005>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"21\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Match","type":"main/stop","scrutinee":3,"clauses":[{"tag":"main/@Hnd-stop","target":49,"args":{"any":[2,3]}}],"default":{"tag":"27f4ad1c-0eaf-43c9-bffa-0472e2b3b921#[Missing Tag#1378]","target":44,"args":{"any":[]}}}]},
{"label":"51([k@[k@[mcore:[#237]#110]#116]#124])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"ev@10028\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"18\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"19\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"20\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"21\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"ev@10028\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"18\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"19\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"20\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"21\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/ev","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Ev","target":50,"args":{"any":[1,2,3,4]}}],"default":{"tag":"27f4ad1c-0eaf-43c9-bffa-0472e2b3b921#[Missing Tag#1379]","target":42,"args":{"any":[]}}}]},
{"label":"52([k@[mcore:[#237]#110]#116])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"promote_ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Push","target":51,"args":{"any":[]}},
{"op":"Jump","target":40}]},
{"label":"53([mcore:[#237]#110])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"ev@10028\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@evv-at<(main/stop :: (E, V) -> V)>((std/core/types/@make-ssize_t(0)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/@make-ssize_t(0)","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"Push","target":52,"args":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/@make-ssize_t(0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@evv-at<(main/stop :: (E, V) -> V)>((std/core/types/@make-ssize_t(0)))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"ev@10028\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}","traced":{"any":[]}},
{"op":"Jump","target":41}]},
{"label":"54([mcore:[#241]#140])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"std/core/hnd/Clause0"}]},
{"label":"55([mcore:[#243]#145])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"CallLib","lib":2,"symbol":"std/core/hnd/yield-to"}]},
{"label":"56([mcore:[#246]#151])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"CallLib","lib":3,"symbol":"std/core/hnd/protect"}]},
{"label":"57([mcore:[#249]#158])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Construct","out":0,"type":"Unit","tag":"unit","args":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"58([method_apply@[mcore:[#252]#160]#166])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Jump","target":57}]},
{"label":"59([mcore:[#252]#160])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/protect<(),a,(e :: E),()>(std/core/types/Unit, (fn<(e :: E)>(@_wildcard-x730_55: (), r: (717) -> (727 :: E) ()){\n    std/core/types/Unit;\n  }), k)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/Unit","traced":{"any":[]}},
{"op":"Construct","out":1,"type":"Unit","tag":"unit","args":{"any":[]}},
{"op":"New","out":2,"targets":[58],"args":{"any":[]},"tags":["apply"]},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/Unit","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/protect<(),a,(e :: E),()>(std/core/types/Unit, (fn<(e :: E)>(@_wildcard-x730_55: (), r: (717) -> (727 :: E) ()){\n    std/core/types/Unit;\n  }), k)","traced":{"any":[]}},
{"op":"Jump","target":56}]},
{"label":"60([method_apply@[mcore:[#254]#172]#175])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"Jump","target":59}]},
{"label":"61([mcore:[#254]#172])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-to<a,(e :: E),()>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<717,()>) -> (727 :: E) ()){\n    (std/core/hnd/protect<(),a,(e :: E),()>(std/core/types/Unit, (fn<(e :: E)>(@_wildcard-x730_55: (), r: (717) -> (727 :: E) ()){\n        std/core/types/Unit;\n      }), k));\n  }))","traced":{"any":[]}},
{"op":"New","out":1,"targets":[60],"args":{"any":[]},"tags":["apply"]},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-to<a,(e :: E),()>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<717,()>) -> (727 :: E) ()){\n    (std/core/hnd/protect<(),a,(e :: E),()>(std/core/types/Unit, (fn<(e :: E)>(@_wildcard-x730_55: (), r: (717) -> (727 :: E) ()){\n        std/core/types/Unit;\n      }), k));\n  }))","traced":{"any":[]}},
{"op":"Jump","target":55}]},
{"label":"62([mcore:[#258]#184])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"63([method_apply@[mcore:[#261]#185]#191])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Jump","target":61}]},
{"label":"64([#208])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Jump","target":62}]},
{"label":"65([k@[k@[mcore:[#261]#185]#201]#204])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"New","out":2,"targets":[64],"args":{"any":[]},"tags":["apply"]},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Const","format":"string","out":4,"value":"Name(main/@tag-stop)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"Swap","a":2,"b":1},
{"op":"Jump","target":26}]},
{"label":"66([k@[mcore:[#261]#185]#201])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Push","target":65,"args":{"any":[1]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Jump","target":277}]},
{"label":"67([mcore:[#261]#185])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genExpr: main/@handle-stop<(),(e :: E),()>((main/@Hnd-stop<(e :: E),()>(3, (forall<a> std/core/hnd/Clause0<a,(main/stop :: (E, V) -> V),(e :: E),()>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(727 :: E),()>, @_wildcard-x730_16: (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>){\n      (std/core/hnd/yield-to<a,(e :: E),()>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<a,()>) -> (727 :: E) ()){\n          (std/core/hnd/protect<(),a,(e :: E),()>(std/core/types/Unit, (fn<(e :: E)>(@_wildcard-x730_55: (), r: (a) -> (727 :: E) ()){\n              std/core/types/Unit;\n            }), k));\n        })));\n    }))))), (fn<(e :: E)>(@x: ()){\n    @x;\n  }), action)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: main/@Hnd-stop<(e :: E),()>(3, (forall<a> std/core/hnd/Clause0<a,(main/stop :: (E, V) -> V),(e :: E),()>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(727 :: E),()>, @_wildcard-x730_16: (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>){\n    (std/core/hnd/yield-to<a,(e :: E),()>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<a,()>) -> (727 :: E) ()){\n        (std/core/hnd/protect<(),a,(e :: E),()>(std/core/types/Unit, (fn<(e :: E)>(@_wildcard-x730_55: (), r: (a) -> (727 :: E) ()){\n            std/core/types/Unit;\n          }), k));\n      })));\n  }))))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: 3","traced":{"any":[]}},
{"op":"Const","format":"int","out":1,"value":3},
{"op":"Debug","msg":"BGN: genExpr: forall<a> std/core/hnd/Clause0<a,(main/stop :: (E, V) -> V),(e :: E),()>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(727 :: E),()>, @_wildcard-x730_16: (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>){\n  (std/core/hnd/yield-to<a,(e :: E),()>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<a,()>) -> (727 :: E) ()){\n      (std/core/hnd/protect<(),a,(e :: E),()>(std/core/types/Unit, (fn<(e :: E)>(@_wildcard-x730_55: (), r: (a) -> (727 :: E) ()){\n          std/core/types/Unit;\n        }), k));\n    })));\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Clause0<a,(main/stop :: (E, V) -> V),(e :: E),()>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(727 :: E),()>, @_wildcard-x730_16: (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>){\n  (std/core/hnd/yield-to<a,(e :: E),()>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<717,()>) -> (727 :: E) ()){\n      (std/core/hnd/protect<(),a,(e :: E),()>(std/core/types/Unit, (fn<(e :: E)>(@_wildcard-x730_55: (), r: (717) -> (727 :: E) ()){\n          std/core/types/Unit;\n        }), k));\n    })));\n}))","traced":{"any":[]}},
{"op":"New","out":2,"targets":[63],"args":{"any":[]},"tags":["apply"]},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Push","target":66,"args":{"any":[0,1]}},
{"op":"Copy","from":3,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Clause0<a,(main/stop :: (E, V) -> V),(e :: E),()>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(727 :: E),()>, @_wildcard-x730_16: (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>){\n  (std/core/hnd/yield-to<a,(e :: E),()>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<717,()>) -> (727 :: E) ()){\n      (std/core/hnd/protect<(),a,(e :: E),()>(std/core/types/Unit, (fn<(e :: E)>(@_wildcard-x730_55: (), r: (717) -> (727 :: E) ()){\n          std/core/types/Unit;\n        }), k));\n    })));\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: forall<a> std/core/hnd/Clause0<a,(main/stop :: (E, V) -> V),(e :: E),()>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(727 :: E),()>, @_wildcard-x730_16: (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>){\n  (std/core/hnd/yield-to<a,(e :: E),()>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<a,()>) -> (727 :: E) ()){\n      (std/core/hnd/protect<(),a,(e :: E),()>(std/core/types/Unit, (fn<(e :: E)>(@_wildcard-x730_55: (), r: (a) -> (727 :: E) ()){\n          std/core/types/Unit;\n        }), k));\n    })));\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: 3","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: main/@Hnd-stop<(e :: E),()>(3, (forall<a> std/core/hnd/Clause0<a,(main/stop :: (E, V) -> V),(e :: E),()>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(727 :: E),()>, @_wildcard-x730_16: (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>){\n    (std/core/hnd/yield-to<a,(e :: E),()>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<a,()>) -> (727 :: E) ()){\n        (std/core/hnd/protect<(),a,(e :: E),()>(std/core/types/Unit, (fn<(e :: E)>(@_wildcard-x730_55: (), r: (a) -> (727 :: E) ()){\n            std/core/types/Unit;\n          }), k));\n      })));\n  }))))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: main/@handle-stop<(),(e :: E),()>((main/@Hnd-stop<(e :: E),()>(3, (forall<a> std/core/hnd/Clause0<a,(main/stop :: (E, V) -> V),(e :: E),()>((fn<(e :: E)>(m: (hnd/marker :: (E, V) -> V)<(727 :: E),()>, @_wildcard-x730_16: (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>){\n      (std/core/hnd/yield-to<a,(e :: E),()>(m, (fn<(e :: E)>(k: ((hnd/resume-result :: (V, V) -> V)<a,()>) -> (727 :: E) ()){\n          (std/core/hnd/protect<(),a,(e :: E),()>(std/core/types/Unit, (fn<(e :: E)>(@_wildcard-x730_55: (), r: (a) -> (727 :: E) ()){\n              std/core/types/Unit;\n            }), k));\n        })));\n    }))))), (fn<(e :: E)>(@x: ()){\n    @x;\n  }), action)","traced":{"any":[]}},
{"op":"Jump","target":54}]},
{"label":"68([mcore:[#262]#218])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"CallLib","lib":2,"symbol":"elt"}]},
{"label":"69([mcore:[#263]#224])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"CallLib","lib":0,"symbol":"getCurrentEvv"}]},
{"label":"70([#243])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"71([k@[#244]#246])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"72([match_def@[#244]#248])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"73([k@[match_main/@Hnd-emit@[#244]#249]#251])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"74([#253])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"75([k@[#254]#256])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"76([#254])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@2@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@fun-emit\\\"31\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}},\"annotation\": \"genTest: normal: (@fun-emit: hnd/clause1<int,(),main/emit,1007,1008>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@fun-emit\\\\\\\"31\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/clause1\\\"}}\"}),(f,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"32\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (f: (hnd/marker<1007,1008>, hnd/ev<main/emit>, int) -> 1007 ()) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"32\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}, {\\\"op\\\": \\\"Top\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: f(m, ev@10031, e)","traced":{"any":[]}},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f(m, ev@10031, e)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@2@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@fun-emit\\\"31\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}},\"annotation\": \"genTest: normal: (@fun-emit: hnd/clause1<int,(),main/emit,1007,1008>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@fun-emit\\\\\\\"31\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/clause1\\\"}}\"}),(f,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"32\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (f: (hnd/marker<1007,1008>, hnd/ev<main/emit>, int) -> 1007 ()) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"32\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}, {\\\"op\\\": \\\"Top\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Invoke","receiver":3,"tag":"apply","args":{"any":[0,1,2]}}]},
{"label":"77([match_main/@Hnd-emit@[#244]#249])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"28\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h: main/emit<1007,1008>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"28\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@0@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"30\",\"type\": {\"op\": \"Int\"}},\"annotation\": \"genTest: normal: (@pat@0@0: int) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@cfc\\\\\\\"30\\\",\\\"type\\\": {\\\"op\\\": \\\"Int\\\"}}\"}),(@fun-emit,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@fun-emit\\\"31\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}},\"annotation\": \"genTest: normal: (@fun-emit: hnd/clause1<int,(),main/emit,1007,1008>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@fun-emit\\\\\\\"31\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/clause1\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (@fun-emit) {\n  ((@skip std/core/hnd/Clause1((f: ((hnd/marker :: (E, V) -> V)<(1007 :: E),1008>, (hnd/ev :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)>, int) -> (1007 :: E) ()) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)>, int) -> (e :: E) ()) : (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<int,(),(main/emit :: (E, V) -> V),(e :: E),a> ) as @pat@2@0: ((hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<int,(),(main/emit :: (E, V) -> V),(1007 :: E),1008>))\n     -> f(m, ev@10031, e);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@fun-emit\\\"31\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}},\"annotation\": \"genTest: normal: (@fun-emit: hnd/clause1<int,(),main/emit,1007,1008>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@fun-emit\\\\\\\"31\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/clause1\\\"}}\"}: \"std/core/hnd/clause1\".\"std/core/hnd/Clause1\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"32\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@fun-emit\\\"31\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}},\"annotation\": \"genTest: normal: (@fun-emit: hnd/clause1<int,(),main/emit,1007,1008>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@fun-emit\\\\\\\"31\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/clause1\\\"}}\"}: \"std/core/hnd/clause1\".\"std/core/hnd/Clause1\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"32\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (@fun-emit) {\n  ((@skip std/core/hnd/Clause1((f: ((hnd/marker :: (E, V) -> V)<(1007 :: E),1008>, (hnd/ev :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)>, int) -> (1007 :: E) ()) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)>, int) -> (e :: E) ()) : (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<int,(),(main/emit :: (E, V) -> V),(e :: E),a> ) as @pat@2@0: ((hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<int,(),(main/emit :: (E, V) -> V),(1007 :: E),1008>))\n     -> f(m, ev@10031, e);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"28\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h: main/emit<1007,1008>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"28\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@0@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"30\",\"type\": {\"op\": \"Int\"}},\"annotation\": \"genTest: normal: (@pat@0@0: int) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@cfc\\\\\\\"30\\\",\\\"type\\\": {\\\"op\\\": \\\"Int\\\"}}\"}),(@fun-emit,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@fun-emit\\\"31\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}},\"annotation\": \"genTest: normal: (@fun-emit: hnd/clause1<int,(),main/emit,1007,1008>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@fun-emit\\\\\\\"31\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/clause1\\\"}}\"})]","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/clause1","scrutinee":4,"clauses":[{"tag":"std/core/hnd/Clause1","target":76,"args":{"any":[3]}}],"default":{"tag":"27f4ad1c-0eaf-43c9-bffa-0472e2b3b921#[Missing Tag#1380]","target":74,"args":{"any":[]}}}]},
{"label":"78([#244])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev@10031\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"26\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<main/emit>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"26\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(m,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"27\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (m: hnd/marker<1007,1008>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"27\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(h,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"28\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h: main/emit<1007,1008>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"28\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"29\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/evv<1007>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"29\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (h) {\n  ((@skip main/@Hnd-emit((@pat@0@0: int) : int, (@fun-emit: (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<int,(),(main/emit :: (E, V) -> V),(1007 :: E),1008>) : (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<int,(),(main/emit :: (E, V) -> V),(e :: E),a>) : (main/emit :: (E, V) -> V)<(e :: E),a> ) as @pat@2: ((main/emit :: (E, V) -> V)<(1007 :: E),1008>))\n     -> (match (@fun-emit) {\n      ((@skip std/core/hnd/Clause1((f: ((hnd/marker :: (E, V) -> V)<(1007 :: E),1008>, (hnd/ev :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)>, int) -> (1007 :: E) ()) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)>, int) -> (e :: E) ()) : (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<int,(),(main/emit :: (E, V) -> V),(e :: E),a> ) as @pat@2@0: ((hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<int,(),(main/emit :: (E, V) -> V),(1007 :: E),1008>))\n         -> f(m, ev@10031, e);\n    });\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"28\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h: main/emit<1007,1008>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"28\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}: \"main/emit\".\"main/@Hnd-emit\"(({\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"30\",\"type\": {\"op\": \"Int\"}}, {\"op\": \"Var\",\"id\": \"@\\\"@fun-emit\\\"31\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}))","traced":{"any":[]}},
{"op":"Copy","from":1,"to":2},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"28\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h: main/emit<1007,1008>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"28\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}: \"main/emit\".\"main/@Hnd-emit\"(({\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"30\",\"type\": {\"op\": \"Int\"}}, {\"op\": \"Var\",\"id\": \"@\\\"@fun-emit\\\"31\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (h) {\n  ((@skip main/@Hnd-emit((@pat@0@0: int) : int, (@fun-emit: (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<int,(),(main/emit :: (E, V) -> V),(1007 :: E),1008>) : (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<int,(),(main/emit :: (E, V) -> V),(e :: E),a>) : (main/emit :: (E, V) -> V)<(e :: E),a> ) as @pat@2: ((main/emit :: (E, V) -> V)<(1007 :: E),1008>))\n     -> (match (@fun-emit) {\n      ((@skip std/core/hnd/Clause1((f: ((hnd/marker :: (E, V) -> V)<(1007 :: E),1008>, (hnd/ev :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)>, int) -> (1007 :: E) ()) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)>, int) -> (e :: E) ()) : (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<int,(),(main/emit :: (E, V) -> V),(e :: E),a> ) as @pat@2@0: ((hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<int,(),(main/emit :: (E, V) -> V),(1007 :: E),1008>))\n         -> f(m, ev@10031, e);\n    });\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev@10031\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"26\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<main/emit>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"26\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(m,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"27\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (m: hnd/marker<1007,1008>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"27\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(h,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"28\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h: main/emit<1007,1008>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"28\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"29\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/evv<1007>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"29\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Match","type":"main/emit","scrutinee":4,"clauses":[{"tag":"main/@Hnd-emit","target":77,"args":{"any":[3,4]}}],"default":{"tag":"27f4ad1c-0eaf-43c9-bffa-0472e2b3b921#[Missing Tag#1381]","target":72,"args":{"any":[]}}}]},
{"label":"79([k@[k@[mcore:[#272]#228]#234]#242])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"ev@10031\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"26\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"27\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"28\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"29\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"ev@10031\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"26\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"27\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"28\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"29\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/ev","scrutinee":1,"clauses":[{"tag":"std/core/hnd/Ev","target":78,"args":{"any":[2,3,4,5]}}],"default":{"tag":"27f4ad1c-0eaf-43c9-bffa-0472e2b3b921#[Missing Tag#1382]","target":70,"args":{"any":[]}}}]},
{"label":"80([k@[mcore:[#272]#228]#234])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"promote_ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Push","target":79,"args":{"any":[2]}},
{"op":"Copy","from":3,"to":2},
{"op":"Jump","target":68}]},
{"label":"81([mcore:[#272]#228])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"ev@10031\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@evv-at<(main/emit :: (E, V) -> V)>((std/core/types/@make-ssize_t(0)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/@make-ssize_t(0)","traced":{"any":[]}},
{"op":"Const","format":"int","out":1,"value":0},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Push","target":80,"args":{"any":[1,0]}},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/@make-ssize_t(0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@evv-at<(main/emit :: (E, V) -> V)>((std/core/types/@make-ssize_t(0)))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"ev@10031\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}","traced":{"any":[]}},
{"op":"Jump","target":69}]},
{"label":"82([mcore:[#273]#258])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"CallLib","lib":2,"symbol":"elt"}]},
{"label":"83([mcore:[#274]#264])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"CallLib","lib":0,"symbol":"getCurrentEvv"}]},
{"label":"84([#283])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"85([k@[#284]#286])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"86([match_def@[#284]#288])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"87([k@[match_main/@Hnd-read@[#284]#289]#291])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"88([#293])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"89([k@[#294]#296])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"90([#294])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@2@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@fun-read\\\"38\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}},\"annotation\": \"genTest: normal: (@fun-read: hnd/clause0<main/chr,main/read,1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@fun-read\\\\\\\"38\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/clause0\\\"}}\"}),(f,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"39\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (f: (hnd/marker<1005,1006>, hnd/ev<main/read>) -> 1005 main/chr) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"39\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/cast-clause0<main/chr,(main/read :: (E, V) -> V),(e :: E),(main/read :: (E, V) -> V),a>(f)(m, ev@10034)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/cast-clause0<main/chr,(main/read :: (E, V) -> V),(e :: E),(main/read :: (E, V) -> V),a>(f)(m, ev@10034)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@2@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@fun-read\\\"38\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}},\"annotation\": \"genTest: normal: (@fun-read: hnd/clause0<main/chr,main/read,1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@fun-read\\\\\\\"38\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/clause0\\\"}}\"}),(f,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"39\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (f: (hnd/marker<1005,1006>, hnd/ev<main/read>) -> 1005 main/chr) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"39\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Invoke","receiver":2,"tag":"apply","args":{"any":[0,1]}}]},
{"label":"91([match_main/@Hnd-read@[#284]#289])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"35\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h: main/read<1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"35\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@0@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"37\",\"type\": {\"op\": \"Int\"}},\"annotation\": \"genTest: normal: (@pat@0@0: int) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@cfc\\\\\\\"37\\\",\\\"type\\\": {\\\"op\\\": \\\"Int\\\"}}\"}),(@fun-read,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@fun-read\\\"38\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}},\"annotation\": \"genTest: normal: (@fun-read: hnd/clause0<main/chr,main/read,1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@fun-read\\\\\\\"38\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/clause0\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (@fun-read) {\n  ((@skip std/core/hnd/Clause0((f: ((hnd/marker :: (E, V) -> V)<(1005 :: E),1006>, (hnd/ev :: ((E, V) -> V) -> V)<(main/read :: (E, V) -> V)>) -> (1005 :: E) main/chr) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/read :: (E, V) -> V)>) -> (e :: E) main/chr) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/read :: (E, V) -> V),(e :: E),a> ) as @pat@2@0: ((hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/read :: (E, V) -> V),(1005 :: E),1006>))\n     -> std/core/hnd/cast-clause0<main/chr,(main/read :: (E, V) -> V),(e :: E),(main/read :: (E, V) -> V),a>(f)(m, ev@10034);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@fun-read\\\"38\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}},\"annotation\": \"genTest: normal: (@fun-read: hnd/clause0<main/chr,main/read,1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@fun-read\\\\\\\"38\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/clause0\\\"}}\"}: \"std/core/hnd/clause0\".\"std/core/hnd/Clause0\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"39\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@fun-read\\\"38\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}},\"annotation\": \"genTest: normal: (@fun-read: hnd/clause0<main/chr,main/read,1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@fun-read\\\\\\\"38\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/clause0\\\"}}\"}: \"std/core/hnd/clause0\".\"std/core/hnd/Clause0\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"39\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (@fun-read) {\n  ((@skip std/core/hnd/Clause0((f: ((hnd/marker :: (E, V) -> V)<(1005 :: E),1006>, (hnd/ev :: ((E, V) -> V) -> V)<(main/read :: (E, V) -> V)>) -> (1005 :: E) main/chr) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/read :: (E, V) -> V)>) -> (e :: E) main/chr) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/read :: (E, V) -> V),(e :: E),a> ) as @pat@2@0: ((hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/read :: (E, V) -> V),(1005 :: E),1006>))\n     -> std/core/hnd/cast-clause0<main/chr,(main/read :: (E, V) -> V),(e :: E),(main/read :: (E, V) -> V),a>(f)(m, ev@10034);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"35\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h: main/read<1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"35\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@0@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"37\",\"type\": {\"op\": \"Int\"}},\"annotation\": \"genTest: normal: (@pat@0@0: int) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@cfc\\\\\\\"37\\\",\\\"type\\\": {\\\"op\\\": \\\"Int\\\"}}\"}),(@fun-read,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@fun-read\\\"38\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}},\"annotation\": \"genTest: normal: (@fun-read: hnd/clause0<main/chr,main/read,1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@fun-read\\\\\\\"38\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/clause0\\\"}}\"})]","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/clause0","scrutinee":3,"clauses":[{"tag":"std/core/hnd/Clause0","target":90,"args":{"any":[2]}}],"default":{"tag":"27f4ad1c-0eaf-43c9-bffa-0472e2b3b921#[Missing Tag#1383]","target":88,"args":{"any":[]}}}]},
{"label":"92([#284])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev@10034\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"33\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<main/read>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"33\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(m,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"34\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (m: hnd/marker<1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"34\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(h,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"35\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h: main/read<1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"35\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"36\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/evv<1005>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"36\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (h) {\n  ((@skip main/@Hnd-read((@pat@0@0: int) : int, (@fun-read: (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/read :: (E, V) -> V),(1005 :: E),1006>) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/read :: (E, V) -> V),(e :: E),a>) : (main/read :: (E, V) -> V)<(e :: E),a> ) as @pat@2: ((main/read :: (E, V) -> V)<(1005 :: E),1006>))\n     -> (match (@fun-read) {\n      ((@skip std/core/hnd/Clause0((f: ((hnd/marker :: (E, V) -> V)<(1005 :: E),1006>, (hnd/ev :: ((E, V) -> V) -> V)<(main/read :: (E, V) -> V)>) -> (1005 :: E) main/chr) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/read :: (E, V) -> V)>) -> (e :: E) main/chr) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/read :: (E, V) -> V),(e :: E),a> ) as @pat@2@0: ((hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/read :: (E, V) -> V),(1005 :: E),1006>))\n         -> std/core/hnd/cast-clause0<main/chr,(main/read :: (E, V) -> V),(e :: E),(main/read :: (E, V) -> V),a>(f)(m, ev@10034);\n    });\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"35\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h: main/read<1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"35\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}: \"main/read\".\"main/@Hnd-read\"(({\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"37\",\"type\": {\"op\": \"Int\"}}, {\"op\": \"Var\",\"id\": \"@\\\"@fun-read\\\"38\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}))","traced":{"any":[]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"35\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h: main/read<1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"35\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}: \"main/read\".\"main/@Hnd-read\"(({\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"37\",\"type\": {\"op\": \"Int\"}}, {\"op\": \"Var\",\"id\": \"@\\\"@fun-read\\\"38\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (h) {\n  ((@skip main/@Hnd-read((@pat@0@0: int) : int, (@fun-read: (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/read :: (E, V) -> V),(1005 :: E),1006>) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/read :: (E, V) -> V),(e :: E),a>) : (main/read :: (E, V) -> V)<(e :: E),a> ) as @pat@2: ((main/read :: (E, V) -> V)<(1005 :: E),1006>))\n     -> (match (@fun-read) {\n      ((@skip std/core/hnd/Clause0((f: ((hnd/marker :: (E, V) -> V)<(1005 :: E),1006>, (hnd/ev :: ((E, V) -> V) -> V)<(main/read :: (E, V) -> V)>) -> (1005 :: E) main/chr) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/read :: (E, V) -> V)>) -> (e :: E) main/chr) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/read :: (E, V) -> V),(e :: E),a> ) as @pat@2@0: ((hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/read :: (E, V) -> V),(1005 :: E),1006>))\n         -> std/core/hnd/cast-clause0<main/chr,(main/read :: (E, V) -> V),(e :: E),(main/read :: (E, V) -> V),a>(f)(m, ev@10034);\n    });\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev@10034\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"33\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<main/read>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"33\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(m,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"34\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (m: hnd/marker<1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"34\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(h,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"35\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h: main/read<1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"35\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"36\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/evv<1005>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"36\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Match","type":"main/read","scrutinee":3,"clauses":[{"tag":"main/@Hnd-read","target":91,"args":{"any":[2,3]}}],"default":{"tag":"27f4ad1c-0eaf-43c9-bffa-0472e2b3b921#[Missing Tag#1384]","target":86,"args":{"any":[]}}}]},
{"label":"93([k@[k@[mcore:[#282]#268]#274]#282])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"ev@10034\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"33\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"34\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"35\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"36\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"ev@10034\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"33\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"34\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"35\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"36\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/ev","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Ev","target":92,"args":{"any":[1,2,3,4]}}],"default":{"tag":"27f4ad1c-0eaf-43c9-bffa-0472e2b3b921#[Missing Tag#1385]","target":84,"args":{"any":[]}}}]},
{"label":"94([k@[mcore:[#282]#268]#274])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"promote_ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Push","target":93,"args":{"any":[]}},
{"op":"Jump","target":82}]},
{"label":"95([mcore:[#282]#268])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"ev@10034\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@evv-at<(main/read :: (E, V) -> V)>((std/core/types/@make-ssize_t(0)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/@make-ssize_t(0)","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"Push","target":94,"args":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/@make-ssize_t(0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@evv-at<(main/read :: (E, V) -> V)>((std/core/types/@make-ssize_t(0)))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"ev@10034\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}","traced":{"any":[]}},
{"op":"Jump","target":83}]},
{"label":"96([mcore:[#283]#298])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"CallLib","lib":2,"symbol":"std/core/hnd/local-var"}]},
{"label":"97([mcore:[#286]#304])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"CallLib","lib":2,"symbol":"std/core/hnd/local-var"}]},
{"label":"98([mcore:[#292]#310])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"std/core/hnd/clause-tail0"}]},
{"label":"99([mcore:[#297]#315])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"CallLib","lib":2,"symbol":"std/core/hnd/@open-at0"}]},
{"label":"100([mcore:[#299]#321])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"std/core/hnd/@evv-index"}]},
{"label":"101([mcore:[#303]#326])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"CallLib","lib":2,"symbol":"elt"}]},
{"label":"102([mcore:[#304]#332])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"CallLib","lib":0,"symbol":"getCurrentEvv"}]},
{"label":"103([#351])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"104([k@[#352]#354])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"105([match_def@[#352]#356])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"106([k@[match_main/@Hnd-stop@[#352]#357]#359])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"107([#361])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"108([k@[#362]#364])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"109([#362])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@2@0,{\"op\": \"Var\",\"id\": \"@x47\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}),(f,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"48\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (f: (hnd/marker<1005,1006>, hnd/ev<main/stop>) -> 1005 main/chr) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"48\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/cast-clause0<main/chr,(main/stop :: (E, V) -> V),(e :: E),(main/stop :: (E, V) -> V),a>(f)(m, ev@10036)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/cast-clause0<main/chr,(main/stop :: (E, V) -> V),(e :: E),(main/stop :: (E, V) -> V),a>(f)(m, ev@10036)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@2@0,{\"op\": \"Var\",\"id\": \"@x47\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}),(f,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"48\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (f: (hnd/marker<1005,1006>, hnd/ev<main/stop>) -> 1005 main/chr) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"48\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Invoke","receiver":2,"tag":"apply","args":{"any":[0,1]}}]},
{"label":"110([match_main/@Hnd-stop@[#352]#357])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"43\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h: main/stop<1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"43\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@0@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"45\",\"type\": {\"op\": \"Int\"}},\"annotation\": \"genTest: normal: (@pat@0@1: int) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@cfc\\\\\\\"45\\\",\\\"type\\\": {\\\"op\\\": \\\"Int\\\"}}\"}),(@ctl-stop,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@ctl-stop\\\"46\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}},\"annotation\": \"genTest: normal: (@ctl-stop: forall<a> hnd/clause0<a,main/stop,1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@ctl-stop\\\\\\\"46\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/clause0\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match ((@ctl-stop<main/chr>)) {\n  ((@skip std/core/hnd/Clause0((f: ((hnd/marker :: (E, V) -> V)<(1005 :: E),1006>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (1005 :: E) main/chr) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (e :: E) main/chr) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/stop :: (E, V) -> V),(e :: E),a> ) as @pat@2@0: ((hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/stop :: (E, V) -> V),(1005 :: E),1006>))\n     -> std/core/hnd/cast-clause0<main/chr,(main/stop :: (E, V) -> V),(e :: E),(main/stop :: (E, V) -> V),a>(f)(m, ev@10036);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@x47\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}: \"std/core/hnd/clause0\".\"std/core/hnd/Clause0\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"48\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@x47\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}: \"std/core/hnd/clause0\".\"std/core/hnd/Clause0\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"48\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match ((@ctl-stop<main/chr>)) {\n  ((@skip std/core/hnd/Clause0((f: ((hnd/marker :: (E, V) -> V)<(1005 :: E),1006>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (1005 :: E) main/chr) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (e :: E) main/chr) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/stop :: (E, V) -> V),(e :: E),a> ) as @pat@2@0: ((hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/stop :: (E, V) -> V),(1005 :: E),1006>))\n     -> std/core/hnd/cast-clause0<main/chr,(main/stop :: (E, V) -> V),(e :: E),(main/stop :: (E, V) -> V),a>(f)(m, ev@10036);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"43\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h: main/stop<1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"43\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@0@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"45\",\"type\": {\"op\": \"Int\"}},\"annotation\": \"genTest: normal: (@pat@0@1: int) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@cfc\\\\\\\"45\\\",\\\"type\\\": {\\\"op\\\": \\\"Int\\\"}}\"}),(@ctl-stop,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@ctl-stop\\\"46\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}},\"annotation\": \"genTest: normal: (@ctl-stop: forall<a> hnd/clause0<a,main/stop,1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@ctl-stop\\\\\\\"46\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/clause0\\\"}}\"})]","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/clause0","scrutinee":3,"clauses":[{"tag":"std/core/hnd/Clause0","target":109,"args":{"any":[2]}}],"default":{"tag":"27f4ad1c-0eaf-43c9-bffa-0472e2b3b921#[Missing Tag#1386]","target":107,"args":{"any":[]}}}]},
{"label":"111([#352])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"ev@10036\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"41\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0@0: hnd/htag<main/stop>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"41\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(m,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"42\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (m: hnd/marker<1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"42\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(h,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"43\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h: main/stop<1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"43\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"44\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/evv<1005>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"44\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (h) {\n  ((@skip main/@Hnd-stop((@pat@0@1: int) : int, (@ctl-stop: (forall<a> (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<a,(main/stop :: (E, V) -> V),(1005 :: E),1006>)) : (forall<b> (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<b,(main/stop :: (E, V) -> V),(e :: E),a>)) : (main/stop :: (E, V) -> V)<(e :: E),a> ) as @pat@2: ((main/stop :: (E, V) -> V)<(1005 :: E),1006>))\n     -> (match ((@ctl-stop<main/chr>)) {\n      ((@skip std/core/hnd/Clause0((f: ((hnd/marker :: (E, V) -> V)<(1005 :: E),1006>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (1005 :: E) main/chr) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (e :: E) main/chr) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/stop :: (E, V) -> V),(e :: E),a> ) as @pat@2@0: ((hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/stop :: (E, V) -> V),(1005 :: E),1006>))\n         -> std/core/hnd/cast-clause0<main/chr,(main/stop :: (E, V) -> V),(e :: E),(main/stop :: (E, V) -> V),a>(f)(m, ev@10036);\n    });\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"43\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h: main/stop<1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"43\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}: \"main/stop\".\"main/@Hnd-stop\"(({\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"45\",\"type\": {\"op\": \"Int\"}}, {\"op\": \"Var\",\"id\": \"@\\\"@ctl-stop\\\"46\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}))","traced":{"any":[]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"43\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h: main/stop<1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"43\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}: \"main/stop\".\"main/@Hnd-stop\"(({\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"45\",\"type\": {\"op\": \"Int\"}}, {\"op\": \"Var\",\"id\": \"@\\\"@ctl-stop\\\"46\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (h) {\n  ((@skip main/@Hnd-stop((@pat@0@1: int) : int, (@ctl-stop: (forall<a> (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<a,(main/stop :: (E, V) -> V),(1005 :: E),1006>)) : (forall<b> (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<b,(main/stop :: (E, V) -> V),(e :: E),a>)) : (main/stop :: (E, V) -> V)<(e :: E),a> ) as @pat@2: ((main/stop :: (E, V) -> V)<(1005 :: E),1006>))\n     -> (match ((@ctl-stop<main/chr>)) {\n      ((@skip std/core/hnd/Clause0((f: ((hnd/marker :: (E, V) -> V)<(1005 :: E),1006>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (1005 :: E) main/chr) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (e :: E) main/chr) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/stop :: (E, V) -> V),(e :: E),a> ) as @pat@2@0: ((hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/stop :: (E, V) -> V),(1005 :: E),1006>))\n         -> std/core/hnd/cast-clause0<main/chr,(main/stop :: (E, V) -> V),(e :: E),(main/stop :: (E, V) -> V),a>(f)(m, ev@10036);\n    });\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"ev@10036\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"41\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0@0: hnd/htag<main/stop>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"41\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(m,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"42\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (m: hnd/marker<1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"42\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(h,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"43\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h: main/stop<1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"43\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"44\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/evv<1005>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"44\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Match","type":"main/stop","scrutinee":3,"clauses":[{"tag":"main/@Hnd-stop","target":110,"args":{"any":[2,3]}}],"default":{"tag":"27f4ad1c-0eaf-43c9-bffa-0472e2b3b921#[Missing Tag#1387]","target":105,"args":{"any":[]}}}]},
{"label":"112([k@[k@[mcore:[#311]#336]#342]#350])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"ev@10036\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"41\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"42\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"43\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"44\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"ev@10036\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"41\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"42\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"43\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"44\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/ev","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Ev","target":111,"args":{"any":[1,2,3,4]}}],"default":{"tag":"27f4ad1c-0eaf-43c9-bffa-0472e2b3b921#[Missing Tag#1388]","target":103,"args":{"any":[]}}}]},
{"label":"113([k@[mcore:[#311]#336]#342])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"promote_ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Push","target":112,"args":{"any":[]}},
{"op":"Jump","target":101}]},
{"label":"114([mcore:[#311]#336])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"ev@10036\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@evv-at<(main/stop :: (E, V) -> V)>((std/core/types/@make-ssize_t(0)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/@make-ssize_t(0)","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"Push","target":113,"args":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/@make-ssize_t(0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@evv-at<(main/stop :: (E, V) -> V)>((std/core/types/@make-ssize_t(0)))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"ev@10036\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}","traced":{"any":[]}},
{"op":"Jump","target":102}]},
{"label":"115([#379])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Jump","target":114}]},
{"label":"116([#389])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"117([k@[switch case for Bool(true)#368]#376])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"New","out":1,"targets":[115],"args":{"any":[]},"tags":["apply"]},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Jump","target":99}]},
{"label":"118([switch case for Bool(true)#368])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"@x40\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@open-at0<main/chr,(main/stop :: (E, V) -> V),<(main/stop :: (E, V) -> V),(local :: H -> X)<(h :: H)>|(e :: E)>>((std/core/hnd/@evv-index<<(main/stop :: (E, V) -> V),(local :: H -> X)<(h :: H)>|(e :: E)>,(main/stop :: (E, V) -> V)>(main/@tag-stop)), (fn<(main/stop :: (E, V) -> V)>(){\n    val ev@10036 : ((hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>)\n          = (std/core/hnd/@evv-at<(main/stop :: (E, V) -> V)>((std/core/types/@make-ssize_t(0))));\n    (match (ev@10036) {\n      ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0@0: (hnd/htag :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>, (m: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (h: (main/stop :: (E, V) -> V)<(e :: E),a>) : (main/stop :: (E, V) -> V)<(e :: E),a>, (@pat@1: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)> ) as @pat@0: ((hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>))\n         -> (match (h) {\n          ((@skip main/@Hnd-stop((@pat@0@1: int) : int, (@ctl-stop: (forall<b> (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<b,(main/stop :: (E, V) -> V),(e :: E),a>)) : (forall<b> (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<b,(main/stop :: (E, V) -> V),(e :: E),a>)) : (main/stop :: (E, V) -> V)<(e :: E),a> ) as @pat@2: ((main/stop :: (E, V) -> V)<(e :: E),a>))\n             -> (match ((@ctl-stop<main/chr>)) {\n              ((@skip std/core/hnd/Clause0((f: ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (e :: E) main/chr) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (e :: E) main/chr) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/stop :: (E, V) -> V),(e :: E),a> ) as @pat@2@0: ((hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/stop :: (E, V) -> V),(e :: E),a>))\n                 -> std/core/hnd/cast-clause0<main/chr,(main/stop :: (E, V) -> V),(e :: E),(main/stop :: (E, V) -> V),a>(f)(m, ev@10036);\n            });\n        });\n    });\n  }))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@evv-index<<(main/stop :: (E, V) -> V),(local :: H -> X)<(h :: H)>|(e :: E)>,(main/stop :: (E, V) -> V)>(main/@tag-stop)","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Name(main/@tag-stop)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"Push","target":117,"args":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@evv-index<<(main/stop :: (E, V) -> V),(local :: H -> X)<(h :: H)>|(e :: E)>,(main/stop :: (E, V) -> V)>(main/@tag-stop)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@open-at0<main/chr,(main/stop :: (E, V) -> V),<(main/stop :: (E, V) -> V),(local :: H -> X)<(h :: H)>|(e :: E)>>((std/core/hnd/@evv-index<<(main/stop :: (E, V) -> V),(local :: H -> X)<(h :: H)>|(e :: E)>,(main/stop :: (E, V) -> V)>(main/@tag-stop)), (fn<(main/stop :: (E, V) -> V)>(){\n    val ev@10036 : ((hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>)\n          = (std/core/hnd/@evv-at<(main/stop :: (E, V) -> V)>((std/core/types/@make-ssize_t(0))));\n    (match (ev@10036) {\n      ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0@0: (hnd/htag :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>, (m: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (h: (main/stop :: (E, V) -> V)<(e :: E),a>) : (main/stop :: (E, V) -> V)<(e :: E),a>, (@pat@1: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)> ) as @pat@0: ((hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>))\n         -> (match (h) {\n          ((@skip main/@Hnd-stop((@pat@0@1: int) : int, (@ctl-stop: (forall<b> (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<b,(main/stop :: (E, V) -> V),(e :: E),a>)) : (forall<b> (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<b,(main/stop :: (E, V) -> V),(e :: E),a>)) : (main/stop :: (E, V) -> V)<(e :: E),a> ) as @pat@2: ((main/stop :: (E, V) -> V)<(e :: E),a>))\n             -> (match ((@ctl-stop<main/chr>)) {\n              ((@skip std/core/hnd/Clause0((f: ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (e :: E) main/chr) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (e :: E) main/chr) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/stop :: (E, V) -> V),(e :: E),a> ) as @pat@2@0: ((hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/stop :: (E, V) -> V),(e :: E),a>))\n                 -> std/core/hnd/cast-clause0<main/chr,(main/stop :: (E, V) -> V),(e :: E),(main/stop :: (E, V) -> V),a>(f)(m, ev@10036);\n            });\n        });\n    });\n  }))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"@x40\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Jump","target":100}]},
{"label":"119([k@[switch case for Bool(false)#392]#397])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"120([switch case for Bool(true)#399])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@1@0,{\"op\": \"Var\",\"id\": \"@x49\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: val x@10011 : int;\nval _ : ();\nval _@0 : ();\n10","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"x@10011\",\"type\": {\"op\": \"Int\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/local-get<int,(h :: H),<(main/stop :: (E, V) -> V)|(e :: E)>>(i)","traced":{"any":[]}},
{"op":"PrimOp","name":"getRef(Ref[Ptr]): Ptr","out":{"any":[0]},"in":{"any":[1]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/local-set<int,<(main/stop :: (E, V) -> V)|(e :: E)>,(h :: H)>(i, (std/core/int/int-add(x@10011, 1)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/int/int-add(x@10011, 1)","traced":{"any":[]}},
{"op":"Const","format":"int","out":3,"value":1},
{"op":"PrimOp","name":"infixAdd(Int, Int): Int","out":{"any":[0]},"in":{"any":[0,3]}},
{"op":"PrimOp","name":"setRef(Ref[Ptr], Ptr): Unit","out":{"any":[0]},"in":{"any":[1,0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_@0\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/local-set<int,<(main/stop :: (E, V) -> V)|(e :: E)>,(h :: H)>(j, (std/core/types/local-get<int,(h :: H),<(main/stop :: (E, V) -> V)|(e :: E)>>(i)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/local-get<int,(h :: H),<(main/stop :: (E, V) -> V)|(e :: E)>>(i)","traced":{"any":[]}},
{"op":"PrimOp","name":"getRef(Ref[Ptr]): Ptr","out":{"any":[0]},"in":{"any":[1]}},
{"op":"PrimOp","name":"setRef(Ref[Ptr], Ptr): Unit","out":{"any":[0]},"in":{"any":[2,0]}},
{"op":"Debug","msg":"BGN: genExpr: 10","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":10},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: 10","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/local-get<int,(h :: H),<(main/stop :: (E, V) -> V)|(e :: E)>>(i)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/local-set<int,<(main/stop :: (E, V) -> V)|(e :: E)>,(h :: H)>(j, (std/core/types/local-get<int,(h :: H),<(main/stop :: (E, V) -> V)|(e :: E)>>(i)))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_@0\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/int/int-add(x@10011, 1)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/local-set<int,<(main/stop :: (E, V) -> V)|(e :: E)>,(h :: H)>(i, (std/core/int/int-add(x@10011, 1)))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/local-get<int,(h :: H),<(main/stop :: (E, V) -> V)|(e :: E)>>(i)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"x@10011\",\"type\": {\"op\": \"Int\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: val x@10011 : int;\nval _ : ();\nval _@0 : ();\n10","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@1@0,{\"op\": \"Var\",\"id\": \"@x49\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"121([switch case for Bool(false)#407])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@2@0@0,{\"op\": \"Var\",\"id\": \"@x49\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: val x@0@10013 : int;\nval _@1 : ();\n36","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"x@0@10013\",\"type\": {\"op\": \"Int\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/local-get<int,(h :: H),<(main/stop :: (E, V) -> V)|(e :: E)>>(j)","traced":{"any":[]}},
{"op":"PrimOp","name":"getRef(Ref[Ptr]): Ptr","out":{"any":[1]},"in":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_@1\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/local-set<int,<(main/stop :: (E, V) -> V)|(e :: E)>,(h :: H)>(j, (std/core/int/int-sub(x@0@10013, 1)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/int/int-sub(x@0@10013, 1)","traced":{"any":[]}},
{"op":"Const","format":"int","out":2,"value":1},
{"op":"PrimOp","name":"infixSub(Int, Int): Int","out":{"any":[1]},"in":{"any":[1,2]}},
{"op":"PrimOp","name":"setRef(Ref[Ptr], Ptr): Unit","out":{"any":[0]},"in":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: 36","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":36},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: 36","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/int/int-sub(x@0@10013, 1)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/local-set<int,<(main/stop :: (E, V) -> V)|(e :: E)>,(h :: H)>(j, (std/core/int/int-sub(x@0@10013, 1)))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_@1\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/local-get<int,(h :: H),<(main/stop :: (E, V) -> V)|(e :: E)>>(j)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"x@0@10013\",\"type\": {\"op\": \"Int\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: val x@0@10013 : int;\nval _@1 : ();\n36","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@2@0@0,{\"op\": \"Var\",\"id\": \"@x49\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"122([switch default case#413])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"123([switch default case#406])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Switch","arg":1,"values":[false],"targets":[121],"default":122}]},
{"label":"124([switch case for Bool(false)#392])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0@1@0,{\"op\": \"Var\",\"id\": \"@x40\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match ((std/core/int/(==)((std/core/types/local-get<int,(h :: H),<(main/stop :: (E, V) -> V)|(e :: E)>>(j)), 0))) {\n  ((std/core/types/True() : bool ) as @pat@1@0: bool)\n     -> val x@10011 : int;\n        val _ : ();\n        val _@0 : ();\n    10;\n  ((@skip std/core/types/False() : bool ) as @pat@2@0@0: bool)\n     -> val x@0@10013 : int;\n        val _@1 : ();\n    36;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/int/(==)((std/core/types/local-get<int,(h :: H),<(main/stop :: (E, V) -> V)|(e :: E)>>(j)), 0)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/local-get<int,(h :: H),<(main/stop :: (E, V) -> V)|(e :: E)>>(j)","traced":{"any":[]}},
{"op":"PrimOp","name":"getRef(Ref[Ptr]): Ptr","out":{"any":[2]},"in":{"any":[1]}},
{"op":"Debug","msg":"BGN: genExpr: 0","traced":{"any":[]}},
{"op":"Const","format":"int","out":3,"value":0},
{"op":"PrimOp","name":"infixEq(Int, Int): Boolean","out":{"any":[2]},"in":{"any":[2,3]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: 0","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/local-get<int,(h :: H),<(main/stop :: (E, V) -> V)|(e :: E)>>(j)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/int/(==)((std/core/types/local-get<int,(h :: H),<(main/stop :: (E, V) -> V)|(e :: E)>>(j)), 0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match ((std/core/int/(==)((std/core/types/local-get<int,(h :: H),<(main/stop :: (E, V) -> V)|(e :: E)>>(j)), 0))) {\n  ((std/core/types/True() : bool ) as @pat@1@0: bool)\n     -> val x@10011 : int;\n        val _ : ();\n        val _@0 : ();\n    10;\n  ((@skip std/core/types/False() : bool ) as @pat@2@0@0: bool)\n     -> val x@0@10013 : int;\n        val _@1 : ();\n    36;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0@1@0,{\"op\": \"Var\",\"id\": \"@x40\",\"type\": {\"op\": \"Bool\"}})]","traced":{"any":[]}},
{"op":"Switch","arg":0,"values":[true],"targets":[120],"default":123}]},
{"label":"125([switch default case#414])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"126([switch default case#391])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Switch","arg":2,"values":[false],"targets":[124],"default":125}]},
{"label":"127([mcore:[#327]#366])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/int/(>)((std/core/types/local-get<int,(h :: H),<(main/stop :: (E, V) -> V)|(e :: E)>>(i)), n)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/local-get<int,(h :: H),<(main/stop :: (E, V) -> V)|(e :: E)>>(i)","traced":{"any":[]}},
{"op":"PrimOp","name":"getRef(Ref[Ptr]): Ptr","out":{"any":[1]},"in":{"any":[0]}},
{"op":"PrimOp","name":"infixGt(Int, Int): Boolean","out":{"any":[1]},"in":{"any":[1,4]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/local-get<int,(h :: H),<(main/stop :: (E, V) -> V)|(e :: E)>>(i)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/int/(>)((std/core/types/local-get<int,(h :: H),<(main/stop :: (E, V) -> V)|(e :: E)>>(i)), n)","traced":{"any":[]}},
{"op":"Switch","arg":0,"values":[true],"targets":[118],"default":126}]},
{"label":"128([mcore:[#331]#415])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"129([method_apply@[mcore:[#334]#416]#420])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Const","format":"string","out":4,"value":"Name(main/@tag-stop)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"Swap","a":3,"b":4},
{"op":"Swap","a":1,"b":4},
{"op":"Swap","a":2,"b":4},
{"op":"Jump","target":127}]},
{"label":"130([#440])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Jump","target":128}]},
{"label":"131([k@[k@[mcore:[#334]#416]#433]#436])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"New","out":2,"targets":[130],"args":{"any":[]},"tags":["apply"]},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Const","format":"string","out":4,"value":"Name(main/@tag-read)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"Swap","a":2,"b":1},
{"op":"Jump","target":23}]},
{"label":"132([k@[mcore:[#334]#416]#433])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Push","target":131,"args":{"any":[1]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Jump","target":276}]},
{"label":"133([mcore:[#334]#416])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4,5,6]}},
{"op":"Debug","msg":"BGN: genExpr: main/@handle-read<(),<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>,()>((main/@Hnd-read<<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>,()>(1, (std/core/hnd/clause-tail0<<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>,(),(main/read :: (E, V) -> V),main/chr>((fn<<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>>(){\n      (match ((std/core/int/(>)((std/core/types/local-get<int,(h :: H),<(main/stop :: (E, V) -> V)|(e :: E)>>(i)), n))) {\n        ((std/core/types/True() : bool ) as @pat: bool)\n           -> std/core/hnd/@open-at0<main/chr,(main/stop :: (E, V) -> V),<(main/stop :: (E, V) -> V),(local :: H -> X)<(h :: H)>|(e :: E)>>((std/core/hnd/@evv-index<<(main/stop :: (E, V) -> V),(local :: H -> X)<(h :: H)>|(e :: E)>,(main/stop :: (E, V) -> V)>(main/@tag-stop)), (fn<(main/stop :: (E, V) -> V)>(){\n              val ev@10036 : ((hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>)\n                    = (std/core/hnd/@evv-at<(main/stop :: (E, V) -> V)>((std/core/types/@make-ssize_t(0))));\n              (match (ev@10036) {\n                ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0@0: (hnd/htag :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>, (m: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (h: (main/stop :: (E, V) -> V)<(e :: E),a>) : (main/stop :: (E, V) -> V)<(e :: E),a>, (@pat@1: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)> ) as @pat@0: ((hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>))\n                   -> (match (h) {\n                    ((@skip main/@Hnd-stop((@pat@0@1: int) : int, (@ctl-stop: (forall<b> (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<b,(main/stop :: (E, V) -> V),(e :: E),a>)) : (forall<b> (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<b,(main/stop :: (E, V) -> V),(e :: E),a>)) : (main/stop :: (E, V) -> V)<(e :: E),a> ) as @pat@2: ((main/stop :: (E, V) -> V)<(e :: E),a>))\n                       -> (match ((@ctl-stop<main/chr>)) {\n                        ((@skip std/core/hnd/Clause0((f: ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (e :: E) main/chr) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (e :: E) main/chr) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/stop :: (E, V) -> V),(e :: E),a> ) as @pat@2@0: ((hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/stop :: (E, V) -> V),(e :: E),a>))\n                           -> std/core/hnd/cast-clause0<main/chr,(main/stop :: (E, V) -> V),(e :: E),(main/stop :: (E, V) -> V),a>(f)(m, ev@10036);\n                      });\n                  });\n              });\n            }));\n        ((@skip std/core/types/False() : bool ) as @pat@0@1@0: bool)\n           -> (match ((std/core/int/(==)((std/core/types/local-get<int,(h :: H),<(main/stop :: (E, V) -> V)|(e :: E)>>(j)), 0))) {\n            ((std/core/types/True() : bool ) as @pat@1@0: bool)\n               -> val x@10011 : int;\n                  val _ : ();\n                  val _@0 : ();\n              10;\n            ((@skip std/core/types/False() : bool ) as @pat@2@0@0: bool)\n               -> val x@0@10013 : int;\n                  val _@1 : ();\n              36;\n          });\n      });\n    }))))), (fn<<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>>(@x: ()){\n    @x;\n  }), action)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: main/@Hnd-read<<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>,()>(1, (std/core/hnd/clause-tail0<<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>,(),(main/read :: (E, V) -> V),main/chr>((fn<<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>>(){\n    (match ((std/core/int/(>)((std/core/types/local-get<int,(h :: H),<(main/stop :: (E, V) -> V)|(e :: E)>>(i)), n))) {\n      ((std/core/types/True() : bool ) as @pat: bool)\n         -> std/core/hnd/@open-at0<main/chr,(main/stop :: (E, V) -> V),<(main/stop :: (E, V) -> V),(local :: H -> X)<(h :: H)>|(e :: E)>>((std/core/hnd/@evv-index<<(main/stop :: (E, V) -> V),(local :: H -> X)<(h :: H)>|(e :: E)>,(main/stop :: (E, V) -> V)>(main/@tag-stop)), (fn<(main/stop :: (E, V) -> V)>(){\n            val ev@10036 : ((hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>)\n                  = (std/core/hnd/@evv-at<(main/stop :: (E, V) -> V)>((std/core/types/@make-ssize_t(0))));\n            (match (ev@10036) {\n              ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0@0: (hnd/htag :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>, (m: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (h: (main/stop :: (E, V) -> V)<(e :: E),a>) : (main/stop :: (E, V) -> V)<(e :: E),a>, (@pat@1: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)> ) as @pat@0: ((hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>))\n                 -> (match (h) {\n                  ((@skip main/@Hnd-stop((@pat@0@1: int) : int, (@ctl-stop: (forall<b> (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<b,(main/stop :: (E, V) -> V),(e :: E),a>)) : (forall<b> (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<b,(main/stop :: (E, V) -> V),(e :: E),a>)) : (main/stop :: (E, V) -> V)<(e :: E),a> ) as @pat@2: ((main/stop :: (E, V) -> V)<(e :: E),a>))\n                     -> (match ((@ctl-stop<main/chr>)) {\n                      ((@skip std/core/hnd/Clause0((f: ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (e :: E) main/chr) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (e :: E) main/chr) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/stop :: (E, V) -> V),(e :: E),a> ) as @pat@2@0: ((hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/stop :: (E, V) -> V),(e :: E),a>))\n                         -> std/core/hnd/cast-clause0<main/chr,(main/stop :: (E, V) -> V),(e :: E),(main/stop :: (E, V) -> V),a>(f)(m, ev@10036);\n                    });\n                });\n            });\n          }));\n      ((@skip std/core/types/False() : bool ) as @pat@0@1@0: bool)\n         -> (match ((std/core/int/(==)((std/core/types/local-get<int,(h :: H),<(main/stop :: (E, V) -> V)|(e :: E)>>(j)), 0))) {\n          ((std/core/types/True() : bool ) as @pat@1@0: bool)\n             -> val x@10011 : int;\n                val _ : ();\n                val _@0 : ();\n            10;\n          ((@skip std/core/types/False() : bool ) as @pat@2@0@0: bool)\n             -> val x@0@10013 : int;\n                val _@1 : ();\n            36;\n        });\n    });\n  }))))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: 1","traced":{"any":[]}},
{"op":"Const","format":"int","out":3,"value":1},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/clause-tail0<<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>,(),(main/read :: (E, V) -> V),main/chr>((fn<<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>>(){\n  (match ((std/core/int/(>)((std/core/types/local-get<int,(h :: H),<(main/stop :: (E, V) -> V)|(e :: E)>>(i)), n))) {\n    ((std/core/types/True() : bool ) as @pat: bool)\n       -> std/core/hnd/@open-at0<main/chr,(main/stop :: (E, V) -> V),<(main/stop :: (E, V) -> V),(local :: H -> X)<(h :: H)>|(e :: E)>>((std/core/hnd/@evv-index<<(main/stop :: (E, V) -> V),(local :: H -> X)<(h :: H)>|(e :: E)>,(main/stop :: (E, V) -> V)>(main/@tag-stop)), (fn<(main/stop :: (E, V) -> V)>(){\n          val ev@10036 : ((hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>)\n                = (std/core/hnd/@evv-at<(main/stop :: (E, V) -> V)>((std/core/types/@make-ssize_t(0))));\n          (match (ev@10036) {\n            ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0@0: (hnd/htag :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>, (m: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (h: (main/stop :: (E, V) -> V)<(e :: E),a>) : (main/stop :: (E, V) -> V)<(e :: E),a>, (@pat@1: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)> ) as @pat@0: ((hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>))\n               -> (match (h) {\n                ((@skip main/@Hnd-stop((@pat@0@1: int) : int, (@ctl-stop: (forall<b> (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<b,(main/stop :: (E, V) -> V),(e :: E),a>)) : (forall<b> (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<b,(main/stop :: (E, V) -> V),(e :: E),a>)) : (main/stop :: (E, V) -> V)<(e :: E),a> ) as @pat@2: ((main/stop :: (E, V) -> V)<(e :: E),a>))\n                   -> (match ((@ctl-stop<main/chr>)) {\n                    ((@skip std/core/hnd/Clause0((f: ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (e :: E) main/chr) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (e :: E) main/chr) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/stop :: (E, V) -> V),(e :: E),a> ) as @pat@2@0: ((hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/stop :: (E, V) -> V),(e :: E),a>))\n                       -> std/core/hnd/cast-clause0<main/chr,(main/stop :: (E, V) -> V),(e :: E),(main/stop :: (E, V) -> V),a>(f)(m, ev@10036);\n                  });\n              });\n          });\n        }));\n    ((@skip std/core/types/False() : bool ) as @pat@0@1@0: bool)\n       -> (match ((std/core/int/(==)((std/core/types/local-get<int,(h :: H),<(main/stop :: (E, V) -> V)|(e :: E)>>(j)), 0))) {\n        ((std/core/types/True() : bool ) as @pat@1@0: bool)\n           -> val x@10011 : int;\n              val _ : ();\n              val _@0 : ();\n          10;\n        ((@skip std/core/types/False() : bool ) as @pat@2@0@0: bool)\n           -> val x@0@10013 : int;\n              val _@1 : ();\n          36;\n      });\n  });\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[129],"args":{"any":[2,0,6]},"tags":["apply"]},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Push","target":132,"args":{"any":[1,3]}},
{"op":"Copy","from":2,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/clause-tail0<<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>,(),(main/read :: (E, V) -> V),main/chr>((fn<<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>>(){\n  (match ((std/core/int/(>)((std/core/types/local-get<int,(h :: H),<(main/stop :: (E, V) -> V)|(e :: E)>>(i)), n))) {\n    ((std/core/types/True() : bool ) as @pat: bool)\n       -> std/core/hnd/@open-at0<main/chr,(main/stop :: (E, V) -> V),<(main/stop :: (E, V) -> V),(local :: H -> X)<(h :: H)>|(e :: E)>>((std/core/hnd/@evv-index<<(main/stop :: (E, V) -> V),(local :: H -> X)<(h :: H)>|(e :: E)>,(main/stop :: (E, V) -> V)>(main/@tag-stop)), (fn<(main/stop :: (E, V) -> V)>(){\n          val ev@10036 : ((hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>)\n                = (std/core/hnd/@evv-at<(main/stop :: (E, V) -> V)>((std/core/types/@make-ssize_t(0))));\n          (match (ev@10036) {\n            ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0@0: (hnd/htag :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>, (m: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (h: (main/stop :: (E, V) -> V)<(e :: E),a>) : (main/stop :: (E, V) -> V)<(e :: E),a>, (@pat@1: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)> ) as @pat@0: ((hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>))\n               -> (match (h) {\n                ((@skip main/@Hnd-stop((@pat@0@1: int) : int, (@ctl-stop: (forall<b> (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<b,(main/stop :: (E, V) -> V),(e :: E),a>)) : (forall<b> (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<b,(main/stop :: (E, V) -> V),(e :: E),a>)) : (main/stop :: (E, V) -> V)<(e :: E),a> ) as @pat@2: ((main/stop :: (E, V) -> V)<(e :: E),a>))\n                   -> (match ((@ctl-stop<main/chr>)) {\n                    ((@skip std/core/hnd/Clause0((f: ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (e :: E) main/chr) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (e :: E) main/chr) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/stop :: (E, V) -> V),(e :: E),a> ) as @pat@2@0: ((hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/stop :: (E, V) -> V),(e :: E),a>))\n                       -> std/core/hnd/cast-clause0<main/chr,(main/stop :: (E, V) -> V),(e :: E),(main/stop :: (E, V) -> V),a>(f)(m, ev@10036);\n                  });\n              });\n          });\n        }));\n    ((@skip std/core/types/False() : bool ) as @pat@0@1@0: bool)\n       -> (match ((std/core/int/(==)((std/core/types/local-get<int,(h :: H),<(main/stop :: (E, V) -> V)|(e :: E)>>(j)), 0))) {\n        ((std/core/types/True() : bool ) as @pat@1@0: bool)\n           -> val x@10011 : int;\n              val _ : ();\n              val _@0 : ();\n          10;\n        ((@skip std/core/types/False() : bool ) as @pat@2@0@0: bool)\n           -> val x@0@10013 : int;\n              val _@1 : ();\n          36;\n      });\n  });\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: 1","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: main/@Hnd-read<<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>,()>(1, (std/core/hnd/clause-tail0<<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>,(),(main/read :: (E, V) -> V),main/chr>((fn<<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>>(){\n    (match ((std/core/int/(>)((std/core/types/local-get<int,(h :: H),<(main/stop :: (E, V) -> V)|(e :: E)>>(i)), n))) {\n      ((std/core/types/True() : bool ) as @pat: bool)\n         -> std/core/hnd/@open-at0<main/chr,(main/stop :: (E, V) -> V),<(main/stop :: (E, V) -> V),(local :: H -> X)<(h :: H)>|(e :: E)>>((std/core/hnd/@evv-index<<(main/stop :: (E, V) -> V),(local :: H -> X)<(h :: H)>|(e :: E)>,(main/stop :: (E, V) -> V)>(main/@tag-stop)), (fn<(main/stop :: (E, V) -> V)>(){\n            val ev@10036 : ((hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>)\n                  = (std/core/hnd/@evv-at<(main/stop :: (E, V) -> V)>((std/core/types/@make-ssize_t(0))));\n            (match (ev@10036) {\n              ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0@0: (hnd/htag :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>, (m: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (h: (main/stop :: (E, V) -> V)<(e :: E),a>) : (main/stop :: (E, V) -> V)<(e :: E),a>, (@pat@1: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)> ) as @pat@0: ((hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>))\n                 -> (match (h) {\n                  ((@skip main/@Hnd-stop((@pat@0@1: int) : int, (@ctl-stop: (forall<b> (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<b,(main/stop :: (E, V) -> V),(e :: E),a>)) : (forall<b> (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<b,(main/stop :: (E, V) -> V),(e :: E),a>)) : (main/stop :: (E, V) -> V)<(e :: E),a> ) as @pat@2: ((main/stop :: (E, V) -> V)<(e :: E),a>))\n                     -> (match ((@ctl-stop<main/chr>)) {\n                      ((@skip std/core/hnd/Clause0((f: ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (e :: E) main/chr) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (e :: E) main/chr) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/stop :: (E, V) -> V),(e :: E),a> ) as @pat@2@0: ((hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/stop :: (E, V) -> V),(e :: E),a>))\n                         -> std/core/hnd/cast-clause0<main/chr,(main/stop :: (E, V) -> V),(e :: E),(main/stop :: (E, V) -> V),a>(f)(m, ev@10036);\n                    });\n                });\n            });\n          }));\n      ((@skip std/core/types/False() : bool ) as @pat@0@1@0: bool)\n         -> (match ((std/core/int/(==)((std/core/types/local-get<int,(h :: H),<(main/stop :: (E, V) -> V)|(e :: E)>>(j)), 0))) {\n          ((std/core/types/True() : bool ) as @pat@1@0: bool)\n             -> val x@10011 : int;\n                val _ : ();\n                val _@0 : ();\n            10;\n          ((@skip std/core/types/False() : bool ) as @pat@2@0@0: bool)\n             -> val x@0@10013 : int;\n                val _@1 : ();\n            36;\n        });\n    });\n  }))))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: main/@handle-read<(),<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>,()>((main/@Hnd-read<<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>,()>(1, (std/core/hnd/clause-tail0<<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>,(),(main/read :: (E, V) -> V),main/chr>((fn<<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>>(){\n      (match ((std/core/int/(>)((std/core/types/local-get<int,(h :: H),<(main/stop :: (E, V) -> V)|(e :: E)>>(i)), n))) {\n        ((std/core/types/True() : bool ) as @pat: bool)\n           -> std/core/hnd/@open-at0<main/chr,(main/stop :: (E, V) -> V),<(main/stop :: (E, V) -> V),(local :: H -> X)<(h :: H)>|(e :: E)>>((std/core/hnd/@evv-index<<(main/stop :: (E, V) -> V),(local :: H -> X)<(h :: H)>|(e :: E)>,(main/stop :: (E, V) -> V)>(main/@tag-stop)), (fn<(main/stop :: (E, V) -> V)>(){\n              val ev@10036 : ((hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>)\n                    = (std/core/hnd/@evv-at<(main/stop :: (E, V) -> V)>((std/core/types/@make-ssize_t(0))));\n              (match (ev@10036) {\n                ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0@0: (hnd/htag :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>, (m: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (h: (main/stop :: (E, V) -> V)<(e :: E),a>) : (main/stop :: (E, V) -> V)<(e :: E),a>, (@pat@1: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)> ) as @pat@0: ((hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>))\n                   -> (match (h) {\n                    ((@skip main/@Hnd-stop((@pat@0@1: int) : int, (@ctl-stop: (forall<b> (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<b,(main/stop :: (E, V) -> V),(e :: E),a>)) : (forall<b> (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<b,(main/stop :: (E, V) -> V),(e :: E),a>)) : (main/stop :: (E, V) -> V)<(e :: E),a> ) as @pat@2: ((main/stop :: (E, V) -> V)<(e :: E),a>))\n                       -> (match ((@ctl-stop<main/chr>)) {\n                        ((@skip std/core/hnd/Clause0((f: ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (e :: E) main/chr) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (e :: E) main/chr) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/stop :: (E, V) -> V),(e :: E),a> ) as @pat@2@0: ((hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/stop :: (E, V) -> V),(e :: E),a>))\n                           -> std/core/hnd/cast-clause0<main/chr,(main/stop :: (E, V) -> V),(e :: E),(main/stop :: (E, V) -> V),a>(f)(m, ev@10036);\n                      });\n                  });\n              });\n            }));\n        ((@skip std/core/types/False() : bool ) as @pat@0@1@0: bool)\n           -> (match ((std/core/int/(==)((std/core/types/local-get<int,(h :: H),<(main/stop :: (E, V) -> V)|(e :: E)>>(j)), 0))) {\n            ((std/core/types/True() : bool ) as @pat@1@0: bool)\n               -> val x@10011 : int;\n                  val _ : ();\n                  val _@0 : ();\n              10;\n            ((@skip std/core/types/False() : bool ) as @pat@2@0@0: bool)\n               -> val x@0@10013 : int;\n                  val _@1 : ();\n              36;\n          });\n      });\n    }))))), (fn<<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>>(@x: ()){\n    @x;\n  }), action)","traced":{"any":[]}},
{"op":"Jump","target":98}]},
{"label":"134([method_apply@[mcore:[#336]#450]#455])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Const","format":"string","out":4,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"Const","format":"string","out":5,"value":"Name(main/@tag-read)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[5]},"in":{"any":[5]}},
{"op":"Const","format":"string","out":6,"value":"Name(main/@tag-stop)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[6]},"in":{"any":[6]}},
{"op":"Swap","a":4,"b":5},
{"op":"Swap","a":3,"b":5},
{"op":"Swap","a":6,"b":5},
{"op":"Jump","target":133}]},
{"label":"135([mcore:[#336]#450])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4,5]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/local-var<int,(),<(main/stop :: (E, V) -> V)|(e :: E)>,(h :: H)>(0, (fn<<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>>(j: (local-var :: (H, V) -> V)<(1316 :: H),int>){\n    (main/@handle-read<(),<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>,()>((main/@Hnd-read<<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>,()>(1, (std/core/hnd/clause-tail0<<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>,(),(main/read :: (E, V) -> V),main/chr>((fn<<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>>(){\n          (match ((std/core/int/(>)((std/core/types/local-get<int,(h :: H),<(main/stop :: (E, V) -> V)|(e :: E)>>(i)), n))) {\n            ((std/core/types/True() : bool ) as @pat: bool)\n               -> std/core/hnd/@open-at0<main/chr,(main/stop :: (E, V) -> V),<(main/stop :: (E, V) -> V),(local :: H -> X)<(h :: H)>|(e :: E)>>((std/core/hnd/@evv-index<<(main/stop :: (E, V) -> V),(local :: H -> X)<(h :: H)>|(e :: E)>,(main/stop :: (E, V) -> V)>(main/@tag-stop)), (fn<(main/stop :: (E, V) -> V)>(){\n                  val ev@10036 : ((hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>)\n                        = (std/core/hnd/@evv-at<(main/stop :: (E, V) -> V)>((std/core/types/@make-ssize_t(0))));\n                  (match (ev@10036) {\n                    ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0@0: (hnd/htag :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>, (m: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (h: (main/stop :: (E, V) -> V)<(e :: E),a>) : (main/stop :: (E, V) -> V)<(e :: E),a>, (@pat@1: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)> ) as @pat@0: ((hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>))\n                       -> (match (h) {\n                        ((@skip main/@Hnd-stop((@pat@0@1: int) : int, (@ctl-stop: (forall<b> (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<b,(main/stop :: (E, V) -> V),(e :: E),a>)) : (forall<b> (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<b,(main/stop :: (E, V) -> V),(e :: E),a>)) : (main/stop :: (E, V) -> V)<(e :: E),a> ) as @pat@2: ((main/stop :: (E, V) -> V)<(e :: E),a>))\n                           -> (match ((@ctl-stop<main/chr>)) {\n                            ((@skip std/core/hnd/Clause0((f: ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (e :: E) main/chr) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (e :: E) main/chr) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/stop :: (E, V) -> V),(e :: E),a> ) as @pat@2@0: ((hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/stop :: (E, V) -> V),(e :: E),a>))\n                               -> std/core/hnd/cast-clause0<main/chr,(main/stop :: (E, V) -> V),(e :: E),(main/stop :: (E, V) -> V),a>(f)(m, ev@10036);\n                          });\n                      });\n                  });\n                }));\n            ((@skip std/core/types/False() : bool ) as @pat@0@1@0: bool)\n               -> (match ((std/core/int/(==)((std/core/types/local-get<int,(h :: H),<(main/stop :: (E, V) -> V)|(e :: E)>>(j)), 0))) {\n                ((std/core/types/True() : bool ) as @pat@1@0: bool)\n                   -> val x@10011 : int;\n                      val _ : ();\n                      val _@0 : ();\n                  10;\n                ((@skip std/core/types/False() : bool ) as @pat@2@0@0: bool)\n                   -> val x@0@10013 : int;\n                      val _@1 : ();\n                  36;\n              });\n          });\n        }))))), (fn<<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>>(@x: ()){\n        @x;\n      }), action));\n  }))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: 0","traced":{"any":[]}},
{"op":"Const","format":"int","out":2,"value":0},
{"op":"New","out":0,"targets":[134],"args":{"any":[1,0,5]},"tags":["apply"]},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: 0","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/local-var<int,(),<(main/stop :: (E, V) -> V)|(e :: E)>,(h :: H)>(0, (fn<<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>>(j: (local-var :: (H, V) -> V)<(1316 :: H),int>){\n    (main/@handle-read<(),<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>,()>((main/@Hnd-read<<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>,()>(1, (std/core/hnd/clause-tail0<<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>,(),(main/read :: (E, V) -> V),main/chr>((fn<<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>>(){\n          (match ((std/core/int/(>)((std/core/types/local-get<int,(h :: H),<(main/stop :: (E, V) -> V)|(e :: E)>>(i)), n))) {\n            ((std/core/types/True() : bool ) as @pat: bool)\n               -> std/core/hnd/@open-at0<main/chr,(main/stop :: (E, V) -> V),<(main/stop :: (E, V) -> V),(local :: H -> X)<(h :: H)>|(e :: E)>>((std/core/hnd/@evv-index<<(main/stop :: (E, V) -> V),(local :: H -> X)<(h :: H)>|(e :: E)>,(main/stop :: (E, V) -> V)>(main/@tag-stop)), (fn<(main/stop :: (E, V) -> V)>(){\n                  val ev@10036 : ((hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>)\n                        = (std/core/hnd/@evv-at<(main/stop :: (E, V) -> V)>((std/core/types/@make-ssize_t(0))));\n                  (match (ev@10036) {\n                    ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0@0: (hnd/htag :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>, (m: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (h: (main/stop :: (E, V) -> V)<(e :: E),a>) : (main/stop :: (E, V) -> V)<(e :: E),a>, (@pat@1: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)> ) as @pat@0: ((hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>))\n                       -> (match (h) {\n                        ((@skip main/@Hnd-stop((@pat@0@1: int) : int, (@ctl-stop: (forall<b> (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<b,(main/stop :: (E, V) -> V),(e :: E),a>)) : (forall<b> (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<b,(main/stop :: (E, V) -> V),(e :: E),a>)) : (main/stop :: (E, V) -> V)<(e :: E),a> ) as @pat@2: ((main/stop :: (E, V) -> V)<(e :: E),a>))\n                           -> (match ((@ctl-stop<main/chr>)) {\n                            ((@skip std/core/hnd/Clause0((f: ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (e :: E) main/chr) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (e :: E) main/chr) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/stop :: (E, V) -> V),(e :: E),a> ) as @pat@2@0: ((hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/stop :: (E, V) -> V),(e :: E),a>))\n                               -> std/core/hnd/cast-clause0<main/chr,(main/stop :: (E, V) -> V),(e :: E),(main/stop :: (E, V) -> V),a>(f)(m, ev@10036);\n                          });\n                      });\n                  });\n                }));\n            ((@skip std/core/types/False() : bool ) as @pat@0@1@0: bool)\n               -> (match ((std/core/int/(==)((std/core/types/local-get<int,(h :: H),<(main/stop :: (E, V) -> V)|(e :: E)>>(j)), 0))) {\n                ((std/core/types/True() : bool ) as @pat@1@0: bool)\n                   -> val x@10011 : int;\n                      val _ : ();\n                      val _@0 : ();\n                  10;\n                ((@skip std/core/types/False() : bool ) as @pat@2@0@0: bool)\n                   -> val x@0@10013 : int;\n                      val _@1 : ();\n                  36;\n              });\n          });\n        }))))), (fn<<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>>(@x: ()){\n        @x;\n      }), action));\n  }))","traced":{"any":[]}},
{"op":"Jump","target":97}]},
{"label":"136([method_apply@[mcore:[#338]#470]#475])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Const","format":"string","out":4,"value":"Name(main/@tag-read)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"Const","format":"string","out":5,"value":"Name(main/@tag-stop)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[5]},"in":{"any":[5]}},
{"op":"Swap","a":4,"b":5},
{"op":"Swap","a":3,"b":5},
{"op":"Swap","a":2,"b":5},
{"op":"Jump","target":135}]},
{"label":"137([mcore:[#338]#470])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/local-var<int,(),<(main/stop :: (E, V) -> V)|(e :: E)>,(h :: H)>(0, (fn<<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>>(i: (local-var :: (H, V) -> V)<(1316 :: H),int>){\n    (std/core/hnd/local-var<int,(),<(main/stop :: (E, V) -> V)|(e :: E)>,(h :: H)>(0, (fn<<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>>(j: (local-var :: (H, V) -> V)<(1316 :: H),int>){\n        (main/@handle-read<(),<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>,()>((main/@Hnd-read<<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>,()>(1, (std/core/hnd/clause-tail0<<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>,(),(main/read :: (E, V) -> V),main/chr>((fn<<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>>(){\n              (match ((std/core/int/(>)((std/core/types/local-get<int,(h :: H),<(main/stop :: (E, V) -> V)|(e :: E)>>(i)), n))) {\n                ((std/core/types/True() : bool ) as @pat: bool)\n                   -> std/core/hnd/@open-at0<main/chr,(main/stop :: (E, V) -> V),<(main/stop :: (E, V) -> V),(local :: H -> X)<(h :: H)>|(e :: E)>>((std/core/hnd/@evv-index<<(main/stop :: (E, V) -> V),(local :: H -> X)<(h :: H)>|(e :: E)>,(main/stop :: (E, V) -> V)>(main/@tag-stop)), (fn<(main/stop :: (E, V) -> V)>(){\n                      val ev@10036 : ((hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>)\n                            = (std/core/hnd/@evv-at<(main/stop :: (E, V) -> V)>((std/core/types/@make-ssize_t(0))));\n                      (match (ev@10036) {\n                        ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0@0: (hnd/htag :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>, (m: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (h: (main/stop :: (E, V) -> V)<(e :: E),a>) : (main/stop :: (E, V) -> V)<(e :: E),a>, (@pat@1: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)> ) as @pat@0: ((hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>))\n                           -> (match (h) {\n                            ((@skip main/@Hnd-stop((@pat@0@1: int) : int, (@ctl-stop: (forall<b> (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<b,(main/stop :: (E, V) -> V),(e :: E),a>)) : (forall<b> (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<b,(main/stop :: (E, V) -> V),(e :: E),a>)) : (main/stop :: (E, V) -> V)<(e :: E),a> ) as @pat@2: ((main/stop :: (E, V) -> V)<(e :: E),a>))\n                               -> (match ((@ctl-stop<main/chr>)) {\n                                ((@skip std/core/hnd/Clause0((f: ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (e :: E) main/chr) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (e :: E) main/chr) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/stop :: (E, V) -> V),(e :: E),a> ) as @pat@2@0: ((hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/stop :: (E, V) -> V),(e :: E),a>))\n                                   -> std/core/hnd/cast-clause0<main/chr,(main/stop :: (E, V) -> V),(e :: E),(main/stop :: (E, V) -> V),a>(f)(m, ev@10036);\n                              });\n                          });\n                      });\n                    }));\n                ((@skip std/core/types/False() : bool ) as @pat@0@1@0: bool)\n                   -> (match ((std/core/int/(==)((std/core/types/local-get<int,(h :: H),<(main/stop :: (E, V) -> V)|(e :: E)>>(j)), 0))) {\n                    ((std/core/types/True() : bool ) as @pat@1@0: bool)\n                       -> val x@10011 : int;\n                          val _ : ();\n                          val _@0 : ();\n                      10;\n                    ((@skip std/core/types/False() : bool ) as @pat@2@0@0: bool)\n                       -> val x@0@10013 : int;\n                          val _@1 : ();\n                      36;\n                  });\n              });\n            }))))), (fn<<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>>(@x: ()){\n            @x;\n          }), action));\n      })));\n  }))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: 0","traced":{"any":[]}},
{"op":"Const","format":"int","out":1,"value":0},
{"op":"New","out":0,"targets":[136],"args":{"any":[0,4]},"tags":["apply"]},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: 0","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/local-var<int,(),<(main/stop :: (E, V) -> V)|(e :: E)>,(h :: H)>(0, (fn<<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>>(i: (local-var :: (H, V) -> V)<(1316 :: H),int>){\n    (std/core/hnd/local-var<int,(),<(main/stop :: (E, V) -> V)|(e :: E)>,(h :: H)>(0, (fn<<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>>(j: (local-var :: (H, V) -> V)<(1316 :: H),int>){\n        (main/@handle-read<(),<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>,()>((main/@Hnd-read<<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>,()>(1, (std/core/hnd/clause-tail0<<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>,(),(main/read :: (E, V) -> V),main/chr>((fn<<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>>(){\n              (match ((std/core/int/(>)((std/core/types/local-get<int,(h :: H),<(main/stop :: (E, V) -> V)|(e :: E)>>(i)), n))) {\n                ((std/core/types/True() : bool ) as @pat: bool)\n                   -> std/core/hnd/@open-at0<main/chr,(main/stop :: (E, V) -> V),<(main/stop :: (E, V) -> V),(local :: H -> X)<(h :: H)>|(e :: E)>>((std/core/hnd/@evv-index<<(main/stop :: (E, V) -> V),(local :: H -> X)<(h :: H)>|(e :: E)>,(main/stop :: (E, V) -> V)>(main/@tag-stop)), (fn<(main/stop :: (E, V) -> V)>(){\n                      val ev@10036 : ((hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>)\n                            = (std/core/hnd/@evv-at<(main/stop :: (E, V) -> V)>((std/core/types/@make-ssize_t(0))));\n                      (match (ev@10036) {\n                        ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0@0: (hnd/htag :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>, (m: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (h: (main/stop :: (E, V) -> V)<(e :: E),a>) : (main/stop :: (E, V) -> V)<(e :: E),a>, (@pat@1: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)> ) as @pat@0: ((hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>))\n                           -> (match (h) {\n                            ((@skip main/@Hnd-stop((@pat@0@1: int) : int, (@ctl-stop: (forall<b> (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<b,(main/stop :: (E, V) -> V),(e :: E),a>)) : (forall<b> (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<b,(main/stop :: (E, V) -> V),(e :: E),a>)) : (main/stop :: (E, V) -> V)<(e :: E),a> ) as @pat@2: ((main/stop :: (E, V) -> V)<(e :: E),a>))\n                               -> (match ((@ctl-stop<main/chr>)) {\n                                ((@skip std/core/hnd/Clause0((f: ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (e :: E) main/chr) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (e :: E) main/chr) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/stop :: (E, V) -> V),(e :: E),a> ) as @pat@2@0: ((hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/stop :: (E, V) -> V),(e :: E),a>))\n                                   -> std/core/hnd/cast-clause0<main/chr,(main/stop :: (E, V) -> V),(e :: E),(main/stop :: (E, V) -> V),a>(f)(m, ev@10036);\n                              });\n                          });\n                      });\n                    }));\n                ((@skip std/core/types/False() : bool ) as @pat@0@1@0: bool)\n                   -> (match ((std/core/int/(==)((std/core/types/local-get<int,(h :: H),<(main/stop :: (E, V) -> V)|(e :: E)>>(j)), 0))) {\n                    ((std/core/types/True() : bool ) as @pat@1@0: bool)\n                       -> val x@10011 : int;\n                          val _ : ();\n                          val _@0 : ();\n                      10;\n                    ((@skip std/core/types/False() : bool ) as @pat@2@0@0: bool)\n                       -> val x@0@10013 : int;\n                          val _@1 : ();\n                      36;\n                  });\n              });\n            }))))), (fn<<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>>(@x: ()){\n            @x;\n          }), action));\n      })));\n  }))","traced":{"any":[]}},
{"op":"Jump","target":96}]},
{"label":"138([mcore:[#340]#490])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4]}},
{"op":"Debug","msg":"BGN: genExpr: (forall<(h :: H)> fn<<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>>(){\n  std/core/hnd/local-var<int,(),<(main/stop :: (E, V) -> V)|(e :: E)>,(h :: H)>(0, (fn<<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>>(i: (local-var :: (H, V) -> V)<(h :: H),int>){\n      (std/core/hnd/local-var<int,(),<(main/stop :: (E, V) -> V)|(e :: E)>,(h :: H)>(0, (fn<<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>>(j: (local-var :: (H, V) -> V)<(h :: H),int>){\n          (main/@handle-read<(),<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>,()>((main/@Hnd-read<<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>,()>(1, (std/core/hnd/clause-tail0<<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>,(),(main/read :: (E, V) -> V),main/chr>((fn<<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>>(){\n                (match ((std/core/int/(>)((std/core/types/local-get<int,(h :: H),<(main/stop :: (E, V) -> V)|(e :: E)>>(i)), n))) {\n                  ((std/core/types/True() : bool ) as @pat: bool)\n                     -> std/core/hnd/@open-at0<main/chr,(main/stop :: (E, V) -> V),<(main/stop :: (E, V) -> V),(local :: H -> X)<(h :: H)>|(e :: E)>>((std/core/hnd/@evv-index<<(main/stop :: (E, V) -> V),(local :: H -> X)<(h :: H)>|(e :: E)>,(main/stop :: (E, V) -> V)>(main/@tag-stop)), (fn<(main/stop :: (E, V) -> V)>(){\n                        val ev@10036 : ((hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>)\n                              = (std/core/hnd/@evv-at<(main/stop :: (E, V) -> V)>((std/core/types/@make-ssize_t(0))));\n                        (match (ev@10036) {\n                          ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0@0: (hnd/htag :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>, (m: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (h: (main/stop :: (E, V) -> V)<(e :: E),a>) : (main/stop :: (E, V) -> V)<(e :: E),a>, (@pat@1: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)> ) as @pat@0: ((hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>))\n                             -> (match (h) {\n                              ((@skip main/@Hnd-stop((@pat@0@1: int) : int, (@ctl-stop: (forall<b> (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<b,(main/stop :: (E, V) -> V),(e :: E),a>)) : (forall<b> (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<b,(main/stop :: (E, V) -> V),(e :: E),a>)) : (main/stop :: (E, V) -> V)<(e :: E),a> ) as @pat@2: ((main/stop :: (E, V) -> V)<(e :: E),a>))\n                                 -> (match ((@ctl-stop<main/chr>)) {\n                                  ((@skip std/core/hnd/Clause0((f: ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (e :: E) main/chr) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (e :: E) main/chr) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/stop :: (E, V) -> V),(e :: E),a> ) as @pat@2@0: ((hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/stop :: (E, V) -> V),(e :: E),a>))\n                                     -> std/core/hnd/cast-clause0<main/chr,(main/stop :: (E, V) -> V),(e :: E),(main/stop :: (E, V) -> V),a>(f)(m, ev@10036);\n                                });\n                            });\n                        });\n                      }));\n                  ((@skip std/core/types/False() : bool ) as @pat@0@1@0: bool)\n                     -> (match ((std/core/int/(==)((std/core/types/local-get<int,(h :: H),<(main/stop :: (E, V) -> V)|(e :: E)>>(j)), 0))) {\n                      ((std/core/types/True() : bool ) as @pat@1@0: bool)\n                         -> val x@10011 : int;\n                            val _ : ();\n                            val _@0 : ();\n                        10;\n                      ((@skip std/core/types/False() : bool ) as @pat@2@0@0: bool)\n                         -> val x@0@10013 : int;\n                            val _@1 : ();\n                        36;\n                    });\n                });\n              }))))), (fn<<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>>(@x: ()){\n              @x;\n            }), action));\n        })));\n    }));\n})()","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Const","format":"string","out":3,"value":"Name(main/@tag-read)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Const","format":"string","out":4,"value":"Name(main/@tag-stop)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"Swap","a":3,"b":4},
{"op":"Swap","a":2,"b":4},
{"op":"Swap","a":1,"b":4},
{"op":"Swap","a":0,"b":4},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: (forall<(h :: H)> fn<<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>>(){\n  std/core/hnd/local-var<int,(),<(main/stop :: (E, V) -> V)|(e :: E)>,(h :: H)>(0, (fn<<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>>(i: (local-var :: (H, V) -> V)<(h :: H),int>){\n      (std/core/hnd/local-var<int,(),<(main/stop :: (E, V) -> V)|(e :: E)>,(h :: H)>(0, (fn<<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>>(j: (local-var :: (H, V) -> V)<(h :: H),int>){\n          (main/@handle-read<(),<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>,()>((main/@Hnd-read<<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>,()>(1, (std/core/hnd/clause-tail0<<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>,(),(main/read :: (E, V) -> V),main/chr>((fn<<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>>(){\n                (match ((std/core/int/(>)((std/core/types/local-get<int,(h :: H),<(main/stop :: (E, V) -> V)|(e :: E)>>(i)), n))) {\n                  ((std/core/types/True() : bool ) as @pat: bool)\n                     -> std/core/hnd/@open-at0<main/chr,(main/stop :: (E, V) -> V),<(main/stop :: (E, V) -> V),(local :: H -> X)<(h :: H)>|(e :: E)>>((std/core/hnd/@evv-index<<(main/stop :: (E, V) -> V),(local :: H -> X)<(h :: H)>|(e :: E)>,(main/stop :: (E, V) -> V)>(main/@tag-stop)), (fn<(main/stop :: (E, V) -> V)>(){\n                        val ev@10036 : ((hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>)\n                              = (std/core/hnd/@evv-at<(main/stop :: (E, V) -> V)>((std/core/types/@make-ssize_t(0))));\n                        (match (ev@10036) {\n                          ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0@0: (hnd/htag :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>, (m: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (h: (main/stop :: (E, V) -> V)<(e :: E),a>) : (main/stop :: (E, V) -> V)<(e :: E),a>, (@pat@1: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)> ) as @pat@0: ((hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>))\n                             -> (match (h) {\n                              ((@skip main/@Hnd-stop((@pat@0@1: int) : int, (@ctl-stop: (forall<b> (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<b,(main/stop :: (E, V) -> V),(e :: E),a>)) : (forall<b> (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<b,(main/stop :: (E, V) -> V),(e :: E),a>)) : (main/stop :: (E, V) -> V)<(e :: E),a> ) as @pat@2: ((main/stop :: (E, V) -> V)<(e :: E),a>))\n                                 -> (match ((@ctl-stop<main/chr>)) {\n                                  ((@skip std/core/hnd/Clause0((f: ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (e :: E) main/chr) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (e :: E) main/chr) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/stop :: (E, V) -> V),(e :: E),a> ) as @pat@2@0: ((hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/stop :: (E, V) -> V),(e :: E),a>))\n                                     -> std/core/hnd/cast-clause0<main/chr,(main/stop :: (E, V) -> V),(e :: E),(main/stop :: (E, V) -> V),a>(f)(m, ev@10036);\n                                });\n                            });\n                        });\n                      }));\n                  ((@skip std/core/types/False() : bool ) as @pat@0@1@0: bool)\n                     -> (match ((std/core/int/(==)((std/core/types/local-get<int,(h :: H),<(main/stop :: (E, V) -> V)|(e :: E)>>(j)), 0))) {\n                      ((std/core/types/True() : bool ) as @pat@1@0: bool)\n                         -> val x@10011 : int;\n                            val _ : ();\n                            val _@0 : ();\n                        10;\n                      ((@skip std/core/types/False() : bool ) as @pat@2@0@0: bool)\n                         -> val x@0@10013 : int;\n                            val _@1 : ();\n                        36;\n                    });\n                });\n              }))))), (fn<<(local :: H -> X)<(h :: H)>,(main/stop :: (E, V) -> V)|(e :: E)>>(@x: ()){\n              @x;\n            }), action));\n        })));\n    }));\n})()","traced":{"any":[]}},
{"op":"Jump","target":137}]},
{"label":"139([mcore:[#341]#500])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"CallLib","lib":2,"symbol":"std/core/hnd/@open-at0"}]},
{"label":"140([mcore:[#344]#506])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"CallLib","lib":2,"symbol":"elt"}]},
{"label":"141([mcore:[#345]#512])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"CallLib","lib":0,"symbol":"getCurrentEvv"}]},
{"label":"142([#531])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"143([k@[#532]#534])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"144([match_def@[#532]#536])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"145([k@[match_main/@Hnd-read@[#532]#537]#539])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"146([#541])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"147([k@[#542]#544])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"148([#542])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@2@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@fun-read\\\"55\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}},\"annotation\": \"genTest: normal: (@fun-read: hnd/clause0<main/chr,main/read,1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@fun-read\\\\\\\"55\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/clause0\\\"}}\"}),(f,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"56\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (f: (hnd/marker<1005,1006>, hnd/ev<main/read>) -> 1005 main/chr) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"56\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/cast-clause0<main/chr,(main/read :: (E, V) -> V),(e :: E),(main/read :: (E, V) -> V),a>(f)(m, ev@10039)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/cast-clause0<main/chr,(main/read :: (E, V) -> V),(e :: E),(main/read :: (E, V) -> V),a>(f)(m, ev@10039)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@2@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@fun-read\\\"55\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}},\"annotation\": \"genTest: normal: (@fun-read: hnd/clause0<main/chr,main/read,1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@fun-read\\\\\\\"55\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/clause0\\\"}}\"}),(f,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"56\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (f: (hnd/marker<1005,1006>, hnd/ev<main/read>) -> 1005 main/chr) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"56\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Invoke","receiver":2,"tag":"apply","args":{"any":[0,1]}}]},
{"label":"149([match_main/@Hnd-read@[#532]#537])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"52\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h: main/read<1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"52\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@0@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"54\",\"type\": {\"op\": \"Int\"}},\"annotation\": \"genTest: normal: (@pat@0@0: int) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@cfc\\\\\\\"54\\\",\\\"type\\\": {\\\"op\\\": \\\"Int\\\"}}\"}),(@fun-read,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@fun-read\\\"55\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}},\"annotation\": \"genTest: normal: (@fun-read: hnd/clause0<main/chr,main/read,1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@fun-read\\\\\\\"55\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/clause0\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (@fun-read) {\n  ((@skip std/core/hnd/Clause0((f: ((hnd/marker :: (E, V) -> V)<(1005 :: E),1006>, (hnd/ev :: ((E, V) -> V) -> V)<(main/read :: (E, V) -> V)>) -> (1005 :: E) main/chr) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/read :: (E, V) -> V)>) -> (e :: E) main/chr) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/read :: (E, V) -> V),(e :: E),a> ) as @pat@2@0: ((hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/read :: (E, V) -> V),(1005 :: E),1006>))\n     -> std/core/hnd/cast-clause0<main/chr,(main/read :: (E, V) -> V),(e :: E),(main/read :: (E, V) -> V),a>(f)(m, ev@10039);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@fun-read\\\"55\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}},\"annotation\": \"genTest: normal: (@fun-read: hnd/clause0<main/chr,main/read,1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@fun-read\\\\\\\"55\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/clause0\\\"}}\"}: \"std/core/hnd/clause0\".\"std/core/hnd/Clause0\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"56\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@fun-read\\\"55\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}},\"annotation\": \"genTest: normal: (@fun-read: hnd/clause0<main/chr,main/read,1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@fun-read\\\\\\\"55\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/clause0\\\"}}\"}: \"std/core/hnd/clause0\".\"std/core/hnd/Clause0\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"56\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (@fun-read) {\n  ((@skip std/core/hnd/Clause0((f: ((hnd/marker :: (E, V) -> V)<(1005 :: E),1006>, (hnd/ev :: ((E, V) -> V) -> V)<(main/read :: (E, V) -> V)>) -> (1005 :: E) main/chr) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/read :: (E, V) -> V)>) -> (e :: E) main/chr) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/read :: (E, V) -> V),(e :: E),a> ) as @pat@2@0: ((hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/read :: (E, V) -> V),(1005 :: E),1006>))\n     -> std/core/hnd/cast-clause0<main/chr,(main/read :: (E, V) -> V),(e :: E),(main/read :: (E, V) -> V),a>(f)(m, ev@10039);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"52\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h: main/read<1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"52\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@0@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"54\",\"type\": {\"op\": \"Int\"}},\"annotation\": \"genTest: normal: (@pat@0@0: int) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@cfc\\\\\\\"54\\\",\\\"type\\\": {\\\"op\\\": \\\"Int\\\"}}\"}),(@fun-read,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@fun-read\\\"55\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}},\"annotation\": \"genTest: normal: (@fun-read: hnd/clause0<main/chr,main/read,1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@fun-read\\\\\\\"55\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/clause0\\\"}}\"})]","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/clause0","scrutinee":3,"clauses":[{"tag":"std/core/hnd/Clause0","target":148,"args":{"any":[2]}}],"default":{"tag":"27f4ad1c-0eaf-43c9-bffa-0472e2b3b921#[Missing Tag#1389]","target":146,"args":{"any":[]}}}]},
{"label":"150([#532])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev@10039\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"50\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<main/read>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"50\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(m,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"51\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (m: hnd/marker<1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"51\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(h,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"52\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h: main/read<1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"52\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"53\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/evv<1005>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"53\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (h) {\n  ((@skip main/@Hnd-read((@pat@0@0: int) : int, (@fun-read: (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/read :: (E, V) -> V),(1005 :: E),1006>) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/read :: (E, V) -> V),(e :: E),a>) : (main/read :: (E, V) -> V)<(e :: E),a> ) as @pat@2: ((main/read :: (E, V) -> V)<(1005 :: E),1006>))\n     -> (match (@fun-read) {\n      ((@skip std/core/hnd/Clause0((f: ((hnd/marker :: (E, V) -> V)<(1005 :: E),1006>, (hnd/ev :: ((E, V) -> V) -> V)<(main/read :: (E, V) -> V)>) -> (1005 :: E) main/chr) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/read :: (E, V) -> V)>) -> (e :: E) main/chr) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/read :: (E, V) -> V),(e :: E),a> ) as @pat@2@0: ((hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/read :: (E, V) -> V),(1005 :: E),1006>))\n         -> std/core/hnd/cast-clause0<main/chr,(main/read :: (E, V) -> V),(e :: E),(main/read :: (E, V) -> V),a>(f)(m, ev@10039);\n    });\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"52\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h: main/read<1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"52\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}: \"main/read\".\"main/@Hnd-read\"(({\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"54\",\"type\": {\"op\": \"Int\"}}, {\"op\": \"Var\",\"id\": \"@\\\"@fun-read\\\"55\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}))","traced":{"any":[]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"52\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h: main/read<1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"52\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}: \"main/read\".\"main/@Hnd-read\"(({\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"54\",\"type\": {\"op\": \"Int\"}}, {\"op\": \"Var\",\"id\": \"@\\\"@fun-read\\\"55\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (h) {\n  ((@skip main/@Hnd-read((@pat@0@0: int) : int, (@fun-read: (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/read :: (E, V) -> V),(1005 :: E),1006>) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/read :: (E, V) -> V),(e :: E),a>) : (main/read :: (E, V) -> V)<(e :: E),a> ) as @pat@2: ((main/read :: (E, V) -> V)<(1005 :: E),1006>))\n     -> (match (@fun-read) {\n      ((@skip std/core/hnd/Clause0((f: ((hnd/marker :: (E, V) -> V)<(1005 :: E),1006>, (hnd/ev :: ((E, V) -> V) -> V)<(main/read :: (E, V) -> V)>) -> (1005 :: E) main/chr) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/read :: (E, V) -> V)>) -> (e :: E) main/chr) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/read :: (E, V) -> V),(e :: E),a> ) as @pat@2@0: ((hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/read :: (E, V) -> V),(1005 :: E),1006>))\n         -> std/core/hnd/cast-clause0<main/chr,(main/read :: (E, V) -> V),(e :: E),(main/read :: (E, V) -> V),a>(f)(m, ev@10039);\n    });\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"ev@10039\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"50\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0: hnd/htag<main/read>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"50\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(m,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"51\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (m: hnd/marker<1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"51\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(h,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"52\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h: main/read<1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"52\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"53\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (@pat@1: hnd/evv<1005>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"53\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Match","type":"main/read","scrutinee":3,"clauses":[{"tag":"main/@Hnd-read","target":149,"args":{"any":[2,3]}}],"default":{"tag":"27f4ad1c-0eaf-43c9-bffa-0472e2b3b921#[Missing Tag#1390]","target":144,"args":{"any":[]}}}]},
{"label":"151([k@[k@[mcore:[#353]#516]#522]#530])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"ev@10039\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"50\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"51\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"52\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"53\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"ev@10039\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"50\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"51\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"52\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"53\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/ev","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Ev","target":150,"args":{"any":[1,2,3,4]}}],"default":{"tag":"27f4ad1c-0eaf-43c9-bffa-0472e2b3b921#[Missing Tag#1391]","target":142,"args":{"any":[]}}}]},
{"label":"152([k@[mcore:[#353]#516]#522])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"promote_ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Push","target":151,"args":{"any":[]}},
{"op":"Jump","target":140}]},
{"label":"153([mcore:[#353]#516])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"ev@10039\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@evv-at<(main/read :: (E, V) -> V)>((std/core/types/@make-ssize_t(0)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/@make-ssize_t(0)","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"Push","target":152,"args":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/@make-ssize_t(0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@evv-at<(main/read :: (E, V) -> V)>((std/core/types/@make-ssize_t(0)))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"ev@10039\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}","traced":{"any":[]}},
{"op":"Jump","target":141}]},
{"label":"154([mcore:[#364]#546])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"CallLib","lib":3,"symbol":"std/core/hnd/@open-at1"}]},
{"label":"155([mcore:[#367]#553])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"CallLib","lib":2,"symbol":"elt"}]},
{"label":"156([mcore:[#368]#559])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"CallLib","lib":0,"symbol":"getCurrentEvv"}]},
{"label":"157([#578])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"158([k@[#579]#581])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"159([match_def@[#579]#583])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"160([k@[match_main/@Hnd-emit@[#579]#584]#586])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"161([#588])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"162([k@[#589]#591])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"163([#589])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@2@0@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@fun-emit\\\"55\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}},\"annotation\": \"genTest: normal: (@fun-emit: hnd/clause1<int,(),main/emit,1007,1008>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@fun-emit\\\\\\\"55\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/clause1\\\"}}\"}),(f@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"56\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (f@0: (hnd/marker<1007,1008>, hnd/ev<main/emit>, int) -> 1007 ()) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"56\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}, {\\\"op\\\": \\\"Top\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: f@0(m@0, ev@0@10041, e)","traced":{"any":[]}},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: f@0(m@0, ev@0@10041, e)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@2@0@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@fun-emit\\\"55\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}},\"annotation\": \"genTest: normal: (@fun-emit: hnd/clause1<int,(),main/emit,1007,1008>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@fun-emit\\\\\\\"55\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/clause1\\\"}}\"}),(f@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"56\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (f@0: (hnd/marker<1007,1008>, hnd/ev<main/emit>, int) -> 1007 ()) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"56\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}, {\\\"op\\\": \\\"Top\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Invoke","receiver":3,"tag":"apply","args":{"any":[0,1,2]}}]},
{"label":"164([match_main/@Hnd-emit@[#579]#584])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@5,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"52\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h@0: main/emit<1007,1008>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"52\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@0@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"54\",\"type\": {\"op\": \"Int\"}},\"annotation\": \"genTest: normal: (@pat@0@2: int) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@cfc\\\\\\\"54\\\",\\\"type\\\": {\\\"op\\\": \\\"Int\\\"}}\"}),(@fun-emit,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@fun-emit\\\"55\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}},\"annotation\": \"genTest: normal: (@fun-emit: hnd/clause1<int,(),main/emit,1007,1008>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@fun-emit\\\\\\\"55\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/clause1\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (@fun-emit) {\n  ((@skip std/core/hnd/Clause1((f@0: ((hnd/marker :: (E, V) -> V)<(1007 :: E),1008>, (hnd/ev :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)>, int) -> (1007 :: E) ()) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)>, int) -> (e :: E) ()) : (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<int,(),(main/emit :: (E, V) -> V),(e :: E),a> ) as @pat@2@0@0: ((hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<int,(),(main/emit :: (E, V) -> V),(1007 :: E),1008>))\n     -> f@0(m@0, ev@0@10041, e);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@fun-emit\\\"55\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}},\"annotation\": \"genTest: normal: (@fun-emit: hnd/clause1<int,(),main/emit,1007,1008>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@fun-emit\\\\\\\"55\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/clause1\\\"}}\"}: \"std/core/hnd/clause1\".\"std/core/hnd/Clause1\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"56\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@fun-emit\\\"55\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}},\"annotation\": \"genTest: normal: (@fun-emit: hnd/clause1<int,(),main/emit,1007,1008>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@fun-emit\\\\\\\"55\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/clause1\\\"}}\"}: \"std/core/hnd/clause1\".\"std/core/hnd/Clause1\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"56\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}, {\"op\": \"Top\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (@fun-emit) {\n  ((@skip std/core/hnd/Clause1((f@0: ((hnd/marker :: (E, V) -> V)<(1007 :: E),1008>, (hnd/ev :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)>, int) -> (1007 :: E) ()) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)>, int) -> (e :: E) ()) : (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<int,(),(main/emit :: (E, V) -> V),(e :: E),a> ) as @pat@2@0@0: ((hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<int,(),(main/emit :: (E, V) -> V),(1007 :: E),1008>))\n     -> f@0(m@0, ev@0@10041, e);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@5,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"52\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h@0: main/emit<1007,1008>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"52\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@0@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"54\",\"type\": {\"op\": \"Int\"}},\"annotation\": \"genTest: normal: (@pat@0@2: int) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@cfc\\\\\\\"54\\\",\\\"type\\\": {\\\"op\\\": \\\"Int\\\"}}\"}),(@fun-emit,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@fun-emit\\\"55\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}},\"annotation\": \"genTest: normal: (@fun-emit: hnd/clause1<int,(),main/emit,1007,1008>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@fun-emit\\\\\\\"55\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/clause1\\\"}}\"})]","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/clause1","scrutinee":4,"clauses":[{"tag":"std/core/hnd/Clause1","target":163,"args":{"any":[3]}}],"default":{"tag":"27f4ad1c-0eaf-43c9-bffa-0472e2b3b921#[Missing Tag#1392]","target":161,"args":{"any":[]}}}]},
{"label":"165([#579])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@4,{\"op\": \"Var\",\"id\": \"ev@0@10041\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"50\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0@1: hnd/htag<main/emit>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"50\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(m@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"51\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (m@0: hnd/marker<1007,1008>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"51\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(h@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"52\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h@0: main/emit<1007,1008>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"52\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"53\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (@pat@1@1: hnd/evv<1007>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"53\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (h@0) {\n  ((@skip main/@Hnd-emit((@pat@0@2: int) : int, (@fun-emit: (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<int,(),(main/emit :: (E, V) -> V),(1007 :: E),1008>) : (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<int,(),(main/emit :: (E, V) -> V),(e :: E),a>) : (main/emit :: (E, V) -> V)<(e :: E),a> ) as @pat@5: ((main/emit :: (E, V) -> V)<(1007 :: E),1008>))\n     -> (match (@fun-emit) {\n      ((@skip std/core/hnd/Clause1((f@0: ((hnd/marker :: (E, V) -> V)<(1007 :: E),1008>, (hnd/ev :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)>, int) -> (1007 :: E) ()) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)>, int) -> (e :: E) ()) : (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<int,(),(main/emit :: (E, V) -> V),(e :: E),a> ) as @pat@2@0@0: ((hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<int,(),(main/emit :: (E, V) -> V),(1007 :: E),1008>))\n         -> f@0(m@0, ev@0@10041, e);\n    });\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"52\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h@0: main/emit<1007,1008>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"52\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}: \"main/emit\".\"main/@Hnd-emit\"(({\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"54\",\"type\": {\"op\": \"Int\"}}, {\"op\": \"Var\",\"id\": \"@\\\"@fun-emit\\\"55\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}))","traced":{"any":[]}},
{"op":"Copy","from":1,"to":2},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"52\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h@0: main/emit<1007,1008>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"52\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}: \"main/emit\".\"main/@Hnd-emit\"(({\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"54\",\"type\": {\"op\": \"Int\"}}, {\"op\": \"Var\",\"id\": \"@\\\"@fun-emit\\\"55\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause1\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (h@0) {\n  ((@skip main/@Hnd-emit((@pat@0@2: int) : int, (@fun-emit: (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<int,(),(main/emit :: (E, V) -> V),(1007 :: E),1008>) : (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<int,(),(main/emit :: (E, V) -> V),(e :: E),a>) : (main/emit :: (E, V) -> V)<(e :: E),a> ) as @pat@5: ((main/emit :: (E, V) -> V)<(1007 :: E),1008>))\n     -> (match (@fun-emit) {\n      ((@skip std/core/hnd/Clause1((f@0: ((hnd/marker :: (E, V) -> V)<(1007 :: E),1008>, (hnd/ev :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)>, int) -> (1007 :: E) ()) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)>, int) -> (e :: E) ()) : (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<int,(),(main/emit :: (E, V) -> V),(e :: E),a> ) as @pat@2@0@0: ((hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<int,(),(main/emit :: (E, V) -> V),(1007 :: E),1008>))\n         -> f@0(m@0, ev@0@10041, e);\n    });\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@4,{\"op\": \"Var\",\"id\": \"ev@0@10041\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"50\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0@1: hnd/htag<main/emit>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"50\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(m@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"51\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (m@0: hnd/marker<1007,1008>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"51\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(h@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"52\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h@0: main/emit<1007,1008>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"52\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"53\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (@pat@1@1: hnd/evv<1007>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"53\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Match","type":"main/emit","scrutinee":4,"clauses":[{"tag":"main/@Hnd-emit","target":164,"args":{"any":[3,4]}}],"default":{"tag":"27f4ad1c-0eaf-43c9-bffa-0472e2b3b921#[Missing Tag#1393]","target":159,"args":{"any":[]}}}]},
{"label":"166([k@[k@[mcore:[#377]#563]#569]#577])",
"frameDescriptor":{"regs_any":6},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"ev@0@10041\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"50\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"51\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"52\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"53\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"ev@0@10041\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"50\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"51\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"52\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"53\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/ev","scrutinee":1,"clauses":[{"tag":"std/core/hnd/Ev","target":165,"args":{"any":[2,3,4,5]}}],"default":{"tag":"27f4ad1c-0eaf-43c9-bffa-0472e2b3b921#[Missing Tag#1394]","target":157,"args":{"any":[]}}}]},
{"label":"167([k@[mcore:[#377]#563]#569])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"promote_ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Push","target":166,"args":{"any":[2]}},
{"op":"Copy","from":3,"to":2},
{"op":"Jump","target":155}]},
{"label":"168([mcore:[#377]#563])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"ev@0@10041\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@evv-at<(main/emit :: (E, V) -> V)>((std/core/types/@make-ssize_t(0)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/@make-ssize_t(0)","traced":{"any":[]}},
{"op":"Const","format":"int","out":1,"value":0},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Push","target":167,"args":{"any":[1,0]}},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/@make-ssize_t(0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@evv-at<(main/emit :: (E, V) -> V)>((std/core/types/@make-ssize_t(0)))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"ev@0@10041\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}","traced":{"any":[]}},
{"op":"Jump","target":156}]},
{"label":"169([mcore:[#384]#593])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"CallLib","lib":2,"symbol":"std/core/hnd/@open-at0"}]},
{"label":"170([mcore:[#387]#599])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"CallLib","lib":2,"symbol":"elt"}]},
{"label":"171([mcore:[#388]#605])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"CallLib","lib":0,"symbol":"getCurrentEvv"}]},
{"label":"172([#624])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"173([k@[#625]#627])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"174([match_def@[#625]#629])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"175([k@[match_main/@Hnd-stop@[#625]#630]#632])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"176([#634])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"177([k@[#635]#637])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"178([#635])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@2@2,{\"op\": \"Var\",\"id\": \"@x56\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}),(f@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"57\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (f@1: (hnd/marker<1005,1006>, hnd/ev<main/stop>) -> 1005 128) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"57\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/cast-clause0<a,(main/stop :: (E, V) -> V),(e :: E),(main/stop :: (E, V) -> V),a>(f@1)(m@1, ev@1@10044)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/cast-clause0<a,(main/stop :: (E, V) -> V),(e :: E),(main/stop :: (E, V) -> V),a>(f@1)(m@1, ev@1@10044)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@2@2,{\"op\": \"Var\",\"id\": \"@x56\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}),(f@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"clause\\\"57\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}},\"annotation\": \"genTest: normal: (f@1: (hnd/marker<1005,1006>, hnd/ev<main/stop>) -> 1005 128) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"clause\\\\\\\"57\\\",\\\"type\\\": {\\\"op\\\": \\\"Function\\\",\\\"params\\\": [{\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}, {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/ev\\\"}],\\\"return\\\": {\\\"op\\\": \\\"Top\\\"},\\\"purity\\\": \\\"Effectful\\\"}}\"})]","traced":{"any":[]}},
{"op":"Invoke","receiver":2,"tag":"apply","args":{"any":[0,1]}}]},
{"label":"179([match_main/@Hnd-stop@[#625]#630])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@6,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"52\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h@1: main/stop<1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"52\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@0@3,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"54\",\"type\": {\"op\": \"Int\"}},\"annotation\": \"genTest: normal: (@pat@0@3: int) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@cfc\\\\\\\"54\\\",\\\"type\\\": {\\\"op\\\": \\\"Int\\\"}}\"}),(@ctl-stop,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@ctl-stop\\\"55\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}},\"annotation\": \"genTest: normal: (@ctl-stop: forall<a> hnd/clause0<a,main/stop,1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@ctl-stop\\\\\\\"55\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/clause0\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match ((@ctl-stop<a>)) {\n  ((@skip std/core/hnd/Clause0((f@1: ((hnd/marker :: (E, V) -> V)<(1005 :: E),1006>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (1005 :: E) 128) : ((hnd/marker :: (E, V) -> V)<(e :: E),b>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (e :: E) a) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<a,(main/stop :: (E, V) -> V),(e :: E),b> ) as @pat@2@2: ((hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<128,(main/stop :: (E, V) -> V),(1005 :: E),1006>))\n     -> std/core/hnd/cast-clause0<a,(main/stop :: (E, V) -> V),(e :: E),(main/stop :: (E, V) -> V),a>(f@1)(m@1, ev@1@10044);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"@x56\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}: \"std/core/hnd/clause0\".\"std/core/hnd/Clause0\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"57\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"@x56\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}: \"std/core/hnd/clause0\".\"std/core/hnd/Clause0\"(({\"op\": \"Var\",\"id\": \"@\\\"clause\\\"57\",\"type\": {\"op\": \"Function\",\"params\": [{\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}, {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}],\"return\": {\"op\": \"Top\"},\"purity\": \"Effectful\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match ((@ctl-stop<a>)) {\n  ((@skip std/core/hnd/Clause0((f@1: ((hnd/marker :: (E, V) -> V)<(1005 :: E),1006>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (1005 :: E) 128) : ((hnd/marker :: (E, V) -> V)<(e :: E),b>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (e :: E) a) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<a,(main/stop :: (E, V) -> V),(e :: E),b> ) as @pat@2@2: ((hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<128,(main/stop :: (E, V) -> V),(1005 :: E),1006>))\n     -> std/core/hnd/cast-clause0<a,(main/stop :: (E, V) -> V),(e :: E),(main/stop :: (E, V) -> V),a>(f@1)(m@1, ev@1@10044);\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@6,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"52\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h@1: main/stop<1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"52\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@0@3,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"54\",\"type\": {\"op\": \"Int\"}},\"annotation\": \"genTest: normal: (@pat@0@3: int) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@cfc\\\\\\\"54\\\",\\\"type\\\": {\\\"op\\\": \\\"Int\\\"}}\"}),(@ctl-stop,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"@ctl-stop\\\"55\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}},\"annotation\": \"genTest: normal: (@ctl-stop: forall<a> hnd/clause0<a,main/stop,1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"@ctl-stop\\\\\\\"55\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/clause0\\\"}}\"})]","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/clause0","scrutinee":3,"clauses":[{"tag":"std/core/hnd/Clause0","target":178,"args":{"any":[2]}}],"default":{"tag":"27f4ad1c-0eaf-43c9-bffa-0472e2b3b921#[Missing Tag#1395]","target":176,"args":{"any":[]}}}]},
{"label":"180([#625])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@5@0,{\"op\": \"Var\",\"id\": \"ev@1@10044\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0@2@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"50\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0@2@0: hnd/htag<main/stop>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"50\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(m@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"51\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (m@1: hnd/marker<1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"51\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(h@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"52\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h@1: main/stop<1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"52\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"53\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (@pat@1@2: hnd/evv<1005>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"53\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (h@1) {\n  ((@skip main/@Hnd-stop((@pat@0@3: int) : int, (@ctl-stop: (forall<a> (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<a,(main/stop :: (E, V) -> V),(1005 :: E),1006>)) : (forall<b> (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<b,(main/stop :: (E, V) -> V),(e :: E),a>)) : (main/stop :: (E, V) -> V)<(e :: E),a> ) as @pat@6: ((main/stop :: (E, V) -> V)<(1005 :: E),1006>))\n     -> (match ((@ctl-stop<a>)) {\n      ((@skip std/core/hnd/Clause0((f@1: ((hnd/marker :: (E, V) -> V)<(1005 :: E),1006>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (1005 :: E) 128) : ((hnd/marker :: (E, V) -> V)<(e :: E),b>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (e :: E) a) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<a,(main/stop :: (E, V) -> V),(e :: E),b> ) as @pat@2@2: ((hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<128,(main/stop :: (E, V) -> V),(1005 :: E),1006>))\n         -> std/core/hnd/cast-clause0<a,(main/stop :: (E, V) -> V),(e :: E),(main/stop :: (E, V) -> V),a>(f@1)(m@1, ev@1@10044);\n    });\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"52\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h@1: main/stop<1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"52\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}: \"main/stop\".\"main/@Hnd-stop\"(({\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"54\",\"type\": {\"op\": \"Int\"}}, {\"op\": \"Var\",\"id\": \"@\\\"@ctl-stop\\\"55\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}))","traced":{"any":[]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"52\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h@1: main/stop<1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"52\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}: \"main/stop\".\"main/@Hnd-stop\"(({\"op\": \"Var\",\"id\": \"@\\\"@cfc\\\"54\",\"type\": {\"op\": \"Int\"}}, {\"op\": \"Var\",\"id\": \"@\\\"@ctl-stop\\\"55\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/clause0\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (h@1) {\n  ((@skip main/@Hnd-stop((@pat@0@3: int) : int, (@ctl-stop: (forall<a> (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<a,(main/stop :: (E, V) -> V),(1005 :: E),1006>)) : (forall<b> (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<b,(main/stop :: (E, V) -> V),(e :: E),a>)) : (main/stop :: (E, V) -> V)<(e :: E),a> ) as @pat@6: ((main/stop :: (E, V) -> V)<(1005 :: E),1006>))\n     -> (match ((@ctl-stop<a>)) {\n      ((@skip std/core/hnd/Clause0((f@1: ((hnd/marker :: (E, V) -> V)<(1005 :: E),1006>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (1005 :: E) 128) : ((hnd/marker :: (E, V) -> V)<(e :: E),b>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (e :: E) a) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<a,(main/stop :: (E, V) -> V),(e :: E),b> ) as @pat@2@2: ((hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<128,(main/stop :: (E, V) -> V),(1005 :: E),1006>))\n         -> std/core/hnd/cast-clause0<a,(main/stop :: (E, V) -> V),(e :: E),(main/stop :: (E, V) -> V),a>(f@1)(m@1, ev@1@10044);\n    });\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@5@0,{\"op\": \"Var\",\"id\": \"ev@1@10044\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}),(@pat@0@2@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"htag\\\"50\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}},\"annotation\": \"genTest: normal: (@pat@0@2@0: hnd/htag<main/stop>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"htag\\\\\\\"50\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/htag\\\"}}\"}),(m@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"51\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}},\"annotation\": \"genTest: normal: (m@1: hnd/marker<1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"marker\\\\\\\"51\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/marker\\\"}}\"}),(h@1,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"52\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (h@1: main/stop<1005,1006>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hnd\\\\\\\"52\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@1@2,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"53\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}},\"annotation\": \"genTest: normal: (@pat@1@2: hnd/evv<1005>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"hevv\\\\\\\"53\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"std/core/hnd/evv\\\"}}\"})]","traced":{"any":[]}},
{"op":"Match","type":"main/stop","scrutinee":3,"clauses":[{"tag":"main/@Hnd-stop","target":179,"args":{"any":[2,3]}}],"default":{"tag":"27f4ad1c-0eaf-43c9-bffa-0472e2b3b921#[Missing Tag#1396]","target":174,"args":{"any":[]}}}]},
{"label":"181([k@[k@[mcore:[#395]#609]#615]#623])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"ev@1@10044\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"50\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"51\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"52\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"53\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"ev@1@10044\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}: \"std/core/hnd/ev\".\"std/core/hnd/Ev\"(({\"op\": \"Var\",\"id\": \"@\\\"htag\\\"50\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}, {\"op\": \"Var\",\"id\": \"@\\\"marker\\\"51\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/marker\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hnd\\\"52\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"hevv\\\"53\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/evv\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: one case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Match","type":"std/core/hnd/ev","scrutinee":0,"clauses":[{"tag":"std/core/hnd/Ev","target":180,"args":{"any":[1,2,3,4]}}],"default":{"tag":"27f4ad1c-0eaf-43c9-bffa-0472e2b3b921#[Missing Tag#1397]","target":172,"args":{"any":[]}}}]},
{"label":"182([k@[mcore:[#395]#609]#615])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"promote_ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Push","target":181,"args":{"any":[]}},
{"op":"Jump","target":170}]},
{"label":"183([mcore:[#395]#609])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"ev@1@10044\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@evv-at<(main/stop :: (E, V) -> V)>((std/core/types/@make-ssize_t(0)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/@make-ssize_t(0)","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"Push","target":182,"args":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/@make-ssize_t(0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@evv-at<(main/stop :: (E, V) -> V)>((std/core/types/@make-ssize_t(0)))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"ev@1@10044\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/ev\"}}","traced":{"any":[]}},
{"op":"Jump","target":171}]},
{"label":"184([method_apply@[mcore:[#397]#639]#643])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Jump","target":153}]},
{"label":"185([k@[switch case for Bool(true)#657]#665])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"186([switch case for Bool(true)#657])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@3,{\"op\": \"Primitive\",\"name\": \"infixEq(Int, Int): Boolean\",\"args\": [{\"op\": \"Var\",\"id\": \"c\",\"type\": {\"op\": \"Int\"}}, {\"op\": \"Literal\",\"type\": {\"op\": \"Int\"},\"value\": 36}],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: main/parse<a>((std/core/int/int-add(a, 1)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/int/int-add(a, 1)","traced":{"any":[]}},
{"op":"Const","format":"int","out":1,"value":1},
{"op":"PrimOp","name":"infixAdd(Int, Int): Int","out":{"any":[0]},"in":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/int/int-add(a, 1)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: main/parse<a>((std/core/int/int-add(a, 1)))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@3,{\"op\": \"Primitive\",\"name\": \"infixEq(Int, Int): Boolean\",\"args\": [{\"op\": \"Var\",\"id\": \"c\",\"type\": {\"op\": \"Int\"}}, {\"op\": \"Literal\",\"type\": {\"op\": \"Int\"},\"value\": 36}],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":201}]},
{"label":"187([k@[switch case for Bool(false)#671]#676])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"188([#683])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"Jump","target":168}]},
{"label":"189([#700])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"190([k@[switch case for Bool(true)#678]#693])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: main/parse<a>(0)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: 0","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: 0","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: main/parse<a>(0)","traced":{"any":[]}},
{"op":"Jump","target":201}]},
{"label":"191([switch case for Bool(true)#678])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@1@0,{\"op\": \"Primitive\",\"name\": \"infixEq(Int, Int): Boolean\",\"args\": [{\"op\": \"Var\",\"id\": \"c\",\"type\": {\"op\": \"Int\"}}, {\"op\": \"Literal\",\"type\": {\"op\": \"Int\"},\"value\": 10}],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: val _ : ()\n      = std/core/hnd/@open-at1<int,(),(main/emit :: (E, V) -> V),<(main/emit :: (E, V) -> V),(main/stop :: (E, V) -> V),(main/read :: (E, V) -> V),(div :: X)>>((std/core/types/@make-ssize_t(0)), (fn<(main/emit :: (E, V) -> V)>(e: int){\n          val ev@0@10041 : ((hnd/ev :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)>)\n                = (std/core/hnd/@evv-at<(main/emit :: (E, V) -> V)>((std/core/types/@make-ssize_t(0))));\n          (match (ev@0@10041) {\n            ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0@1: (hnd/htag :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)>, (m@0: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (h@0: (main/emit :: (E, V) -> V)<(e :: E),a>) : (main/emit :: (E, V) -> V)<(e :: E),a>, (@pat@1@1: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)> ) as @pat@4: ((hnd/ev :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)>))\n               -> (match (h@0) {\n                ((@skip main/@Hnd-emit((@pat@0@2: int) : int, (@fun-emit: (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<int,(),(main/emit :: (E, V) -> V),(e :: E),a>) : (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<int,(),(main/emit :: (E, V) -> V),(e :: E),a>) : (main/emit :: (E, V) -> V)<(e :: E),a> ) as @pat@5: ((main/emit :: (E, V) -> V)<(e :: E),a>))\n                   -> (match (@fun-emit) {\n                    ((@skip std/core/hnd/Clause1((f@0: ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)>, int) -> (e :: E) ()) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)>, int) -> (e :: E) ()) : (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<int,(),(main/emit :: (E, V) -> V),(e :: E),a> ) as @pat@2@0@0: ((hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<int,(),(main/emit :: (E, V) -> V),(e :: E),a>))\n                       -> f@0(m@0, ev@0@10041, e);\n                  });\n              });\n          });\n        }), a);\nmain/parse<a>(0)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@open-at1<int,(),(main/emit :: (E, V) -> V),<(main/emit :: (E, V) -> V),(main/stop :: (E, V) -> V),(main/read :: (E, V) -> V),(div :: X)>>((std/core/types/@make-ssize_t(0)), (fn<(main/emit :: (E, V) -> V)>(e: int){\n    val ev@0@10041 : ((hnd/ev :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)>)\n          = (std/core/hnd/@evv-at<(main/emit :: (E, V) -> V)>((std/core/types/@make-ssize_t(0))));\n    (match (ev@0@10041) {\n      ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0@1: (hnd/htag :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)>, (m@0: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (h@0: (main/emit :: (E, V) -> V)<(e :: E),a>) : (main/emit :: (E, V) -> V)<(e :: E),a>, (@pat@1@1: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)> ) as @pat@4: ((hnd/ev :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)>))\n         -> (match (h@0) {\n          ((@skip main/@Hnd-emit((@pat@0@2: int) : int, (@fun-emit: (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<int,(),(main/emit :: (E, V) -> V),(e :: E),a>) : (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<int,(),(main/emit :: (E, V) -> V),(e :: E),a>) : (main/emit :: (E, V) -> V)<(e :: E),a> ) as @pat@5: ((main/emit :: (E, V) -> V)<(e :: E),a>))\n             -> (match (@fun-emit) {\n              ((@skip std/core/hnd/Clause1((f@0: ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)>, int) -> (e :: E) ()) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)>, int) -> (e :: E) ()) : (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<int,(),(main/emit :: (E, V) -> V),(e :: E),a> ) as @pat@2@0@0: ((hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<int,(),(main/emit :: (E, V) -> V),(e :: E),a>))\n                 -> f@0(m@0, ev@0@10041, e);\n            });\n        });\n    });\n  }), a)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/@make-ssize_t(0)","traced":{"any":[]}},
{"op":"Const","format":"int","out":1,"value":0},
{"op":"New","out":2,"targets":[188],"args":{"any":[]},"tags":["apply"]},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Push","target":190,"args":{"any":[]}},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/@make-ssize_t(0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@open-at1<int,(),(main/emit :: (E, V) -> V),<(main/emit :: (E, V) -> V),(main/stop :: (E, V) -> V),(main/read :: (E, V) -> V),(div :: X)>>((std/core/types/@make-ssize_t(0)), (fn<(main/emit :: (E, V) -> V)>(e: int){\n    val ev@0@10041 : ((hnd/ev :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)>)\n          = (std/core/hnd/@evv-at<(main/emit :: (E, V) -> V)>((std/core/types/@make-ssize_t(0))));\n    (match (ev@0@10041) {\n      ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0@1: (hnd/htag :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)>, (m@0: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (h@0: (main/emit :: (E, V) -> V)<(e :: E),a>) : (main/emit :: (E, V) -> V)<(e :: E),a>, (@pat@1@1: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)> ) as @pat@4: ((hnd/ev :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)>))\n         -> (match (h@0) {\n          ((@skip main/@Hnd-emit((@pat@0@2: int) : int, (@fun-emit: (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<int,(),(main/emit :: (E, V) -> V),(e :: E),a>) : (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<int,(),(main/emit :: (E, V) -> V),(e :: E),a>) : (main/emit :: (E, V) -> V)<(e :: E),a> ) as @pat@5: ((main/emit :: (E, V) -> V)<(e :: E),a>))\n             -> (match (@fun-emit) {\n              ((@skip std/core/hnd/Clause1((f@0: ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)>, int) -> (e :: E) ()) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)>, int) -> (e :: E) ()) : (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<int,(),(main/emit :: (E, V) -> V),(e :: E),a> ) as @pat@2@0@0: ((hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<int,(),(main/emit :: (E, V) -> V),(e :: E),a>))\n                 -> f@0(m@0, ev@0@10041, e);\n            });\n        });\n    });\n  }), a)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: val _ : ()\n      = std/core/hnd/@open-at1<int,(),(main/emit :: (E, V) -> V),<(main/emit :: (E, V) -> V),(main/stop :: (E, V) -> V),(main/read :: (E, V) -> V),(div :: X)>>((std/core/types/@make-ssize_t(0)), (fn<(main/emit :: (E, V) -> V)>(e: int){\n          val ev@0@10041 : ((hnd/ev :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)>)\n                = (std/core/hnd/@evv-at<(main/emit :: (E, V) -> V)>((std/core/types/@make-ssize_t(0))));\n          (match (ev@0@10041) {\n            ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0@1: (hnd/htag :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)>, (m@0: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (h@0: (main/emit :: (E, V) -> V)<(e :: E),a>) : (main/emit :: (E, V) -> V)<(e :: E),a>, (@pat@1@1: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)> ) as @pat@4: ((hnd/ev :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)>))\n               -> (match (h@0) {\n                ((@skip main/@Hnd-emit((@pat@0@2: int) : int, (@fun-emit: (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<int,(),(main/emit :: (E, V) -> V),(e :: E),a>) : (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<int,(),(main/emit :: (E, V) -> V),(e :: E),a>) : (main/emit :: (E, V) -> V)<(e :: E),a> ) as @pat@5: ((main/emit :: (E, V) -> V)<(e :: E),a>))\n                   -> (match (@fun-emit) {\n                    ((@skip std/core/hnd/Clause1((f@0: ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)>, int) -> (e :: E) ()) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)>, int) -> (e :: E) ()) : (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<int,(),(main/emit :: (E, V) -> V),(e :: E),a> ) as @pat@2@0@0: ((hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<int,(),(main/emit :: (E, V) -> V),(e :: E),a>))\n                       -> f@0(m@0, ev@0@10041, e);\n                  });\n              });\n          });\n        }), a);\nmain/parse<a>(0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@1@0,{\"op\": \"Primitive\",\"name\": \"infixEq(Int, Int): Boolean\",\"args\": [{\"op\": \"Var\",\"id\": \"c\",\"type\": {\"op\": \"Int\"}}, {\"op\": \"Literal\",\"type\": {\"op\": \"Int\"},\"value\": 10}],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":154}]},
{"label":"192([#710])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Jump","target":183}]},
{"label":"193([k@[switch case for Bool(false)#706]#720])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"194([switch case for Bool(false)#706])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@2@1,{\"op\": \"Primitive\",\"name\": \"infixEq(Int, Int): Boolean\",\"args\": [{\"op\": \"Var\",\"id\": \"c\",\"type\": {\"op\": \"Int\"}}, {\"op\": \"Literal\",\"type\": {\"op\": \"Int\"},\"value\": 10}],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@open-at0<a,(main/stop :: (E, V) -> V),<(main/stop :: (E, V) -> V),(main/emit :: (E, V) -> V),(main/read :: (E, V) -> V),(div :: X)>>((std/core/types/@make-ssize_t(2)), (fn<(main/stop :: (E, V) -> V)>(){\n    val ev@1@10044 : ((hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>)\n          = (std/core/hnd/@evv-at<(main/stop :: (E, V) -> V)>((std/core/types/@make-ssize_t(0))));\n    (match (ev@1@10044) {\n      ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0@2@0: (hnd/htag :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>, (m@1: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (h@1: (main/stop :: (E, V) -> V)<(e :: E),a>) : (main/stop :: (E, V) -> V)<(e :: E),a>, (@pat@1@2: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)> ) as @pat@5@0: ((hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>))\n         -> (match (h@1) {\n          ((@skip main/@Hnd-stop((@pat@0@3: int) : int, (@ctl-stop: (forall<b> (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<b,(main/stop :: (E, V) -> V),(e :: E),a>)) : (forall<b> (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<b,(main/stop :: (E, V) -> V),(e :: E),a>)) : (main/stop :: (E, V) -> V)<(e :: E),a> ) as @pat@6: ((main/stop :: (E, V) -> V)<(e :: E),a>))\n             -> (match ((@ctl-stop<b>)) {\n              ((@skip std/core/hnd/Clause0((f@1: ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (e :: E) 128) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (e :: E) b) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<b,(main/stop :: (E, V) -> V),(e :: E),a> ) as @pat@2@2: ((hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<128,(main/stop :: (E, V) -> V),(e :: E),a>))\n                 -> std/core/hnd/cast-clause0<b,(main/stop :: (E, V) -> V),(e :: E),(main/stop :: (E, V) -> V),a>(f@1)(m@1, ev@1@10044);\n            });\n        });\n    });\n  }))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/@make-ssize_t(2)","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":2},
{"op":"New","out":1,"targets":[192],"args":{"any":[]},"tags":["apply"]},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/@make-ssize_t(2)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@open-at0<a,(main/stop :: (E, V) -> V),<(main/stop :: (E, V) -> V),(main/emit :: (E, V) -> V),(main/read :: (E, V) -> V),(div :: X)>>((std/core/types/@make-ssize_t(2)), (fn<(main/stop :: (E, V) -> V)>(){\n    val ev@1@10044 : ((hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>)\n          = (std/core/hnd/@evv-at<(main/stop :: (E, V) -> V)>((std/core/types/@make-ssize_t(0))));\n    (match (ev@1@10044) {\n      ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0@2@0: (hnd/htag :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>, (m@1: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (h@1: (main/stop :: (E, V) -> V)<(e :: E),a>) : (main/stop :: (E, V) -> V)<(e :: E),a>, (@pat@1@2: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)> ) as @pat@5@0: ((hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>))\n         -> (match (h@1) {\n          ((@skip main/@Hnd-stop((@pat@0@3: int) : int, (@ctl-stop: (forall<b> (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<b,(main/stop :: (E, V) -> V),(e :: E),a>)) : (forall<b> (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<b,(main/stop :: (E, V) -> V),(e :: E),a>)) : (main/stop :: (E, V) -> V)<(e :: E),a> ) as @pat@6: ((main/stop :: (E, V) -> V)<(e :: E),a>))\n             -> (match ((@ctl-stop<b>)) {\n              ((@skip std/core/hnd/Clause0((f@1: ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (e :: E) 128) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (e :: E) b) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<b,(main/stop :: (E, V) -> V),(e :: E),a> ) as @pat@2@2: ((hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<128,(main/stop :: (E, V) -> V),(e :: E),a>))\n                 -> std/core/hnd/cast-clause0<b,(main/stop :: (E, V) -> V),(e :: E),(main/stop :: (E, V) -> V),a>(f@1)(m@1, ev@1@10044);\n            });\n        });\n    });\n  }))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@2@1,{\"op\": \"Primitive\",\"name\": \"infixEq(Int, Int): Boolean\",\"args\": [{\"op\": \"Var\",\"id\": \"c\",\"type\": {\"op\": \"Int\"}}, {\"op\": \"Literal\",\"type\": {\"op\": \"Int\"},\"value\": 10}],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Jump","target":169}]},
{"label":"195([switch default case#722])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"196([switch default case#702])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"int","out":0,"value":10},
{"op":"PrimOp","name":"infixEq(Int, Int): Boolean","out":{"any":[0]},"in":{"any":[1,0]}},
{"op":"Switch","arg":0,"values":[false],"targets":[194],"default":195}]},
{"label":"197([switch case for Bool(false)#671])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genBranch: [(@pat@0@0@0,{\"op\": \"Primitive\",\"name\": \"infixEq(Int, Int): Boolean\",\"args\": [{\"op\": \"Var\",\"id\": \"c\",\"type\": {\"op\": \"Int\"}}, {\"op\": \"Literal\",\"type\": {\"op\": \"Int\"},\"value\": 36}],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match ((std/core/int/(==)(c, 10))) {\n  ((std/core/types/True() : bool ) as @pat@1@0: bool)\n     -> val _ : ()\n              = std/core/hnd/@open-at1<int,(),(main/emit :: (E, V) -> V),<(main/emit :: (E, V) -> V),(main/stop :: (E, V) -> V),(main/read :: (E, V) -> V),(div :: X)>>((std/core/types/@make-ssize_t(0)), (fn<(main/emit :: (E, V) -> V)>(e: int){\n                  val ev@0@10041 : ((hnd/ev :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)>)\n                        = (std/core/hnd/@evv-at<(main/emit :: (E, V) -> V)>((std/core/types/@make-ssize_t(0))));\n                  (match (ev@0@10041) {\n                    ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0@1: (hnd/htag :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)>, (m@0: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (h@0: (main/emit :: (E, V) -> V)<(e :: E),a>) : (main/emit :: (E, V) -> V)<(e :: E),a>, (@pat@1@1: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)> ) as @pat@4: ((hnd/ev :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)>))\n                       -> (match (h@0) {\n                        ((@skip main/@Hnd-emit((@pat@0@2: int) : int, (@fun-emit: (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<int,(),(main/emit :: (E, V) -> V),(e :: E),a>) : (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<int,(),(main/emit :: (E, V) -> V),(e :: E),a>) : (main/emit :: (E, V) -> V)<(e :: E),a> ) as @pat@5: ((main/emit :: (E, V) -> V)<(e :: E),a>))\n                           -> (match (@fun-emit) {\n                            ((@skip std/core/hnd/Clause1((f@0: ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)>, int) -> (e :: E) ()) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)>, int) -> (e :: E) ()) : (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<int,(),(main/emit :: (E, V) -> V),(e :: E),a> ) as @pat@2@0@0: ((hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<int,(),(main/emit :: (E, V) -> V),(e :: E),a>))\n                               -> f@0(m@0, ev@0@10041, e);\n                          });\n                      });\n                  });\n                }), a);\n    main/parse<a>(0);\n  ((@skip std/core/types/False() : bool ) as @pat@2@1: bool)\n     -> std/core/hnd/@open-at0<a,(main/stop :: (E, V) -> V),<(main/stop :: (E, V) -> V),(main/emit :: (E, V) -> V),(main/read :: (E, V) -> V),(div :: X)>>((std/core/types/@make-ssize_t(2)), (fn<(main/stop :: (E, V) -> V)>(){\n        val ev@1@10044 : ((hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>)\n              = (std/core/hnd/@evv-at<(main/stop :: (E, V) -> V)>((std/core/types/@make-ssize_t(0))));\n        (match (ev@1@10044) {\n          ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0@2@0: (hnd/htag :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>, (m@1: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (h@1: (main/stop :: (E, V) -> V)<(e :: E),a>) : (main/stop :: (E, V) -> V)<(e :: E),a>, (@pat@1@2: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)> ) as @pat@5@0: ((hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>))\n             -> (match (h@1) {\n              ((@skip main/@Hnd-stop((@pat@0@3: int) : int, (@ctl-stop: (forall<b> (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<b,(main/stop :: (E, V) -> V),(e :: E),a>)) : (forall<b> (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<b,(main/stop :: (E, V) -> V),(e :: E),a>)) : (main/stop :: (E, V) -> V)<(e :: E),a> ) as @pat@6: ((main/stop :: (E, V) -> V)<(e :: E),a>))\n                 -> (match ((@ctl-stop<b>)) {\n                  ((@skip std/core/hnd/Clause0((f@1: ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (e :: E) 128) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (e :: E) b) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<b,(main/stop :: (E, V) -> V),(e :: E),a> ) as @pat@2@2: ((hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<128,(main/stop :: (E, V) -> V),(e :: E),a>))\n                     -> std/core/hnd/cast-clause0<b,(main/stop :: (E, V) -> V),(e :: E),(main/stop :: (E, V) -> V),a>(f@1)(m@1, ev@1@10044);\n                });\n            });\n        });\n      }));\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"int","out":2,"value":10},
{"op":"PrimOp","name":"infixEq(Int, Int): Boolean","out":{"any":[2]},"in":{"any":[1,2]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match ((std/core/int/(==)(c, 10))) {\n  ((std/core/types/True() : bool ) as @pat@1@0: bool)\n     -> val _ : ()\n              = std/core/hnd/@open-at1<int,(),(main/emit :: (E, V) -> V),<(main/emit :: (E, V) -> V),(main/stop :: (E, V) -> V),(main/read :: (E, V) -> V),(div :: X)>>((std/core/types/@make-ssize_t(0)), (fn<(main/emit :: (E, V) -> V)>(e: int){\n                  val ev@0@10041 : ((hnd/ev :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)>)\n                        = (std/core/hnd/@evv-at<(main/emit :: (E, V) -> V)>((std/core/types/@make-ssize_t(0))));\n                  (match (ev@0@10041) {\n                    ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0@1: (hnd/htag :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)>, (m@0: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (h@0: (main/emit :: (E, V) -> V)<(e :: E),a>) : (main/emit :: (E, V) -> V)<(e :: E),a>, (@pat@1@1: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)> ) as @pat@4: ((hnd/ev :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)>))\n                       -> (match (h@0) {\n                        ((@skip main/@Hnd-emit((@pat@0@2: int) : int, (@fun-emit: (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<int,(),(main/emit :: (E, V) -> V),(e :: E),a>) : (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<int,(),(main/emit :: (E, V) -> V),(e :: E),a>) : (main/emit :: (E, V) -> V)<(e :: E),a> ) as @pat@5: ((main/emit :: (E, V) -> V)<(e :: E),a>))\n                           -> (match (@fun-emit) {\n                            ((@skip std/core/hnd/Clause1((f@0: ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)>, int) -> (e :: E) ()) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/emit :: (E, V) -> V)>, int) -> (e :: E) ()) : (hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<int,(),(main/emit :: (E, V) -> V),(e :: E),a> ) as @pat@2@0@0: ((hnd/clause1 :: (V, V, (E, V) -> V, E, V) -> V)<int,(),(main/emit :: (E, V) -> V),(e :: E),a>))\n                               -> f@0(m@0, ev@0@10041, e);\n                          });\n                      });\n                  });\n                }), a);\n    main/parse<a>(0);\n  ((@skip std/core/types/False() : bool ) as @pat@2@1: bool)\n     -> std/core/hnd/@open-at0<a,(main/stop :: (E, V) -> V),<(main/stop :: (E, V) -> V),(main/emit :: (E, V) -> V),(main/read :: (E, V) -> V),(div :: X)>>((std/core/types/@make-ssize_t(2)), (fn<(main/stop :: (E, V) -> V)>(){\n        val ev@1@10044 : ((hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>)\n              = (std/core/hnd/@evv-at<(main/stop :: (E, V) -> V)>((std/core/types/@make-ssize_t(0))));\n        (match (ev@1@10044) {\n          ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0@2@0: (hnd/htag :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>, (m@1: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (h@1: (main/stop :: (E, V) -> V)<(e :: E),a>) : (main/stop :: (E, V) -> V)<(e :: E),a>, (@pat@1@2: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)> ) as @pat@5@0: ((hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>))\n             -> (match (h@1) {\n              ((@skip main/@Hnd-stop((@pat@0@3: int) : int, (@ctl-stop: (forall<b> (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<b,(main/stop :: (E, V) -> V),(e :: E),a>)) : (forall<b> (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<b,(main/stop :: (E, V) -> V),(e :: E),a>)) : (main/stop :: (E, V) -> V)<(e :: E),a> ) as @pat@6: ((main/stop :: (E, V) -> V)<(e :: E),a>))\n                 -> (match ((@ctl-stop<b>)) {\n                  ((@skip std/core/hnd/Clause0((f@1: ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (e :: E) 128) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>) -> (e :: E) b) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<b,(main/stop :: (E, V) -> V),(e :: E),a> ) as @pat@2@2: ((hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<128,(main/stop :: (E, V) -> V),(e :: E),a>))\n                     -> std/core/hnd/cast-clause0<b,(main/stop :: (E, V) -> V),(e :: E),(main/stop :: (E, V) -> V),a>(f@1)(m@1, ev@1@10044);\n                });\n            });\n        });\n      }));\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0@0@0,{\"op\": \"Primitive\",\"name\": \"infixEq(Int, Int): Boolean\",\"args\": [{\"op\": \"Var\",\"id\": \"c\",\"type\": {\"op\": \"Int\"}}, {\"op\": \"Literal\",\"type\": {\"op\": \"Int\"},\"value\": 36}],\"returns\": [{\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}],\"rest\": {\"op\": \"Var\",\"id\": \"primitive_result\",\"type\": {\"op\": \"Bool\"}}})]","traced":{"any":[]}},
{"op":"Switch","arg":2,"values":[true],"targets":[191],"default":196}]},
{"label":"198([switch default case#723])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"199([switch default case#667])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"int","out":2,"value":36},
{"op":"PrimOp","name":"infixEq(Int, Int): Boolean","out":{"any":[2]},"in":{"any":[1,2]}},
{"op":"Switch","arg":2,"values":[false],"targets":[197],"default":198}]},
{"label":"200([k@[mcore:[#397]#639]#653])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Const","format":"int","out":2,"value":36},
{"op":"PrimOp","name":"infixEq(Int, Int): Boolean","out":{"any":[2]},"in":{"any":[0,2]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Switch","arg":2,"values":[true],"targets":[186],"default":199}]},
{"label":"201([mcore:[#397]#639])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"c\",\"type\": {\"op\": \"Int\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/@open-at0<main/chr,(main/read :: (E, V) -> V),<(main/read :: (E, V) -> V),(main/emit :: (E, V) -> V),(main/stop :: (E, V) -> V),(div :: X)>>((std/core/types/@make-ssize_t(1)), (fn<(main/read :: (E, V) -> V)>(){\n    val ev@10039 : ((hnd/ev :: ((E, V) -> V) -> V)<(main/read :: (E, V) -> V)>)\n          = (std/core/hnd/@evv-at<(main/read :: (E, V) -> V)>((std/core/types/@make-ssize_t(0))));\n    (match (ev@10039) {\n      ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0: (hnd/htag :: ((E, V) -> V) -> V)<(main/read :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(main/read :: (E, V) -> V)>, (m: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (h: (main/read :: (E, V) -> V)<(e :: E),a>) : (main/read :: (E, V) -> V)<(e :: E),a>, (@pat@1: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(main/read :: (E, V) -> V)> ) as @pat: ((hnd/ev :: ((E, V) -> V) -> V)<(main/read :: (E, V) -> V)>))\n         -> (match (h) {\n          ((@skip main/@Hnd-read((@pat@0@0: int) : int, (@fun-read: (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/read :: (E, V) -> V),(e :: E),a>) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/read :: (E, V) -> V),(e :: E),a>) : (main/read :: (E, V) -> V)<(e :: E),a> ) as @pat@2: ((main/read :: (E, V) -> V)<(e :: E),a>))\n             -> (match (@fun-read) {\n              ((@skip std/core/hnd/Clause0((f: ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/read :: (E, V) -> V)>) -> (e :: E) main/chr) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/read :: (E, V) -> V)>) -> (e :: E) main/chr) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/read :: (E, V) -> V),(e :: E),a> ) as @pat@2@0: ((hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/read :: (E, V) -> V),(e :: E),a>))\n                 -> std/core/hnd/cast-clause0<main/chr,(main/read :: (E, V) -> V),(e :: E),(main/read :: (E, V) -> V),a>(f)(m, ev@10039);\n            });\n        });\n    });\n  }))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/@make-ssize_t(1)","traced":{"any":[]}},
{"op":"Const","format":"int","out":1,"value":1},
{"op":"New","out":2,"targets":[184],"args":{"any":[]},"tags":["apply"]},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Push","target":200,"args":{"any":[0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Copy","from":2,"to":1},
{"op":"Copy","from":3,"to":2},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/@make-ssize_t(1)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/@open-at0<main/chr,(main/read :: (E, V) -> V),<(main/read :: (E, V) -> V),(main/emit :: (E, V) -> V),(main/stop :: (E, V) -> V),(div :: X)>>((std/core/types/@make-ssize_t(1)), (fn<(main/read :: (E, V) -> V)>(){\n    val ev@10039 : ((hnd/ev :: ((E, V) -> V) -> V)<(main/read :: (E, V) -> V)>)\n          = (std/core/hnd/@evv-at<(main/read :: (E, V) -> V)>((std/core/types/@make-ssize_t(0))));\n    (match (ev@10039) {\n      ((@skip std/core/hnd/Ev<(e :: E),a>((@pat@0: (hnd/htag :: ((E, V) -> V) -> V)<(main/read :: (E, V) -> V)>) : (hnd/htag :: ((E, V) -> V) -> V)<(main/read :: (E, V) -> V)>, (m: (hnd/marker :: (E, V) -> V)<(e :: E),a>) : (hnd/marker :: (E, V) -> V)<(e :: E),a>, (h: (main/read :: (E, V) -> V)<(e :: E),a>) : (main/read :: (E, V) -> V)<(e :: E),a>, (@pat@1: (hnd/evv :: E -> V)<(e :: E)>) : (hnd/evv :: E -> V)<(e :: E)>) : (hnd/ev :: ((E, V) -> V) -> V)<(main/read :: (E, V) -> V)> ) as @pat: ((hnd/ev :: ((E, V) -> V) -> V)<(main/read :: (E, V) -> V)>))\n         -> (match (h) {\n          ((@skip main/@Hnd-read((@pat@0@0: int) : int, (@fun-read: (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/read :: (E, V) -> V),(e :: E),a>) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/read :: (E, V) -> V),(e :: E),a>) : (main/read :: (E, V) -> V)<(e :: E),a> ) as @pat@2: ((main/read :: (E, V) -> V)<(e :: E),a>))\n             -> (match (@fun-read) {\n              ((@skip std/core/hnd/Clause0((f: ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/read :: (E, V) -> V)>) -> (e :: E) main/chr) : ((hnd/marker :: (E, V) -> V)<(e :: E),a>, (hnd/ev :: ((E, V) -> V) -> V)<(main/read :: (E, V) -> V)>) -> (e :: E) main/chr) : (hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/read :: (E, V) -> V),(e :: E),a> ) as @pat@2@0: ((hnd/clause0 :: (V, (E, V) -> V, E, V) -> V)<main/chr,(main/read :: (E, V) -> V),(e :: E),a>))\n                 -> std/core/hnd/cast-clause0<main/chr,(main/read :: (E, V) -> V),(e :: E),(main/read :: (E, V) -> V),a>(f)(m, ev@10039);\n            });\n        });\n    });\n  }))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"c\",\"type\": {\"op\": \"Int\"}}","traced":{"any":[]}},
{"op":"Jump","target":139}]},
{"label":"202([mcore:[#398]#724])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"CallLib","lib":2,"symbol":"std/core/hnd/local-var"}]},
{"label":"203([mcore:[#404]#730])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"std/core/hnd/clause-tail1"}]},
{"label":"204([mcore:[#409]#735])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"x@10022\",\"type\": {\"op\": \"Int\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/local-get<int,(h :: H),(e :: E)>(s)","traced":{"any":[]}},
{"op":"PrimOp","name":"getRef(Ref[Ptr]): Ptr","out":{"any":[2]},"in":{"any":[1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/local-set<int,(e :: E),(h :: H)>(s, (std/core/int/int-add(x@10022, e)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/int/int-add(x@10022, e)","traced":{"any":[]}},
{"op":"PrimOp","name":"infixAdd(Int, Int): Int","out":{"any":[0]},"in":{"any":[2,0]}},
{"op":"PrimOp","name":"setRef(Ref[Ptr], Ptr): Unit","out":{"any":[0]},"in":{"any":[1,0]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/int/int-add(x@10022, e)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/local-set<int,(e :: E),(h :: H)>(s, (std/core/int/int-add(x@10022, e)))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/local-get<int,(h :: H),(e :: E)>(s)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"x@10022\",\"type\": {\"op\": \"Int\"}}","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"205([mcore:[#413]#737])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"206([k@[mcore:[#417]#738]#740])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/local-get<int,(h :: H),<(main/emit :: (E, V) -> V)|(e :: E)>>(s)","traced":{"any":[]}},
{"op":"PrimOp","name":"getRef(Ref[Ptr]): Ptr","out":{"any":[0]},"in":{"any":[1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/local-get<int,(h :: H),<(main/emit :: (E, V) -> V)|(e :: E)>>(s)","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"207([mcore:[#417]#738])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: action()","traced":{"any":[]}},
{"op":"Push","target":206,"args":{"any":[1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: action()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"_\",\"type\": {\"op\": \"Unit\"}}","traced":{"any":[]}},
{"op":"Invoke","receiver":0,"tag":"apply","args":{"any":[]}}]},
{"label":"208([method_apply@[mcore:[#419]#741]#746])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Jump","target":204}]},
{"label":"209([#760])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Jump","target":205}]},
{"label":"210([#764])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Jump","target":207}]},
{"label":"211([k@[k@[mcore:[#419]#741]#753]#756])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"New","out":3,"targets":[209],"args":{"any":[]},"tags":["apply"]},
{"op":"New","out":1,"targets":[210],"args":{"any":[1,2]},"tags":["apply"]},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Const","format":"string","out":4,"value":"Name(main/@tag-emit)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":3,"b":1},
{"op":"Jump","target":20}]},
{"label":"212([k@[mcore:[#419]#741]#753])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Push","target":211,"args":{"any":[1,2]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":3,"to":0},
{"op":"Jump","target":275}]},
{"label":"213([mcore:[#419]#741])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: main/@handle-emit<int,<(local :: H -> X)<(h :: H)>|(e :: E)>,int>((main/@Hnd-emit<<(local :: H -> X)<(h :: H)>|(e :: E)>,int>(1, (std/core/hnd/clause-tail1<<(local :: H -> X)<(h :: H)>|(e :: E)>,int,(main/emit :: (E, V) -> V),int,()>((fn<<(local :: H -> X)<(h :: H)>|(e :: E)>>(e: int){\n      val x@10022 : int\n            = (std/core/types/local-get<int,(h :: H),(e :: E)>(s));\n      (std/core/types/local-set<int,(e :: E),(h :: H)>(s, (std/core/int/int-add(x@10022, e))));\n    }))))), (fn<<(local :: H -> X)<(h :: H)>|(e :: E)>>(@x: int){\n    @x;\n  }), (fn<<(main/emit :: (E, V) -> V),(local :: H -> X)<(h :: H)>|(e :: E)>>(){\n    val _ : ()\n          = (action());\n    (std/core/types/local-get<int,(h :: H),<(main/emit :: (E, V) -> V)|(e :: E)>>(s));\n  }))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: main/@Hnd-emit<<(local :: H -> X)<(h :: H)>|(e :: E)>,int>(1, (std/core/hnd/clause-tail1<<(local :: H -> X)<(h :: H)>|(e :: E)>,int,(main/emit :: (E, V) -> V),int,()>((fn<<(local :: H -> X)<(h :: H)>|(e :: E)>>(e: int){\n    val x@10022 : int\n          = (std/core/types/local-get<int,(h :: H),(e :: E)>(s));\n    (std/core/types/local-set<int,(e :: E),(h :: H)>(s, (std/core/int/int-add(x@10022, e))));\n  }))))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: 1","traced":{"any":[]}},
{"op":"Const","format":"int","out":2,"value":1},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/clause-tail1<<(local :: H -> X)<(h :: H)>|(e :: E)>,int,(main/emit :: (E, V) -> V),int,()>((fn<<(local :: H -> X)<(h :: H)>|(e :: E)>>(e: int){\n  val x@10022 : int\n        = (std/core/types/local-get<int,(h :: H),(e :: E)>(s));\n  (std/core/types/local-set<int,(e :: E),(h :: H)>(s, (std/core/int/int-add(x@10022, e))));\n}))","traced":{"any":[]}},
{"op":"New","out":3,"targets":[208],"args":{"any":[0]},"tags":["apply"]},
{"op":"Const","format":"string","out":4,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"Push","target":212,"args":{"any":[1,0,2]}},
{"op":"Copy","from":4,"to":1},
{"op":"Copy","from":3,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/clause-tail1<<(local :: H -> X)<(h :: H)>|(e :: E)>,int,(main/emit :: (E, V) -> V),int,()>((fn<<(local :: H -> X)<(h :: H)>|(e :: E)>>(e: int){\n  val x@10022 : int\n        = (std/core/types/local-get<int,(h :: H),(e :: E)>(s));\n  (std/core/types/local-set<int,(e :: E),(h :: H)>(s, (std/core/int/int-add(x@10022, e))));\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: 1","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: main/@Hnd-emit<<(local :: H -> X)<(h :: H)>|(e :: E)>,int>(1, (std/core/hnd/clause-tail1<<(local :: H -> X)<(h :: H)>|(e :: E)>,int,(main/emit :: (E, V) -> V),int,()>((fn<<(local :: H -> X)<(h :: H)>|(e :: E)>>(e: int){\n    val x@10022 : int\n          = (std/core/types/local-get<int,(h :: H),(e :: E)>(s));\n    (std/core/types/local-set<int,(e :: E),(h :: H)>(s, (std/core/int/int-add(x@10022, e))));\n  }))))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: main/@handle-emit<int,<(local :: H -> X)<(h :: H)>|(e :: E)>,int>((main/@Hnd-emit<<(local :: H -> X)<(h :: H)>|(e :: E)>,int>(1, (std/core/hnd/clause-tail1<<(local :: H -> X)<(h :: H)>|(e :: E)>,int,(main/emit :: (E, V) -> V),int,()>((fn<<(local :: H -> X)<(h :: H)>|(e :: E)>>(e: int){\n      val x@10022 : int\n            = (std/core/types/local-get<int,(h :: H),(e :: E)>(s));\n      (std/core/types/local-set<int,(e :: E),(h :: H)>(s, (std/core/int/int-add(x@10022, e))));\n    }))))), (fn<<(local :: H -> X)<(h :: H)>|(e :: E)>>(@x: int){\n    @x;\n  }), (fn<<(main/emit :: (E, V) -> V),(local :: H -> X)<(h :: H)>|(e :: E)>>(){\n    val _ : ()\n          = (action());\n    (std/core/types/local-get<int,(h :: H),<(main/emit :: (E, V) -> V)|(e :: E)>>(s));\n  }))","traced":{"any":[]}},
{"op":"Jump","target":203}]},
{"label":"214([method_apply@[mcore:[#421]#774]#779])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Const","format":"string","out":3,"value":"Name(main/@tag-emit)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Jump","target":213}]},
{"label":"215([mcore:[#421]#774])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/local-var<int,int,(e :: E),(h :: H)>(0, (fn<<(local :: H -> X)<(h :: H)>|(e :: E)>>(s: (local-var :: (H, V) -> V)<(1508 :: H),int>){\n    (main/@handle-emit<int,<(local :: H -> X)<(h :: H)>|(e :: E)>,int>((main/@Hnd-emit<<(local :: H -> X)<(h :: H)>|(e :: E)>,int>(1, (std/core/hnd/clause-tail1<<(local :: H -> X)<(h :: H)>|(e :: E)>,int,(main/emit :: (E, V) -> V),int,()>((fn<<(local :: H -> X)<(h :: H)>|(e :: E)>>(e: int){\n          val x@10022 : int\n                = (std/core/types/local-get<int,(h :: H),(e :: E)>(s));\n          (std/core/types/local-set<int,(e :: E),(h :: H)>(s, (std/core/int/int-add(x@10022, e))));\n        }))))), (fn<<(local :: H -> X)<(h :: H)>|(e :: E)>>(@x: int){\n        @x;\n      }), (fn<<(main/emit :: (E, V) -> V),(local :: H -> X)<(h :: H)>|(e :: E)>>(){\n        val _ : ()\n              = (action());\n        (std/core/types/local-get<int,(h :: H),<(main/emit :: (E, V) -> V)|(e :: E)>>(s));\n      })));\n  }))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: 0","traced":{"any":[]}},
{"op":"Const","format":"int","out":1,"value":0},
{"op":"New","out":0,"targets":[214],"args":{"any":[0]},"tags":["apply"]},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: 0","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/local-var<int,int,(e :: E),(h :: H)>(0, (fn<<(local :: H -> X)<(h :: H)>|(e :: E)>>(s: (local-var :: (H, V) -> V)<(1508 :: H),int>){\n    (main/@handle-emit<int,<(local :: H -> X)<(h :: H)>|(e :: E)>,int>((main/@Hnd-emit<<(local :: H -> X)<(h :: H)>|(e :: E)>,int>(1, (std/core/hnd/clause-tail1<<(local :: H -> X)<(h :: H)>|(e :: E)>,int,(main/emit :: (E, V) -> V),int,()>((fn<<(local :: H -> X)<(h :: H)>|(e :: E)>>(e: int){\n          val x@10022 : int\n                = (std/core/types/local-get<int,(h :: H),(e :: E)>(s));\n          (std/core/types/local-set<int,(e :: E),(h :: H)>(s, (std/core/int/int-add(x@10022, e))));\n        }))))), (fn<<(local :: H -> X)<(h :: H)>|(e :: E)>>(@x: int){\n        @x;\n      }), (fn<<(main/emit :: (E, V) -> V),(local :: H -> X)<(h :: H)>|(e :: E)>>(){\n        val _ : ()\n              = (action());\n        (std/core/types/local-get<int,(h :: H),<(main/emit :: (E, V) -> V)|(e :: E)>>(s));\n      })));\n  }))","traced":{"any":[]}},
{"op":"Jump","target":202}]},
{"label":"216([mcore:[#423]#791])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genExpr: (forall<(h :: H)> fn<<(local :: H -> X)<(h :: H)>|(e :: E)>>(){\n  std/core/hnd/local-var<int,int,(e :: E),(h :: H)>(0, (fn<<(local :: H -> X)<(h :: H)>|(e :: E)>>(s: (local-var :: (H, V) -> V)<(h :: H),int>){\n      (main/@handle-emit<int,<(local :: H -> X)<(h :: H)>|(e :: E)>,int>((main/@Hnd-emit<<(local :: H -> X)<(h :: H)>|(e :: E)>,int>(1, (std/core/hnd/clause-tail1<<(local :: H -> X)<(h :: H)>|(e :: E)>,int,(main/emit :: (E, V) -> V),int,()>((fn<<(local :: H -> X)<(h :: H)>|(e :: E)>>(e: int){\n            val x@10022 : int\n                  = (std/core/types/local-get<int,(h :: H),(e :: E)>(s));\n            (std/core/types/local-set<int,(e :: E),(h :: H)>(s, (std/core/int/int-add(x@10022, e))));\n          }))))), (fn<<(local :: H -> X)<(h :: H)>|(e :: E)>>(@x: int){\n          @x;\n        }), (fn<<(main/emit :: (E, V) -> V),(local :: H -> X)<(h :: H)>|(e :: E)>>(){\n          val _ : ()\n                = (action());\n          (std/core/types/local-get<int,(h :: H),<(main/emit :: (E, V) -> V)|(e :: E)>>(s));\n        })));\n    }));\n})()","traced":{"any":[]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"Const","format":"string","out":2,"value":"Name(main/@tag-emit)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: (forall<(h :: H)> fn<<(local :: H -> X)<(h :: H)>|(e :: E)>>(){\n  std/core/hnd/local-var<int,int,(e :: E),(h :: H)>(0, (fn<<(local :: H -> X)<(h :: H)>|(e :: E)>>(s: (local-var :: (H, V) -> V)<(h :: H),int>){\n      (main/@handle-emit<int,<(local :: H -> X)<(h :: H)>|(e :: E)>,int>((main/@Hnd-emit<<(local :: H -> X)<(h :: H)>|(e :: E)>,int>(1, (std/core/hnd/clause-tail1<<(local :: H -> X)<(h :: H)>|(e :: E)>,int,(main/emit :: (E, V) -> V),int,()>((fn<<(local :: H -> X)<(h :: H)>|(e :: E)>>(e: int){\n            val x@10022 : int\n                  = (std/core/types/local-get<int,(h :: H),(e :: E)>(s));\n            (std/core/types/local-set<int,(e :: E),(h :: H)>(s, (std/core/int/int-add(x@10022, e))));\n          }))))), (fn<<(local :: H -> X)<(h :: H)>|(e :: E)>>(@x: int){\n          @x;\n        }), (fn<<(main/emit :: (E, V) -> V),(local :: H -> X)<(h :: H)>|(e :: E)>>(){\n          val _ : ()\n                = (action());\n          (std/core/types/local-get<int,(h :: H),<(main/emit :: (E, V) -> V)|(e :: E)>>(s));\n        })));\n    }));\n})()","traced":{"any":[]}},
{"op":"Jump","target":215}]},
{"label":"217([mcore:[#428]#798])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"std/core/hnd/Clause0"}]},
{"label":"218([mcore:[#430]#803])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"CallLib","lib":2,"symbol":"std/core/hnd/yield-to"}]},
{"label":"219([mcore:[#433]#809])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"CallLib","lib":3,"symbol":"std/core/hnd/protect"}]},
{"label":"220([mcore:[#436]#816])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Construct","out":0,"type":"Unit","tag":"unit","args":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"221([method_apply@[mcore:[#439]#818]#824])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Jump","target":220}]},
{"label":"222([mcore:[#439]#818])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/protect<(),a,<(div :: X),(main/emit :: (E, V) -> V)>,()>(std/core/types/Unit, (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(@_wildcard-x730_55: (), r: (717) -> <(div :: X),(main/emit :: (E, V) -> V)> ()){\n    std/core/types/Unit;\n  }), k)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/Unit","traced":{"any":[]}},
{"op":"Construct","out":1,"type":"Unit","tag":"unit","args":{"any":[]}},
{"op":"New","out":2,"targets":[221],"args":{"any":[]},"tags":["apply"]},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/Unit","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/protect<(),a,<(div :: X),(main/emit :: (E, V) -> V)>,()>(std/core/types/Unit, (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(@_wildcard-x730_55: (), r: (717) -> <(div :: X),(main/emit :: (E, V) -> V)> ()){\n    std/core/types/Unit;\n  }), k)","traced":{"any":[]}},
{"op":"Jump","target":219}]},
{"label":"223([method_apply@[mcore:[#441]#830]#833])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"Jump","target":222}]},
{"label":"224([mcore:[#441]#830])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-to<a,<(div :: X),(main/emit :: (E, V) -> V)>,()>(m, (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(k: ((hnd/resume-result :: (V, V) -> V)<717,()>) -> <(div :: X),(main/emit :: (E, V) -> V)> ()){\n    (std/core/hnd/protect<(),a,<(div :: X),(main/emit :: (E, V) -> V)>,()>(std/core/types/Unit, (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(@_wildcard-x730_55: (), r: (717) -> <(div :: X),(main/emit :: (E, V) -> V)> ()){\n        std/core/types/Unit;\n      }), k));\n  }))","traced":{"any":[]}},
{"op":"New","out":1,"targets":[223],"args":{"any":[]},"tags":["apply"]},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-to<a,<(div :: X),(main/emit :: (E, V) -> V)>,()>(m, (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(k: ((hnd/resume-result :: (V, V) -> V)<717,()>) -> <(div :: X),(main/emit :: (E, V) -> V)> ()){\n    (std/core/hnd/protect<(),a,<(div :: X),(main/emit :: (E, V) -> V)>,()>(std/core/types/Unit, (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(@_wildcard-x730_55: (), r: (717) -> <(div :: X),(main/emit :: (E, V) -> V)> ()){\n        std/core/types/Unit;\n      }), k));\n  }))","traced":{"any":[]}},
{"op":"Jump","target":218}]},
{"label":"225([mcore:[#445]#842])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"226([mcore:[#451]#843])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: main/parse<()>(0)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: 0","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: 0","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: main/parse<()>(0)","traced":{"any":[]}},
{"op":"Jump","target":201}]},
{"label":"227([method_apply@[mcore:[#453]#849]#851])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Jump","target":226}]},
{"label":"228([mcore:[#453]#849])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: main/feed<<(div :: X),(main/emit :: (E, V) -> V)>>(n, (fn<<(main/read :: (E, V) -> V),(main/stop :: (E, V) -> V),(div :: X),(main/emit :: (E, V) -> V)>>(){\n    (main/parse<()>(0));\n  }))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[227],"args":{"any":[]},"tags":["apply"]},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"Const","format":"string","out":2,"value":"Name(main/@tag-read)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Const","format":"string","out":4,"value":"Name(main/@tag-stop)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"Swap","a":2,"b":1},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":0,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: main/feed<<(div :: X),(main/emit :: (E, V) -> V)>>(n, (fn<<(main/read :: (E, V) -> V),(main/stop :: (E, V) -> V),(div :: X),(main/emit :: (E, V) -> V)>>(){\n    (main/parse<()>(0));\n  }))","traced":{"any":[]}},
{"op":"Jump","target":138}]},
{"label":"229([method_apply@[mcore:[#455]#866]#872])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Jump","target":224}]},
{"label":"230([#889])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Jump","target":225}]},
{"label":"231([#893])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"Const","format":"string","out":2,"value":"Name(main/@tag-read)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Const","format":"string","out":3,"value":"Name(main/@tag-stop)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Jump","target":228}]},
{"label":"232([k@[k@[mcore:[#455]#866]#882]#885])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"New","out":2,"targets":[230],"args":{"any":[]},"tags":["apply"]},
{"op":"New","out":1,"targets":[231],"args":{"any":[1]},"tags":["apply"]},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Const","format":"string","out":4,"value":"Name(main/@tag-stop)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"Swap","a":2,"b":1},
{"op":"Jump","target":26}]},
{"label":"233([k@[mcore:[#455]#866]#882])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Push","target":232,"args":{"any":[1]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Jump","target":277}]},
{"label":"234([mcore:[#455]#866])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: main/@handle-stop<(),<(div :: X),(main/emit :: (E, V) -> V)>,()>((main/@Hnd-stop<<(div :: X),(main/emit :: (E, V) -> V)>,()>(3, (forall<a> std/core/hnd/Clause0<a,(main/stop :: (E, V) -> V),<(div :: X),(main/emit :: (E, V) -> V)>,()>((fn<<(div :: X),(main/emit :: (E, V) -> V)>>(m: (hnd/marker :: (E, V) -> V)<<(div :: X),(main/emit :: (E, V) -> V)>,()>, @_wildcard-x730_16: (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>){\n      (std/core/hnd/yield-to<a,<(div :: X),(main/emit :: (E, V) -> V)>,()>(m, (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(k: ((hnd/resume-result :: (V, V) -> V)<a,()>) -> <(div :: X),(main/emit :: (E, V) -> V)> ()){\n          (std/core/hnd/protect<(),a,<(div :: X),(main/emit :: (E, V) -> V)>,()>(std/core/types/Unit, (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(@_wildcard-x730_55: (), r: (a) -> <(div :: X),(main/emit :: (E, V) -> V)> ()){\n              std/core/types/Unit;\n            }), k));\n        })));\n    }))))), (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(@x: ()){\n    @x;\n  }), (fn<<(main/stop :: (E, V) -> V),(div :: X),(main/emit :: (E, V) -> V)>>(){\n    (main/feed<<(div :: X),(main/emit :: (E, V) -> V)>>(n, (fn<<(main/read :: (E, V) -> V),(main/stop :: (E, V) -> V),(div :: X),(main/emit :: (E, V) -> V)>>(){\n        (main/parse<()>(0));\n      })));\n  }))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: main/@Hnd-stop<<(div :: X),(main/emit :: (E, V) -> V)>,()>(3, (forall<a> std/core/hnd/Clause0<a,(main/stop :: (E, V) -> V),<(div :: X),(main/emit :: (E, V) -> V)>,()>((fn<<(div :: X),(main/emit :: (E, V) -> V)>>(m: (hnd/marker :: (E, V) -> V)<<(div :: X),(main/emit :: (E, V) -> V)>,()>, @_wildcard-x730_16: (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>){\n    (std/core/hnd/yield-to<a,<(div :: X),(main/emit :: (E, V) -> V)>,()>(m, (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(k: ((hnd/resume-result :: (V, V) -> V)<a,()>) -> <(div :: X),(main/emit :: (E, V) -> V)> ()){\n        (std/core/hnd/protect<(),a,<(div :: X),(main/emit :: (E, V) -> V)>,()>(std/core/types/Unit, (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(@_wildcard-x730_55: (), r: (a) -> <(div :: X),(main/emit :: (E, V) -> V)> ()){\n            std/core/types/Unit;\n          }), k));\n      })));\n  }))))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: 3","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":3},
{"op":"Debug","msg":"BGN: genExpr: forall<a> std/core/hnd/Clause0<a,(main/stop :: (E, V) -> V),<(div :: X),(main/emit :: (E, V) -> V)>,()>((fn<<(div :: X),(main/emit :: (E, V) -> V)>>(m: (hnd/marker :: (E, V) -> V)<<(div :: X),(main/emit :: (E, V) -> V)>,()>, @_wildcard-x730_16: (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>){\n  (std/core/hnd/yield-to<a,<(div :: X),(main/emit :: (E, V) -> V)>,()>(m, (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(k: ((hnd/resume-result :: (V, V) -> V)<a,()>) -> <(div :: X),(main/emit :: (E, V) -> V)> ()){\n      (std/core/hnd/protect<(),a,<(div :: X),(main/emit :: (E, V) -> V)>,()>(std/core/types/Unit, (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(@_wildcard-x730_55: (), r: (a) -> <(div :: X),(main/emit :: (E, V) -> V)> ()){\n          std/core/types/Unit;\n        }), k));\n    })));\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Clause0<a,(main/stop :: (E, V) -> V),<(div :: X),(main/emit :: (E, V) -> V)>,()>((fn<<(div :: X),(main/emit :: (E, V) -> V)>>(m: (hnd/marker :: (E, V) -> V)<<(div :: X),(main/emit :: (E, V) -> V)>,()>, @_wildcard-x730_16: (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>){\n  (std/core/hnd/yield-to<a,<(div :: X),(main/emit :: (E, V) -> V)>,()>(m, (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(k: ((hnd/resume-result :: (V, V) -> V)<717,()>) -> <(div :: X),(main/emit :: (E, V) -> V)> ()){\n      (std/core/hnd/protect<(),a,<(div :: X),(main/emit :: (E, V) -> V)>,()>(std/core/types/Unit, (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(@_wildcard-x730_55: (), r: (717) -> <(div :: X),(main/emit :: (E, V) -> V)> ()){\n          std/core/types/Unit;\n        }), k));\n    })));\n}))","traced":{"any":[]}},
{"op":"New","out":1,"targets":[229],"args":{"any":[]},"tags":["apply"]},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Push","target":233,"args":{"any":[3,0]}},
{"op":"Copy","from":1,"to":0},
{"op":"Copy","from":2,"to":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Clause0<a,(main/stop :: (E, V) -> V),<(div :: X),(main/emit :: (E, V) -> V)>,()>((fn<<(div :: X),(main/emit :: (E, V) -> V)>>(m: (hnd/marker :: (E, V) -> V)<<(div :: X),(main/emit :: (E, V) -> V)>,()>, @_wildcard-x730_16: (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>){\n  (std/core/hnd/yield-to<a,<(div :: X),(main/emit :: (E, V) -> V)>,()>(m, (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(k: ((hnd/resume-result :: (V, V) -> V)<717,()>) -> <(div :: X),(main/emit :: (E, V) -> V)> ()){\n      (std/core/hnd/protect<(),a,<(div :: X),(main/emit :: (E, V) -> V)>,()>(std/core/types/Unit, (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(@_wildcard-x730_55: (), r: (717) -> <(div :: X),(main/emit :: (E, V) -> V)> ()){\n          std/core/types/Unit;\n        }), k));\n    })));\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: forall<a> std/core/hnd/Clause0<a,(main/stop :: (E, V) -> V),<(div :: X),(main/emit :: (E, V) -> V)>,()>((fn<<(div :: X),(main/emit :: (E, V) -> V)>>(m: (hnd/marker :: (E, V) -> V)<<(div :: X),(main/emit :: (E, V) -> V)>,()>, @_wildcard-x730_16: (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>){\n  (std/core/hnd/yield-to<a,<(div :: X),(main/emit :: (E, V) -> V)>,()>(m, (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(k: ((hnd/resume-result :: (V, V) -> V)<a,()>) -> <(div :: X),(main/emit :: (E, V) -> V)> ()){\n      (std/core/hnd/protect<(),a,<(div :: X),(main/emit :: (E, V) -> V)>,()>(std/core/types/Unit, (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(@_wildcard-x730_55: (), r: (a) -> <(div :: X),(main/emit :: (E, V) -> V)> ()){\n          std/core/types/Unit;\n        }), k));\n    })));\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: 3","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: main/@Hnd-stop<<(div :: X),(main/emit :: (E, V) -> V)>,()>(3, (forall<a> std/core/hnd/Clause0<a,(main/stop :: (E, V) -> V),<(div :: X),(main/emit :: (E, V) -> V)>,()>((fn<<(div :: X),(main/emit :: (E, V) -> V)>>(m: (hnd/marker :: (E, V) -> V)<<(div :: X),(main/emit :: (E, V) -> V)>,()>, @_wildcard-x730_16: (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>){\n    (std/core/hnd/yield-to<a,<(div :: X),(main/emit :: (E, V) -> V)>,()>(m, (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(k: ((hnd/resume-result :: (V, V) -> V)<a,()>) -> <(div :: X),(main/emit :: (E, V) -> V)> ()){\n        (std/core/hnd/protect<(),a,<(div :: X),(main/emit :: (E, V) -> V)>,()>(std/core/types/Unit, (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(@_wildcard-x730_55: (), r: (a) -> <(div :: X),(main/emit :: (E, V) -> V)> ()){\n            std/core/types/Unit;\n          }), k));\n      })));\n  }))))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: main/@handle-stop<(),<(div :: X),(main/emit :: (E, V) -> V)>,()>((main/@Hnd-stop<<(div :: X),(main/emit :: (E, V) -> V)>,()>(3, (forall<a> std/core/hnd/Clause0<a,(main/stop :: (E, V) -> V),<(div :: X),(main/emit :: (E, V) -> V)>,()>((fn<<(div :: X),(main/emit :: (E, V) -> V)>>(m: (hnd/marker :: (E, V) -> V)<<(div :: X),(main/emit :: (E, V) -> V)>,()>, @_wildcard-x730_16: (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>){\n      (std/core/hnd/yield-to<a,<(div :: X),(main/emit :: (E, V) -> V)>,()>(m, (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(k: ((hnd/resume-result :: (V, V) -> V)<a,()>) -> <(div :: X),(main/emit :: (E, V) -> V)> ()){\n          (std/core/hnd/protect<(),a,<(div :: X),(main/emit :: (E, V) -> V)>,()>(std/core/types/Unit, (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(@_wildcard-x730_55: (), r: (a) -> <(div :: X),(main/emit :: (E, V) -> V)> ()){\n              std/core/types/Unit;\n            }), k));\n        })));\n    }))))), (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(@x: ()){\n    @x;\n  }), (fn<<(main/stop :: (E, V) -> V),(div :: X),(main/emit :: (E, V) -> V)>>(){\n    (main/feed<<(div :: X),(main/emit :: (E, V) -> V)>>(n, (fn<<(main/read :: (E, V) -> V),(main/stop :: (E, V) -> V),(div :: X),(main/emit :: (E, V) -> V)>>(){\n        (main/parse<()>(0));\n      })));\n  }))","traced":{"any":[]}},
{"op":"Jump","target":217}]},
{"label":"235([method_apply@[mcore:[#457]#911]#913])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"Const","format":"string","out":2,"value":"Name(main/@tag-read)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Const","format":"string","out":3,"value":"Name(main/@tag-stop)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":3,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Jump","target":234}]},
{"label":"236([mcore:[#457]#911])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4]}},
{"op":"Debug","msg":"BGN: genExpr: main/sum<(div :: X)>((fn<<(div :: X),(main/emit :: (E, V) -> V)>>(){\n  (main/@handle-stop<(),<(div :: X),(main/emit :: (E, V) -> V)>,()>((main/@Hnd-stop<<(div :: X),(main/emit :: (E, V) -> V)>,()>(3, (forall<a> std/core/hnd/Clause0<a,(main/stop :: (E, V) -> V),<(div :: X),(main/emit :: (E, V) -> V)>,()>((fn<<(div :: X),(main/emit :: (E, V) -> V)>>(m: (hnd/marker :: (E, V) -> V)<<(div :: X),(main/emit :: (E, V) -> V)>,()>, @_wildcard-x730_16: (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>){\n        (std/core/hnd/yield-to<a,<(div :: X),(main/emit :: (E, V) -> V)>,()>(m, (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(k: ((hnd/resume-result :: (V, V) -> V)<a,()>) -> <(div :: X),(main/emit :: (E, V) -> V)> ()){\n            (std/core/hnd/protect<(),a,<(div :: X),(main/emit :: (E, V) -> V)>,()>(std/core/types/Unit, (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(@_wildcard-x730_55: (), r: (a) -> <(div :: X),(main/emit :: (E, V) -> V)> ()){\n                std/core/types/Unit;\n              }), k));\n          })));\n      }))))), (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(@x: ()){\n      @x;\n    }), (fn<<(main/stop :: (E, V) -> V),(div :: X),(main/emit :: (E, V) -> V)>>(){\n      (main/feed<<(div :: X),(main/emit :: (E, V) -> V)>>(n, (fn<<(main/read :: (E, V) -> V),(main/stop :: (E, V) -> V),(div :: X),(main/emit :: (E, V) -> V)>>(){\n          (main/parse<()>(0));\n        })));\n    })));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[235],"args":{"any":[0]},"tags":["apply"]},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"Const","format":"string","out":2,"value":"Name(main/@tag-emit)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: main/sum<(div :: X)>((fn<<(div :: X),(main/emit :: (E, V) -> V)>>(){\n  (main/@handle-stop<(),<(div :: X),(main/emit :: (E, V) -> V)>,()>((main/@Hnd-stop<<(div :: X),(main/emit :: (E, V) -> V)>,()>(3, (forall<a> std/core/hnd/Clause0<a,(main/stop :: (E, V) -> V),<(div :: X),(main/emit :: (E, V) -> V)>,()>((fn<<(div :: X),(main/emit :: (E, V) -> V)>>(m: (hnd/marker :: (E, V) -> V)<<(div :: X),(main/emit :: (E, V) -> V)>,()>, @_wildcard-x730_16: (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>){\n        (std/core/hnd/yield-to<a,<(div :: X),(main/emit :: (E, V) -> V)>,()>(m, (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(k: ((hnd/resume-result :: (V, V) -> V)<a,()>) -> <(div :: X),(main/emit :: (E, V) -> V)> ()){\n            (std/core/hnd/protect<(),a,<(div :: X),(main/emit :: (E, V) -> V)>,()>(std/core/types/Unit, (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(@_wildcard-x730_55: (), r: (a) -> <(div :: X),(main/emit :: (E, V) -> V)> ()){\n                std/core/types/Unit;\n              }), k));\n          })));\n      }))))), (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(@x: ()){\n      @x;\n    }), (fn<<(main/stop :: (E, V) -> V),(div :: X),(main/emit :: (E, V) -> V)>>(){\n      (main/feed<<(div :: X),(main/emit :: (E, V) -> V)>>(n, (fn<<(main/read :: (E, V) -> V),(main/stop :: (E, V) -> V),(div :: X),(main/emit :: (E, V) -> V)>>(){\n          (main/parse<()>(0));\n        })));\n    })));\n}))","traced":{"any":[]}},
{"op":"Jump","target":216}]},
{"label":"237([mcore:[#458]#931])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/os/env)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"CallLib","lib":0,"symbol":"std/os/env/get-args"}]},
{"label":"238([mcore:[#460]#935])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/int)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"CallLib","lib":2,"symbol":"std/core/int/parse-int"}]},
{"label":"239([mcore:[#469]#941])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"std/core/hnd/Clause0"}]},
{"label":"240([mcore:[#471]#946])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"CallLib","lib":2,"symbol":"std/core/hnd/yield-to"}]},
{"label":"241([mcore:[#474]#952])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"CallLib","lib":3,"symbol":"std/core/hnd/protect"}]},
{"label":"242([mcore:[#477]#959])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Construct","out":0,"type":"Unit","tag":"unit","args":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"243([method_apply@[mcore:[#480]#961]#967])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Jump","target":242}]},
{"label":"244([mcore:[#480]#961])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/protect<(),a,<(div :: X),(main/emit :: (E, V) -> V)>,()>(std/core/types/Unit, (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(@_wildcard-x730_55: (), r: (717) -> <(div :: X),(main/emit :: (E, V) -> V)> ()){\n    std/core/types/Unit;\n  }), k)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/Unit","traced":{"any":[]}},
{"op":"Construct","out":1,"type":"Unit","tag":"unit","args":{"any":[]}},
{"op":"New","out":2,"targets":[243],"args":{"any":[]},"tags":["apply"]},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":0,"b":1},
{"op":"Swap","a":2,"b":1},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/Unit","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/protect<(),a,<(div :: X),(main/emit :: (E, V) -> V)>,()>(std/core/types/Unit, (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(@_wildcard-x730_55: (), r: (717) -> <(div :: X),(main/emit :: (E, V) -> V)> ()){\n    std/core/types/Unit;\n  }), k)","traced":{"any":[]}},
{"op":"Jump","target":241}]},
{"label":"245([method_apply@[mcore:[#482]#973]#976])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"Jump","target":244}]},
{"label":"246([mcore:[#482]#973])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/yield-to<a,<(div :: X),(main/emit :: (E, V) -> V)>,()>(m, (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(k: ((hnd/resume-result :: (V, V) -> V)<717,()>) -> <(div :: X),(main/emit :: (E, V) -> V)> ()){\n    (std/core/hnd/protect<(),a,<(div :: X),(main/emit :: (E, V) -> V)>,()>(std/core/types/Unit, (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(@_wildcard-x730_55: (), r: (717) -> <(div :: X),(main/emit :: (E, V) -> V)> ()){\n        std/core/types/Unit;\n      }), k));\n  }))","traced":{"any":[]}},
{"op":"New","out":1,"targets":[245],"args":{"any":[]},"tags":["apply"]},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/yield-to<a,<(div :: X),(main/emit :: (E, V) -> V)>,()>(m, (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(k: ((hnd/resume-result :: (V, V) -> V)<717,()>) -> <(div :: X),(main/emit :: (E, V) -> V)> ()){\n    (std/core/hnd/protect<(),a,<(div :: X),(main/emit :: (E, V) -> V)>,()>(std/core/types/Unit, (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(@_wildcard-x730_55: (), r: (717) -> <(div :: X),(main/emit :: (E, V) -> V)> ()){\n        std/core/types/Unit;\n      }), k));\n  }))","traced":{"any":[]}},
{"op":"Jump","target":240}]},
{"label":"247([mcore:[#486]#985])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"248([mcore:[#492]#986])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: main/parse<()>(0)","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: 0","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":0},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: 0","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: main/parse<()>(0)","traced":{"any":[]}},
{"op":"Jump","target":201}]},
{"label":"249([method_apply@[k@[mcore:[#494]#992]#994]#997])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Jump","target":248}]},
{"label":"250([k@[mcore:[#494]#992]#994])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"New","out":1,"targets":[249],"args":{"any":[]},"tags":["apply"]},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Const","format":"string","out":3,"value":"Name(main/@tag-read)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Const","format":"string","out":4,"value":"Name(main/@tag-stop)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"Jump","target":138}]},
{"label":"251([#1013])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"252([#1014])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"m@10003\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"maybe\\\"\"}}),(x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"value\\\"60\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x: int) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"value\\\\\\\"60\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@0,{\"op\": \"Var\",\"id\": \"m@10003\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"maybe\\\"\"}}),(x,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"value\\\"60\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x: int) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"value\\\\\\\"60\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"253([match_def@[mcore:[#494]#992]#1012])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"m@10003\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"maybe\\\"\"}}: \"std/core/types/maybe\".\"std/core/types/Just\"(({\"op\": \"Var\",\"id\": \"@\\\"value\\\"60\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"m@10003\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"maybe\\\"\"}}: \"std/core/types/maybe\".\"std/core/types/Just\"(({\"op\": \"Var\",\"id\": \"@\\\"value\\\"60\",\"type\": {\"op\": \"Top\"}}))","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/maybe","scrutinee":0,"clauses":[{"tag":"std/core/types/Just","target":252,"args":{"any":[0]}}],"default":{"tag":"27f4ad1c-0eaf-43c9-bffa-0472e2b3b921#[Missing Tag#1398]","target":251,"args":{"any":[]}}}]},
{"label":"254([#1015])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"m@10003\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"maybe\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: 10","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":10},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: 10","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat,{\"op\": \"Var\",\"id\": \"m@10003\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"maybe\\\"\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"255([mcore:[#494]#992])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: main/feed<<(div :: X),(main/emit :: (E, V) -> V)>>((match (m@10003) {\n    ((std/core/types/Nothing() : (maybe :: V -> V)<int> ) as @pat: ((maybe :: V -> V)<int>))\n       -> 10;\n    ((@skip std/core/types/Just((x: int) : int) : (maybe :: V -> V)<int> ) as @pat@0: ((maybe :: V -> V)<int>))\n       -> x;\n  }), (fn<<(main/read :: (E, V) -> V),(main/stop :: (E, V) -> V),(div :: X),(main/emit :: (E, V) -> V)>>(){\n    (main/parse<()>(0));\n  }))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (m@10003) {\n  ((std/core/types/Nothing() : (maybe :: V -> V)<int> ) as @pat: ((maybe :: V -> V)<int>))\n     -> 10;\n  ((@skip std/core/types/Just((x: int) : int) : (maybe :: V -> V)<int> ) as @pat@0: ((maybe :: V -> V)<int>))\n     -> x;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"m@10003\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"maybe\\\"\"}}: \"std/core/types/maybe\".\"std/core/types/Nothing\"(())","traced":{"any":[]}},
{"op":"Push","target":250,"args":{"any":[]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"m@10003\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"maybe\\\"\"}}: \"std/core/types/maybe\".\"std/core/types/Nothing\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (m@10003) {\n  ((std/core/types/Nothing() : (maybe :: V -> V)<int> ) as @pat: ((maybe :: V -> V)<int>))\n     -> 10;\n  ((@skip std/core/types/Just((x: int) : int) : (maybe :: V -> V)<int> ) as @pat@0: ((maybe :: V -> V)<int>))\n     -> x;\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: main/feed<<(div :: X),(main/emit :: (E, V) -> V)>>((match (m@10003) {\n    ((std/core/types/Nothing() : (maybe :: V -> V)<int> ) as @pat: ((maybe :: V -> V)<int>))\n       -> 10;\n    ((@skip std/core/types/Just((x: int) : int) : (maybe :: V -> V)<int> ) as @pat@0: ((maybe :: V -> V)<int>))\n       -> x;\n  }), (fn<<(main/read :: (E, V) -> V),(main/stop :: (E, V) -> V),(div :: X),(main/emit :: (E, V) -> V)>>(){\n    (main/parse<()>(0));\n  }))","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/maybe","scrutinee":0,"clauses":[{"tag":"std/core/types/Nothing","target":254,"args":{"any":[]}}],"default":{"tag":"27f4ad1c-0eaf-43c9-bffa-0472e2b3b921#[Missing Tag#1399]","target":253,"args":{"any":[]}}}]},
{"label":"256([method_apply@[mcore:[#496]#1018]#1024])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Jump","target":246}]},
{"label":"257([#1041])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Jump","target":247}]},
{"label":"258([#1045])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"Const","format":"string","out":2,"value":"Name(main/@tag-read)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Const","format":"string","out":3,"value":"Name(main/@tag-stop)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":0,"b":1},
{"op":"Jump","target":255}]},
{"label":"259([k@[k@[mcore:[#496]#1018]#1034]#1037])",
"frameDescriptor":{"regs_any":5},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"New","out":2,"targets":[257],"args":{"any":[]},"tags":["apply"]},
{"op":"New","out":1,"targets":[258],"args":{"any":[1]},"tags":["apply"]},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Const","format":"string","out":4,"value":"Name(main/@tag-stop)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[4]},"in":{"any":[4]}},
{"op":"Swap","a":2,"b":1},
{"op":"Jump","target":26}]},
{"label":"260([k@[mcore:[#496]#1018]#1034])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Push","target":259,"args":{"any":[1]}},
{"op":"Copy","from":0,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Jump","target":277}]},
{"label":"261([mcore:[#496]#1018])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3]}},
{"op":"Debug","msg":"BGN: genExpr: main/@handle-stop<(),<(div :: X),(main/emit :: (E, V) -> V)>,()>((main/@Hnd-stop<<(div :: X),(main/emit :: (E, V) -> V)>,()>(3, (forall<a> std/core/hnd/Clause0<a,(main/stop :: (E, V) -> V),<(div :: X),(main/emit :: (E, V) -> V)>,()>((fn<<(div :: X),(main/emit :: (E, V) -> V)>>(m: (hnd/marker :: (E, V) -> V)<<(div :: X),(main/emit :: (E, V) -> V)>,()>, @_wildcard-x730_16: (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>){\n      (std/core/hnd/yield-to<a,<(div :: X),(main/emit :: (E, V) -> V)>,()>(m, (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(k: ((hnd/resume-result :: (V, V) -> V)<a,()>) -> <(div :: X),(main/emit :: (E, V) -> V)> ()){\n          (std/core/hnd/protect<(),a,<(div :: X),(main/emit :: (E, V) -> V)>,()>(std/core/types/Unit, (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(@_wildcard-x730_55: (), r: (a) -> <(div :: X),(main/emit :: (E, V) -> V)> ()){\n              std/core/types/Unit;\n            }), k));\n        })));\n    }))))), (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(@x: ()){\n    @x;\n  }), (fn<<(main/stop :: (E, V) -> V),(div :: X),(main/emit :: (E, V) -> V)>>(){\n    (main/feed<<(div :: X),(main/emit :: (E, V) -> V)>>((match (m@10003) {\n        ((std/core/types/Nothing() : (maybe :: V -> V)<int> ) as @pat: ((maybe :: V -> V)<int>))\n           -> 10;\n        ((@skip std/core/types/Just((x: int) : int) : (maybe :: V -> V)<int> ) as @pat@0: ((maybe :: V -> V)<int>))\n           -> x;\n      }), (fn<<(main/read :: (E, V) -> V),(main/stop :: (E, V) -> V),(div :: X),(main/emit :: (E, V) -> V)>>(){\n        (main/parse<()>(0));\n      })));\n  }))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: main/@Hnd-stop<<(div :: X),(main/emit :: (E, V) -> V)>,()>(3, (forall<a> std/core/hnd/Clause0<a,(main/stop :: (E, V) -> V),<(div :: X),(main/emit :: (E, V) -> V)>,()>((fn<<(div :: X),(main/emit :: (E, V) -> V)>>(m: (hnd/marker :: (E, V) -> V)<<(div :: X),(main/emit :: (E, V) -> V)>,()>, @_wildcard-x730_16: (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>){\n    (std/core/hnd/yield-to<a,<(div :: X),(main/emit :: (E, V) -> V)>,()>(m, (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(k: ((hnd/resume-result :: (V, V) -> V)<a,()>) -> <(div :: X),(main/emit :: (E, V) -> V)> ()){\n        (std/core/hnd/protect<(),a,<(div :: X),(main/emit :: (E, V) -> V)>,()>(std/core/types/Unit, (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(@_wildcard-x730_55: (), r: (a) -> <(div :: X),(main/emit :: (E, V) -> V)> ()){\n            std/core/types/Unit;\n          }), k));\n      })));\n  }))))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: 3","traced":{"any":[]}},
{"op":"Const","format":"int","out":0,"value":3},
{"op":"Debug","msg":"BGN: genExpr: forall<a> std/core/hnd/Clause0<a,(main/stop :: (E, V) -> V),<(div :: X),(main/emit :: (E, V) -> V)>,()>((fn<<(div :: X),(main/emit :: (E, V) -> V)>>(m: (hnd/marker :: (E, V) -> V)<<(div :: X),(main/emit :: (E, V) -> V)>,()>, @_wildcard-x730_16: (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>){\n  (std/core/hnd/yield-to<a,<(div :: X),(main/emit :: (E, V) -> V)>,()>(m, (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(k: ((hnd/resume-result :: (V, V) -> V)<a,()>) -> <(div :: X),(main/emit :: (E, V) -> V)> ()){\n      (std/core/hnd/protect<(),a,<(div :: X),(main/emit :: (E, V) -> V)>,()>(std/core/types/Unit, (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(@_wildcard-x730_55: (), r: (a) -> <(div :: X),(main/emit :: (E, V) -> V)> ()){\n          std/core/types/Unit;\n        }), k));\n    })));\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Clause0<a,(main/stop :: (E, V) -> V),<(div :: X),(main/emit :: (E, V) -> V)>,()>((fn<<(div :: X),(main/emit :: (E, V) -> V)>>(m: (hnd/marker :: (E, V) -> V)<<(div :: X),(main/emit :: (E, V) -> V)>,()>, @_wildcard-x730_16: (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>){\n  (std/core/hnd/yield-to<a,<(div :: X),(main/emit :: (E, V) -> V)>,()>(m, (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(k: ((hnd/resume-result :: (V, V) -> V)<717,()>) -> <(div :: X),(main/emit :: (E, V) -> V)> ()){\n      (std/core/hnd/protect<(),a,<(div :: X),(main/emit :: (E, V) -> V)>,()>(std/core/types/Unit, (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(@_wildcard-x730_55: (), r: (717) -> <(div :: X),(main/emit :: (E, V) -> V)> ()){\n          std/core/types/Unit;\n        }), k));\n    })));\n}))","traced":{"any":[]}},
{"op":"New","out":2,"targets":[256],"args":{"any":[]},"tags":["apply"]},
{"op":"Const","format":"string","out":3,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Push","target":260,"args":{"any":[1,0]}},
{"op":"Copy","from":3,"to":1},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Clause0<a,(main/stop :: (E, V) -> V),<(div :: X),(main/emit :: (E, V) -> V)>,()>((fn<<(div :: X),(main/emit :: (E, V) -> V)>>(m: (hnd/marker :: (E, V) -> V)<<(div :: X),(main/emit :: (E, V) -> V)>,()>, @_wildcard-x730_16: (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>){\n  (std/core/hnd/yield-to<a,<(div :: X),(main/emit :: (E, V) -> V)>,()>(m, (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(k: ((hnd/resume-result :: (V, V) -> V)<717,()>) -> <(div :: X),(main/emit :: (E, V) -> V)> ()){\n      (std/core/hnd/protect<(),a,<(div :: X),(main/emit :: (E, V) -> V)>,()>(std/core/types/Unit, (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(@_wildcard-x730_55: (), r: (717) -> <(div :: X),(main/emit :: (E, V) -> V)> ()){\n          std/core/types/Unit;\n        }), k));\n    })));\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: forall<a> std/core/hnd/Clause0<a,(main/stop :: (E, V) -> V),<(div :: X),(main/emit :: (E, V) -> V)>,()>((fn<<(div :: X),(main/emit :: (E, V) -> V)>>(m: (hnd/marker :: (E, V) -> V)<<(div :: X),(main/emit :: (E, V) -> V)>,()>, @_wildcard-x730_16: (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>){\n  (std/core/hnd/yield-to<a,<(div :: X),(main/emit :: (E, V) -> V)>,()>(m, (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(k: ((hnd/resume-result :: (V, V) -> V)<a,()>) -> <(div :: X),(main/emit :: (E, V) -> V)> ()){\n      (std/core/hnd/protect<(),a,<(div :: X),(main/emit :: (E, V) -> V)>,()>(std/core/types/Unit, (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(@_wildcard-x730_55: (), r: (a) -> <(div :: X),(main/emit :: (E, V) -> V)> ()){\n          std/core/types/Unit;\n        }), k));\n    })));\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: 3","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: main/@Hnd-stop<<(div :: X),(main/emit :: (E, V) -> V)>,()>(3, (forall<a> std/core/hnd/Clause0<a,(main/stop :: (E, V) -> V),<(div :: X),(main/emit :: (E, V) -> V)>,()>((fn<<(div :: X),(main/emit :: (E, V) -> V)>>(m: (hnd/marker :: (E, V) -> V)<<(div :: X),(main/emit :: (E, V) -> V)>,()>, @_wildcard-x730_16: (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>){\n    (std/core/hnd/yield-to<a,<(div :: X),(main/emit :: (E, V) -> V)>,()>(m, (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(k: ((hnd/resume-result :: (V, V) -> V)<a,()>) -> <(div :: X),(main/emit :: (E, V) -> V)> ()){\n        (std/core/hnd/protect<(),a,<(div :: X),(main/emit :: (E, V) -> V)>,()>(std/core/types/Unit, (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(@_wildcard-x730_55: (), r: (a) -> <(div :: X),(main/emit :: (E, V) -> V)> ()){\n            std/core/types/Unit;\n          }), k));\n      })));\n  }))))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: main/@handle-stop<(),<(div :: X),(main/emit :: (E, V) -> V)>,()>((main/@Hnd-stop<<(div :: X),(main/emit :: (E, V) -> V)>,()>(3, (forall<a> std/core/hnd/Clause0<a,(main/stop :: (E, V) -> V),<(div :: X),(main/emit :: (E, V) -> V)>,()>((fn<<(div :: X),(main/emit :: (E, V) -> V)>>(m: (hnd/marker :: (E, V) -> V)<<(div :: X),(main/emit :: (E, V) -> V)>,()>, @_wildcard-x730_16: (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>){\n      (std/core/hnd/yield-to<a,<(div :: X),(main/emit :: (E, V) -> V)>,()>(m, (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(k: ((hnd/resume-result :: (V, V) -> V)<a,()>) -> <(div :: X),(main/emit :: (E, V) -> V)> ()){\n          (std/core/hnd/protect<(),a,<(div :: X),(main/emit :: (E, V) -> V)>,()>(std/core/types/Unit, (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(@_wildcard-x730_55: (), r: (a) -> <(div :: X),(main/emit :: (E, V) -> V)> ()){\n              std/core/types/Unit;\n            }), k));\n        })));\n    }))))), (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(@x: ()){\n    @x;\n  }), (fn<<(main/stop :: (E, V) -> V),(div :: X),(main/emit :: (E, V) -> V)>>(){\n    (main/feed<<(div :: X),(main/emit :: (E, V) -> V)>>((match (m@10003) {\n        ((std/core/types/Nothing() : (maybe :: V -> V)<int> ) as @pat: ((maybe :: V -> V)<int>))\n           -> 10;\n        ((@skip std/core/types/Just((x: int) : int) : (maybe :: V -> V)<int> ) as @pat@0: ((maybe :: V -> V)<int>))\n           -> x;\n      }), (fn<<(main/read :: (E, V) -> V),(main/stop :: (E, V) -> V),(div :: X),(main/emit :: (E, V) -> V)>>(){\n        (main/parse<()>(0));\n      })));\n  }))","traced":{"any":[]}},
{"op":"Jump","target":239}]},
{"label":"262([mcore:[#498]#1063])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/console)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"std/core/console/printsln"}]},
{"label":"263([mcore:[#500]#1068])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/int)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"CallLib","lib":1,"symbol":"std/core/int/show"}]},
{"label":"264([#1092])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"Const","format":"string","out":2,"value":"Name(main/@tag-read)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Const","format":"string","out":3,"value":"Name(main/@tag-stop)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[3]},"in":{"any":[3]}},
{"op":"Swap","a":0,"b":1},
{"op":"Jump","target":261}]},
{"label":"265([k@[#1111]#1116])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/console)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"Jump","target":262}]},
{"label":"266([#1111])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/console/printsln((std/core/int/show(r@0)))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/int/show(r@0)","traced":{"any":[]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/int)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"Push","target":265,"args":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/int/show(r@0)","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/console/printsln((std/core/int/show(r@0)))","traced":{"any":[]}},
{"op":"Jump","target":263}]},
{"label":"267([k@[k@[k@[mcore:[#504]#1073]#1078]#1080]#1090])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"r@0\",\"type\": {\"op\": \"Int\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: main/sum<(div :: X)>((fn<<(div :: X),(main/emit :: (E, V) -> V)>>(){\n  (main/@handle-stop<(),<(div :: X),(main/emit :: (E, V) -> V)>,()>((main/@Hnd-stop<<(div :: X),(main/emit :: (E, V) -> V)>,()>(3, (forall<a> std/core/hnd/Clause0<a,(main/stop :: (E, V) -> V),<(div :: X),(main/emit :: (E, V) -> V)>,()>((fn<<(div :: X),(main/emit :: (E, V) -> V)>>(m: (hnd/marker :: (E, V) -> V)<<(div :: X),(main/emit :: (E, V) -> V)>,()>, @_wildcard-x730_16: (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>){\n        (std/core/hnd/yield-to<a,<(div :: X),(main/emit :: (E, V) -> V)>,()>(m, (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(k: ((hnd/resume-result :: (V, V) -> V)<a,()>) -> <(div :: X),(main/emit :: (E, V) -> V)> ()){\n            (std/core/hnd/protect<(),a,<(div :: X),(main/emit :: (E, V) -> V)>,()>(std/core/types/Unit, (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(@_wildcard-x730_55: (), r: (a) -> <(div :: X),(main/emit :: (E, V) -> V)> ()){\n                std/core/types/Unit;\n              }), k));\n          })));\n      }))))), (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(@x: ()){\n      @x;\n    }), (fn<<(main/stop :: (E, V) -> V),(div :: X),(main/emit :: (E, V) -> V)>>(){\n      (main/feed<<(div :: X),(main/emit :: (E, V) -> V)>>((match (m@10003) {\n          ((std/core/types/Nothing() : (maybe :: V -> V)<int> ) as @pat: ((maybe :: V -> V)<int>))\n             -> 10;\n          ((@skip std/core/types/Just((x: int) : int) : (maybe :: V -> V)<int> ) as @pat@0: ((maybe :: V -> V)<int>))\n             -> x;\n        }), (fn<<(main/read :: (E, V) -> V),(main/stop :: (E, V) -> V),(div :: X),(main/emit :: (E, V) -> V)>>(){\n          (main/parse<()>(0));\n        })));\n    })));\n}))","traced":{"any":[]}},
{"op":"New","out":0,"targets":[264],"args":{"any":[0]},"tags":["apply"]},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/hnd)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"Const","format":"string","out":2,"value":"Name(main/@tag-emit)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Push","target":266,"args":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: main/sum<(div :: X)>((fn<<(div :: X),(main/emit :: (E, V) -> V)>>(){\n  (main/@handle-stop<(),<(div :: X),(main/emit :: (E, V) -> V)>,()>((main/@Hnd-stop<<(div :: X),(main/emit :: (E, V) -> V)>,()>(3, (forall<a> std/core/hnd/Clause0<a,(main/stop :: (E, V) -> V),<(div :: X),(main/emit :: (E, V) -> V)>,()>((fn<<(div :: X),(main/emit :: (E, V) -> V)>>(m: (hnd/marker :: (E, V) -> V)<<(div :: X),(main/emit :: (E, V) -> V)>,()>, @_wildcard-x730_16: (hnd/ev :: ((E, V) -> V) -> V)<(main/stop :: (E, V) -> V)>){\n        (std/core/hnd/yield-to<a,<(div :: X),(main/emit :: (E, V) -> V)>,()>(m, (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(k: ((hnd/resume-result :: (V, V) -> V)<a,()>) -> <(div :: X),(main/emit :: (E, V) -> V)> ()){\n            (std/core/hnd/protect<(),a,<(div :: X),(main/emit :: (E, V) -> V)>,()>(std/core/types/Unit, (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(@_wildcard-x730_55: (), r: (a) -> <(div :: X),(main/emit :: (E, V) -> V)> ()){\n                std/core/types/Unit;\n              }), k));\n          })));\n      }))))), (fn<<(div :: X),(main/emit :: (E, V) -> V)>>(@x: ()){\n      @x;\n    }), (fn<<(main/stop :: (E, V) -> V),(div :: X),(main/emit :: (E, V) -> V)>>(){\n      (main/feed<<(div :: X),(main/emit :: (E, V) -> V)>>((match (m@10003) {\n          ((std/core/types/Nothing() : (maybe :: V -> V)<int> ) as @pat: ((maybe :: V -> V)<int>))\n             -> 10;\n          ((@skip std/core/types/Just((x: int) : int) : (maybe :: V -> V)<int> ) as @pat@0: ((maybe :: V -> V)<int>))\n             -> x;\n        }), (fn<<(main/read :: (E, V) -> V),(main/stop :: (E, V) -> V),(div :: X),(main/emit :: (E, V) -> V)>>(){\n          (main/parse<()>(0));\n        })));\n    })));\n}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"r@0\",\"type\": {\"op\": \"Int\"}}","traced":{"any":[]}},
{"op":"Jump","target":216}]},
{"label":"268([k@[k@[mcore:[#504]#1073]#1078]#1080])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/types/@None<bool>","traced":{"any":[]}},
{"op":"Const","format":"string","out":1,"value":"std/core/types/@None"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[1]},"in":{"any":[1]}},
{"op":"Const","format":"string","out":2,"value":"Name(import$std/core/int)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[2]},"in":{"any":[2]}},
{"op":"Push","target":267,"args":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/types/@None<bool>","traced":{"any":[]}},
{"op":"Jump","target":238}]},
{"label":"269([#1122])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"PrimOp","name":"non-exhaustive match","out":{"any":[0]},"in":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"270([#1123])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@1@0,{\"op\": \"Var\",\"id\": \"xs@10005\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"list\\\"\"}})]","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: \"\"","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":""},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: \"\"","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@1@0,{\"op\": \"Var\",\"id\": \"xs@10005\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"list\\\"\"}})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"271([match_def@[k@[mcore:[#504]#1073]#1078]#1121])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"xs@10005\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"list\\\"\"}}: \"std/core/types/list\".\"std/core/types/Nil\"(())","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"xs@10005\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"list\\\"\"}}: \"std/core/types/list\".\"std/core/types/Nil\"(())","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/list","scrutinee":0,"clauses":[{"tag":"std/core/types/Nil","target":270,"args":{"any":[]}}],"default":{"tag":"27f4ad1c-0eaf-43c9-bffa-0472e2b3b921#[Missing Tag#1400]","target":269,"args":{"any":[]}}}]},
{"label":"272([#1126])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"BGN: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"xs@10005\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"list\\\"\"}}),(x@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"head\\\"58\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x@0: string) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"head\\\\\\\"58\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@0@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"tail\\\"59\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"list\\\"\"}},\"annotation\": \"genTest: normal: (@pat@0@0: list<string>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"tail\\\\\\\"59\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"\\\\\\\"list\\\\\\\"\\\"}}\"})]","traced":{"any":[]}},
{"op":"Copy","from":1,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genBranch: [(@pat@1,{\"op\": \"Var\",\"id\": \"xs@10005\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"list\\\"\"}}),(x@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"head\\\"58\",\"type\": {\"op\": \"Top\"}},\"annotation\": \"genTest: normal: (x@0: string) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"head\\\\\\\"58\\\",\\\"type\\\": {\\\"op\\\": \\\"Top\\\"}}\"}),(@pat@0@0,{\"op\": \"DebugWrap\",\"inner\": {\"op\": \"Var\",\"id\": \"@\\\"tail\\\"59\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"list\\\"\"}},\"annotation\": \"genTest: normal: (@pat@0@0: list<string>) -> {\\\"op\\\": \\\"Var\\\",\\\"id\\\": \\\"@\\\\\\\"tail\\\\\\\"59\\\",\\\"type\\\": {\\\"op\\\": \\\"Ptr\\\",\\\"extern_ptr_name\\\": \\\"\\\\\\\"list\\\\\\\"\\\"}}\"})]","traced":{"any":[]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"273([k@[mcore:[#504]#1073]#1078])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"m@10003\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"maybe\\\"\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/int/parse-int((match (xs@10005) {\n    ((std/core/types/Cons((x@0: string) : string, (@pat@0@0: (list :: V -> V)<string>) : (list :: V -> V)<string>) : (list :: V -> V)<string> ) as @pat@1: ((list :: V -> V)<string>))\n       -> x@0;\n    ((@skip std/core/types/Nil() : (list :: V -> V)<string> ) as @pat@1@0: ((list :: V -> V)<string>))\n       -> \"\";\n  }), (std/core/types/@None<bool>))","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: match (xs@10005) {\n  ((std/core/types/Cons((x@0: string) : string, (@pat@0@0: (list :: V -> V)<string>) : (list :: V -> V)<string>) : (list :: V -> V)<string> ) as @pat@1: ((list :: V -> V)<string>))\n     -> x@0;\n  ((@skip std/core/types/Nil() : (list :: V -> V)<string> ) as @pat@1@0: ((list :: V -> V)<string>))\n     -> \"\";\n}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: ifCon@{\"op\": \"Var\",\"id\": \"xs@10005\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"list\\\"\"}}: \"std/core/types/list\".\"std/core/types/Cons\"(({\"op\": \"Var\",\"id\": \"@\\\"head\\\"58\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"tail\\\"59\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"list\\\"\"}}))","traced":{"any":[]}},
{"op":"Push","target":268,"args":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: ifCon@{\"op\": \"Var\",\"id\": \"xs@10005\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"list\\\"\"}}: \"std/core/types/list\".\"std/core/types/Cons\"(({\"op\": \"Var\",\"id\": \"@\\\"head\\\"58\",\"type\": {\"op\": \"Top\"}}, {\"op\": \"Var\",\"id\": \"@\\\"tail\\\"59\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"list\\\"\"}}))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch: guard-free case","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genMatch","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: match (xs@10005) {\n  ((std/core/types/Cons((x@0: string) : string, (@pat@0@0: (list :: V -> V)<string>) : (list :: V -> V)<string>) : (list :: V -> V)<string> ) as @pat@1: ((list :: V -> V)<string>))\n     -> x@0;\n  ((@skip std/core/types/Nil() : (list :: V -> V)<string> ) as @pat@1@0: ((list :: V -> V)<string>))\n     -> \"\";\n}","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/int/parse-int((match (xs@10005) {\n    ((std/core/types/Cons((x@0: string) : string, (@pat@0@0: (list :: V -> V)<string>) : (list :: V -> V)<string>) : (list :: V -> V)<string> ) as @pat@1: ((list :: V -> V)<string>))\n       -> x@0;\n    ((@skip std/core/types/Nil() : (list :: V -> V)<string> ) as @pat@1@0: ((list :: V -> V)<string>))\n       -> \"\";\n  }), (std/core/types/@None<bool>))","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"m@10003\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"maybe\\\"\"}}","traced":{"any":[]}},
{"op":"Match","type":"std/core/types/list","scrutinee":0,"clauses":[{"tag":"std/core/types/Cons","target":272,"args":{"any":[1,2]}}],"default":{"tag":"27f4ad1c-0eaf-43c9-bffa-0472e2b3b921#[Missing Tag#1401]","target":271,"args":{"any":[]}}}]},
{"label":"274([mcore:[#504]#1073])",
"frameDescriptor":{"regs_any":7},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1,2,3,4,5,6]}},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"xs@10005\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"list\\\"\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/os/env/get-args()","traced":{"any":[]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/os/env)"},
{"op":"PrimOp","name":"getGlobal(String): Ptr","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Push","target":273,"args":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/os/env/get-args()","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"xs@10005\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"\\\"list\\\"\"}}","traced":{"any":[]}},
{"op":"Jump","target":237}]},
{"label":"275([mcore:[#505]#773])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Construct","out":0,"type":"main/emit","tag":"main/@Hnd-emit","args":{"any":[0,1]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"276([mcore:[#506]#449])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Construct","out":0,"type":"main/read","tag":"main/@Hnd-read","args":{"any":[0,1]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"277([mcore:[#507]#217])",
"frameDescriptor":{"regs_any":2},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0,1]}},
{"op":"Construct","out":0,"type":"main/stop","tag":"main/@Hnd-stop","args":{"any":[0,1]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"278([k@[k@[#1337]#1346]#1355])",
"frameDescriptor":{"regs_any":3},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[1]},"in":{"any":[1,0]}},
{"op":"Const","format":"string","out":1,"value":"main/@tag-stop"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[1,0]}},
{"op":"Const","format":"string","out":0,"value":"ThisLib_f7da474b-0b26-4025-8069-b07132a13962"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[0,2]}},
{"op":"Copy","from":2,"to":0},
{"op":"Return","args":{"any":[0]}}]},
{"label":"279([k@[#1337]#1346])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[2]},"in":{"any":[2,0]}},
{"op":"Const","format":"string","out":2,"value":"main/@tag-read"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[2,0]}},
{"op":"Const","format":"string","out":0,"value":"Name(main/@tag-stop)"},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"main/@tag-stop\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Htag<(main/stop :: (E, V) -> V)>(\"stop@main\")","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: \"stop@main\"","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"stop@main"},
{"op":"Push","target":278,"args":{"any":[0,3]}},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: \"stop@main\"","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Htag<(main/stop :: (E, V) -> V)>(\"stop@main\")","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"main/@tag-stop\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}","traced":{"any":[]}},
{"op":"Jump","target":24}]},
{"label":"280([#1337])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[2]},"in":{"any":[2,0]}},
{"op":"Const","format":"string","out":2,"value":"main/@tag-emit"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[2,0]}},
{"op":"Const","format":"string","out":0,"value":"Name(main/@tag-read)"},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"main/@tag-read\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Htag<(main/read :: (E, V) -> V)>(\"read@main\")","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: \"read@main\"","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"read@main"},
{"op":"Push","target":279,"args":{"any":[1,0,3]}},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: \"read@main\"","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Htag<(main/read :: (E, V) -> V)>(\"read@main\")","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"main/@tag-read\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}","traced":{"any":[]}},
{"op":"Jump","target":21}]},
{"label":"281([k@[k@[k@[k@[#1290]#1300]#1310]#1320]#1330])",
"frameDescriptor":{"regs_any":4},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[2,0]}},
{"op":"Const","format":"string","out":0,"value":"Name(main/@tag-emit)"},
{"op":"Debug","msg":"BGN: Def of {\"op\": \"Var\",\"id\": \"main/@tag-emit\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: std/core/hnd/Htag<(main/emit :: (E, V) -> V)>(\"emit@main\")","traced":{"any":[]}},
{"op":"Debug","msg":"BGN: genExpr: \"emit@main\"","traced":{"any":[]}},
{"op":"Const","format":"string","out":2,"value":"emit@main"},
{"op":"Push","target":280,"args":{"any":[1,0,3]}},
{"op":"Copy","from":2,"to":0},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: \"emit@main\"","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: genExpr: std/core/hnd/Htag<(main/emit :: (E, V) -> V)>(\"emit@main\")","traced":{"any":[]}},
{"op":"Debug","msg":"AFTER TERMINATOR: END: Def of {\"op\": \"Var\",\"id\": \"main/@tag-emit\",\"type\": {\"op\": \"Ptr\",\"extern_ptr_name\": \"std/core/hnd/htag\"}}","traced":{"any":[]}},
{"op":"Jump","target":18}]},
{"label":"282([k@[k@[k@[#1290]#1300]#1310]#1320])",
"frameDescriptor":{"regs_any":16},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[2,0]}},
{"op":"Const","format":"string","out":0,"value":"[#183]"},
{"op":"Const","format":"path","out":2,"value":"$0/./std_os_env.rpyeffect"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[0,2]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/os/env)"},
{"op":"Push","target":281,"args":{"any":[1,0,3]}},
{"op":"LoadLib","path":2}]},
{"label":"283([k@[k@[#1290]#1300]#1310])",
"frameDescriptor":{"regs_any":16},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[2,0]}},
{"op":"Const","format":"string","out":0,"value":"[#182]"},
{"op":"Const","format":"path","out":2,"value":"$0/./std_core.rpyeffect"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[0,2]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core)"},
{"op":"Push","target":282,"args":{"any":[1,0,3]}},
{"op":"LoadLib","path":2}]},
{"label":"284([k@[#1290]#1300])",
"frameDescriptor":{"regs_any":16},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[2,0]}},
{"op":"Const","format":"string","out":0,"value":"[#181]"},
{"op":"Const","format":"path","out":2,"value":"$0/./std_core_console.rpyeffect"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[0,2]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/console)"},
{"op":"Push","target":283,"args":{"any":[1,0,3]}},
{"op":"LoadLib","path":2}]},
{"label":"285([#1290])",
"frameDescriptor":{"regs_any":16},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[2,0]}},
{"op":"Const","format":"string","out":0,"value":"[#180]"},
{"op":"Const","format":"path","out":2,"value":"$0/./std_core_delayed.rpyeffect"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[0,2]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/delayed)"},
{"op":"Push","target":284,"args":{"any":[1,0,3]}},
{"op":"LoadLib","path":2}]},
{"label":"286([k@[k@[k@[k@[#1240]#1250]#1260]#1270]#1280])",
"frameDescriptor":{"regs_any":16},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[2,0]}},
{"op":"Const","format":"string","out":0,"value":"[#179]"},
{"op":"Const","format":"path","out":2,"value":"$0/./std_core_debug.rpyeffect"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[0,2]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/debug)"},
{"op":"Push","target":285,"args":{"any":[1,0,3]}},
{"op":"LoadLib","path":2}]},
{"label":"287([k@[k@[k@[#1240]#1250]#1260]#1270])",
"frameDescriptor":{"regs_any":16},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[2,0]}},
{"op":"Const","format":"string","out":0,"value":"[#178]"},
{"op":"Const","format":"path","out":2,"value":"$0/./std_core_show.rpyeffect"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[0,2]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/show)"},
{"op":"Push","target":286,"args":{"any":[1,0,3]}},
{"op":"LoadLib","path":2}]},
{"label":"288([k@[k@[#1240]#1250]#1260])",
"frameDescriptor":{"regs_any":16},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[2,0]}},
{"op":"Const","format":"string","out":0,"value":"[#177]"},
{"op":"Const","format":"path","out":2,"value":"$0/./std_core_tuple.rpyeffect"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[0,2]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/tuple)"},
{"op":"Push","target":287,"args":{"any":[1,0,3]}},
{"op":"LoadLib","path":2}]},
{"label":"289([k@[#1240]#1250])",
"frameDescriptor":{"regs_any":16},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[2,0]}},
{"op":"Const","format":"string","out":0,"value":"[#176]"},
{"op":"Const","format":"path","out":2,"value":"$0/./std_core_either.rpyeffect"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[0,2]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/either)"},
{"op":"Push","target":288,"args":{"any":[1,0,3]}},
{"op":"LoadLib","path":2}]},
{"label":"290([#1240])",
"frameDescriptor":{"regs_any":16},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[2,0]}},
{"op":"Const","format":"string","out":0,"value":"[#175]"},
{"op":"Const","format":"path","out":2,"value":"$0/./std_core_maybe.rpyeffect"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[0,2]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/maybe)"},
{"op":"Push","target":289,"args":{"any":[1,0,3]}},
{"op":"LoadLib","path":2}]},
{"label":"291([k@[k@[k@[k@[#1190]#1200]#1210]#1220]#1230])",
"frameDescriptor":{"regs_any":16},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[2,0]}},
{"op":"Const","format":"string","out":0,"value":"[#174]"},
{"op":"Const","format":"path","out":2,"value":"$0/./std_core_list.rpyeffect"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[0,2]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/list)"},
{"op":"Push","target":290,"args":{"any":[1,0,3]}},
{"op":"LoadLib","path":2}]},
{"label":"292([k@[k@[k@[#1190]#1200]#1210]#1220])",
"frameDescriptor":{"regs_any":16},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[2,0]}},
{"op":"Const","format":"string","out":0,"value":"[#173]"},
{"op":"Const","format":"path","out":2,"value":"$0/./std_core_sslice.rpyeffect"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[0,2]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/sslice)"},
{"op":"Push","target":291,"args":{"any":[1,0,3]}},
{"op":"LoadLib","path":2}]},
{"label":"293([k@[k@[#1190]#1200]#1210])",
"frameDescriptor":{"regs_any":16},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[2,0]}},
{"op":"Const","format":"string","out":0,"value":"[#172]"},
{"op":"Const","format":"path","out":2,"value":"$0/./std_core_string.rpyeffect"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[0,2]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/string)"},
{"op":"Push","target":292,"args":{"any":[1,0,3]}},
{"op":"LoadLib","path":2}]},
{"label":"294([k@[#1190]#1200])",
"frameDescriptor":{"regs_any":16},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[2,0]}},
{"op":"Const","format":"string","out":0,"value":"[#171]"},
{"op":"Const","format":"path","out":2,"value":"$0/./std_core_vector.rpyeffect"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[0,2]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/vector)"},
{"op":"Push","target":293,"args":{"any":[1,0,3]}},
{"op":"LoadLib","path":2}]},
{"label":"295([#1190])",
"frameDescriptor":{"regs_any":16},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[2,0]}},
{"op":"Const","format":"string","out":0,"value":"[#170]"},
{"op":"Const","format":"path","out":2,"value":"$0/./std_core_int.rpyeffect"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[0,2]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/int)"},
{"op":"Push","target":294,"args":{"any":[1,0,3]}},
{"op":"LoadLib","path":2}]},
{"label":"296([k@[k@[k@[k@[#1140]#1150]#1160]#1170]#1180])",
"frameDescriptor":{"regs_any":16},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[2,0]}},
{"op":"Const","format":"string","out":0,"value":"[#169]"},
{"op":"Const","format":"path","out":2,"value":"$0/./std_core_char.rpyeffect"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[0,2]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/char)"},
{"op":"Push","target":295,"args":{"any":[1,0,3]}},
{"op":"LoadLib","path":2}]},
{"label":"297([k@[k@[k@[#1140]#1150]#1160]#1170])",
"frameDescriptor":{"regs_any":16},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[2,0]}},
{"op":"Const","format":"string","out":0,"value":"[#168]"},
{"op":"Const","format":"path","out":2,"value":"$0/./std_core_order.rpyeffect"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[0,2]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/order)"},
{"op":"Push","target":296,"args":{"any":[1,0,3]}},
{"op":"LoadLib","path":2}]},
{"label":"298([k@[k@[#1140]#1150]#1160])",
"frameDescriptor":{"regs_any":16},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[2,0]}},
{"op":"Const","format":"string","out":0,"value":"[#167]"},
{"op":"Const","format":"path","out":2,"value":"$0/./std_core_bool.rpyeffect"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[0,2]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/bool)"},
{"op":"Push","target":297,"args":{"any":[1,0,3]}},
{"op":"LoadLib","path":2}]},
{"label":"299([k@[#1140]#1150])",
"frameDescriptor":{"regs_any":16},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[1]},"in":{"any":[1,0]}},
{"op":"Const","format":"string","out":1,"value":"[#166]"},
{"op":"Const","format":"path","out":3,"value":"$0/./std_core_exn.rpyeffect"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[1]},"in":{"any":[1,3]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/exn)"},
{"op":"Push","target":298,"args":{"any":[0,1,2]}},
{"op":"LoadLib","path":3}]},
{"label":"300([#1140])",
"frameDescriptor":{"regs_any":16},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[1,0]}},
{"op":"Const","format":"string","out":0,"value":"[#165]"},
{"op":"Const","format":"path","out":1,"value":"$0/./std_core_hnd.rpyeffect"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[0]},"in":{"any":[0,1]}},
{"op":"Const","format":"string","out":0,"value":"Name(import$std/core/hnd)"},
{"op":"Push","target":299,"args":{"any":[0,2]}},
{"op":"LoadLib","path":1}]},
{"label":"301([mcore:[static initializers#594]#1130])",
"frameDescriptor":{"regs_any":16},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[0]}},
{"op":"Const","format":"string","out":1,"value":"[#164]"},
{"op":"Const","format":"path","out":2,"value":"$0/./std_core_types.rpyeffect"},
{"op":"PrimOp","name":"setGlobal(String, Ptr): Unit","out":{"any":[1]},"in":{"any":[1,2]}},
{"op":"Const","format":"string","out":1,"value":"Name(import$std/core/types)"},
{"op":"Push","target":300,"args":{"any":[1,0]}},
{"op":"LoadLib","path":2}]},
{"label":"302([k@[main entrypoint#2]#1365])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"Returned value","traced":{"any":[0]}},
{"op":"Const","format":"string","out":0,"value":"Undefined: is a library"},
{"op":"PrimOp","name":"panic(String): Bottom","out":{"any":[0]},"in":{"any":[0]}},
{"op":"Return","args":{"any":[0]}}]},
{"label":"303([main entrypoint#2])",
"frameDescriptor":{"regs_any":1},
"instructions":[{"op":"Debug","msg":"parameters","traced":{"any":[]}},
{"op":"Copy","from":-1,"to":0},
{"op":"Push","target":302,"args":{"any":[]}},
{"op":"Jump","target":301}]}],
"symbols":[{"name":"main/emit/@cfc","position":2},
{"name":"main/emit/@fun-emit","position":5},
{"name":"main/read/@cfc","position":8},
{"name":"main/read/@fun-read","position":11},
{"name":"main/stop/@cfc","position":14},
{"name":"main/stop/@ctl-stop","position":17},
{"name":"main/@handle-emit","position":20},
{"name":"main/@handle-read","position":23},
{"name":"main/@handle-stop","position":26},
{"name":"main/@select-emit","position":29},
{"name":"main/@select-read","position":32},
{"name":"main/@select-stop","position":35},
{"name":"main/dollar","position":36},
{"name":"main/newline","position":37},
{"name":"main/is-dollar","position":38},
{"name":"main/is-newline","position":39},
{"name":"main/stop","position":53},
{"name":"main/catch","position":67},
{"name":"main/emit","position":81},
{"name":"main/read","position":95},
{"name":"main/feed","position":138},
{"name":"main/parse","position":201},
{"name":"main/sum","position":216},
{"name":"main/run","position":236},
{"name":"main/main","position":274},
{"name":"main/@Hnd-emit","position":275},
{"name":"main/@Hnd-read","position":276},
{"name":"main/@Hnd-stop","position":277},
{"name":"$static-init","position":301},
{"name":"$entrypoint","position":303}],
"frameSize":{"regs_any":16}}