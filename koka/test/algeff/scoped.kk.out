[[3],[2,1],[1,2],[1,1,1]]
(state=12, [[3],[2,1],[1,2],[1,1,1]])
[(state=1, [3]),(state=5, [2,1]),(state=5, [1,2]),(state=9, [1,1,1])]
[[3]]
 
algeff/scoped/intshow: (x : (int, list<list<int>>)) -> string
algeff/scoped/listint/show: (xs : list<(int, list<int>)>) -> string
algeff/scoped/call: forall<a,e> (p : () -> <cutfail,div,nondet,nondet|e> a) -> <div,nondet|e> a
algeff/scoped/choice: forall<a,e> (p1 : () -> <nondet|e> a, p2 : () -> <nondet|e> a) -> <nondet|e> a
algeff/scoped/choices: forall<a,e> (() -> <nondet,nondet,state<int>|e> a) -> <nondet,state<int>|e> a
algeff/scoped/collect: forall<a,e> (action : () -> <div,nondet,nondet|e> a) -> <div,nondet|e> a
algeff/scoped/cut: () -> <cutfail,nondet> ()
algeff/scoped/cutfail: forall<a> () -> cutfail a
algeff/scoped/digit: () -> <nondet,symbol> string
algeff/scoped/digits: list<string>
algeff/scoped/expr: () -> <div,nondet,symbol> int
algeff/scoped/factor: () -> <div,nondet,symbol> int
algeff/scoped/fail: forall<a> () -> nondet a
algeff/scoped/flip: () -> nondet bool
algeff/scoped/get: forall<a> () -> (state<a>) a
algeff/scoped/global: forall<a,b,e> (s : a, action : () -> <div,nondet,state<a>|e> b) -> <div|e> (a, list<b>)
algeff/scoped/hcutfail: forall<a,e> (() -> <cutfail,nondet|e> a) -> <nondet|e> a
algeff/scoped/incr: (i : ? int) -> (state<int>) ()
algeff/scoped/knapsack: (w : int, vs : list<int>) -> <div,nondet> list<int>
algeff/scoped/local: forall<a,b,e> (s : a, action : () -> <div,nondet,state<a>|e> b) -> <div|e> list<(a, b)>
algeff/scoped/main: () -> <console,div> ()
algeff/scoped/many: forall<a,e> (p : () -> <div,nondet|e> a) -> <div,nondet|e> list<a>
algeff/scoped/many1: forall<a,e> (p : () -> <div,nondet|e> a) -> <div,nondet|e> list<a>
algeff/scoped/mymap: forall<a,b,e> (xs : list<a>, f : (a) -> e b) -> e list<b>
algeff/scoped/number: () -> <div,nondet,symbol> int
algeff/scoped/once: forall<a,e> (p : () -> <cutfail,div,nondet,nondet|e> a) -> <div,nondet|e> a
algeff/scoped/parse: forall<a,e> (input : string, action : () -> <nondet,symbol|e> a) -> <nondet|e> a
algeff/scoped/put: forall<a> (i : a) -> (state<a>) ()
algeff/scoped/select: forall<a> (xs : list<a>) -> nondet a
algeff/scoped/solutions: forall<a,e> (() -> <nondet|e> a) -> e list<a>
algeff/scoped/state: forall<a,b,e> (init : a, action : () -> <div,state<a>|e> b) -> <div|e> (a, b)
algeff/scoped/symbol: (s : string) -> symbol string
algeff/scoped/term: () -> <div,nondet,symbol> int
algeff/scoped/test1: () -> div list<list<int>>
algeff/scoped/test2: () -> div (int, list<list<int>>)
algeff/scoped/test3: () -> div list<(int, list<int>)>
algeff/scoped/test4: () -> div list<list<int>>
algeff/scoped/test5: () -> div list<int>