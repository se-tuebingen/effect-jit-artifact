2
ticks: 2
2
((16/2)/3)
(16/2)
16
2
3
ticks: 2
2
 
algeff/expr/either/show: (r : either<string,(int, int)>) -> string
algeff/expr/(>>=): forall<a,b> (m : stexn<a>, f : (a) -> stexn<b>) -> stexn<b>
algeff/expr/Div: (e1 : expr, e2 : expr) -> expr
algeff/expr/Int: (i : int) -> expr
algeff/expr/eval: (e : expr) -> stexn<int>
algeff/expr/eval0: (e : expr) -> int
algeff/expr/eval1: (e : expr) -> exc int
algeff/expr/eval2: (e : expr) -> <exc,state> int
algeff/expr/eval3: (e : expr) -> <exc,out,state> int
algeff/expr/exc: forall<a,e> (() -> <exc|e> a) -> e either<string,a>
algeff/expr/expr1: expr
algeff/expr/expr2: expr
algeff/expr/exprX: expr
algeff/expr/failure: forall<a> (s : string) -> exc a
algeff/expr/is-div: (expr : expr) -> bool
algeff/expr/is-int: (expr : expr) -> bool
algeff/expr/line: (e : expr) -> out ()
algeff/expr/main: () -> console ()
algeff/expr/mfail: forall<a,b,c,e> (err : a) -> ((s : b) -> e either<a,c>)
algeff/expr/mtick: forall<a,e> () -> ((s : int) -> e either<a,((), int)>)
algeff/expr/out: forall<a,e> (() -> <console,out|e> a) -> <console|e> a
algeff/expr/run: forall<a,b,e> (s : a, m : (a) -> e b) -> e b
algeff/expr/show: (e : expr) -> string
algeff/expr/show1: (x : either<string,int>) -> string
algeff/expr/show2: (x : (either<string,int>, int)) -> string
algeff/expr/showErr: forall<a> (x : either<string,a>, s : (a) -> string) -> string
algeff/expr/state: forall<a,e> (init : int, action : () -> <state|e> a) -> e (a, int)
algeff/expr/test1: (e : expr) -> console ()
algeff/expr/test2: (e : expr) -> console ()
algeff/expr/test3: (e : expr) -> console ()
algeff/expr/tick: () -> state ()
algeff/expr/unit: forall<a> (x : a) -> stexn<a>