module parc/parc12
import std/core/types = std/core/types pub = "";
import std/core/hnd = std/core/hnd pub = "";
import std/core/exn = std/core/exn pub = "";
import std/core/bool = std/core/bool pub = "";
import std/core/order = std/core/order pub = "";
import std/core/char = std/core/char pub = "";
import std/core/int = std/core/int pub = "";
import std/core/vector = std/core/vector pub = "";
import std/core/string = std/core/string pub = "";
import std/core/sslice = std/core/sslice pub = "";
import std/core/list = std/core/list pub = "";
import std/core/maybe = std/core/maybe pub = "";
import std/core/either = std/core/either pub = "";
import std/core/tuple = std/core/tuple pub = "";
import std/core/show = std/core/show pub = "";
import std/core/debug = std/core/debug pub = "";
import std/core/delayed = std/core/delayed pub = "";
import std/core/console = std/core/console pub = "";
import std/core = std/core = "";
pub fun test : (x : int) -> int
 = fn(x: int){
 val @match-x0 : int
 = std/core/int/int-add((std/core/types/@dup(x)), 1);
 match (@match-x0) {
 2
 -> val _ : ()
 = std/core/types/@drop(x);
 val _ : ()
 = std/core/types/@drop(@match-x0);
 3;
 _
 -> val _ : ()
 = std/core/types/@drop(@match-x0);
 x;
 };
 };