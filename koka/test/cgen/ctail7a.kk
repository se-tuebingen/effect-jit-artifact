import std/core/undiv

// Tail recursion on a field that has a single constructor
type tree
  Tip
  Node( left : ind<tree>, right : ind<tree> )

ref type ind<a>
  Ind( ind : a)

fun make( depth : int ) : tree
  if depth > 0 then
    val d = depth.dec
    Node( Ind(make(pretend-decreasing(d))), Ind(make(pretend-decreasing(d))) )
  else Node( Ind(Tip), Ind(Tip) )

fun check( t : tree ) : int
  match t
    Tip -> 0
    Node(Ind(l),Ind(r)) -> l.check + r.check + 1

fun main() {
  make(10).check.println
}