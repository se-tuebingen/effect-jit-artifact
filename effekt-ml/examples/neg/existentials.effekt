interface Foo[A] {
  def get[B](b: B): (A, B)
}

def wrongTypes() = {
  try {
    do get[Int, String]("hello");
    println("Test")
  } with Foo[Int] {
    def get[C](c: Bool) = { resume((42, c)) }
  }
}

def notEnoughTypeParams() = {
  try {
    do get[Int, String]("hello");
    println("Test")
  } with Foo[Int] {
    def get(c: Bool) = { resume((42, c)) }
  }
}
