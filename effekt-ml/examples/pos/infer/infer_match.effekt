type Simple {
  Single(n: Int)
}

type Param[A] {
  Constructor(a: A)
}

def simple() =
  Single(4) match {
    case Single(m) => m + 1
  }

def param() =
  Constructor(42) match {
    case Constructor(n) => n
  }

def nested() =
  Constructor(Constructor(42)) match {
    case Constructor(Constructor(n)) => n
  }

def main() = {
  nested() + 1;
  ()
}
